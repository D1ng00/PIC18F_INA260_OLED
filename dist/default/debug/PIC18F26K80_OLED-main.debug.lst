

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 11 23:16:03 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	text99,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	text101,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   115                           	psect	text102,global,reloc=2,class=CODE,delta=1
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   118                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   119  0000                     
   120                           ; Version 2.20
   121                           ; Generated 05/05/2020 GMT
   122                           ; 
   123                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F26K80 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   156  0000                     
   157 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   158  0000                     
   159 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   160  0000                     
   161                           	psect	mediumconst
   162  00FD06                     __pmediumconst:
   163                           	callstack 0
   164  00FD06  00                 	db	0
   165  00FD07  00                 	db	0
   166  00FD08  00                 	db	0
   167  00FD09  00                 	db	0
   168  00FD0A  00                 	db	0
   169  00FD0B  00                 	db	0
   170  00FD0C  00                 	db	0
   171  00FD0D  00                 	db	0
   172  00FD0E  00                 	db	0
   173  00FD0F  00                 	db	0
   174  00FD10  00                 	db	0
   175  00FD11  00                 	db	0
   176  00FD12  00                 	db	0
   177  00FD13  00                 	db	0
   178  00FD14  00                 	db	0
   179  00FD15  00                 	db	0
   180  00FD16  00                 	db	0
   181  00FD17  03                 	db	3
   182  00FD18  FF                 	db	255
   183  00FD19  FF                 	db	255
   184  00FD1A  C0                 	db	192
   185  00FD1B  03                 	db	3
   186  00FD1C  FF                 	db	255
   187  00FD1D  FF                 	db	255
   188  00FD1E  C0                 	db	192
   189  00FD1F  03                 	db	3
   190  00FD20  FC                 	db	252
   191  00FD21  3F                 	db	63
   192  00FD22  C0                 	db	192
   193  00FD23  03                 	db	3
   194  00FD24  F3                 	db	243
   195  00FD25  CF                 	db	207
   196  00FD26  C0                 	db	192
   197  00FD27  03                 	db	3
   198  00FD28  EF                 	db	239
   199  00FD29  F3                 	db	243
   200  00FD2A  C0                 	db	192
   201  00FD2B  03                 	db	3
   202  00FD2C  DF                 	db	223
   203  00FD2D  FB                 	db	251
   204  00FD2E  C0                 	db	192
   205  00FD2F  03                 	db	3
   206  00FD30  DB                 	db	219
   207  00FD31  FB                 	db	251
   208  00FD32  C0                 	db	192
   209  00FD33  03                 	db	3
   210  00FD34  CF                 	db	207
   211  00FD35  F3                 	db	243
   212  00FD36  C0                 	db	192
   213  00FD37  03                 	db	3
   214  00FD38  E7                 	db	231
   215  00FD39  E7                 	db	231
   216  00FD3A  C0                 	db	192
   217  00FD3B  03                 	db	3
   218  00FD3C  F8                 	db	248
   219  00FD3D  1F                 	db	31
   220  00FD3E  C0                 	db	192
   221  00FD3F  03                 	db	3
   222  00FD40  FF                 	db	255
   223  00FD41  FF                 	db	255
   224  00FD42  C0                 	db	192
   225  00FD43  03                 	db	3
   226  00FD44  FF                 	db	255
   227  00FD45  FF                 	db	255
   228  00FD46  C0                 	db	192
   229  00FD47  03                 	db	3
   230  00FD48  FF                 	db	255
   231  00FD49  FF                 	db	255
   232  00FD4A  C0                 	db	192
   233  00FD4B  00                 	db	0
   234  00FD4C  01                 	db	1
   235  00FD4D  00                 	db	0
   236  00FD4E  00                 	db	0
   237  00FD4F  03                 	db	3
   238  00FD50  EF                 	db	239
   239  00FD51  FF                 	db	255
   240  00FD52  C0                 	db	192
   241  00FD53  02                 	db	2
   242  00FD54  FF                 	db	255
   243  00FD55  FF                 	db	255
   244  00FD56  C0                 	db	192
   245  00FD57  00                 	db	0
   246  00FD58  3F                 	db	63
   247  00FD59  E0                 	db	224
   248  00FD5A  00                 	db	0
   249  00FD5B  03                 	db	3
   250  00FD5C  BF                 	db	191
   251  00FD5D  E0                 	db	224
   252  00FD5E  00                 	db	0
   253  00FD5F  00                 	db	0
   254  00FD60  00                 	db	0
   255  00FD61  00                 	db	0
   256  00FD62  00                 	db	0
   257  00FD63  03                 	db	3
   258  00FD64  E3                 	db	227
   259  00FD65  FC                 	db	252
   260  00FD66  00                 	db	0
   261  00FD67  03                 	db	3
   262  00FD68  FF                 	db	255
   263  00FD69  7C                 	db	124
   264  00FD6A  00                 	db	0
   265  00FD6B  02                 	db	2
   266  00FD6C  FF                 	db	255
   267  00FD6D  E0                 	db	224
   268  00FD6E  00                 	db	0
   269  00FD6F  00                 	db	0
   270  00FD70  08                 	db	8
   271  00FD71  00                 	db	0
   272  00FD72  00                 	db	0
   273  00FD73  03                 	db	3
   274  00FD74  FC                 	db	252
   275  00FD75  00                 	db	0
   276  00FD76  00                 	db	0
   277  00FD77  00                 	db	0
   278  00FD78  00                 	db	0
   279  00FD79  00                 	db	0
   280  00FD7A  00                 	db	0
   281  00FD7B  00                 	db	0
   282  00FD7C  00                 	db	0
   283  00FD7D  00                 	db	0
   284  00FD7E  00                 	db	0
   285  00FD7F  00                 	db	0
   286  00FD80  00                 	db	0
   287  00FD81  00                 	db	0
   288  00FD82  00                 	db	0
   289  00FD83  00                 	db	0
   290  00FD84  00                 	db	0
   291  00FD85  00                 	db	0
   292  00FD86  00                 	db	0
   293  00FD87                     __end_of_IPL:
   294                           	callstack 0
   295  00FD87                     _i2c_fsmStateTable:
   296                           	callstack 0
   297  00FD87  04                 	db	low _I2C_DO_IDLE
   298  00FD88  C0                 	db	high _I2C_DO_IDLE
   299  00FD89  28                 	db	low _I2C_DO_SEND_ADR_READ
   300  00FD8A  C0                 	db	high _I2C_DO_SEND_ADR_READ
   301  00FD8B  38                 	db	low _I2C_DO_SEND_ADR_WRITE
   302  00FD8C  C0                 	db	high _I2C_DO_SEND_ADR_WRITE
   303  00FD8D  40                 	db	low _I2C_DO_TX
   304  00FD8E  CE                 	db	high _I2C_DO_TX
   305  00FD8F  40                 	db	low _I2C_DO_RX
   306  00FD90  CC                 	db	high _I2C_DO_RX
   307  00FD91  10                 	db	low _I2C_DO_RCEN
   308  00FD92  C0                 	db	high _I2C_DO_RCEN
   309  00FD93  F4                 	db	low _I2C_DO_TX_EMPTY
   310  00FD94  C9                 	db	high _I2C_DO_TX_EMPTY
   311  00FD95  B0                 	db	low _I2C_DO_SEND_RESTART_READ
   312  00FD96  BF                 	db	high _I2C_DO_SEND_RESTART_READ
   313  00FD97  B8                 	db	low _I2C_DO_SEND_RESTART_WRITE
   314  00FD98  BF                 	db	high _I2C_DO_SEND_RESTART_WRITE
   315  00FD99  C0                 	db	low _I2C_DO_SEND_RESTART
   316  00FD9A  BF                 	db	high _I2C_DO_SEND_RESTART
   317  00FD9B  C8                 	db	low _I2C_DO_SEND_STOP
   318  00FD9C  BF                 	db	high _I2C_DO_SEND_STOP
   319  00FD9D  D0                 	db	low _I2C_DO_RX_ACK
   320  00FD9E  BF                 	db	high _I2C_DO_RX_ACK
   321  00FD9F  D8                 	db	low _I2C_DO_RX_NACK_STOP
   322  00FDA0  BF                 	db	high _I2C_DO_RX_NACK_STOP
   323  00FDA1  E0                 	db	low _I2C_DO_RX_NACK_RESTART
   324  00FDA2  BF                 	db	high _I2C_DO_RX_NACK_RESTART
   325  00FDA3  1C                 	db	low _I2C_DO_RESET
   326  00FDA4  C0                 	db	high _I2C_DO_RESET
   327  00FDA5  34                 	db	low _I2C_DO_ADDRESS_NACK
   328  00FDA6  C8                 	db	high _I2C_DO_ADDRESS_NACK
   329  00FDA7                     __end_of_i2c_fsmStateTable:
   330                           	callstack 0
   331  00FDA7                     _ASCII:
   332                           	callstack 0
   333  00FDA7  00                 	db	0
   334  00FDA8  00                 	db	0
   335  00FDA9  00                 	db	0
   336  00FDAA  00                 	db	0
   337  00FDAB  00                 	db	0
   338  00FDAC  00                 	db	0
   339  00FDAD  00                 	db	0
   340  00FDAE  5F                 	db	95
   341  00FDAF  00                 	db	0
   342  00FDB0  00                 	db	0
   343  00FDB1  00                 	db	0
   344  00FDB2  07                 	db	7
   345  00FDB3  00                 	db	0
   346  00FDB4  07                 	db	7
   347  00FDB5  00                 	db	0
   348  00FDB6  14                 	db	20
   349  00FDB7  7F                 	db	127
   350  00FDB8  14                 	db	20
   351  00FDB9  7F                 	db	127
   352  00FDBA  14                 	db	20
   353  00FDBB  24                 	db	36
   354  00FDBC  2A                 	db	42
   355  00FDBD  7F                 	db	127
   356  00FDBE  2A                 	db	42
   357  00FDBF  12                 	db	18
   358  00FDC0  23                 	db	35
   359  00FDC1  13                 	db	19
   360  00FDC2  08                 	db	8
   361  00FDC3  64                 	db	100
   362  00FDC4  62                 	db	98
   363  00FDC5  36                 	db	54
   364  00FDC6  49                 	db	73
   365  00FDC7  55                 	db	85
   366  00FDC8  22                 	db	34
   367  00FDC9  50                 	db	80
   368  00FDCA  00                 	db	0
   369  00FDCB  05                 	db	5
   370  00FDCC  03                 	db	3
   371  00FDCD  00                 	db	0
   372  00FDCE  00                 	db	0
   373  00FDCF  00                 	db	0
   374  00FDD0  1C                 	db	28
   375  00FDD1  22                 	db	34
   376  00FDD2  41                 	db	65
   377  00FDD3  00                 	db	0
   378  00FDD4  00                 	db	0
   379  00FDD5  41                 	db	65
   380  00FDD6  22                 	db	34
   381  00FDD7  1C                 	db	28
   382  00FDD8  00                 	db	0
   383  00FDD9  14                 	db	20
   384  00FDDA  08                 	db	8
   385  00FDDB  3E                 	db	62
   386  00FDDC  08                 	db	8
   387  00FDDD  14                 	db	20
   388  00FDDE  08                 	db	8
   389  00FDDF  08                 	db	8
   390  00FDE0  3E                 	db	62
   391  00FDE1  08                 	db	8
   392  00FDE2  08                 	db	8
   393  00FDE3  00                 	db	0
   394  00FDE4  50                 	db	80
   395  00FDE5  30                 	db	48
   396  00FDE6  00                 	db	0
   397  00FDE7  00                 	db	0
   398  00FDE8  08                 	db	8
   399  00FDE9  08                 	db	8
   400  00FDEA  08                 	db	8
   401  00FDEB  08                 	db	8
   402  00FDEC  08                 	db	8
   403  00FDED  00                 	db	0
   404  00FDEE  60                 	db	96
   405  00FDEF  60                 	db	96
   406  00FDF0  00                 	db	0
   407  00FDF1  00                 	db	0
   408  00FDF2  20                 	db	32
   409  00FDF3  10                 	db	16
   410  00FDF4  08                 	db	8
   411  00FDF5  04                 	db	4
   412  00FDF6  02                 	db	2
   413  00FDF7  3E                 	db	62
   414  00FDF8  51                 	db	81
   415  00FDF9  49                 	db	73
   416  00FDFA  45                 	db	69
   417  00FDFB  3E                 	db	62
   418  00FDFC  00                 	db	0
   419  00FDFD  42                 	db	66
   420  00FDFE  7F                 	db	127
   421  00FDFF  40                 	db	64
   422  00FE00  00                 	db	0
   423  00FE01  42                 	db	66
   424  00FE02  61                 	db	97
   425  00FE03  51                 	db	81
   426  00FE04  49                 	db	73
   427  00FE05  46                 	db	70
   428  00FE06  21                 	db	33
   429  00FE07  41                 	db	65
   430  00FE08  45                 	db	69
   431  00FE09  4B                 	db	75
   432  00FE0A  31                 	db	49
   433  00FE0B  18                 	db	24
   434  00FE0C  14                 	db	20
   435  00FE0D  12                 	db	18
   436  00FE0E  7F                 	db	127
   437  00FE0F  10                 	db	16
   438  00FE10  27                 	db	39
   439  00FE11  45                 	db	69
   440  00FE12  45                 	db	69
   441  00FE13  45                 	db	69
   442  00FE14  39                 	db	57
   443  00FE15  3C                 	db	60
   444  00FE16  4A                 	db	74
   445  00FE17  49                 	db	73
   446  00FE18  49                 	db	73
   447  00FE19  30                 	db	48
   448  00FE1A  01                 	db	1
   449  00FE1B  71                 	db	113
   450  00FE1C  09                 	db	9
   451  00FE1D  05                 	db	5
   452  00FE1E  03                 	db	3
   453  00FE1F  36                 	db	54
   454  00FE20  49                 	db	73
   455  00FE21  49                 	db	73
   456  00FE22  49                 	db	73
   457  00FE23  36                 	db	54
   458  00FE24  06                 	db	6
   459  00FE25  49                 	db	73
   460  00FE26  49                 	db	73
   461  00FE27  29                 	db	41
   462  00FE28  1E                 	db	30
   463  00FE29  00                 	db	0
   464  00FE2A  36                 	db	54
   465  00FE2B  36                 	db	54
   466  00FE2C  00                 	db	0
   467  00FE2D  00                 	db	0
   468  00FE2E  00                 	db	0
   469  00FE2F  56                 	db	86
   470  00FE30  36                 	db	54
   471  00FE31  00                 	db	0
   472  00FE32  00                 	db	0
   473  00FE33  08                 	db	8
   474  00FE34  14                 	db	20
   475  00FE35  22                 	db	34
   476  00FE36  41                 	db	65
   477  00FE37  00                 	db	0
   478  00FE38  14                 	db	20
   479  00FE39  14                 	db	20
   480  00FE3A  14                 	db	20
   481  00FE3B  14                 	db	20
   482  00FE3C  14                 	db	20
   483  00FE3D  00                 	db	0
   484  00FE3E  41                 	db	65
   485  00FE3F  22                 	db	34
   486  00FE40  14                 	db	20
   487  00FE41  08                 	db	8
   488  00FE42  02                 	db	2
   489  00FE43  01                 	db	1
   490  00FE44  51                 	db	81
   491  00FE45  09                 	db	9
   492  00FE46  06                 	db	6
   493  00FE47  32                 	db	50
   494  00FE48  49                 	db	73
   495  00FE49  79                 	db	121
   496  00FE4A  41                 	db	65
   497  00FE4B  3E                 	db	62
   498  00FE4C  7E                 	db	126
   499  00FE4D  11                 	db	17
   500  00FE4E  11                 	db	17
   501  00FE4F  11                 	db	17
   502  00FE50  7E                 	db	126
   503  00FE51  7F                 	db	127
   504  00FE52  49                 	db	73
   505  00FE53  49                 	db	73
   506  00FE54  49                 	db	73
   507  00FE55  36                 	db	54
   508  00FE56  3E                 	db	62
   509  00FE57  41                 	db	65
   510  00FE58  41                 	db	65
   511  00FE59  41                 	db	65
   512  00FE5A  22                 	db	34
   513  00FE5B  7F                 	db	127
   514  00FE5C  41                 	db	65
   515  00FE5D  41                 	db	65
   516  00FE5E  22                 	db	34
   517  00FE5F  1C                 	db	28
   518  00FE60  7F                 	db	127
   519  00FE61  49                 	db	73
   520  00FE62  49                 	db	73
   521  00FE63  49                 	db	73
   522  00FE64  41                 	db	65
   523  00FE65  7F                 	db	127
   524  00FE66  09                 	db	9
   525  00FE67  09                 	db	9
   526  00FE68  09                 	db	9
   527  00FE69  01                 	db	1
   528  00FE6A  3E                 	db	62
   529  00FE6B  41                 	db	65
   530  00FE6C  49                 	db	73
   531  00FE6D  49                 	db	73
   532  00FE6E  7A                 	db	122
   533  00FE6F  7F                 	db	127
   534  00FE70  08                 	db	8
   535  00FE71  08                 	db	8
   536  00FE72  08                 	db	8
   537  00FE73  7F                 	db	127
   538  00FE74  00                 	db	0
   539  00FE75  41                 	db	65
   540  00FE76  7F                 	db	127
   541  00FE77  41                 	db	65
   542  00FE78  00                 	db	0
   543  00FE79  20                 	db	32
   544  00FE7A  40                 	db	64
   545  00FE7B  41                 	db	65
   546  00FE7C  3F                 	db	63
   547  00FE7D  01                 	db	1
   548  00FE7E  7F                 	db	127
   549  00FE7F  08                 	db	8
   550  00FE80  14                 	db	20
   551  00FE81  22                 	db	34
   552  00FE82  41                 	db	65
   553  00FE83  7F                 	db	127
   554  00FE84  40                 	db	64
   555  00FE85  40                 	db	64
   556  00FE86  40                 	db	64
   557  00FE87  40                 	db	64
   558  00FE88  7F                 	db	127
   559  00FE89  02                 	db	2
   560  00FE8A  0C                 	db	12
   561  00FE8B  02                 	db	2
   562  00FE8C  7F                 	db	127
   563  00FE8D  7F                 	db	127
   564  00FE8E  04                 	db	4
   565  00FE8F  08                 	db	8
   566  00FE90  10                 	db	16
   567  00FE91  7F                 	db	127
   568  00FE92  3E                 	db	62
   569  00FE93  41                 	db	65
   570  00FE94  41                 	db	65
   571  00FE95  41                 	db	65
   572  00FE96  3E                 	db	62
   573  00FE97  7F                 	db	127
   574  00FE98  09                 	db	9
   575  00FE99  09                 	db	9
   576  00FE9A  09                 	db	9
   577  00FE9B  06                 	db	6
   578  00FE9C  3E                 	db	62
   579  00FE9D  41                 	db	65
   580  00FE9E  51                 	db	81
   581  00FE9F  21                 	db	33
   582  00FEA0  5E                 	db	94
   583  00FEA1  7F                 	db	127
   584  00FEA2  09                 	db	9
   585  00FEA3  19                 	db	25
   586  00FEA4  29                 	db	41
   587  00FEA5  46                 	db	70
   588  00FEA6  46                 	db	70
   589  00FEA7  49                 	db	73
   590  00FEA8  49                 	db	73
   591  00FEA9  49                 	db	73
   592  00FEAA  31                 	db	49
   593  00FEAB  01                 	db	1
   594  00FEAC  01                 	db	1
   595  00FEAD  7F                 	db	127
   596  00FEAE  01                 	db	1
   597  00FEAF  01                 	db	1
   598  00FEB0  3F                 	db	63
   599  00FEB1  40                 	db	64
   600  00FEB2  40                 	db	64
   601  00FEB3  40                 	db	64
   602  00FEB4  3F                 	db	63
   603  00FEB5  1F                 	db	31
   604  00FEB6  20                 	db	32
   605  00FEB7  40                 	db	64
   606  00FEB8  20                 	db	32
   607  00FEB9  1F                 	db	31
   608  00FEBA  3F                 	db	63
   609  00FEBB  40                 	db	64
   610  00FEBC  38                 	db	56
   611  00FEBD  40                 	db	64
   612  00FEBE  3F                 	db	63
   613  00FEBF  63                 	db	99
   614  00FEC0  14                 	db	20
   615  00FEC1  08                 	db	8
   616  00FEC2  14                 	db	20
   617  00FEC3  63                 	db	99
   618  00FEC4  07                 	db	7
   619  00FEC5  08                 	db	8
   620  00FEC6  70                 	db	112
   621  00FEC7  08                 	db	8
   622  00FEC8  07                 	db	7
   623  00FEC9  61                 	db	97
   624  00FECA  51                 	db	81
   625  00FECB  49                 	db	73
   626  00FECC  45                 	db	69
   627  00FECD  43                 	db	67
   628  00FECE  00                 	db	0
   629  00FECF  7F                 	db	127
   630  00FED0  41                 	db	65
   631  00FED1  41                 	db	65
   632  00FED2  00                 	db	0
   633  00FED3  02                 	db	2
   634  00FED4  04                 	db	4
   635  00FED5  08                 	db	8
   636  00FED6  10                 	db	16
   637  00FED7  20                 	db	32
   638  00FED8  00                 	db	0
   639  00FED9  41                 	db	65
   640  00FEDA  41                 	db	65
   641  00FEDB  7F                 	db	127
   642  00FEDC  00                 	db	0
   643  00FEDD  04                 	db	4
   644  00FEDE  02                 	db	2
   645  00FEDF  01                 	db	1
   646  00FEE0  02                 	db	2
   647  00FEE1  04                 	db	4
   648  00FEE2  40                 	db	64
   649  00FEE3  40                 	db	64
   650  00FEE4  40                 	db	64
   651  00FEE5  40                 	db	64
   652  00FEE6  40                 	db	64
   653  00FEE7  00                 	db	0
   654  00FEE8  01                 	db	1
   655  00FEE9  02                 	db	2
   656  00FEEA  04                 	db	4
   657  00FEEB  00                 	db	0
   658  00FEEC  20                 	db	32
   659  00FEED  54                 	db	84
   660  00FEEE  54                 	db	84
   661  00FEEF  54                 	db	84
   662  00FEF0  78                 	db	120
   663  00FEF1  7F                 	db	127
   664  00FEF2  48                 	db	72
   665  00FEF3  44                 	db	68
   666  00FEF4  44                 	db	68
   667  00FEF5  38                 	db	56
   668  00FEF6  38                 	db	56
   669  00FEF7  44                 	db	68
   670  00FEF8  44                 	db	68
   671  00FEF9  44                 	db	68
   672  00FEFA  20                 	db	32
   673  00FEFB  38                 	db	56
   674  00FEFC  44                 	db	68
   675  00FEFD  44                 	db	68
   676  00FEFE  48                 	db	72
   677  00FEFF  7F                 	db	127
   678  00FF00  38                 	db	56
   679  00FF01  54                 	db	84
   680  00FF02  54                 	db	84
   681  00FF03  54                 	db	84
   682  00FF04  18                 	db	24
   683  00FF05  08                 	db	8
   684  00FF06  7E                 	db	126
   685  00FF07  09                 	db	9
   686  00FF08  01                 	db	1
   687  00FF09  02                 	db	2
   688  00FF0A  0C                 	db	12
   689  00FF0B  52                 	db	82
   690  00FF0C  52                 	db	82
   691  00FF0D  52                 	db	82
   692  00FF0E  3E                 	db	62
   693  00FF0F  7F                 	db	127
   694  00FF10  08                 	db	8
   695  00FF11  04                 	db	4
   696  00FF12  04                 	db	4
   697  00FF13  78                 	db	120
   698  00FF14  00                 	db	0
   699  00FF15  44                 	db	68
   700  00FF16  7D                 	db	125
   701  00FF17  40                 	db	64
   702  00FF18  00                 	db	0
   703  00FF19  20                 	db	32
   704  00FF1A  40                 	db	64
   705  00FF1B  44                 	db	68
   706  00FF1C  3D                 	db	61
   707  00FF1D  00                 	db	0
   708  00FF1E  7F                 	db	127
   709  00FF1F  10                 	db	16
   710  00FF20  28                 	db	40
   711  00FF21  44                 	db	68
   712  00FF22  00                 	db	0
   713  00FF23  00                 	db	0
   714  00FF24  41                 	db	65
   715  00FF25  7F                 	db	127
   716  00FF26  40                 	db	64
   717  00FF27  00                 	db	0
   718  00FF28  7C                 	db	124
   719  00FF29  04                 	db	4
   720  00FF2A  18                 	db	24
   721  00FF2B  04                 	db	4
   722  00FF2C  78                 	db	120
   723  00FF2D  7C                 	db	124
   724  00FF2E  08                 	db	8
   725  00FF2F  04                 	db	4
   726  00FF30  04                 	db	4
   727  00FF31  78                 	db	120
   728  00FF32  38                 	db	56
   729  00FF33  44                 	db	68
   730  00FF34  44                 	db	68
   731  00FF35  44                 	db	68
   732  00FF36  38                 	db	56
   733  00FF37  7C                 	db	124
   734  00FF38  14                 	db	20
   735  00FF39  14                 	db	20
   736  00FF3A  14                 	db	20
   737  00FF3B  08                 	db	8
   738  00FF3C  08                 	db	8
   739  00FF3D  14                 	db	20
   740  00FF3E  14                 	db	20
   741  00FF3F  18                 	db	24
   742  00FF40  7C                 	db	124
   743  00FF41  7C                 	db	124
   744  00FF42  08                 	db	8
   745  00FF43  04                 	db	4
   746  00FF44  04                 	db	4
   747  00FF45  08                 	db	8
   748  00FF46  48                 	db	72
   749  00FF47  54                 	db	84
   750  00FF48  54                 	db	84
   751  00FF49  54                 	db	84
   752  00FF4A  20                 	db	32
   753  00FF4B  04                 	db	4
   754  00FF4C  3F                 	db	63
   755  00FF4D  44                 	db	68
   756  00FF4E  40                 	db	64
   757  00FF4F  20                 	db	32
   758  00FF50  3C                 	db	60
   759  00FF51  40                 	db	64
   760  00FF52  40                 	db	64
   761  00FF53  20                 	db	32
   762  00FF54  7C                 	db	124
   763  00FF55  1C                 	db	28
   764  00FF56  20                 	db	32
   765  00FF57  40                 	db	64
   766  00FF58  20                 	db	32
   767  00FF59  1C                 	db	28
   768  00FF5A  3C                 	db	60
   769  00FF5B  40                 	db	64
   770  00FF5C  30                 	db	48
   771  00FF5D  40                 	db	64
   772  00FF5E  3C                 	db	60
   773  00FF5F  44                 	db	68
   774  00FF60  28                 	db	40
   775  00FF61  10                 	db	16
   776  00FF62  28                 	db	40
   777  00FF63  44                 	db	68
   778  00FF64  0C                 	db	12
   779  00FF65  50                 	db	80
   780  00FF66  50                 	db	80
   781  00FF67  50                 	db	80
   782  00FF68  3C                 	db	60
   783  00FF69  44                 	db	68
   784  00FF6A  64                 	db	100
   785  00FF6B  54                 	db	84
   786  00FF6C  4C                 	db	76
   787  00FF6D  44                 	db	68
   788  00FF6E  00                 	db	0
   789  00FF6F  08                 	db	8
   790  00FF70  36                 	db	54
   791  00FF71  41                 	db	65
   792  00FF72  00                 	db	0
   793  00FF73  00                 	db	0
   794  00FF74  00                 	db	0
   795  00FF75  7F                 	db	127
   796  00FF76  00                 	db	0
   797  00FF77  00                 	db	0
   798  00FF78  00                 	db	0
   799  00FF79  41                 	db	65
   800  00FF7A  36                 	db	54
   801  00FF7B  08                 	db	8
   802  00FF7C  00                 	db	0
   803  00FF7D  10                 	db	16
   804  00FF7E  08                 	db	8
   805  00FF7F  08                 	db	8
   806  00FF80  10                 	db	16
   807  00FF81  08                 	db	8
   808  00FF82  78                 	db	120
   809  00FF83  46                 	db	70
   810  00FF84  41                 	db	65
   811  00FF85  46                 	db	70
   812  00FF86  78                 	db	120
   813  00FF87                     __end_of_ASCII:
   814                           	callstack 0
   815  0000                     _WPUB	set	3931
   816  0000                     _ANCON1	set	3932
   817  0000                     _ANCON0	set	3933
   818  0000                     _TXREG1	set	4013
   819  0000                     _RCREG1	set	4014
   820  0000                     _RCSTA1bits	set	4011
   821  0000                     _TXSTA1bits	set	4012
   822  0000                     _SPBRGH1	set	3965
   823  0000                     _SPBRG1	set	4015
   824  0000                     _TXSTA1	set	4012
   825  0000                     _RCSTA1	set	4011
   826  0000                     _BAUDCON1	set	4007
   827  0000                     _PIR4bits	set	4023
   828  0000                     _EEDATA	set	3955
   829  0000                     _EEADR	set	3956
   830  0000                     _EEADRH	set	3957
   831  0000                     _EECON2	set	3966
   832  0000                     _EECON1bits	set	3967
   833  0000                     _TABLAT	set	4085
   834  0000                     _TBLPTRL	set	4086
   835  0000                     _TBLPTRH	set	4087
   836  0000                     _TBLPTRU	set	4088
   837  0000                     _PIR1bits	set	3998
   838  0000                     _PIE1bits	set	3997
   839  0000                     _SSPSTATbits	set	4039
   840  0000                     _PIR2bits	set	4001
   841  0000                     _SSPCON2bits	set	4037
   842  0000                     _SSPBUF	set	4041
   843  0000                     _SSPCON1bits	set	4038
   844  0000                     _SSPADD	set	4040
   845  0000                     _SSPCON2	set	4037
   846  0000                     _SSPCON1	set	4038
   847  0000                     _SSPSTAT	set	4039
   848  0000                     _INTCONbits	set	4082
   849  0000                     _INTCON2bits	set	4081
   850  0000                     _TRISC	set	3988
   851  0000                     _TRISB	set	3987
   852  0000                     _TRISA	set	3986
   853  0000                     _LATC	set	3979
   854  0000                     _LATB	set	3978
   855  0000                     _LATA	set	3977
   856  0000                     _REFOCON	set	3994
   857  0000                     _OSCTUNE	set	3995
   858  0000                     _OSCCON2	set	4050
   859  0000                     _OSCCON	set	4051
   860  0000                     _TRISC4	set	31908
   861  0000                     _TRISC3	set	31907
   862  0000                     _ACKEN	set	32300
   863  0000                     _ACKDT	set	32301
   864  0000                     _RCEN	set	32299
   865  0000                     _PEN	set	32298
   866  0000                     _RSEN	set	32297
   867  0000                     _SEN	set	32296
   868  00FF87                     STR_2:
   869  00FF87  20                 	db	32
   870  00FF88  20                 	db	32
   871  00FF89  43                 	db	67	;'C'
   872  00FF8A  6F                 	db	111	;'o'
   873  00FF8B  6E                 	db	110	;'n'
   874  00FF8C  64                 	db	100	;'d'
   875  00FF8D  75                 	db	117	;'u'
   876  00FF8E  63                 	db	99	;'c'
   877  00FF8F  61                 	db	97	;'a'
   878  00FF90  6F                 	db	111	;'o'
   879  00FF91  20                 	db	32
   880  00FF92  61                 	db	97	;'a'
   881  00FF93  75                 	db	117	;'u'
   882  00FF94  74                 	db	116	;'t'
   883  00FF95  6F                 	db	111	;'o'
   884  00FF96  6E                 	db	110	;'n'
   885  00FF97  6F                 	db	111	;'o'
   886  00FF98  6D                 	db	109	;'m'
   887  00FF99  61                 	db	97	;'a'
   888  00FF9A  20                 	db	32
   889  00FF9B  00                 	db	0
   890  00FF9C                     STR_6:
   891  00FF9C  20                 	db	32
   892  00FF9D  20                 	db	32
   893  00FF9E  20                 	db	32
   894  00FF9F  20                 	db	32
   895  00FFA0  42                 	db	66	;'B'
   896  00FFA1  61                 	db	97	;'a'
   897  00FFA2  74                 	db	116	;'t'
   898  00FFA3  65                 	db	101	;'e'
   899  00FFA4  72                 	db	114	;'r'
   900  00FFA5  69                 	db	105	;'i'
   901  00FFA6  61                 	db	97	;'a'
   902  00FFA7  20                 	db	32
   903  00FFA8  37                 	db	55	;'7'
   904  00FFA9  2E                 	db	46
   905  00FFAA  34                 	db	52	;'4'
   906  00FFAB  56                 	db	86	;'V'
   907  00FFAC  20                 	db	32
   908  00FFAD  00                 	db	0
   909  00FFAE                     STR_1:
   910  00FFAE  20                 	db	32
   911  00FFAF  20                 	db	32
   912  00FFB0  20                 	db	32
   913  00FFB1  20                 	db	32
   914  00FFB2  20                 	db	32
   915  00FFB3  20                 	db	32
   916  00FFB4  49                 	db	73	;'I'
   917  00FFB5  50                 	db	80	;'P'
   918  00FFB6  4C                 	db	76	;'L'
   919  00FFB7  2D                 	db	45
   920  00FFB8  45                 	db	69	;'E'
   921  00FFB9  53                 	db	83	;'S'
   922  00FFBA  54                 	db	84	;'T'
   923  00FFBB  47                 	db	71	;'G'
   924  00FFBC  20                 	db	32
   925  00FFBD  00                 	db	0
   926  00FFBE                     STR_11:
   927  00FFBE  50                 	db	80	;'P'
   928  00FFBF  6F                 	db	111	;'o'
   929  00FFC0  74                 	db	116	;'t'
   930  00FFC1  65                 	db	101	;'e'
   931  00FFC2  6E                 	db	110	;'n'
   932  00FFC3  63                 	db	99	;'c'
   933  00FFC4  69                 	db	105	;'i'
   934  00FFC5  61                 	db	97	;'a'
   935  00FFC6  3A                 	db	58	;':'
   936  00FFC7  20                 	db	32
   937  00FFC8  00                 	db	0
   938  00FFC9                     STR_9:
   939  00FFC9  43                 	db	67	;'C'
   940  00FFCA  6F                 	db	111	;'o'
   941  00FFCB  72                 	db	114	;'r'
   942  00FFCC  72                 	db	114	;'r'
   943  00FFCD  65                 	db	101	;'e'
   944  00FFCE  6E                 	db	110	;'n'
   945  00FFCF  74                 	db	116	;'t'
   946  00FFD0  65                 	db	101	;'e'
   947  00FFD1  3A                 	db	58	;':'
   948  00FFD2  20                 	db	32
   949  00FFD3  00                 	db	0
   950  00FFD4                     STR_7:
   951  00FFD4  54                 	db	84	;'T'
   952  00FFD5  65                 	db	101	;'e'
   953  00FFD6  6E                 	db	110	;'n'
   954  00FFD7  73                 	db	115	;'s'
   955  00FFD8  61                 	db	97	;'a'
   956  00FFD9  6F                 	db	111	;'o'
   957  00FFDA  3A                 	db	58	;':'
   958  00FFDB  20                 	db	32
   959  00FFDC  00                 	db	0
   960  00FFDD                     STR_3:
   961  00FFDD  25                 	db	37
   962  00FFDE  2E                 	db	46
   963  00FFDF  32                 	db	50	;'2'
   964  00FFE0  66                 	db	102	;'f'
   965  00FFE1  00                 	db	0
   966  00FFE2                     STR_13:
   967  00FFE2  49                 	db	73	;'I'
   968  00FFE3  4E                 	db	78	;'N'
   969  00FFE4  46                 	db	70	;'F'
   970  00FFE5  00                 	db	0
   971  00FFE6                     STR_17:
   972  00FFE6  4E                 	db	78	;'N'
   973  00FFE7  41                 	db	65	;'A'
   974  00FFE8  4E                 	db	78	;'N'
   975  00FFE9  00                 	db	0
   976  00FFEA                     STR_14:
   977  00FFEA  69                 	db	105	;'i'
   978  00FFEB  6E                 	db	110	;'n'
   979  00FFEC  66                 	db	102	;'f'
   980  00FFED  00                 	db	0
   981  00FFEE                     STR_18:
   982  00FFEE  6E                 	db	110	;'n'
   983  00FFEF  61                 	db	97	;'a'
   984  00FFF0  6E                 	db	110	;'n'
   985  00FFF1  00                 	db	0
   986  00FFF2                     STR_21:
   987  00FFF2  6C                 	db	108	;'l'
   988  00FFF3  66                 	db	102	;'f'
   989  00FFF4  00                 	db	0
   990  00FFF5                     STR_10:
   991  00FFF5  20                 	db	32
   992  00FFF6  41                 	db	65	;'A'
   993  00FFF7  00                 	db	0
   994  00FFF8                     STR_8:
   995  00FFF8  20                 	db	32
   996  00FFF9  56                 	db	86	;'V'
   997  00FFFA  00                 	db	0
   998  00FFFB                     STR_12:
   999  00FFFB  20                 	db	32
  1000  00FFFC  57                 	db	87	;'W'
  1001  00FFFD  00                 	db	0
  1002  00FFFE  00                 	db	0	; dummy byte at the end
  1003  0000                     
  1004                           ; #config settings
  1005                           
  1006                           	psect	cinit
  1007  00C302                     __pcinit:
  1008                           	callstack 0
  1009  00C302                     start_initialization:
  1010                           	callstack 0
  1011  00C302                     __initialization:
  1012                           	callstack 0
  1013                           
  1014                           ; Clear objects allocated to BIGRAM (2048 bytes)
  1015  00C302  EE01  F0C4         	lfsr	0,__pbssBIGRAM
  1016  00C306  EE18 F000          	lfsr	1,2048
  1017  00C30A                     clear_0:
  1018  00C30A  6AEE               	clrf	postinc0,c
  1019  00C30C  50E5               	movf	postdec1,w,c
  1020  00C30E  50E1               	movf	fsr1l,w,c
  1021  00C310  E1FC               	bnz	clear_0
  1022  00C312  50E2               	movf	fsr1h,w,c
  1023  00C314  E1FA               	bnz	clear_0
  1024                           
  1025                           ; Clear objects allocated to BANK1 (196 bytes)
  1026  00C316  EE01  F000         	lfsr	0,__pbssBANK1
  1027  00C31A  0EC4               	movlw	196
  1028  00C31C                     clear_1:
  1029  00C31C  6AEE               	clrf	postinc0,c
  1030  00C31E  06E8               	decf	wreg,f,c
  1031  00C320  E1FD               	bnz	clear_1
  1032                           
  1033                           ; Clear objects allocated to BANK0 (65 bytes)
  1034  00C322  EE00  F0AE         	lfsr	0,__pbssBANK0
  1035  00C326  0E41               	movlw	65
  1036  00C328                     clear_2:
  1037  00C328  6AEE               	clrf	postinc0,c
  1038  00C32A  06E8               	decf	wreg,f,c
  1039  00C32C  E1FD               	bnz	clear_2
  1040  00C32E                     end_of_initialization:
  1041                           	callstack 0
  1042  00C32E                     __end_of__initialization:
  1043                           	callstack 0
  1044  00C32E  0100               	movlb	0
  1045  00C330  EFC9  F06E         	goto	_main	;jump to C main() function
  1046                           
  1047                           	psect	bssBANK0
  1048  0000AE                     __pbssBANK0:
  1049                           	callstack 0
  1050  0000AE                     floorf@F527:
  1051                           	callstack 0
  1052  0000AE                     	ds	4
  1053  0000B2                     ___fpclassifyf@F465:
  1054                           	callstack 0
  1055  0000B2                     	ds	4
  1056  0000B6                     _power:
  1057                           	callstack 0
  1058  0000B6                     	ds	4
  1059  0000BA                     _current:
  1060                           	callstack 0
  1061  0000BA                     	ds	4
  1062  0000BE                     _voltage:
  1063                           	callstack 0
  1064  0000BE                     	ds	4
  1065  0000C2                     _Power:
  1066                           	callstack 0
  1067  0000C2                     	ds	4
  1068  0000C6                     _Current:
  1069                           	callstack 0
  1070  0000C6                     	ds	4
  1071  0000CA                     _Voltage:
  1072                           	callstack 0
  1073  0000CA                     	ds	4
  1074  0000CE                     _nout:
  1075                           	callstack 0
  1076  0000CE                     	ds	2
  1077  0000D0                     _width:
  1078                           	callstack 0
  1079  0000D0                     	ds	2
  1080  0000D2                     _prec:
  1081                           	callstack 0
  1082  0000D2                     	ds	2
  1083  0000D4                     _flags:
  1084                           	callstack 0
  1085  0000D4                     	ds	2
  1086  0000D6                     _EUSART1_ErrorHandler:
  1087                           	callstack 0
  1088  0000D6                     	ds	2
  1089  0000D8                     _EUSART1_OverrunErrorHandler:
  1090                           	callstack 0
  1091  0000D8                     	ds	2
  1092  0000DA                     _EUSART1_FramingErrorHandler:
  1093                           	callstack 0
  1094  0000DA                     	ds	2
  1095  0000DC                     _eusart1RxLastError:
  1096                           	callstack 0
  1097  0000DC                     	ds	1
  1098  0000DD                     _power_str:
  1099                           	callstack 0
  1100  0000DD                     	ds	6
  1101  0000E3                     _current_str:
  1102                           	callstack 0
  1103  0000E3                     	ds	6
  1104  0000E9                     _voltage_str:
  1105                           	callstack 0
  1106  0000E9                     	ds	6
  1107                           
  1108                           	psect	bssBANK1
  1109  000100                     __pbssBANK1:
  1110                           	callstack 0
  1111  000100                     _oi:
  1112                           	callstack 0
  1113  000100                     	ds	80
  1114  000150                     _I2C_Status:
  1115                           	callstack 0
  1116  000150                     	ds	36
  1117  000174                     _dbuf:
  1118                           	callstack 0
  1119  000174                     	ds	80
  1120                           
  1121                           	psect	bssBIGRAM
  1122  0001C4                     __pbssBIGRAM:
  1123                           	callstack 0
  1124  0001C4                     _buffer:
  1125                           	callstack 0
  1126  0001C4                     	ds	1024
  1127  0005C4                     _SSD1306_Buffer:
  1128                           	callstack 0
  1129  0005C4                     	ds	1024
  1130                           
  1131                           	psect	cstackBANK0
  1132  000060                     __pcstackBANK0:
  1133                           	callstack 0
  1134  000060                     _efgtoa$2183:
  1135                           	callstack 0
  1136                           
  1137                           ; 2 bytes @ 0x0
  1138  000060                     	ds	2
  1139  000062                     _efgtoa$2184:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0x2
  1143  000062                     	ds	2
  1144  000064                     _efgtoa$2189:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x4
  1148  000064                     	ds	2
  1149  000066                     _efgtoa$2193:
  1150                           	callstack 0
  1151                           
  1152                           ; 2 bytes @ 0x6
  1153  000066                     	ds	2
  1154  000068                     _efgtoa$2194:
  1155                           	callstack 0
  1156                           
  1157                           ; 2 bytes @ 0x8
  1158  000068                     	ds	2
  1159  00006A                     _efgtoa$2195:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0xA
  1163  00006A                     	ds	2
  1164  00006C                     efgtoa@t:
  1165                           	callstack 0
  1166                           
  1167                           ; 2 bytes @ 0xC
  1168  00006C                     	ds	2
  1169  00006E                     efgtoa@pp:
  1170                           	callstack 0
  1171                           
  1172                           ; 2 bytes @ 0xE
  1173  00006E                     	ds	2
  1174  000070                     efgtoa@ne:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x10
  1178  000070                     	ds	2
  1179  000072                     efgtoa@m:
  1180                           	callstack 0
  1181                           
  1182                           ; 2 bytes @ 0x12
  1183  000072                     	ds	2
  1184  000074                     efgtoa@ou:
  1185                           	callstack 0
  1186                           
  1187                           ; 4 bytes @ 0x14
  1188  000074                     	ds	4
  1189  000078                     efgtoa@d:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x18
  1193  000078                     	ds	2
  1194  00007A                     efgtoa@sign:
  1195                           	callstack 0
  1196                           
  1197                           ; 2 bytes @ 0x1A
  1198  00007A                     	ds	2
  1199  00007C                     efgtoa@p:
  1200                           	callstack 0
  1201                           
  1202                           ; 2 bytes @ 0x1C
  1203  00007C                     	ds	2
  1204  00007E                     efgtoa@w:
  1205                           	callstack 0
  1206                           
  1207                           ; 2 bytes @ 0x1E
  1208  00007E                     	ds	2
  1209  000080                     efgtoa@nmode:
  1210                           	callstack 0
  1211                           
  1212                           ; 1 bytes @ 0x20
  1213  000080                     	ds	1
  1214  000081                     efgtoa@mode:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x21
  1218  000081                     	ds	1
  1219  000082                     efgtoa@h:
  1220                           	callstack 0
  1221                           
  1222                           ; 4 bytes @ 0x22
  1223  000082                     	ds	4
  1224  000086                     efgtoa@l:
  1225                           	callstack 0
  1226                           
  1227                           ; 4 bytes @ 0x26
  1228  000086                     	ds	4
  1229  00008A                     efgtoa@i:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x2A
  1233  00008A                     	ds	2
  1234  00008C                     efgtoa@g:
  1235                           	callstack 0
  1236                           
  1237                           ; 4 bytes @ 0x2C
  1238  00008C                     	ds	4
  1239  000090                     efgtoa@e:
  1240                           	callstack 0
  1241                           
  1242                           ; 2 bytes @ 0x30
  1243  000090                     	ds	2
  1244  000092                     efgtoa@n:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x32
  1248  000092                     	ds	2
  1249  000094                     efgtoa@u:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x34
  1253  000094                     	ds	4
  1254  000098                     ?_vfprintf:
  1255                           	callstack 0
  1256  000098                     vfprintf@fp:
  1257                           	callstack 0
  1258                           
  1259                           ; 2 bytes @ 0x38
  1260  000098                     	ds	2
  1261  00009A                     vfprintf@fmt:
  1262                           	callstack 0
  1263                           
  1264                           ; 2 bytes @ 0x3A
  1265  00009A                     	ds	2
  1266  00009C                     vfprintf@ap:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x3C
  1270  00009C                     	ds	2
  1271  00009E                     ?_sprintf:
  1272                           	callstack 0
  1273  00009E                     sprintf@s:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x3E
  1277  00009E                     	ds	2
  1278  0000A0                     sprintf@fmt:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x40
  1282  0000A0                     	ds	6
  1283  0000A6                     sprintf@ap:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x46
  1287  0000A6                     	ds	2
  1288  0000A8                     sprintf@f:
  1289                           	callstack 0
  1290                           
  1291                           ; 6 bytes @ 0x48
  1292  0000A8                     	ds	6
  1293                           
  1294                           	psect	cstackCOMRAM
  1295  000001                     __pcstackCOMRAM:
  1296                           	callstack 0
  1297  000001                     ??_I2C_Master_Wait:
  1298  000001                     ?_strlen:
  1299                           	callstack 0
  1300  000001                     ?___fpclassifyf:
  1301                           	callstack 0
  1302  000001                     ?_isupper:
  1303                           	callstack 0
  1304  000001                     ?_isdigit:
  1305                           	callstack 0
  1306  000001                     ?_strncmp:
  1307                           	callstack 0
  1308  000001                     ?_isspace:
  1309                           	callstack 0
  1310  000001                     ?___wmul:
  1311                           	callstack 0
  1312  000001                     ?___awdiv:
  1313                           	callstack 0
  1314  000001                     ?___awmod:
  1315                           	callstack 0
  1316  000001                     ?___fladd:
  1317                           	callstack 0
  1318  000001                     ?___fldiv:
  1319                           	callstack 0
  1320  000001                     ?___lldiv:
  1321                           	callstack 0
  1322  000001                     ?___flneg:
  1323                           	callstack 0
  1324  000001                     ?___fltol:
  1325                           	callstack 0
  1326  000001                     I2C_Open@address:
  1327                           	callstack 0
  1328  000001                     I2C_Close@returnValue:
  1329                           	callstack 0
  1330  000001                     I2C_MasterSendTxData@data:
  1331                           	callstack 0
  1332  000001                     I2C_SetBuffer@buffer:
  1333                           	callstack 0
  1334  000001                     I2C_SetCallback@cb:
  1335                           	callstack 0
  1336  000001                     ___wmul@multiplier:
  1337                           	callstack 0
  1338  000001                     ___awdiv@dividend:
  1339                           	callstack 0
  1340  000001                     ___awmod@dividend:
  1341                           	callstack 0
  1342  000001                     isdigit@c:
  1343                           	callstack 0
  1344  000001                     isspace@c:
  1345                           	callstack 0
  1346  000001                     isupper@c:
  1347                           	callstack 0
  1348  000001                     fputc@c:
  1349                           	callstack 0
  1350  000001                     strcpy@dest:
  1351                           	callstack 0
  1352  000001                     strlen@s:
  1353                           	callstack 0
  1354  000001                     strncmp@_l:
  1355                           	callstack 0
  1356  000001                     ___lldiv@dividend:
  1357                           	callstack 0
  1358  000001                     ___fleq@ff1:
  1359                           	callstack 0
  1360  000001                     ___flneg@f1:
  1361                           	callstack 0
  1362  000001                     ___fltol@f1:
  1363                           	callstack 0
  1364  000001                     ___fladd@b:
  1365                           	callstack 0
  1366  000001                     ___fldiv@b:
  1367                           	callstack 0
  1368  000001                     ___fpclassifyf@x:
  1369                           	callstack 0
  1370                           
  1371                           ; 4 bytes @ 0x0
  1372  000001                     	ds	1
  1373  000002                     ?_I2C_Master_Read:
  1374                           	callstack 0
  1375  000002                     I2C_Open@returnValue:
  1376                           	callstack 0
  1377  000002                     I2C_Master_Write@d:
  1378                           	callstack 0
  1379  000002                     I2C_Master_Read@a:
  1380                           	callstack 0
  1381                           
  1382                           ; 2 bytes @ 0x1
  1383  000002                     	ds	1
  1384  000003                     ??_isupper:
  1385  000003                     ??_isdigit:
  1386  000003                     ??_isspace:
  1387  000003                     I2C_SetBuffer@bufferSize:
  1388                           	callstack 0
  1389  000003                     I2C_SetCallback@ptr:
  1390                           	callstack 0
  1391  000003                     ___wmul@multiplicand:
  1392                           	callstack 0
  1393  000003                     ___awdiv@divisor:
  1394                           	callstack 0
  1395  000003                     ___awmod@divisor:
  1396                           	callstack 0
  1397  000003                     fputc@fp:
  1398                           	callstack 0
  1399  000003                     strcpy@src:
  1400                           	callstack 0
  1401  000003                     strlen@a:
  1402                           	callstack 0
  1403  000003                     strncmp@_r:
  1404                           	callstack 0
  1405                           
  1406                           ; 2 bytes @ 0x2
  1407  000003                     	ds	1
  1408  000004                     I2C_Master_Read@temp:
  1409                           	callstack 0
  1410                           
  1411                           ; 2 bytes @ 0x3
  1412  000004                     	ds	1
  1413  000005                     ??_fputc:
  1414  000005                     ??___fpclassifyf:
  1415  000005                     ??_strcpy:
  1416  000005                     ??___fltol:
  1417  000005                     I2C_SetCallback@idx:
  1418                           	callstack 0
  1419  000005                     ___awdiv@counter:
  1420                           	callstack 0
  1421  000005                     ___awmod@counter:
  1422                           	callstack 0
  1423  000005                     ___wmul@product:
  1424                           	callstack 0
  1425  000005                     strncmp@n:
  1426                           	callstack 0
  1427  000005                     ___lldiv@divisor:
  1428                           	callstack 0
  1429  000005                     ___fleq@ff2:
  1430                           	callstack 0
  1431  000005                     ___fladd@a:
  1432                           	callstack 0
  1433  000005                     ___fldiv@a:
  1434                           	callstack 0
  1435                           
  1436                           ; 4 bytes @ 0x4
  1437  000005                     	ds	1
  1438  000006                     ___awdiv@sign:
  1439                           	callstack 0
  1440  000006                     ___awmod@sign:
  1441                           	callstack 0
  1442  000006                     I2C_SetDataCompleteCallback@cb:
  1443                           	callstack 0
  1444  000006                     I2C_SetAddressNackCallback@cb:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x5
  1448  000006                     	ds	1
  1449  000007                     ??_strncmp:
  1450  000007                     ?_tolower:
  1451                           	callstack 0
  1452  000007                     ?___xxtofl:
  1453                           	callstack 0
  1454  000007                     _isspace$2278:
  1455                           	callstack 0
  1456  000007                     ___awdiv@quotient:
  1457                           	callstack 0
  1458  000007                     strcpy@s:
  1459                           	callstack 0
  1460  000007                     tolower@c:
  1461                           	callstack 0
  1462  000007                     ___xxtofl@val:
  1463                           	callstack 0
  1464                           
  1465                           ; 4 bytes @ 0x6
  1466  000007                     	ds	1
  1467  000008                     ?_atoi:
  1468                           	callstack 0
  1469  000008                     I2C_SetDataCompleteCallback@ptr:
  1470                           	callstack 0
  1471  000008                     I2C_SetAddressNackCallback@ptr:
  1472                           	callstack 0
  1473  000008                     atoi@s:
  1474                           	callstack 0
  1475  000008                     strncmp@l:
  1476                           	callstack 0
  1477                           
  1478                           ; 2 bytes @ 0x7
  1479  000008                     	ds	1
  1480  000009                     ??___fladd:
  1481  000009                     ??___fldiv:
  1482  000009                     ??_tolower:
  1483  000009                     ??___fleq:
  1484  000009                     ___fltol@sign1:
  1485                           	callstack 0
  1486  000009                     ___fpclassifyf@e:
  1487                           	callstack 0
  1488  000009                     strcpy@d:
  1489                           	callstack 0
  1490  000009                     ___lldiv@quotient:
  1491                           	callstack 0
  1492                           
  1493                           ; 4 bytes @ 0x8
  1494  000009                     	ds	1
  1495  00000A                     ??_atoi:
  1496  00000A                     ___fltol@exp1:
  1497                           	callstack 0
  1498  00000A                     rd1RegCompleteHandler@ptr:
  1499                           	callstack 0
  1500  00000A                     rd2RegCompleteHandler@ptr:
  1501                           	callstack 0
  1502  00000A                     wr1RegCompleteHandler@ptr:
  1503                           	callstack 0
  1504  00000A                     wr2RegCompleteHandler@ptr:
  1505                           	callstack 0
  1506  00000A                     rdBlkRegCompleteHandler@ptr:
  1507                           	callstack 0
  1508  00000A                     I2C_CallbackReturnReset@funPtr:
  1509                           	callstack 0
  1510  00000A                     fputs@s:
  1511                           	callstack 0
  1512  00000A                     strncmp@r:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x9
  1516  00000A                     	ds	1
  1517  00000B                     ??___xxtofl:
  1518  00000B                     ___fpclassifyf@u:
  1519                           	callstack 0
  1520                           
  1521                           ; 4 bytes @ 0xA
  1522  00000B                     	ds	1
  1523  00000C                     ??_I2C_DO_TX:
  1524  00000C                     ??_I2C_DO_RX:
  1525  00000C                     ??_I2C_DO_TX_EMPTY:
  1526  00000C                     ??_I2C_DO_ADDRESS_NACK:
  1527  00000C                     fputs@fp:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0xB
  1531  00000C                     	ds	1
  1532  00000D                     ___lldiv@counter:
  1533                           	callstack 0
  1534  00000D                     ___fladd@signs:
  1535                           	callstack 0
  1536  00000D                     _tolower$2341:
  1537                           	callstack 0
  1538  00000D                     ___fldiv@rem:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0xC
  1542  00000D                     	ds	1
  1543  00000E                     ??_I2C_MasterFsm:
  1544  00000E                     ___fladd@aexp:
  1545                           	callstack 0
  1546  00000E                     fputs@c:
  1547                           	callstack 0
  1548  00000E                     atoi@neg:
  1549                           	callstack 0
  1550  00000E                     I2C_Master_Init@c:
  1551                           	callstack 0
  1552                           
  1553                           ; 4 bytes @ 0xD
  1554  00000E                     	ds	1
  1555  00000F                     ___fladd@bexp:
  1556                           	callstack 0
  1557  00000F                     ___xxtofl@sign:
  1558                           	callstack 0
  1559  00000F                     fputs@i:
  1560                           	callstack 0
  1561                           
  1562                           ; 2 bytes @ 0xE
  1563  00000F                     	ds	1
  1564  000010                     I2C_MasterOperation@read:
  1565                           	callstack 0
  1566  000010                     ___fladd@grs:
  1567                           	callstack 0
  1568  000010                     ___xxtofl@exp:
  1569                           	callstack 0
  1570  000010                     _atoi$2247:
  1571                           	callstack 0
  1572                           
  1573                           ; 2 bytes @ 0xF
  1574  000010                     	ds	1
  1575  000011                     ?_pad:
  1576                           	callstack 0
  1577  000011                     I2C_MasterOperation@returnValue:
  1578                           	callstack 0
  1579  000011                     ___fldiv@sign:
  1580                           	callstack 0
  1581  000011                     pad@fp:
  1582                           	callstack 0
  1583  000011                     ___xxtofl@arg:
  1584                           	callstack 0
  1585                           
  1586                           ; 4 bytes @ 0x10
  1587  000011                     	ds	1
  1588  000012                     ??_I2C_Master_Init:
  1589  000012                     I2C_WriteNBytes@data:
  1590                           	callstack 0
  1591  000012                     ___fldiv@new_exp:
  1592                           	callstack 0
  1593  000012                     _atoi$2249:
  1594                           	callstack 0
  1595                           
  1596                           ; 2 bytes @ 0x11
  1597  000012                     	ds	1
  1598  000013                     pad@buf:
  1599                           	callstack 0
  1600                           
  1601                           ; 2 bytes @ 0x12
  1602  000013                     	ds	1
  1603  000014                     _atoi$2248:
  1604                           	callstack 0
  1605  000014                     I2C_WriteNBytes@len:
  1606                           	callstack 0
  1607  000014                     ___fldiv@grs:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x13
  1611  000014                     	ds	1
  1612  000015                     ?___flmul:
  1613                           	callstack 0
  1614  000015                     pad@p:
  1615                           	callstack 0
  1616  000015                     atoi@n:
  1617                           	callstack 0
  1618  000015                     ___flmul@b:
  1619                           	callstack 0
  1620                           
  1621                           ; 4 bytes @ 0x14
  1622  000015                     	ds	1
  1623  000016                     I2C_WriteNBytes@address:
  1624                           	callstack 0
  1625                           
  1626                           ; 1 bytes @ 0x15
  1627  000016                     	ds	1
  1628  000017                     ??_pad:
  1629  000017                     Oled_Command@command:
  1630                           	callstack 0
  1631  000017                     Oled_Data@value:
  1632                           	callstack 0
  1633                           
  1634                           ; 1 bytes @ 0x16
  1635  000017                     	ds	1
  1636  000018                     ___fldiv@bexp:
  1637                           	callstack 0
  1638  000018                     Oled_Command@data_I2C:
  1639                           	callstack 0
  1640  000018                     Oled_Data@data_I2C:
  1641                           	callstack 0
  1642  000018                     pad@i:
  1643                           	callstack 0
  1644                           
  1645                           ; 2 bytes @ 0x17
  1646  000018                     	ds	1
  1647  000019                     ___fldiv@aexp:
  1648                           	callstack 0
  1649  000019                     ___flmul@a:
  1650                           	callstack 0
  1651                           
  1652                           ; 4 bytes @ 0x18
  1653  000019                     	ds	1
  1654  00001A                     ??_Oled_WriteCharacter:
  1655  00001A                     ?_Power_ReadRegister:
  1656                           	callstack 0
  1657  00001A                     ?_floorf:
  1658                           	callstack 0
  1659  00001A                     Oled_SelectPage@page_num:
  1660                           	callstack 0
  1661  00001A                     Oled_Clear@i:
  1662                           	callstack 0
  1663  00001A                     pad@w:
  1664                           	callstack 0
  1665  00001A                     floorf@x:
  1666                           	callstack 0
  1667                           
  1668                           ; 4 bytes @ 0x19
  1669  00001A                     	ds	1
  1670  00001B                     Oled_SelectPage@Result:
  1671                           	callstack 0
  1672                           
  1673                           ; 1 bytes @ 0x1A
  1674  00001B                     	ds	2
  1675  00001D                     ??___flmul:
  1676                           
  1677                           ; 1 bytes @ 0x1C
  1678  00001D                     	ds	1
  1679  00001E                     ??_Power_ReadRegister:
  1680  00001E                     ??_floorf:
  1681  00001E                     Oled_WriteCharacter@character:
  1682                           	callstack 0
  1683                           
  1684                           ; 1 bytes @ 0x1D
  1685  00001E                     	ds	1
  1686  00001F                     Oled_WriteCharacter@i:
  1687                           	callstack 0
  1688                           
  1689                           ; 2 bytes @ 0x1E
  1690  00001F                     	ds	1
  1691  000020                     Power_ReadRegister@temp_f:
  1692                           	callstack 0
  1693                           
  1694                           ; 2 bytes @ 0x1F
  1695  000020                     	ds	1
  1696  000021                     ___flmul@sign:
  1697                           	callstack 0
  1698  000021                     Oled_WriteString@characters:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x20
  1702  000021                     	ds	1
  1703  000022                     Power_ReadRegister@temp_e:
  1704                           	callstack 0
  1705  000022                     ___flmul@grs:
  1706                           	callstack 0
  1707                           
  1708                           ; 4 bytes @ 0x21
  1709  000022                     	ds	1
  1710  000023                     
  1711                           ; 1 bytes @ 0x22
  1712  000023                     	ds	1
  1713  000024                     floorf@m:
  1714                           	callstack 0
  1715                           
  1716                           ; 4 bytes @ 0x23
  1717  000024                     	ds	2
  1718  000026                     ___flmul@aexp:
  1719                           	callstack 0
  1720                           
  1721                           ; 1 bytes @ 0x25
  1722  000026                     	ds	1
  1723  000027                     ___flmul@bexp:
  1724                           	callstack 0
  1725                           
  1726                           ; 1 bytes @ 0x26
  1727  000027                     	ds	1
  1728  000028                     floorf@e:
  1729                           	callstack 0
  1730  000028                     ___flmul@prod:
  1731                           	callstack 0
  1732                           
  1733                           ; 4 bytes @ 0x27
  1734  000028                     	ds	2
  1735  00002A                     floorf@u:
  1736                           	callstack 0
  1737                           
  1738                           ; 4 bytes @ 0x29
  1739  00002A                     	ds	2
  1740  00002C                     ___flmul@temp:
  1741                           	callstack 0
  1742                           
  1743                           ; 2 bytes @ 0x2B
  1744  00002C                     	ds	2
  1745  00002E                     ?_Voltage_ReadRegister:
  1746                           	callstack 0
  1747  00002E                     ?_Current_ReadRegister:
  1748                           	callstack 0
  1749  00002E                     ?___flsub:
  1750                           	callstack 0
  1751  00002E                     ___flge@ff1:
  1752                           	callstack 0
  1753  00002E                     ___flsub@b:
  1754                           	callstack 0
  1755                           
  1756                           ; 4 bytes @ 0x2D
  1757  00002E                     	ds	4
  1758  000032                     ??_Voltage_ReadRegister:
  1759  000032                     ??_Current_ReadRegister:
  1760  000032                     ___flge@ff2:
  1761                           	callstack 0
  1762  000032                     ___flsub@a:
  1763                           	callstack 0
  1764                           
  1765                           ; 4 bytes @ 0x31
  1766  000032                     	ds	2
  1767  000034                     Voltage_ReadRegister@temp_b:
  1768                           	callstack 0
  1769  000034                     Current_ReadRegister@temp_d:
  1770                           	callstack 0
  1771                           
  1772                           ; 2 bytes @ 0x33
  1773  000034                     	ds	2
  1774  000036                     ??___flge:
  1775  000036                     Voltage_ReadRegister@temp_a:
  1776                           	callstack 0
  1777  000036                     Current_ReadRegister@temp_c:
  1778                           	callstack 0
  1779                           
  1780                           ; 1 bytes @ 0x35
  1781  000036                     	ds	4
  1782  00003A                     ?_efgtoa:
  1783                           	callstack 0
  1784  00003A                     efgtoa@fp:
  1785                           	callstack 0
  1786                           
  1787                           ; 2 bytes @ 0x39
  1788  00003A                     	ds	2
  1789  00003C                     efgtoa@f:
  1790                           	callstack 0
  1791                           
  1792                           ; 4 bytes @ 0x3B
  1793  00003C                     	ds	4
  1794  000040                     efgtoa@c:
  1795                           	callstack 0
  1796                           
  1797                           ; 1 bytes @ 0x3F
  1798  000040                     	ds	1
  1799  000041                     ??_efgtoa:
  1800                           
  1801                           ; 1 bytes @ 0x40
  1802  000041                     	ds	5
  1803  000046                     ?_vfpfcnvrt:
  1804                           	callstack 0
  1805  000046                     vfpfcnvrt@fp:
  1806                           	callstack 0
  1807                           
  1808                           ; 2 bytes @ 0x45
  1809  000046                     	ds	2
  1810  000048                     vfpfcnvrt@fmt:
  1811                           	callstack 0
  1812                           
  1813                           ; 2 bytes @ 0x47
  1814  000048                     	ds	2
  1815  00004A                     vfpfcnvrt@ap:
  1816                           	callstack 0
  1817                           
  1818                           ; 2 bytes @ 0x49
  1819  00004A                     	ds	2
  1820  00004C                     ??_vfpfcnvrt:
  1821                           
  1822                           ; 1 bytes @ 0x4B
  1823  00004C                     	ds	4
  1824  000050                     _vfpfcnvrt$2209:
  1825                           	callstack 0
  1826                           
  1827                           ; 2 bytes @ 0x4F
  1828  000050                     	ds	2
  1829  000052                     _vfpfcnvrt$2213:
  1830                           	callstack 0
  1831                           
  1832                           ; 2 bytes @ 0x51
  1833  000052                     	ds	2
  1834  000054                     vfpfcnvrt@f:
  1835                           	callstack 0
  1836                           
  1837                           ; 4 bytes @ 0x53
  1838  000054                     	ds	4
  1839  000058                     vfpfcnvrt@ct:
  1840                           	callstack 0
  1841                           
  1842                           ; 3 bytes @ 0x57
  1843  000058                     	ds	3
  1844  00005B                     vfpfcnvrt@c:
  1845                           	callstack 0
  1846                           
  1847                           ; 1 bytes @ 0x5A
  1848  00005B                     	ds	1
  1849  00005C                     vfprintf@cfmt:
  1850                           	callstack 0
  1851                           
  1852                           ; 2 bytes @ 0x5B
  1853  00005C                     	ds	2
  1854  00005E                     ??_main:
  1855                           
  1856                           ; 1 bytes @ 0x5D
  1857  00005E                     	ds	2
  1858                           
  1859 ;;
  1860 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1861 ;;
  1862 ;; *************** function _main *****************
  1863 ;; Defined at:
  1864 ;;		line 70 in file "main.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1878 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1880 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1881 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1882 ;;Total ram usage:        2 bytes
  1883 ;; Hardware stack levels required when called: 12
  1884 ;; This function calls:
  1885 ;;		_Current_ReadRegister
  1886 ;;		_I2C_Initialize
  1887 ;;		_I2C_Master_Init
  1888 ;;		_Oled_Clear
  1889 ;;		_Oled_Init
  1890 ;;		_Oled_SelectPage
  1891 ;;		_Oled_WriteString
  1892 ;;		_Power_ReadRegister
  1893 ;;		_SYSTEM_Initialize
  1894 ;;		_Voltage_ReadRegister
  1895 ;;		_sprintf
  1896 ;; This function is called by:
  1897 ;;		Startup code after reset
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text0
  1902  00DD92                     __ptext0:
  1903                           	callstack 0
  1904  00DD92                     _main:
  1905                           	callstack 19
  1906  00DD92                     
  1907                           ;main.c: 73:     SYSTEM_Initialize();
  1908  00DD92  ECFD  F05F         	call	_SYSTEM_Initialize	;wreg free
  1909                           
  1910                           ;main.c: 90:     I2C_Initialize();
  1911  00DD96  EC35  F060         	call	_I2C_Initialize	;wreg free
  1912  00DD9A                     
  1913                           ;main.c: 92:     Oled_Init();
  1914  00DD9A  EC7F  F065         	call	_Oled_Init	;wreg free
  1915  00DD9E                     
  1916                           ;main.c: 93:     Oled_Clear();
  1917  00DD9E  EC6B  F061         	call	_Oled_Clear	;wreg free
  1918  00DDA2                     
  1919                           ;main.c: 94:     Oled_SelectPage(0);
  1920  00DDA2  0E00               	movlw	0
  1921  00DDA4  EC61  F060         	call	_Oled_SelectPage
  1922  00DDA8                     
  1923                           ;main.c: 95:     Oled_WriteString("      IPL-ESTG ");
  1924  00DDA8  0EAE               	movlw	low STR_1
  1925  00DDAA  6E21               	movwf	Oled_WriteString@characters^0,c
  1926  00DDAC  0EFF               	movlw	high STR_1
  1927  00DDAE  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1928  00DDB0  ECB7  F063         	call	_Oled_WriteString	;wreg free
  1929  00DDB4                     
  1930                           ;main.c: 96:      _delay((unsigned long)((2000)*(8000000/4000.0)));
  1931  00DDB4  0E15               	movlw	21
  1932  00DDB6  6E5F               	movwf	(??_main+1)^0,c
  1933  00DDB8  0E4B               	movlw	75
  1934  00DDBA  6E5E               	movwf	??_main^0,c
  1935  00DDBC  0EBE               	movlw	190
  1936  00DDBE                     u6337:
  1937  00DDBE  2EE8               	decfsz	wreg,f,c
  1938  00DDC0  D7FE               	bra	u6337
  1939  00DDC2  2E5E               	decfsz	??_main^0,f,c
  1940  00DDC4  D7FC               	bra	u6337
  1941  00DDC6  2E5F               	decfsz	(??_main+1)^0,f,c
  1942  00DDC8  D7FA               	bra	u6337
  1943  00DDCA  D000               	nop2	
  1944  00DDCC                     
  1945                           ;main.c: 97:     Oled_SelectPage(1);
  1946  00DDCC  0E01               	movlw	1
  1947  00DDCE  EC61  F060         	call	_Oled_SelectPage
  1948  00DDD2                     
  1949                           ;main.c: 98:     Oled_WriteString("  Conducao autonoma ");
  1950  00DDD2  0E87               	movlw	low STR_2
  1951  00DDD4  6E21               	movwf	Oled_WriteString@characters^0,c
  1952  00DDD6  0EFF               	movlw	high STR_2
  1953  00DDD8  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1954  00DDDA  ECB7  F063         	call	_Oled_WriteString	;wreg free
  1955  00DDDE                     
  1956                           ;main.c: 99:      _delay((unsigned long)((2000)*(8000000/4000.0)));
  1957  00DDDE  0E15               	movlw	21
  1958  00DDE0  6E5F               	movwf	(??_main+1)^0,c
  1959  00DDE2  0E4B               	movlw	75
  1960  00DDE4  6E5E               	movwf	??_main^0,c
  1961  00DDE6  0EBE               	movlw	190
  1962  00DDE8                     u6347:
  1963  00DDE8  2EE8               	decfsz	wreg,f,c
  1964  00DDEA  D7FE               	bra	u6347
  1965  00DDEC  2E5E               	decfsz	??_main^0,f,c
  1966  00DDEE  D7FC               	bra	u6347
  1967  00DDF0  2E5F               	decfsz	(??_main+1)^0,f,c
  1968  00DDF2  D7FA               	bra	u6347
  1969  00DDF4  D000               	nop2	
  1970  00DDF6                     l6491:
  1971                           
  1972                           ;main.c: 100:     Oled_Clear();
  1973  00DDF6  EC6B  F061         	call	_Oled_Clear	;wreg free
  1974  00DDFA                     
  1975                           ;main.c: 105:     I2C_Master_Init(400000);
  1976  00DDFA  0E80               	movlw	128
  1977  00DDFC  6E0E               	movwf	I2C_Master_Init@c^0,c
  1978  00DDFE  0E1A               	movlw	26
  1979  00DE00  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  1980  00DE02  0E06               	movlw	6
  1981  00DE04  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  1982  00DE06  0E00               	movlw	0
  1983  00DE08  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  1984  00DE0A  EC2A  F063         	call	_I2C_Master_Init	;wreg free
  1985  00DE0E                     
  1986                           ;main.c: 107:     {;main.c: 108:        Voltage = Voltage_ReadRegister();
  1987  00DE0E  EC93  F06A         	call	_Voltage_ReadRegister	;wreg free
  1988  00DE12  C02E  F0CA         	movff	?_Voltage_ReadRegister,_Voltage
  1989  00DE16  C02F  F0CB         	movff	?_Voltage_ReadRegister+1,_Voltage+1
  1990  00DE1A  C030  F0CC         	movff	?_Voltage_ReadRegister+2,_Voltage+2
  1991  00DE1E  C031  F0CD         	movff	?_Voltage_ReadRegister+3,_Voltage+3
  1992  00DE22                     
  1993                           ;main.c: 109:        Current = Current_ReadRegister();
  1994  00DE22  EC12  F06A         	call	_Current_ReadRegister	;wreg free
  1995  00DE26  C02E  F0C6         	movff	?_Current_ReadRegister,_Current
  1996  00DE2A  C02F  F0C7         	movff	?_Current_ReadRegister+1,_Current+1
  1997  00DE2E  C030  F0C8         	movff	?_Current_ReadRegister+2,_Current+2
  1998  00DE32  C031  F0C9         	movff	?_Current_ReadRegister+3,_Current+3
  1999  00DE36                     
  2000                           ;main.c: 110:        Power = Power_ReadRegister();
  2001  00DE36  EC1A  F069         	call	_Power_ReadRegister	;wreg free
  2002  00DE3A  C01A  F0C2         	movff	?_Power_ReadRegister,_Power
  2003  00DE3E  C01B  F0C3         	movff	?_Power_ReadRegister+1,_Power+1
  2004  00DE42  C01C  F0C4         	movff	?_Power_ReadRegister+2,_Power+2
  2005  00DE46  C01D  F0C5         	movff	?_Power_ReadRegister+3,_Power+3
  2006  00DE4A                     
  2007                           ;main.c: 111:        sprintf(voltage_str, "%.2f",Voltage);
  2008  00DE4A  0EE9               	movlw	low _voltage_str
  2009  00DE4C  0100               	movlb	0	; () banked
  2010  00DE4E  6F9E               	movwf	sprintf@s& (0+255),b
  2011  00DE50  0E00               	movlw	high _voltage_str
  2012  00DE52  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  2013  00DE54  0EDD               	movlw	low STR_3
  2014  00DE56  6FA0               	movwf	sprintf@fmt& (0+255),b
  2015  00DE58  0EFF               	movlw	high STR_3
  2016  00DE5A  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  2017  00DE5C  C0CA  F0A2         	movff	_Voltage,?_sprintf+4
  2018  00DE60  C0CB  F0A3         	movff	_Voltage+1,?_sprintf+5
  2019  00DE64  C0CC  F0A4         	movff	_Voltage+2,?_sprintf+6
  2020  00DE68  C0CD  F0A5         	movff	_Voltage+3,?_sprintf+7
  2021  00DE6C  ECD4  F062         	call	_sprintf	;wreg free
  2022  00DE70                     
  2023                           ;main.c: 112:        sprintf(current_str, "%.2f",Current);
  2024  00DE70  0EE3               	movlw	low _current_str
  2025  00DE72  0100               	movlb	0	; () banked
  2026  00DE74  6F9E               	movwf	sprintf@s& (0+255),b
  2027  00DE76  0E00               	movlw	high _current_str
  2028  00DE78  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  2029  00DE7A  0EDD               	movlw	low STR_3
  2030  00DE7C  6FA0               	movwf	sprintf@fmt& (0+255),b
  2031  00DE7E  0EFF               	movlw	high STR_3
  2032  00DE80  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  2033  00DE82  C0C6  F0A2         	movff	_Current,?_sprintf+4
  2034  00DE86  C0C7  F0A3         	movff	_Current+1,?_sprintf+5
  2035  00DE8A  C0C8  F0A4         	movff	_Current+2,?_sprintf+6
  2036  00DE8E  C0C9  F0A5         	movff	_Current+3,?_sprintf+7
  2037  00DE92  ECD4  F062         	call	_sprintf	;wreg free
  2038  00DE96                     
  2039                           ;main.c: 113:        sprintf(power_str, "%.2f",Power);
  2040  00DE96  0EDD               	movlw	low _power_str
  2041  00DE98  0100               	movlb	0	; () banked
  2042  00DE9A  6F9E               	movwf	sprintf@s& (0+255),b
  2043  00DE9C  0E00               	movlw	high _power_str
  2044  00DE9E  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  2045  00DEA0  0EDD               	movlw	low STR_3
  2046  00DEA2  6FA0               	movwf	sprintf@fmt& (0+255),b
  2047  00DEA4  0EFF               	movlw	high STR_3
  2048  00DEA6  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  2049  00DEA8  C0C2  F0A2         	movff	_Power,?_sprintf+4
  2050  00DEAC  C0C3  F0A3         	movff	_Power+1,?_sprintf+5
  2051  00DEB0  C0C4  F0A4         	movff	_Power+2,?_sprintf+6
  2052  00DEB4  C0C5  F0A5         	movff	_Power+3,?_sprintf+7
  2053  00DEB8  ECD4  F062         	call	_sprintf	;wreg free
  2054  00DEBC                     
  2055                           ;main.c: 115:        Oled_SelectPage(0);
  2056  00DEBC  0E00               	movlw	0
  2057  00DEBE  EC61  F060         	call	_Oled_SelectPage
  2058  00DEC2                     
  2059                           ;main.c: 116:        Oled_WriteString("    Bateria 7.4V ");
  2060  00DEC2  0E9C               	movlw	low STR_6
  2061  00DEC4  6E21               	movwf	Oled_WriteString@characters^0,c
  2062  00DEC6  0EFF               	movlw	high STR_6
  2063  00DEC8  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2064  00DECA  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2065  00DECE                     
  2066                           ;main.c: 117:        _delay((unsigned long)((600)*(8000000/4000.0)));
  2067  00DECE  0E07               	movlw	7
  2068  00DED0  6E5F               	movwf	(??_main+1)^0,c
  2069  00DED2  0E17               	movlw	23
  2070  00DED4  6E5E               	movwf	??_main^0,c
  2071  00DED6  0E6A               	movlw	106
  2072  00DED8                     u6357:
  2073  00DED8  2EE8               	decfsz	wreg,f,c
  2074  00DEDA  D7FE               	bra	u6357
  2075  00DEDC  2E5E               	decfsz	??_main^0,f,c
  2076  00DEDE  D7FC               	bra	u6357
  2077  00DEE0  2E5F               	decfsz	(??_main+1)^0,f,c
  2078  00DEE2  D7FA               	bra	u6357
  2079  00DEE4  D000               	nop2	
  2080  00DEE6                     
  2081                           ;main.c: 118:        Oled_SelectPage(1);
  2082  00DEE6  0E01               	movlw	1
  2083  00DEE8  EC61  F060         	call	_Oled_SelectPage
  2084  00DEEC                     
  2085                           ;main.c: 119:        Oled_WriteString("Tensao: ");
  2086  00DEEC  0ED4               	movlw	low STR_7
  2087  00DEEE  6E21               	movwf	Oled_WriteString@characters^0,c
  2088  00DEF0  0EFF               	movlw	high STR_7
  2089  00DEF2  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2090  00DEF4  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2091  00DEF8                     
  2092                           ;main.c: 120:        Oled_WriteString(voltage_str);
  2093  00DEF8  0EE9               	movlw	low _voltage_str
  2094  00DEFA  6E21               	movwf	Oled_WriteString@characters^0,c
  2095  00DEFC  0E00               	movlw	high _voltage_str
  2096  00DEFE  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2097  00DF00  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2098  00DF04                     
  2099                           ;main.c: 121:        Oled_WriteString(" V");
  2100  00DF04  0EF8               	movlw	low STR_8
  2101  00DF06  6E21               	movwf	Oled_WriteString@characters^0,c
  2102  00DF08  0EFF               	movlw	high STR_8
  2103  00DF0A  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2104  00DF0C  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2105  00DF10                     
  2106                           ;main.c: 122:        _delay((unsigned long)((600)*(8000000/4000.0)));
  2107  00DF10  0E07               	movlw	7
  2108  00DF12  6E5F               	movwf	(??_main+1)^0,c
  2109  00DF14  0E17               	movlw	23
  2110  00DF16  6E5E               	movwf	??_main^0,c
  2111  00DF18  0E6A               	movlw	106
  2112  00DF1A                     u6367:
  2113  00DF1A  2EE8               	decfsz	wreg,f,c
  2114  00DF1C  D7FE               	bra	u6367
  2115  00DF1E  2E5E               	decfsz	??_main^0,f,c
  2116  00DF20  D7FC               	bra	u6367
  2117  00DF22  2E5F               	decfsz	(??_main+1)^0,f,c
  2118  00DF24  D7FA               	bra	u6367
  2119  00DF26  D000               	nop2	
  2120  00DF28                     
  2121                           ;main.c: 123:        Oled_SelectPage(2);
  2122  00DF28  0E02               	movlw	2
  2123  00DF2A  EC61  F060         	call	_Oled_SelectPage
  2124  00DF2E                     
  2125                           ;main.c: 124:        Oled_WriteString("Corrente: ");
  2126  00DF2E  0EC9               	movlw	low STR_9
  2127  00DF30  6E21               	movwf	Oled_WriteString@characters^0,c
  2128  00DF32  0EFF               	movlw	high STR_9
  2129  00DF34  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2130  00DF36  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2131  00DF3A                     
  2132                           ;main.c: 125:        Oled_WriteString(current_str);
  2133  00DF3A  0EE3               	movlw	low _current_str
  2134  00DF3C  6E21               	movwf	Oled_WriteString@characters^0,c
  2135  00DF3E  0E00               	movlw	high _current_str
  2136  00DF40  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2137  00DF42  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2138  00DF46                     
  2139                           ;main.c: 126:        Oled_WriteString(" A");
  2140  00DF46  0EF5               	movlw	low STR_10
  2141  00DF48  6E21               	movwf	Oled_WriteString@characters^0,c
  2142  00DF4A  0EFF               	movlw	high STR_10
  2143  00DF4C  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2144  00DF4E  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2145  00DF52                     
  2146                           ;main.c: 127:        _delay((unsigned long)((600)*(8000000/4000.0)));
  2147  00DF52  0E07               	movlw	7
  2148  00DF54  6E5F               	movwf	(??_main+1)^0,c
  2149  00DF56  0E17               	movlw	23
  2150  00DF58  6E5E               	movwf	??_main^0,c
  2151  00DF5A  0E6A               	movlw	106
  2152  00DF5C                     u6377:
  2153  00DF5C  2EE8               	decfsz	wreg,f,c
  2154  00DF5E  D7FE               	bra	u6377
  2155  00DF60  2E5E               	decfsz	??_main^0,f,c
  2156  00DF62  D7FC               	bra	u6377
  2157  00DF64  2E5F               	decfsz	(??_main+1)^0,f,c
  2158  00DF66  D7FA               	bra	u6377
  2159  00DF68  D000               	nop2	
  2160  00DF6A                     
  2161                           ;main.c: 128:        Oled_SelectPage(3);
  2162  00DF6A  0E03               	movlw	3
  2163  00DF6C  EC61  F060         	call	_Oled_SelectPage
  2164  00DF70                     
  2165                           ;main.c: 129:        Oled_WriteString("Potencia: ");
  2166  00DF70  0EBE               	movlw	low STR_11
  2167  00DF72  6E21               	movwf	Oled_WriteString@characters^0,c
  2168  00DF74  0EFF               	movlw	high STR_11
  2169  00DF76  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2170  00DF78  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2171  00DF7C                     
  2172                           ;main.c: 130:        Oled_WriteString(power_str);
  2173  00DF7C  0EDD               	movlw	low _power_str
  2174  00DF7E  6E21               	movwf	Oled_WriteString@characters^0,c
  2175  00DF80  0E00               	movlw	high _power_str
  2176  00DF82  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2177  00DF84  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2178  00DF88                     
  2179                           ;main.c: 131:        Oled_WriteString(" W");
  2180  00DF88  0EFB               	movlw	low STR_12
  2181  00DF8A  6E21               	movwf	Oled_WriteString@characters^0,c
  2182  00DF8C  0EFF               	movlw	high STR_12
  2183  00DF8E  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2184  00DF90  ECB7  F063         	call	_Oled_WriteString	;wreg free
  2185  00DF94                     
  2186                           ;main.c: 132:        _delay((unsigned long)((5000)*(8000000/4000.0)));
  2187  00DF94  0E33               	movlw	51
  2188  00DF96  6E5F               	movwf	(??_main+1)^0,c
  2189  00DF98  0EBB               	movlw	187
  2190  00DF9A  6E5E               	movwf	??_main^0,c
  2191  00DF9C  0EE0               	movlw	224
  2192  00DF9E                     u6387:
  2193  00DF9E  2EE8               	decfsz	wreg,f,c
  2194  00DFA0  D7FE               	bra	u6387
  2195  00DFA2  2E5E               	decfsz	??_main^0,f,c
  2196  00DFA4  D7FC               	bra	u6387
  2197  00DFA6  2E5F               	decfsz	(??_main+1)^0,f,c
  2198  00DFA8  D7FA               	bra	u6387
  2199  00DFAA  EFFB  F06E         	goto	l6491
  2200  00DFAE  EF00  F000         	goto	start
  2201  00DFB2                     __end_of_main:
  2202                           	callstack 0
  2203                           
  2204 ;; *************** function _sprintf *****************
  2205 ;; Defined at:
  2206 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2207 ;; Parameters:    Size  Location     Type
  2208 ;;  s               2   62[BANK0 ] PTR unsigned char 
  2209 ;;		 -> power_str(6), current_str(6), voltage_str(6), 
  2210 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  2211 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  f               6   72[BANK0 ] struct _IO_FILE
  2214 ;;  ap              2   70[BANK0 ] PTR void [1]
  2215 ;;		 -> ?_sprintf(2), 
  2216 ;;  ret             2    0        int 
  2217 ;; Return value:  Size  Location     Type
  2218 ;;                  2   62[BANK0 ] int 
  2219 ;; Registers used:
  2220 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2221 ;; Tracked objects:
  2222 ;;		On entry : 0/0
  2223 ;;		On exit  : 0/0
  2224 ;;		Unchanged: 0/0
  2225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2226 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2229 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2230 ;;Total ram usage:       16 bytes
  2231 ;; Hardware stack levels used: 1
  2232 ;; Hardware stack levels required when called: 7
  2233 ;; This function calls:
  2234 ;;		_vfprintf
  2235 ;; This function is called by:
  2236 ;;		_main
  2237 ;; This function uses a non-reentrant model
  2238 ;;
  2239                           
  2240                           	psect	text1
  2241  00C5A8                     __ptext1:
  2242                           	callstack 0
  2243  00C5A8                     _sprintf:
  2244                           	callstack 23
  2245  00C5A8  0EA2               	movlw	low (?_sprintf+4)
  2246  00C5AA  0100               	movlb	0	; () banked
  2247  00C5AC  6FA6               	movwf	sprintf@ap& (0+255),b
  2248  00C5AE  0E00               	movlw	high (?_sprintf+4)
  2249  00C5B0  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  2250  00C5B2  C09E  F0A8         	movff	sprintf@s,sprintf@f
  2251  00C5B6  C09F  F0A9         	movff	sprintf@s+1,sprintf@f+1
  2252  00C5BA                     
  2253                           ; BSR set to: 0
  2254  00C5BA  0E00               	movlw	0
  2255  00C5BC  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  2256  00C5BE  0E00               	movlw	0
  2257  00C5C0  6FAA               	movwf	(sprintf@f+2)& (0+255),b
  2258  00C5C2                     
  2259                           ; BSR set to: 0
  2260  00C5C2  0E00               	movlw	0
  2261  00C5C4  6FAD               	movwf	(sprintf@f+5)& (0+255),b
  2262  00C5C6  0E00               	movlw	0
  2263  00C5C8  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  2264  00C5CA                     
  2265                           ; BSR set to: 0
  2266  00C5CA  0EA8               	movlw	low sprintf@f
  2267  00C5CC  6F98               	movwf	vfprintf@fp& (0+255),b
  2268  00C5CE  0E00               	movlw	high sprintf@f
  2269  00C5D0  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  2270  00C5D2  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  2271  00C5D6  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2272  00C5DA  0EA6               	movlw	low sprintf@ap
  2273  00C5DC  6F9C               	movwf	vfprintf@ap& (0+255),b
  2274  00C5DE  0E00               	movlw	high sprintf@ap
  2275  00C5E0  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  2276  00C5E2  ECE8  F063         	call	_vfprintf	;wreg free
  2277  00C5E6  0100               	movlb	0	; () banked
  2278  00C5E8  51AA               	movf	(sprintf@f+2)& (0+255),w,b
  2279  00C5EA  259E               	addwf	sprintf@s& (0+255),w,b
  2280  00C5EC  6ED9               	movwf	fsr2l,c
  2281  00C5EE  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  2282  00C5F0  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  2283  00C5F2  6EDA               	movwf	fsr2h,c
  2284  00C5F4  0E00               	movlw	0
  2285  00C5F6  6EDF               	movwf	indf2,c
  2286  00C5F8                     
  2287                           ; BSR set to: 0
  2288  00C5F8  0012               	return		;funcret
  2289  00C5FA                     __end_of_sprintf:
  2290                           	callstack 0
  2291                           
  2292 ;; *************** function _vfprintf *****************
  2293 ;; Defined at:
  2294 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2295 ;; Parameters:    Size  Location     Type
  2296 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2297 ;;		 -> sprintf@f(6), 
  2298 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  2299 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2300 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2301 ;;		 -> sprintf@ap(2), 
  2302 ;; Auto vars:     Size  Location     Type
  2303 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  2304 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2305 ;; Return value:  Size  Location     Type
  2306 ;;                  2   56[BANK0 ] int 
  2307 ;; Registers used:
  2308 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2309 ;; Tracked objects:
  2310 ;;		On entry : 0/0
  2311 ;;		On exit  : 0/0
  2312 ;;		Unchanged: 0/0
  2313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2314 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2315 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2317 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2318 ;;Total ram usage:        8 bytes
  2319 ;; Hardware stack levels used: 1
  2320 ;; Hardware stack levels required when called: 6
  2321 ;; This function calls:
  2322 ;;		_vfpfcnvrt
  2323 ;; This function is called by:
  2324 ;;		_sprintf
  2325 ;; This function uses a non-reentrant model
  2326 ;;
  2327                           
  2328                           	psect	text2
  2329  00C7D0                     __ptext2:
  2330                           	callstack 0
  2331  00C7D0                     _vfprintf:
  2332                           	callstack 23
  2333  00C7D0                     
  2334                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2335  00C7D0  C09A  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  2336  00C7D4  C09B  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2337  00C7D8                     
  2338                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2339  00C7D8  0E00               	movlw	0
  2340  00C7DA  0100               	movlb	0	; () banked
  2341  00C7DC  6FCF               	movwf	(_nout+1)& (0+255),b
  2342  00C7DE  0E00               	movlw	0
  2343  00C7E0  6FCE               	movwf	_nout& (0+255),b
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2346  00C7E2  EF06  F064         	goto	l6183
  2347  00C7E6                     l6181:
  2348                           
  2349                           ; BSR set to: 0
  2350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2351  00C7E6  C098  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  2352  00C7EA  C099  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2353  00C7EE  0E5C               	movlw	low vfprintf@cfmt
  2354  00C7F0  6E48               	movwf	vfpfcnvrt@fmt^0,c
  2355  00C7F2  0E00               	movlw	high vfprintf@cfmt
  2356  00C7F4  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2357  00C7F6  C09C  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  2358  00C7FA  C09D  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2359  00C7FE  ECBB  F073         	call	_vfpfcnvrt	;wreg free
  2360  00C802  5046               	movf	?_vfpfcnvrt^0,w,c
  2361  00C804  0100               	movlb	0	; () banked
  2362  00C806  27CE               	addwf	_nout& (0+255),f,b
  2363  00C808  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  2364  00C80A  23CF               	addwfc	(_nout+1)& (0+255),f,b
  2365  00C80C                     l6183:
  2366                           
  2367                           ; BSR set to: 0
  2368                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2369  00C80C  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2370  00C810  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2371  00C814                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2372  00C814  6AF8               	clrf	tblptru,c
  2373  00C816                     	endif
  2374  00C816                     	if	0	;tblptru may be non-zero
  2375  00C816                     	endif
  2376  00C816  0008               	tblrd		*
  2377  00C818  50F5               	movf	tablat,w,c
  2378  00C81A  0900               	iorlw	0
  2379  00C81C  A4D8               	btfss	status,2,c
  2380  00C81E  EF13  F064         	goto	u5921
  2381  00C822  EF15  F064         	goto	u5920
  2382  00C826                     u5921:
  2383  00C826  EFF3  F063         	goto	l6181
  2384  00C82A                     u5920:
  2385  00C82A                     
  2386                           ; BSR set to: 0
  2387                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2388  00C82A  C0CE  F098         	movff	_nout,?_vfprintf
  2389  00C82E  C0CF  F099         	movff	_nout+1,?_vfprintf+1
  2390  00C832                     
  2391                           ; BSR set to: 0
  2392  00C832  0012               	return		;funcret
  2393  00C834                     __end_of_vfprintf:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _vfpfcnvrt *****************
  2397 ;; Defined at:
  2398 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  2401 ;;		 -> sprintf@f(6), 
  2402 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  2403 ;;		 -> vfprintf@cfmt(2), 
  2404 ;;  ap              2   73[COMRAM] PTR PTR void 
  2405 ;;		 -> sprintf@ap(2), 
  2406 ;; Auto vars:     Size  Location     Type
  2407 ;;  llu             8    0        unsigned long long 
  2408 ;;  ll              8    0        long long 
  2409 ;;  f               4   83[COMRAM] long long 
  2410 ;;  ct              3   87[COMRAM] unsigned char [3]
  2411 ;;  vp              3    0        PTR void 
  2412 ;;  cp              3    0        PTR unsigned char 
  2413 ;;  i               2    0        int 
  2414 ;;  done            2    0        int 
  2415 ;;  c               1   90[COMRAM] unsigned char 
  2416 ;; Return value:  Size  Location     Type
  2417 ;;                  2   69[COMRAM] int 
  2418 ;; Registers used:
  2419 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2420 ;; Tracked objects:
  2421 ;;		On entry : 0/0
  2422 ;;		On exit  : 0/0
  2423 ;;		Unchanged: 0/0
  2424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2425 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2426 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2427 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2428 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2429 ;;Total ram usage:       22 bytes
  2430 ;; Hardware stack levels used: 1
  2431 ;; Hardware stack levels required when called: 5
  2432 ;; This function calls:
  2433 ;;		_atoi
  2434 ;;		_efgtoa
  2435 ;;		_fputc
  2436 ;;		_isdigit
  2437 ;;		_isupper
  2438 ;;		_strncmp
  2439 ;;		_tolower
  2440 ;; This function is called by:
  2441 ;;		_vfprintf
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           	psect	text3
  2446  00E776                     __ptext3:
  2447                           	callstack 0
  2448  00E776                     _vfpfcnvrt:
  2449                           	callstack 23
  2450  00E776                     
  2451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2452  00E776  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2453  00E77A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2454  00E77E  CFDE FFF6          	movff	postinc2,tblptrl
  2455  00E782  CFDD FFF7          	movff	postdec2,tblptrh
  2456  00E786                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2457  00E786  6AF8               	clrf	tblptru,c
  2458  00E788                     	endif
  2459  00E788                     	if	0	;tblptru may be non-zero
  2460  00E788                     	endif
  2461  00E788  0008               	tblrd		*
  2462  00E78A  50F5               	movf	tablat,w,c
  2463  00E78C  0A25               	xorlw	37
  2464  00E78E  A4D8               	btfss	status,2,c
  2465  00E790  EFCC  F073         	goto	u5621
  2466  00E794  EFCE  F073         	goto	u5620
  2467  00E798                     u5621:
  2468  00E798  EFDA  F075         	goto	l6043
  2469  00E79C                     u5620:
  2470  00E79C                     
  2471                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2472  00E79C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2473  00E7A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2474  00E7A4  2ADE               	incf	postinc2,f,c
  2475  00E7A6  0E00               	movlw	0
  2476  00E7A8  22DD               	addwfc	postdec2,f,c
  2477  00E7AA                     
  2478                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2479  00E7AA  0E00               	movlw	0
  2480  00E7AC  0100               	movlb	0	; () banked
  2481  00E7AE  6FD1               	movwf	(_width+1)& (0+255),b
  2482  00E7B0  0E00               	movlw	0
  2483  00E7B2  6FD0               	movwf	_width& (0+255),b
  2484  00E7B4  C0D0  F0D4         	movff	_width,_flags
  2485  00E7B8  C0D1  F0D5         	movff	_width+1,_flags+1
  2486  00E7BC                     
  2487                           ; BSR set to: 0
  2488                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2489  00E7BC  69D2               	setf	_prec& (0+255),b
  2490  00E7BE  69D3               	setf	(_prec+1)& (0+255),b
  2491  00E7C0                     
  2492                           ; BSR set to: 0
  2493                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2494  00E7C0  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2495  00E7C4  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2496  00E7C8  CFDE FFF6          	movff	postinc2,tblptrl
  2497  00E7CC  CFDD FFF7          	movff	postdec2,tblptrh
  2498  00E7D0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2499  00E7D0  6AF8               	clrf	tblptru,c
  2500  00E7D2                     	endif
  2501  00E7D2                     	if	0	;tblptru may be non-zero
  2502  00E7D2                     	endif
  2503  00E7D2  0008               	tblrd		*
  2504  00E7D4  50F5               	movf	tablat,w,c
  2505  00E7D6  0A2E               	xorlw	46
  2506  00E7D8  A4D8               	btfss	status,2,c
  2507  00E7DA  EFF1  F073         	goto	u5631
  2508  00E7DE  EFF3  F073         	goto	u5630
  2509  00E7E2                     u5631:
  2510  00E7E2  EF72  F074         	goto	l5989
  2511  00E7E6                     u5630:
  2512  00E7E6                     
  2513                           ; BSR set to: 0
  2514                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2515  00E7E6  0E00               	movlw	0
  2516  00E7E8  6FD3               	movwf	(_prec+1)& (0+255),b
  2517  00E7EA  0E00               	movlw	0
  2518  00E7EC  6FD2               	movwf	_prec& (0+255),b
  2519  00E7EE                     
  2520                           ; BSR set to: 0
  2521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2522  00E7EE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2523  00E7F2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2524  00E7F6  2ADE               	incf	postinc2,f,c
  2525  00E7F8  0E00               	movlw	0
  2526  00E7FA  22DD               	addwfc	postdec2,f,c
  2527  00E7FC                     
  2528                           ; BSR set to: 0
  2529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2530  00E7FC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2531  00E800  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2532  00E804  CFDE FFF6          	movff	postinc2,tblptrl
  2533  00E808  CFDD FFF7          	movff	postdec2,tblptrh
  2534  00E80C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2535  00E80C  6AF8               	clrf	tblptru,c
  2536  00E80E                     	endif
  2537  00E80E                     	if	0	;tblptru may be non-zero
  2538  00E80E                     	endif
  2539  00E80E  0008               	tblrd		*
  2540  00E810  50F5               	movf	tablat,w,c
  2541  00E812  0A2A               	xorlw	42
  2542  00E814  A4D8               	btfss	status,2,c
  2543  00E816  EF0F  F074         	goto	u5641
  2544  00E81A  EF11  F074         	goto	u5640
  2545  00E81E                     u5641:
  2546  00E81E  EF2E  F074         	goto	l5979
  2547  00E822                     u5640:
  2548  00E822                     
  2549                           ; BSR set to: 0
  2550                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2551  00E822  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2552  00E826  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2553  00E82A  2ADE               	incf	postinc2,f,c
  2554  00E82C  0E00               	movlw	0
  2555  00E82E  22DD               	addwfc	postdec2,f,c
  2556                           
  2557                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2558  00E830  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2559  00E834  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2560  00E838  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2561  00E83C  0E02               	movlw	2
  2562  00E83E  26DE               	addwf	postinc2,f,c
  2563  00E840  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2564  00E844  0E00               	movlw	0
  2565  00E846  22DD               	addwfc	postdec2,f,c
  2566  00E848  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2567  00E84C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2568  00E850  CFDE F0D2          	movff	postinc2,_prec
  2569  00E854  CFDD F0D3          	movff	postdec2,_prec+1
  2570                           
  2571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2572  00E858  EF72  F074         	goto	l5989
  2573  00E85C                     l5979:
  2574                           
  2575                           ; BSR set to: 0
  2576                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2577  00E85C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2578  00E860  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2579  00E864  CFDE F008          	movff	postinc2,atoi@s
  2580  00E868  CFDD F009          	movff	postdec2,atoi@s+1
  2581  00E86C  EC19  F06C         	call	_atoi	;wreg free
  2582  00E870  C008  F0D2         	movff	?_atoi,_prec
  2583  00E874  C009  F0D3         	movff	?_atoi+1,_prec+1
  2584                           
  2585                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2586  00E878  EF45  F074         	goto	l5983
  2587  00E87C                     l5981:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2590  00E87C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2591  00E880  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2592  00E884  2ADE               	incf	postinc2,f,c
  2593  00E886  0E00               	movlw	0
  2594  00E888  22DD               	addwfc	postdec2,f,c
  2595  00E88A                     l5983:
  2596  00E88A  0ED0               	movlw	208
  2597  00E88C  6E4C               	movwf	??_vfpfcnvrt^0,c
  2598  00E88E  0EFF               	movlw	255
  2599  00E890  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  2600  00E892  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2601  00E896  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2602  00E89A  CFDE FFF6          	movff	postinc2,tblptrl
  2603  00E89E  CFDD FFF7          	movff	postdec2,tblptrh
  2604  00E8A2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2605  00E8A2  6AF8               	clrf	tblptru,c
  2606  00E8A4                     	endif
  2607  00E8A4                     	if	0	;tblptru may be non-zero
  2608  00E8A4                     	endif
  2609  00E8A4  0008               	tblrd		*
  2610  00E8A6  50F5               	movf	tablat,w,c
  2611  00E8A8  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  2612  00E8AA  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  2613  00E8AC  504C               	movf	??_vfpfcnvrt^0,w,c
  2614  00E8AE  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2615  00E8B0  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2616  00E8B2  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2617  00E8B4  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2618  00E8B6  E10A               	bnz	u5650
  2619  00E8B8  0E0A               	movlw	10
  2620  00E8BA  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2621  00E8BC  A0D8               	btfss	status,0,c
  2622  00E8BE  EF63  F074         	goto	u5651
  2623  00E8C2  EF66  F074         	goto	u5650
  2624  00E8C6                     u5651:
  2625  00E8C6  0E01               	movlw	1
  2626  00E8C8  EF67  F074         	goto	u5660
  2627  00E8CC                     u5650:
  2628  00E8CC  0E00               	movlw	0
  2629  00E8CE                     u5660:
  2630  00E8CE  6E50               	movwf	_vfpfcnvrt$2209^0,c
  2631  00E8D0  6A51               	clrf	(_vfpfcnvrt$2209+1)^0,c
  2632  00E8D2  5050               	movf	_vfpfcnvrt$2209^0,w,c
  2633  00E8D4  1051               	iorwf	(_vfpfcnvrt$2209+1)^0,w,c
  2634  00E8D6  A4D8               	btfss	status,2,c
  2635  00E8D8  EF70  F074         	goto	u5671
  2636  00E8DC  EF72  F074         	goto	u5670
  2637  00E8E0                     u5671:
  2638  00E8E0  EF3E  F074         	goto	l5981
  2639  00E8E4                     u5670:
  2640  00E8E4                     l5989:
  2641                           
  2642                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2643  00E8E4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2644  00E8E8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2645  00E8EC  CFDE FFF6          	movff	postinc2,tblptrl
  2646  00E8F0  CFDD FFF7          	movff	postdec2,tblptrh
  2647  00E8F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2648  00E8F4  6AF8               	clrf	tblptru,c
  2649  00E8F6                     	endif
  2650  00E8F6                     	if	0	;tblptru may be non-zero
  2651  00E8F6                     	endif
  2652  00E8F6  0008               	tblrd		*
  2653  00E8F8  50F5               	movf	tablat,w,c
  2654  00E8FA  6E07               	movwf	tolower@c^0,c
  2655  00E8FC  6A08               	clrf	(tolower@c+1)^0,c
  2656  00E8FE  EC87  F063         	call	_tolower	;wreg free
  2657  00E902  5007               	movf	?_tolower^0,w,c
  2658  00E904  6E58               	movwf	vfpfcnvrt@ct^0,c
  2659  00E906                     
  2660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2661  00E906  5058               	movf	vfpfcnvrt@ct^0,w,c
  2662  00E908  B4D8               	btfsc	status,2,c
  2663  00E90A  EF89  F074         	goto	u5681
  2664  00E90E  EF8B  F074         	goto	u5680
  2665  00E912                     u5681:
  2666  00E912  EFC5  F074         	goto	l5999
  2667  00E916                     u5680:
  2668  00E916                     
  2669                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2670  00E916  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2671  00E91A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2672  00E91E  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2673  00E922  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2674  00E926  0E01               	movlw	1
  2675  00E928  264C               	addwf	??_vfpfcnvrt^0,f,c
  2676  00E92A  0E00               	movlw	0
  2677  00E92C  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2678  00E92E  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2679  00E932  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2680  00E936                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2681  00E936  6AF8               	clrf	tblptru,c
  2682  00E938                     	endif
  2683  00E938                     	if	0	;tblptru may be non-zero
  2684  00E938                     	endif
  2685  00E938  0008               	tblrd		*
  2686  00E93A  50F5               	movf	tablat,w,c
  2687  00E93C  6E07               	movwf	tolower@c^0,c
  2688  00E93E  6A08               	clrf	(tolower@c+1)^0,c
  2689  00E940  EC87  F063         	call	_tolower	;wreg free
  2690  00E944  5007               	movf	?_tolower^0,w,c
  2691  00E946  6E59               	movwf	(vfpfcnvrt@ct+1)^0,c
  2692  00E948                     
  2693                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2694  00E948  5059               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2695  00E94A  B4D8               	btfsc	status,2,c
  2696  00E94C  EFAA  F074         	goto	u5691
  2697  00E950  EFAC  F074         	goto	u5690
  2698  00E954                     u5691:
  2699  00E954  EFC5  F074         	goto	l5999
  2700  00E958                     u5690:
  2701  00E958                     
  2702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2703  00E958  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2704  00E95C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2705  00E960  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2706  00E964  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2707  00E968  0E02               	movlw	2
  2708  00E96A  264C               	addwf	??_vfpfcnvrt^0,f,c
  2709  00E96C  0E00               	movlw	0
  2710  00E96E  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2711  00E970  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2712  00E974  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2713  00E978                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2714  00E978  6AF8               	clrf	tblptru,c
  2715  00E97A                     	endif
  2716  00E97A                     	if	0	;tblptru may be non-zero
  2717  00E97A                     	endif
  2718  00E97A  0008               	tblrd		*
  2719  00E97C  50F5               	movf	tablat,w,c
  2720  00E97E  6E07               	movwf	tolower@c^0,c
  2721  00E980  6A08               	clrf	(tolower@c+1)^0,c
  2722  00E982  EC87  F063         	call	_tolower	;wreg free
  2723  00E986  5007               	movf	?_tolower^0,w,c
  2724  00E988  6E5A               	movwf	(vfpfcnvrt@ct+2)^0,c
  2725  00E98A                     l5999:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2728  00E98A  0E66               	movlw	102
  2729  00E98C  1858               	xorwf	vfpfcnvrt@ct^0,w,c
  2730  00E98E  A4D8               	btfss	status,2,c
  2731  00E990  EFCC  F074         	goto	u5701
  2732  00E994  EFCE  F074         	goto	u5700
  2733  00E998                     u5701:
  2734  00E998  EF0F  F075         	goto	l6011
  2735  00E99C                     u5700:
  2736  00E99C                     
  2737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2738  00E99C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2739  00E9A0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2740  00E9A4  CFDE FFF6          	movff	postinc2,tblptrl
  2741  00E9A8  CFDD FFF7          	movff	postdec2,tblptrh
  2742  00E9AC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2743  00E9AC  6AF8               	clrf	tblptru,c
  2744  00E9AE                     	endif
  2745  00E9AE                     	if	0	;tblptru may be non-zero
  2746  00E9AE                     	endif
  2747  00E9AE  0008               	tblrd		*
  2748  00E9B0  CFF5 F05B          	movff	tablat,vfpfcnvrt@c
  2749  00E9B4                     
  2750                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2751  00E9B4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2752  00E9B8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2753  00E9BC  2ADE               	incf	postinc2,f,c
  2754  00E9BE  0E00               	movlw	0
  2755  00E9C0  22DD               	addwfc	postdec2,f,c
  2756  00E9C2                     
  2757                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2758  00E9C2  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2759  00E9C6  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2760  00E9CA  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2761  00E9CE  0E04               	movlw	4
  2762  00E9D0  26DE               	addwf	postinc2,f,c
  2763  00E9D2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2764  00E9D6  0E00               	movlw	0
  2765  00E9D8  22DD               	addwfc	postdec2,f,c
  2766  00E9DA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2767  00E9DE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2768  00E9E2  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2769  00E9E6  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2770  00E9EA  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2771  00E9EE  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2772  00E9F2                     l6007:
  2773                           
  2774                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2775  00E9F2  C046  F03A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2776  00E9F6  C047  F03B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2777  00E9FA  C054  F03C         	movff	vfpfcnvrt@f,efgtoa@f
  2778  00E9FE  C055  F03D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2779  00EA02  C056  F03E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2780  00EA06  C057  F03F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2781  00EA0A  C05B  F040         	movff	vfpfcnvrt@c,efgtoa@c
  2782  00EA0E  EC57  F078         	call	_efgtoa	;wreg free
  2783  00EA12  C03A  F046         	movff	?_efgtoa,?_vfpfcnvrt
  2784  00EA16  C03B  F047         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2785  00EA1A  EFF6  F075         	goto	l1695
  2786  00EA1E                     l6011:
  2787                           
  2788                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2789  00EA1E  0E58               	movlw	low vfpfcnvrt@ct
  2790  00EA20  6E01               	movwf	strncmp@_l^0,c
  2791  00EA22  0E00               	movlw	high vfpfcnvrt@ct
  2792  00EA24  6E02               	movwf	(strncmp@_l+1)^0,c
  2793  00EA26  0EF2               	movlw	low STR_21
  2794  00EA28  6E03               	movwf	strncmp@_r^0,c
  2795  00EA2A  0EFF               	movlw	high STR_21
  2796  00EA2C  6E04               	movwf	(strncmp@_r+1)^0,c
  2797  00EA2E  0E00               	movlw	0
  2798  00EA30  6E06               	movwf	(strncmp@n+1)^0,c
  2799  00EA32  0E02               	movlw	2
  2800  00EA34  6E05               	movwf	strncmp@n^0,c
  2801  00EA36  ECAC  F068         	call	_strncmp	;wreg free
  2802  00EA3A  5001               	movf	?_strncmp^0,w,c
  2803  00EA3C  1002               	iorwf	(?_strncmp+1)^0,w,c
  2804  00EA3E  A4D8               	btfss	status,2,c
  2805  00EA40  EF24  F075         	goto	u5711
  2806  00EA44  EF26  F075         	goto	u5710
  2807  00EA48                     u5711:
  2808  00EA48  EFA3  F075         	goto	l6027
  2809  00EA4C                     u5710:
  2810  00EA4C                     
  2811                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2812  00EA4C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2813  00EA50  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2814  00EA54  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2815  00EA58  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2816  00EA5C  0E01               	movlw	1
  2817  00EA5E  264C               	addwf	??_vfpfcnvrt^0,f,c
  2818  00EA60  0E00               	movlw	0
  2819  00EA62  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2820  00EA64  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2821  00EA68  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2822  00EA6C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2823  00EA6C  6AF8               	clrf	tblptru,c
  2824  00EA6E                     	endif
  2825  00EA6E                     	if	0	;tblptru may be non-zero
  2826  00EA6E                     	endif
  2827  00EA6E  0008               	tblrd		*
  2828  00EA70  CFF5 F05B          	movff	tablat,vfpfcnvrt@c
  2829  00EA74  0EBF               	movlw	191
  2830  00EA76  6E4C               	movwf	??_vfpfcnvrt^0,c
  2831  00EA78  0EFF               	movlw	255
  2832  00EA7A  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  2833  00EA7C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2834  00EA80  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2835  00EA84  CFDE FFF6          	movff	postinc2,tblptrl
  2836  00EA88  CFDD FFF7          	movff	postdec2,tblptrh
  2837  00EA8C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2838  00EA8C  6AF8               	clrf	tblptru,c
  2839  00EA8E                     	endif
  2840  00EA8E                     	if	0	;tblptru may be non-zero
  2841  00EA8E                     	endif
  2842  00EA8E  0008               	tblrd		*
  2843  00EA90  50F5               	movf	tablat,w,c
  2844  00EA92  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  2845  00EA94  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  2846  00EA96  504C               	movf	??_vfpfcnvrt^0,w,c
  2847  00EA98  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2848  00EA9A  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2849  00EA9C  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2850  00EA9E  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2851  00EAA0  E10A               	bnz	u5720
  2852  00EAA2  0E1A               	movlw	26
  2853  00EAA4  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2854  00EAA6  A0D8               	btfss	status,0,c
  2855  00EAA8  EF58  F075         	goto	u5721
  2856  00EAAC  EF5B  F075         	goto	u5720
  2857  00EAB0                     u5721:
  2858  00EAB0  0E01               	movlw	1
  2859  00EAB2  EF5C  F075         	goto	u5730
  2860  00EAB6                     u5720:
  2861  00EAB6  0E00               	movlw	0
  2862  00EAB8                     u5730:
  2863  00EAB8  6E52               	movwf	_vfpfcnvrt$2213^0,c
  2864  00EABA  6A53               	clrf	(_vfpfcnvrt$2213+1)^0,c
  2865  00EABC  5052               	movf	_vfpfcnvrt$2213^0,w,c
  2866  00EABE  1053               	iorwf	(_vfpfcnvrt$2213+1)^0,w,c
  2867  00EAC0  B4D8               	btfsc	status,2,c
  2868  00EAC2  EF65  F075         	goto	u5741
  2869  00EAC6  EF67  F075         	goto	u5740
  2870  00EACA                     u5741:
  2871  00EACA  EF81  F075         	goto	l6021
  2872  00EACE                     u5740:
  2873  00EACE                     
  2874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2875  00EACE  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2876  00EAD2  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2877  00EAD6  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2878  00EADA  0E04               	movlw	4
  2879  00EADC  26DE               	addwf	postinc2,f,c
  2880  00EADE  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2881  00EAE2  0E00               	movlw	0
  2882  00EAE4  22DD               	addwfc	postdec2,f,c
  2883  00EAE6  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2884  00EAEA  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2885  00EAEE  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2886  00EAF2  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2887  00EAF6  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2888  00EAFA  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2889                           
  2890                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2891  00EAFE  EF99  F075         	goto	l1702
  2892  00EB02                     l6021:
  2893                           
  2894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2895  00EB02  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2896  00EB06  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2897  00EB0A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2898  00EB0E  0E04               	movlw	4
  2899  00EB10  26DE               	addwf	postinc2,f,c
  2900  00EB12  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2901  00EB16  0E00               	movlw	0
  2902  00EB18  22DD               	addwfc	postdec2,f,c
  2903  00EB1A  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2904  00EB1E  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2905  00EB22  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2906  00EB26  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2907  00EB2A  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2908  00EB2E  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2909  00EB32                     l1702:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2912  00EB32  0E02               	movlw	2
  2913  00EB34  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2914  00EB38  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2915  00EB3C  26DE               	addwf	postinc2,f,c
  2916  00EB3E  0E00               	movlw	0
  2917  00EB40  22DD               	addwfc	postdec2,f,c
  2918  00EB42  EFF9  F074         	goto	l6007
  2919  00EB46                     l6027:
  2920                           
  2921                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2922  00EB46  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2923  00EB4A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2924  00EB4E  CFDE FFF6          	movff	postinc2,tblptrl
  2925  00EB52  CFDD FFF7          	movff	postdec2,tblptrh
  2926  00EB56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2927  00EB56  6AF8               	clrf	tblptru,c
  2928  00EB58                     	endif
  2929  00EB58                     	if	0	;tblptru may be non-zero
  2930  00EB58                     	endif
  2931  00EB58  0008               	tblrd		*
  2932  00EB5A  50F5               	movf	tablat,w,c
  2933  00EB5C  0A25               	xorlw	37
  2934  00EB5E  A4D8               	btfss	status,2,c
  2935  00EB60  EFB4  F075         	goto	u5751
  2936  00EB64  EFB6  F075         	goto	u5750
  2937  00EB68                     u5751:
  2938  00EB68  EFCD  F075         	goto	l6037
  2939  00EB6C                     u5750:
  2940  00EB6C                     
  2941                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2942  00EB6C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2943  00EB70  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2944  00EB74  2ADE               	incf	postinc2,f,c
  2945  00EB76  0E00               	movlw	0
  2946  00EB78  22DD               	addwfc	postdec2,f,c
  2947  00EB7A                     
  2948                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2949  00EB7A  0E00               	movlw	0
  2950  00EB7C  6E02               	movwf	(fputc@c+1)^0,c
  2951  00EB7E  0E25               	movlw	37
  2952  00EB80  6E01               	movwf	fputc@c^0,c
  2953  00EB82  C046  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2954  00EB86  C047  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2955  00EB8A  EC47  F068         	call	_fputc	;wreg free
  2956  00EB8E                     l6033:
  2957                           
  2958                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2959  00EB8E  0E00               	movlw	0
  2960  00EB90  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  2961  00EB92  0E01               	movlw	1
  2962  00EB94  6E46               	movwf	?_vfpfcnvrt^0,c
  2963  00EB96  EFF6  F075         	goto	l1695
  2964  00EB9A                     l6037:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2967  00EB9A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2968  00EB9E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2969  00EBA2  2ADE               	incf	postinc2,f,c
  2970  00EBA4  0E00               	movlw	0
  2971  00EBA6  22DD               	addwfc	postdec2,f,c
  2972  00EBA8                     
  2973                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2974  00EBA8  0E00               	movlw	0
  2975  00EBAA  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  2976  00EBAC  0E00               	movlw	0
  2977  00EBAE  6E46               	movwf	?_vfpfcnvrt^0,c
  2978  00EBB0  EFF6  F075         	goto	l1695
  2979  00EBB4                     l6043:
  2980                           
  2981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2982  00EBB4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2983  00EBB8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2984  00EBBC  CFDE FFF6          	movff	postinc2,tblptrl
  2985  00EBC0  CFDD FFF7          	movff	postdec2,tblptrh
  2986  00EBC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2987  00EBC4  6AF8               	clrf	tblptru,c
  2988  00EBC6                     	endif
  2989  00EBC6                     	if	0	;tblptru may be non-zero
  2990  00EBC6                     	endif
  2991  00EBC6  0008               	tblrd		*
  2992  00EBC8  50F5               	movf	tablat,w,c
  2993  00EBCA  6E01               	movwf	fputc@c^0,c
  2994  00EBCC  6A02               	clrf	(fputc@c+1)^0,c
  2995  00EBCE  C046  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2996  00EBD2  C047  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2997  00EBD6  EC47  F068         	call	_fputc	;wreg free
  2998  00EBDA                     
  2999                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  3000  00EBDA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3001  00EBDE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3002  00EBE2  2ADE               	incf	postinc2,f,c
  3003  00EBE4  0E00               	movlw	0
  3004  00EBE6  22DD               	addwfc	postdec2,f,c
  3005  00EBE8  EFC7  F075         	goto	l6033
  3006  00EBEC                     l1695:
  3007  00EBEC  0012               	return		;funcret
  3008  00EBEE                     __end_of_vfpfcnvrt:
  3009                           	callstack 0
  3010                           
  3011 ;; *************** function _strncmp *****************
  3012 ;; Defined at:
  3013 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  3014 ;; Parameters:    Size  Location     Type
  3015 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  3016 ;;		 -> vfpfcnvrt@ct(3), 
  3017 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  3018 ;;		 -> STR_23(3), 
  3019 ;;  n               2    4[COMRAM] unsigned int 
  3020 ;; Auto vars:     Size  Location     Type
  3021 ;;  r               2    9[COMRAM] PTR const unsigned char 
  3022 ;;		 -> STR_23(3), 
  3023 ;;  l               2    7[COMRAM] PTR const unsigned char 
  3024 ;;		 -> vfpfcnvrt@ct(3), 
  3025 ;; Return value:  Size  Location     Type
  3026 ;;                  2    0[COMRAM] int 
  3027 ;; Registers used:
  3028 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  3029 ;; Tracked objects:
  3030 ;;		On entry : 0/0
  3031 ;;		On exit  : 0/0
  3032 ;;		Unchanged: 0/0
  3033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3034 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3035 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;Total ram usage:       11 bytes
  3039 ;; Hardware stack levels used: 1
  3040 ;; This function calls:
  3041 ;;		Nothing
  3042 ;; This function is called by:
  3043 ;;		_vfpfcnvrt
  3044 ;; This function uses a non-reentrant model
  3045 ;;
  3046                           
  3047                           	psect	text4
  3048  00D158                     __ptext4:
  3049                           	callstack 0
  3050  00D158                     _strncmp:
  3051                           	callstack 27
  3052  00D158  C001  F008         	movff	strncmp@_l,strncmp@l
  3053  00D15C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  3054  00D160  C003  F00A         	movff	strncmp@_r,strncmp@r
  3055  00D164  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  3056  00D168  0605               	decf	strncmp@n^0,f,c
  3057  00D16A  A0D8               	btfss	status,0,c
  3058  00D16C  0606               	decf	(strncmp@n+1)^0,f,c
  3059  00D16E  2805               	incf	strncmp@n^0,w,c
  3060  00D170  E106               	bnz	u5551
  3061  00D172  2806               	incf	(strncmp@n+1)^0,w,c
  3062  00D174  A4D8               	btfss	status,2,c
  3063  00D176  EFBF  F068         	goto	u5551
  3064  00D17A  EFC1  F068         	goto	u5550
  3065  00D17E                     u5551:
  3066  00D17E  EFCE  F068         	goto	l5939
  3067  00D182                     u5550:
  3068  00D182  0E00               	movlw	0
  3069  00D184  6E02               	movwf	(?_strncmp+1)^0,c
  3070  00D186  0E00               	movlw	0
  3071  00D188  6E01               	movwf	?_strncmp^0,c
  3072  00D18A  EF19  F069         	goto	l1823
  3073  00D18E                     l5937:
  3074  00D18E  4A08               	infsnz	strncmp@l^0,f,c
  3075  00D190  2A09               	incf	(strncmp@l+1)^0,f,c
  3076  00D192  4A0A               	infsnz	strncmp@r^0,f,c
  3077  00D194  2A0B               	incf	(strncmp@r+1)^0,f,c
  3078  00D196  0605               	decf	strncmp@n^0,f,c
  3079  00D198  A0D8               	btfss	status,0,c
  3080  00D19A  0606               	decf	(strncmp@n+1)^0,f,c
  3081  00D19C                     l5939:
  3082  00D19C  C008  FFD9         	movff	strncmp@l,fsr2l
  3083  00D1A0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3084  00D1A4  50DF               	movf	indf2,w,c
  3085  00D1A6  B4D8               	btfsc	status,2,c
  3086  00D1A8  EFD8  F068         	goto	u5561
  3087  00D1AC  EFDA  F068         	goto	u5560
  3088  00D1B0                     u5561:
  3089  00D1B0  EF07  F069         	goto	l5947
  3090  00D1B4                     u5560:
  3091  00D1B4  C00A  FFF6         	movff	strncmp@r,tblptrl
  3092  00D1B8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3093  00D1BC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3094  00D1BC  6AF8               	clrf	tblptru,c
  3095  00D1BE                     	endif
  3096  00D1BE                     	if	0	;tblptru may be non-zero
  3097  00D1BE                     	endif
  3098  00D1BE  0008               	tblrd		*
  3099  00D1C0  50F5               	movf	tablat,w,c
  3100  00D1C2  0900               	iorlw	0
  3101  00D1C4  B4D8               	btfsc	status,2,c
  3102  00D1C6  EFE7  F068         	goto	u5571
  3103  00D1CA  EFE9  F068         	goto	u5570
  3104  00D1CE                     u5571:
  3105  00D1CE  EF07  F069         	goto	l5947
  3106  00D1D2                     u5570:
  3107  00D1D2  5005               	movf	strncmp@n^0,w,c
  3108  00D1D4  1006               	iorwf	(strncmp@n+1)^0,w,c
  3109  00D1D6  B4D8               	btfsc	status,2,c
  3110  00D1D8  EFF0  F068         	goto	u5581
  3111  00D1DC  EFF2  F068         	goto	u5580
  3112  00D1E0                     u5581:
  3113  00D1E0  EF07  F069         	goto	l5947
  3114  00D1E4                     u5580:
  3115  00D1E4  C008  FFD9         	movff	strncmp@l,fsr2l
  3116  00D1E8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3117  00D1EC  50DF               	movf	indf2,w,c
  3118  00D1EE  6E07               	movwf	??_strncmp^0,c
  3119  00D1F0  C00A  FFF6         	movff	strncmp@r,tblptrl
  3120  00D1F4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3121  00D1F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3122  00D1F8  6AF8               	clrf	tblptru,c
  3123  00D1FA                     	endif
  3124  00D1FA                     	if	0	;tblptru may be non-zero
  3125  00D1FA                     	endif
  3126  00D1FA  0008               	tblrd		*
  3127  00D1FC  50F5               	movf	tablat,w,c
  3128  00D1FE  1807               	xorwf	??_strncmp^0,w,c
  3129  00D200  B4D8               	btfsc	status,2,c
  3130  00D202  EF05  F069         	goto	u5591
  3131  00D206  EF07  F069         	goto	u5590
  3132  00D20A                     u5591:
  3133  00D20A  EFC7  F068         	goto	l5937
  3134  00D20E                     u5590:
  3135  00D20E                     l5947:
  3136  00D20E  C008  FFD9         	movff	strncmp@l,fsr2l
  3137  00D212  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3138  00D216  50DF               	movf	indf2,w,c
  3139  00D218  6E07               	movwf	??_strncmp^0,c
  3140  00D21A  C00A  FFF6         	movff	strncmp@r,tblptrl
  3141  00D21E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3142  00D222                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3143  00D222  6AF8               	clrf	tblptru,c
  3144  00D224                     	endif
  3145  00D224                     	if	0	;tblptru may be non-zero
  3146  00D224                     	endif
  3147  00D224  0008               	tblrd		*
  3148  00D226  50F5               	movf	tablat,w,c
  3149  00D228  5C07               	subwf	??_strncmp^0,w,c
  3150  00D22A  6E01               	movwf	?_strncmp^0,c
  3151  00D22C  6A02               	clrf	(?_strncmp+1)^0,c
  3152  00D22E  A0D8               	btfss	status,0,c
  3153  00D230  0602               	decf	(?_strncmp+1)^0,f,c
  3154  00D232                     l1823:
  3155  00D232  0012               	return		;funcret
  3156  00D234                     __end_of_strncmp:
  3157                           	callstack 0
  3158                           
  3159 ;; *************** function _efgtoa *****************
  3160 ;; Defined at:
  3161 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3162 ;; Parameters:    Size  Location     Type
  3163 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  3164 ;;		 -> sprintf@f(6), 
  3165 ;;  f               4   59[COMRAM] PTR struct _IO_FILE
  3166 ;;  c               1   63[COMRAM] unsigned char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  u               4   52[BANK0 ] unsigned char 
  3169 ;;  g               4   44[BANK0 ] unsigned char 
  3170 ;;  l               4   38[BANK0 ] unsigned char 
  3171 ;;  h               4   34[BANK0 ] unsigned char 
  3172 ;;  ou              4   20[BANK0 ] unsigned char 
  3173 ;;  n               2   50[BANK0 ] int 
  3174 ;;  e               2   48[BANK0 ] int 
  3175 ;;  i               2   42[BANK0 ] int 
  3176 ;;  w               2   30[BANK0 ] int 
  3177 ;;  p               2   28[BANK0 ] int 
  3178 ;;  sign            2   26[BANK0 ] int 
  3179 ;;  d               2   24[BANK0 ] int 
  3180 ;;  m               2   18[BANK0 ] int 
  3181 ;;  ne              2   16[BANK0 ] int 
  3182 ;;  pp              2   14[BANK0 ] int 
  3183 ;;  t               2   12[BANK0 ] int 
  3184 ;;  mode            1   33[BANK0 ] unsigned char 
  3185 ;;  nmode           1   32[BANK0 ] unsigned char 
  3186 ;; Return value:  Size  Location     Type
  3187 ;;                  2   57[COMRAM] int 
  3188 ;; Registers used:
  3189 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3190 ;; Tracked objects:
  3191 ;;		On entry : 0/0
  3192 ;;		On exit  : 0/0
  3193 ;;		Unchanged: 0/0
  3194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3195 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3196 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3197 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;Total ram usage:       68 bytes
  3200 ;; Hardware stack levels used: 1
  3201 ;; Hardware stack levels required when called: 4
  3202 ;; This function calls:
  3203 ;;		___awdiv
  3204 ;;		___awmod
  3205 ;;		___fladd
  3206 ;;		___fldiv
  3207 ;;		___fleq
  3208 ;;		___flge
  3209 ;;		___flmul
  3210 ;;		___flneg
  3211 ;;		___flsub
  3212 ;;		___fltol
  3213 ;;		___fpclassifyf
  3214 ;;		_floorf
  3215 ;;		_isupper
  3216 ;;		_pad
  3217 ;;		_strcpy
  3218 ;;		_tolower
  3219 ;; This function is called by:
  3220 ;;		_vfpfcnvrt
  3221 ;; This function uses a non-reentrant model
  3222 ;;
  3223                           
  3224                           	psect	text5
  3225  00F0AE                     __ptext5:
  3226                           	callstack 0
  3227  00F0AE                     _efgtoa:
  3228                           	callstack 23
  3229  00F0AE                     
  3230                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3231  00F0AE  0E00               	movlw	0
  3232  00F0B0  0100               	movlb	0	; () banked
  3233  00F0B2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3234  00F0B4  0E00               	movlw	0
  3235  00F0B6  6F7A               	movwf	efgtoa@sign& (0+255),b
  3236  00F0B8                     
  3237                           ; BSR set to: 0
  3238                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3239  00F0B8  C03C  F08C         	movff	efgtoa@f,efgtoa@g
  3240  00F0BC  C03D  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3241  00F0C0  C03E  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3242  00F0C4  C03F  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3243  00F0C8                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3246  00F0C8  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3247  00F0CA  EF6B  F078         	goto	u4940
  3248  00F0CE  EF69  F078         	goto	u4941
  3249  00F0D2                     u4941:
  3250  00F0D2  EF81  F078         	goto	l5591
  3251  00F0D6                     u4940:
  3252  00F0D6                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3255  00F0D6  0E00               	movlw	0
  3256  00F0D8  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3257  00F0DA  0E01               	movlw	1
  3258  00F0DC  6F7A               	movwf	efgtoa@sign& (0+255),b
  3259  00F0DE                     
  3260                           ; BSR set to: 0
  3261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3262  00F0DE  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3263  00F0E2  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3264  00F0E6  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3265  00F0EA  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3266  00F0EE  ECEC  F061         	call	___flneg	;wreg free
  3267  00F0F2  C001  F08C         	movff	?___flneg,efgtoa@g
  3268  00F0F6  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3269  00F0FA  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3270  00F0FE  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3271  00F102                     l5591:
  3272                           
  3273                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3274  00F102  0E00               	movlw	0
  3275  00F104  0100               	movlb	0	; () banked
  3276  00F106  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3277  00F108  0E00               	movlw	0
  3278  00F10A  6F92               	movwf	efgtoa@n& (0+255),b
  3279  00F10C                     
  3280                           ; BSR set to: 0
  3281                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3282  00F10C  C0D0  F07E         	movff	_width,efgtoa@w
  3283  00F110  C0D1  F07F         	movff	_width+1,efgtoa@w+1
  3284  00F114                     
  3285                           ; BSR set to: 0
  3286                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3287  00F114  517A               	movf	efgtoa@sign& (0+255),w,b
  3288  00F116  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3289  00F118  A4D8               	btfss	status,2,c
  3290  00F11A  EF91  F078         	goto	u4951
  3291  00F11E  EF93  F078         	goto	u4950
  3292  00F122                     u4951:
  3293  00F122  EF9A  F078         	goto	l5599
  3294  00F126                     u4950:
  3295  00F126                     
  3296                           ; BSR set to: 0
  3297  00F126  A5D4               	btfss	_flags& (0+255),2,b
  3298  00F128  EF98  F078         	goto	u4961
  3299  00F12C  EF9A  F078         	goto	u4960
  3300  00F130                     u4961:
  3301  00F130  EFB4  F078         	goto	l5611
  3302  00F134                     u4960:
  3303  00F134                     l5599:
  3304                           
  3305                           ; BSR set to: 0
  3306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3307  00F134  517A               	movf	efgtoa@sign& (0+255),w,b
  3308  00F136  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3309  00F138  A4D8               	btfss	status,2,c
  3310  00F13A  EFA1  F078         	goto	u4971
  3311  00F13E  EFA3  F078         	goto	u4970
  3312  00F142                     u4971:
  3313  00F142  EFA9  F078         	goto	l5603
  3314  00F146                     u4970:
  3315  00F146                     
  3316                           ; BSR set to: 0
  3317  00F146  0E00               	movlw	0
  3318  00F148  6F61               	movwf	(_efgtoa$2183+1)& (0+255),b
  3319  00F14A  0E2B               	movlw	43
  3320  00F14C  6F60               	movwf	_efgtoa$2183& (0+255),b
  3321  00F14E  EFAD  F078         	goto	l5605
  3322  00F152                     l5603:
  3323                           
  3324                           ; BSR set to: 0
  3325  00F152  0E00               	movlw	0
  3326  00F154  6F61               	movwf	(_efgtoa$2183+1)& (0+255),b
  3327  00F156  0E2D               	movlw	45
  3328  00F158  6F60               	movwf	_efgtoa$2183& (0+255),b
  3329  00F15A                     l5605:
  3330                           
  3331                           ; BSR set to: 0
  3332  00F15A  C060  F174         	movff	_efgtoa$2183,_dbuf
  3333  00F15E                     
  3334                           ; BSR set to: 0
  3335                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3336  00F15E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3337  00F160  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3338  00F162                     
  3339                           ; BSR set to: 0
  3340                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3341  00F162  077E               	decf	efgtoa@w& (0+255),f,b
  3342  00F164  A0D8               	btfss	status,0,c
  3343  00F166  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3344  00F168                     l5611:
  3345                           
  3346                           ; BSR set to: 0
  3347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3348  00F168  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3349  00F16C  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3350  00F170  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3351  00F174  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3352  00F178  EC93  F069         	call	___fpclassifyf	;wreg free
  3353  00F17C  0401               	decf	?___fpclassifyf^0,w,c
  3354  00F17E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3355  00F180  A4D8               	btfss	status,2,c
  3356  00F182  EFC5  F078         	goto	u4981
  3357  00F186  EFC7  F078         	goto	u4980
  3358  00F18A                     u4981:
  3359  00F18A  EF1E  F079         	goto	l5629
  3360  00F18E                     u4980:
  3361  00F18E  0EBF               	movlw	191
  3362  00F190  6E41               	movwf	??_efgtoa^0,c
  3363  00F192  0EFF               	movlw	255
  3364  00F194  6E42               	movwf	(??_efgtoa+1)^0,c
  3365  00F196  5040               	movf	efgtoa@c^0,w,c
  3366  00F198  6E43               	movwf	(??_efgtoa+2)^0,c
  3367  00F19A  6A44               	clrf	(??_efgtoa+3)^0,c
  3368  00F19C  5041               	movf	??_efgtoa^0,w,c
  3369  00F19E  2643               	addwf	(??_efgtoa+2)^0,f,c
  3370  00F1A0  5042               	movf	(??_efgtoa+1)^0,w,c
  3371  00F1A2  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3372  00F1A4  5044               	movf	(??_efgtoa+3)^0,w,c
  3373  00F1A6  E10A               	bnz	u4990
  3374  00F1A8  0E1A               	movlw	26
  3375  00F1AA  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3376  00F1AC  A0D8               	btfss	status,0,c
  3377  00F1AE  EFDB  F078         	goto	u4991
  3378  00F1B2  EFDE  F078         	goto	u4990
  3379  00F1B6                     u4991:
  3380  00F1B6  0E01               	movlw	1
  3381  00F1B8  EFDF  F078         	goto	u5000
  3382  00F1BC                     u4990:
  3383  00F1BC  0E00               	movlw	0
  3384  00F1BE                     u5000:
  3385  00F1BE  0100               	movlb	0	; () banked
  3386  00F1C0  6F62               	movwf	_efgtoa$2184& (0+255),b
  3387  00F1C2  6B63               	clrf	(_efgtoa$2184+1)& (0+255),b
  3388  00F1C4                     
  3389                           ; BSR set to: 0
  3390  00F1C4  5162               	movf	_efgtoa$2184& (0+255),w,b
  3391  00F1C6  1163               	iorwf	(_efgtoa$2184+1)& (0+255),w,b
  3392  00F1C8  B4D8               	btfsc	status,2,c
  3393  00F1CA  EFE9  F078         	goto	u5011
  3394  00F1CE  EFEB  F078         	goto	u5010
  3395  00F1D2                     u5011:
  3396  00F1D2  EFF9  F078         	goto	l5621
  3397  00F1D6                     u5010:
  3398  00F1D6                     
  3399                           ; BSR set to: 0
  3400                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3401  00F1D6  0E74               	movlw	low _dbuf
  3402  00F1D8  2592               	addwf	efgtoa@n& (0+255),w,b
  3403  00F1DA  6E01               	movwf	strcpy@dest^0,c
  3404  00F1DC  0E01               	movlw	high _dbuf
  3405  00F1DE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3406  00F1E0  6E02               	movwf	(strcpy@dest+1)^0,c
  3407  00F1E2  0EE2               	movlw	low STR_13
  3408  00F1E4  6E03               	movwf	strcpy@src^0,c
  3409  00F1E6  0EFF               	movlw	high STR_13
  3410  00F1E8  6E04               	movwf	(strcpy@src+1)^0,c
  3411  00F1EA  EC58  F063         	call	_strcpy	;wreg free
  3412                           
  3413                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3414  00F1EE  EF05  F079         	goto	l5623
  3415  00F1F2                     l5621:
  3416                           
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3419  00F1F2  0E74               	movlw	low _dbuf
  3420  00F1F4  2592               	addwf	efgtoa@n& (0+255),w,b
  3421  00F1F6  6E01               	movwf	strcpy@dest^0,c
  3422  00F1F8  0E01               	movlw	high _dbuf
  3423  00F1FA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3424  00F1FC  6E02               	movwf	(strcpy@dest+1)^0,c
  3425  00F1FE  0EEA               	movlw	low STR_14
  3426  00F200  6E03               	movwf	strcpy@src^0,c
  3427  00F202  0EFF               	movlw	high STR_14
  3428  00F204  6E04               	movwf	(strcpy@src+1)^0,c
  3429  00F206  EC58  F063         	call	_strcpy	;wreg free
  3430  00F20A                     l5623:
  3431                           
  3432                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3433  00F20A  0100               	movlb	0	; () banked
  3434  00F20C  0EFD               	movlw	253
  3435  00F20E  277E               	addwf	efgtoa@w& (0+255),f,b
  3436  00F210  0EFF               	movlw	255
  3437  00F212  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3438  00F214                     l5625:
  3439                           
  3440                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3441  00F214  C03A  F011         	movff	efgtoa@fp,pad@fp
  3442  00F218  C03B  F012         	movff	efgtoa@fp+1,pad@fp+1
  3443  00F21C  0E74               	movlw	low _dbuf
  3444  00F21E  6E13               	movwf	pad@buf^0,c
  3445  00F220  0E01               	movlw	high _dbuf
  3446  00F222  6E14               	movwf	(pad@buf+1)^0,c
  3447  00F224  C07E  F015         	movff	efgtoa@w,pad@p
  3448  00F228  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  3449  00F22C  ECE4  F067         	call	_pad	;wreg free
  3450  00F230  C011  F03A         	movff	?_pad,?_efgtoa
  3451  00F234  C012  F03B         	movff	?_pad+1,?_efgtoa+1
  3452  00F238  EF82  F07E         	goto	l1603
  3453  00F23C                     l5629:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3456  00F23C  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3457  00F240  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3458  00F244  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3459  00F248  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3460  00F24C  EC93  F069         	call	___fpclassifyf	;wreg free
  3461  00F250  5001               	movf	?___fpclassifyf^0,w,c
  3462  00F252  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3463  00F254  A4D8               	btfss	status,2,c
  3464  00F256  EF2F  F079         	goto	u5021
  3465  00F25A  EF31  F079         	goto	u5020
  3466  00F25E                     u5021:
  3467  00F25E  EF71  F079         	goto	l5647
  3468  00F262                     u5020:
  3469  00F262  0EBF               	movlw	191
  3470  00F264  6E41               	movwf	??_efgtoa^0,c
  3471  00F266  0EFF               	movlw	255
  3472  00F268  6E42               	movwf	(??_efgtoa+1)^0,c
  3473  00F26A  5040               	movf	efgtoa@c^0,w,c
  3474  00F26C  6E43               	movwf	(??_efgtoa+2)^0,c
  3475  00F26E  6A44               	clrf	(??_efgtoa+3)^0,c
  3476  00F270  5041               	movf	??_efgtoa^0,w,c
  3477  00F272  2643               	addwf	(??_efgtoa+2)^0,f,c
  3478  00F274  5042               	movf	(??_efgtoa+1)^0,w,c
  3479  00F276  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3480  00F278  5044               	movf	(??_efgtoa+3)^0,w,c
  3481  00F27A  E10A               	bnz	u5030
  3482  00F27C  0E1A               	movlw	26
  3483  00F27E  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3484  00F280  A0D8               	btfss	status,0,c
  3485  00F282  EF45  F079         	goto	u5031
  3486  00F286  EF48  F079         	goto	u5030
  3487  00F28A                     u5031:
  3488  00F28A  0E01               	movlw	1
  3489  00F28C  EF49  F079         	goto	u5040
  3490  00F290                     u5030:
  3491  00F290  0E00               	movlw	0
  3492  00F292                     u5040:
  3493  00F292  0100               	movlb	0	; () banked
  3494  00F294  6F64               	movwf	_efgtoa$2189& (0+255),b
  3495  00F296  6B65               	clrf	(_efgtoa$2189+1)& (0+255),b
  3496  00F298                     
  3497                           ; BSR set to: 0
  3498  00F298  5164               	movf	_efgtoa$2189& (0+255),w,b
  3499  00F29A  1165               	iorwf	(_efgtoa$2189+1)& (0+255),w,b
  3500  00F29C  B4D8               	btfsc	status,2,c
  3501  00F29E  EF53  F079         	goto	u5051
  3502  00F2A2  EF55  F079         	goto	u5050
  3503  00F2A6                     u5051:
  3504  00F2A6  EF63  F079         	goto	l5639
  3505  00F2AA                     u5050:
  3506  00F2AA                     
  3507                           ; BSR set to: 0
  3508                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3509  00F2AA  0E74               	movlw	low _dbuf
  3510  00F2AC  2592               	addwf	efgtoa@n& (0+255),w,b
  3511  00F2AE  6E01               	movwf	strcpy@dest^0,c
  3512  00F2B0  0E01               	movlw	high _dbuf
  3513  00F2B2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3514  00F2B4  6E02               	movwf	(strcpy@dest+1)^0,c
  3515  00F2B6  0EE6               	movlw	low STR_17
  3516  00F2B8  6E03               	movwf	strcpy@src^0,c
  3517  00F2BA  0EFF               	movlw	high STR_17
  3518  00F2BC  6E04               	movwf	(strcpy@src+1)^0,c
  3519  00F2BE  EC58  F063         	call	_strcpy	;wreg free
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3522  00F2C2  EF05  F079         	goto	l5623
  3523  00F2C6                     l5639:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3527  00F2C6  0E74               	movlw	low _dbuf
  3528  00F2C8  2592               	addwf	efgtoa@n& (0+255),w,b
  3529  00F2CA  6E01               	movwf	strcpy@dest^0,c
  3530  00F2CC  0E01               	movlw	high _dbuf
  3531  00F2CE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3532  00F2D0  6E02               	movwf	(strcpy@dest+1)^0,c
  3533  00F2D2  0EEE               	movlw	low STR_18
  3534  00F2D4  6E03               	movwf	strcpy@src^0,c
  3535  00F2D6  0EFF               	movlw	high STR_18
  3536  00F2D8  6E04               	movwf	(strcpy@src+1)^0,c
  3537  00F2DA  EC58  F063         	call	_strcpy	;wreg free
  3538  00F2DE  EF05  F079         	goto	l5623
  3539  00F2E2                     l5647:
  3540                           
  3541                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3542  00F2E2  0E00               	movlw	0
  3543  00F2E4  0100               	movlb	0	; () banked
  3544  00F2E6  6F94               	movwf	efgtoa@u& (0+255),b
  3545  00F2E8  0E00               	movlw	0
  3546  00F2EA  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3547  00F2EC  0E80               	movlw	128
  3548  00F2EE  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3549  00F2F0  0E3F               	movlw	63
  3550  00F2F2  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3553  00F2F4  0E00               	movlw	0
  3554  00F2F6  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3555  00F2F8  0E00               	movlw	0
  3556  00F2FA  6F90               	movwf	efgtoa@e& (0+255),b
  3557  00F2FC                     
  3558                           ; BSR set to: 0
  3559                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3560  00F2FC  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3561  00F300  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3562  00F304  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3563  00F308  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3564  00F30C  0E00               	movlw	0
  3565  00F30E  6E05               	movwf	___fleq@ff2^0,c
  3566  00F310  0E00               	movlw	0
  3567  00F312  6E06               	movwf	(___fleq@ff2+1)^0,c
  3568  00F314  0E00               	movlw	0
  3569  00F316  6E07               	movwf	(___fleq@ff2+2)^0,c
  3570  00F318  0E00               	movlw	0
  3571  00F31A  6E08               	movwf	(___fleq@ff2+3)^0,c
  3572  00F31C  EC73  F066         	call	___fleq	;wreg free
  3573  00F320  B0D8               	btfsc	status,0,c
  3574  00F322  EF95  F079         	goto	u5061
  3575  00F326  EF97  F079         	goto	u5060
  3576  00F32A                     u5061:
  3577  00F32A  EF1A  F07A         	goto	l5665
  3578  00F32E                     u5060:
  3579  00F32E  EFB6  F079         	goto	l5657
  3580  00F332                     l5653:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3583  00F332  C094  F015         	movff	efgtoa@u,___flmul@b
  3584  00F336  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3585  00F33A  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3586  00F33E  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3587  00F342  0E00               	movlw	0
  3588  00F344  6E19               	movwf	___flmul@a^0,c
  3589  00F346  0E00               	movlw	0
  3590  00F348  6E1A               	movwf	(___flmul@a+1)^0,c
  3591  00F34A  0E20               	movlw	32
  3592  00F34C  6E1B               	movwf	(___flmul@a+2)^0,c
  3593  00F34E  0E41               	movlw	65
  3594  00F350  6E1C               	movwf	(___flmul@a+3)^0,c
  3595  00F352  ECA6  F071         	call	___flmul	;wreg free
  3596  00F356  C015  F094         	movff	?___flmul,efgtoa@u
  3597  00F35A  C016  F095         	movff	?___flmul+1,efgtoa@u+1
  3598  00F35E  C017  F096         	movff	?___flmul+2,efgtoa@u+2
  3599  00F362  C018  F097         	movff	?___flmul+3,efgtoa@u+3
  3600  00F366                     
  3601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3602  00F366  0100               	movlb	0	; () banked
  3603  00F368  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3604  00F36A  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3605  00F36C                     l5657:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3608  00F36C  C08C  F02E         	movff	efgtoa@g,___flge@ff1
  3609  00F370  C08D  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3610  00F374  C08E  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3611  00F378  C08F  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3612  00F37C  0E00               	movlw	0
  3613  00F37E  6E19               	movwf	___flmul@a^0,c
  3614  00F380  0E00               	movlw	0
  3615  00F382  6E1A               	movwf	(___flmul@a+1)^0,c
  3616  00F384  0E20               	movlw	32
  3617  00F386  6E1B               	movwf	(___flmul@a+2)^0,c
  3618  00F388  0E41               	movlw	65
  3619  00F38A  6E1C               	movwf	(___flmul@a+3)^0,c
  3620  00F38C  C094  F015         	movff	efgtoa@u,___flmul@b
  3621  00F390  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3622  00F394  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3623  00F398  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3624  00F39C  ECA6  F071         	call	___flmul	;wreg free
  3625  00F3A0  C015  F032         	movff	?___flmul,___flge@ff2
  3626  00F3A4  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  3627  00F3A8  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  3628  00F3AC  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  3629  00F3B0  EC14  F06B         	call	___flge	;wreg free
  3630  00F3B4  B0D8               	btfsc	status,0,c
  3631  00F3B6  EFDF  F079         	goto	u5071
  3632  00F3BA  EFE1  F079         	goto	u5070
  3633  00F3BE                     u5071:
  3634  00F3BE  EF99  F079         	goto	l5653
  3635  00F3C2                     u5070:
  3636  00F3C2  EF01  F07A         	goto	l5663
  3637  00F3C6                     l5659:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3640  00F3C6  C094  F001         	movff	efgtoa@u,___fldiv@b
  3641  00F3CA  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3642  00F3CE  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3643  00F3D2  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3644  00F3D6  0E00               	movlw	0
  3645  00F3D8  6E05               	movwf	___fldiv@a^0,c
  3646  00F3DA  0E00               	movlw	0
  3647  00F3DC  6E06               	movwf	(___fldiv@a+1)^0,c
  3648  00F3DE  0E20               	movlw	32
  3649  00F3E0  6E07               	movwf	(___fldiv@a+2)^0,c
  3650  00F3E2  0E41               	movlw	65
  3651  00F3E4  6E08               	movwf	(___fldiv@a+3)^0,c
  3652  00F3E6  ECD9  F06F         	call	___fldiv	;wreg free
  3653  00F3EA  C001  F094         	movff	?___fldiv,efgtoa@u
  3654  00F3EE  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3655  00F3F2  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3656  00F3F6  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3657  00F3FA                     
  3658                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3659  00F3FA  0100               	movlb	0	; () banked
  3660  00F3FC  0790               	decf	efgtoa@e& (0+255),f,b
  3661  00F3FE  A0D8               	btfss	status,0,c
  3662  00F400  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3663  00F402                     l5663:
  3664                           
  3665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3666  00F402  C08C  F02E         	movff	efgtoa@g,___flge@ff1
  3667  00F406  C08D  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3668  00F40A  C08E  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3669  00F40E  C08F  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3670  00F412  C094  F032         	movff	efgtoa@u,___flge@ff2
  3671  00F416  C095  F033         	movff	efgtoa@u+1,___flge@ff2+1
  3672  00F41A  C096  F034         	movff	efgtoa@u+2,___flge@ff2+2
  3673  00F41E  C097  F035         	movff	efgtoa@u+3,___flge@ff2+3
  3674  00F422  EC14  F06B         	call	___flge	;wreg free
  3675  00F426  A0D8               	btfss	status,0,c
  3676  00F428  EF18  F07A         	goto	u5081
  3677  00F42C  EF1A  F07A         	goto	u5080
  3678  00F430                     u5081:
  3679  00F430  EFE3  F079         	goto	l5659
  3680  00F434                     u5080:
  3681  00F434                     l5665:
  3682                           
  3683                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3684  00F434  C040  F007         	movff	efgtoa@c,tolower@c
  3685  00F438  6A08               	clrf	(tolower@c+1)^0,c
  3686  00F43A  EC87  F063         	call	_tolower	;wreg free
  3687  00F43E  5007               	movf	?_tolower^0,w,c
  3688  00F440  0100               	movlb	0	; () banked
  3689  00F442  6F81               	movwf	efgtoa@mode& (0+255),b
  3690  00F444                     
  3691                           ; BSR set to: 0
  3692                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3693  00F444  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3694  00F448                     
  3695                           ; BSR set to: 0
  3696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3697  00F448  0E67               	movlw	103
  3698  00F44A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3699  00F44C  A4D8               	btfss	status,2,c
  3700  00F44E  EF2B  F07A         	goto	u5091
  3701  00F452  EF2D  F07A         	goto	u5090
  3702  00F456                     u5091:
  3703  00F456  EF53  F07A         	goto	l5679
  3704  00F45A                     u5090:
  3705  00F45A                     
  3706                           ; BSR set to: 0
  3707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3708  00F45A  51D2               	movf	_prec& (0+255),w,b
  3709  00F45C  11D3               	iorwf	(_prec+1)& (0+255),w,b
  3710  00F45E  A4D8               	btfss	status,2,c
  3711  00F460  EF34  F07A         	goto	u5101
  3712  00F464  EF36  F07A         	goto	u5100
  3713  00F468                     u5101:
  3714  00F468  EF3A  F07A         	goto	l5675
  3715  00F46C                     u5100:
  3716  00F46C                     
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3719  00F46C  0E00               	movlw	0
  3720  00F46E  6FD3               	movwf	(_prec+1)& (0+255),b
  3721  00F470  0E01               	movlw	1
  3722  00F472  6FD2               	movwf	_prec& (0+255),b
  3723  00F474                     l5675:
  3724                           
  3725                           ; BSR set to: 0
  3726                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3727  00F474  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  3728  00F476  EF47  F07A         	goto	u5110
  3729  00F47A  51D3               	movf	(_prec+1)& (0+255),w,b
  3730  00F47C  E106               	bnz	u5111
  3731  00F47E  05D2               	decf	_prec& (0+255),w,b
  3732  00F480  B0D8               	btfsc	status,0,c
  3733  00F482  EF45  F07A         	goto	u5111
  3734  00F486  EF47  F07A         	goto	u5110
  3735  00F48A                     u5111:
  3736  00F48A  EF4D  F07A         	goto	l1621
  3737  00F48E                     u5110:
  3738  00F48E                     l5677:
  3739                           
  3740                           ; BSR set to: 0
  3741  00F48E  0E00               	movlw	0
  3742  00F490  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3743  00F492  0E06               	movlw	6
  3744  00F494  6F7C               	movwf	efgtoa@p& (0+255),b
  3745  00F496  EF5C  F07A         	goto	l5685
  3746  00F49A                     l1621:
  3747                           
  3748                           ; BSR set to: 0
  3749  00F49A  C0D2  F07C         	movff	_prec,efgtoa@p
  3750  00F49E  C0D3  F07D         	movff	_prec+1,efgtoa@p+1
  3751  00F4A2  EF5C  F07A         	goto	l5685
  3752  00F4A6                     l5679:
  3753                           
  3754                           ; BSR set to: 0
  3755                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3756  00F4A6  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  3757  00F4A8  EF58  F07A         	goto	u5121
  3758  00F4AC  EF5A  F07A         	goto	u5120
  3759  00F4B0                     u5121:
  3760  00F4B0  EF47  F07A         	goto	l5677
  3761  00F4B4                     u5120:
  3762  00F4B4  EF4D  F07A         	goto	l1621
  3763  00F4B8                     l5685:
  3764                           
  3765                           ; BSR set to: 0
  3766                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3767  00F4B8  0E67               	movlw	103
  3768  00F4BA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3769  00F4BC  A4D8               	btfss	status,2,c
  3770  00F4BE  EF63  F07A         	goto	u5131
  3771  00F4C2  EF65  F07A         	goto	u5130
  3772  00F4C6                     u5131:
  3773  00F4C6  EF94  F07A         	goto	l5695
  3774  00F4CA                     u5130:
  3775  00F4CA                     
  3776                           ; BSR set to: 0
  3777                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3778  00F4CA  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3779  00F4CC  EF73  F07A         	goto	u5140
  3780  00F4D0  0EFC               	movlw	252
  3781  00F4D2  5D90               	subwf	efgtoa@e& (0+255),w,b
  3782  00F4D4  0EFF               	movlw	255
  3783  00F4D6  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3784  00F4D8  A0D8               	btfss	status,0,c
  3785  00F4DA  EF71  F07A         	goto	u5141
  3786  00F4DE  EF73  F07A         	goto	u5140
  3787  00F4E2                     u5141:
  3788  00F4E2  EF92  F07A         	goto	l5693
  3789  00F4E6                     u5140:
  3790  00F4E6                     
  3791                           ; BSR set to: 0
  3792  00F4E6  0EFF               	movlw	255
  3793  00F4E8  6E41               	movwf	??_efgtoa^0,c
  3794  00F4EA  0EFF               	movlw	255
  3795  00F4EC  6E42               	movwf	(??_efgtoa+1)^0,c
  3796  00F4EE  C07C  F043         	movff	efgtoa@p,??_efgtoa+2
  3797  00F4F2  C07D  F044         	movff	efgtoa@p+1,??_efgtoa+3
  3798  00F4F6  5041               	movf	??_efgtoa^0,w,c
  3799  00F4F8  2643               	addwf	(??_efgtoa+2)^0,f,c
  3800  00F4FA  5042               	movf	(??_efgtoa+1)^0,w,c
  3801  00F4FC  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3802  00F4FE  5190               	movf	efgtoa@e& (0+255),w,b
  3803  00F500  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3804  00F502  5044               	movf	(??_efgtoa+3)^0,w,c
  3805  00F504  0A80               	xorlw	128
  3806  00F506  6E45               	movwf	(??_efgtoa+4)^0,c
  3807  00F508  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3808  00F50A  0A80               	xorlw	128
  3809  00F50C  5845               	subwfb	(??_efgtoa+4)^0,w,c
  3810  00F50E  A0D8               	btfss	status,0,c
  3811  00F510  EF8C  F07A         	goto	u5151
  3812  00F514  EF8E  F07A         	goto	u5150
  3813  00F518                     u5151:
  3814  00F518  EF92  F07A         	goto	l5693
  3815  00F51C                     u5150:
  3816  00F51C                     
  3817                           ; BSR set to: 0
  3818                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3819  00F51C  0E66               	movlw	102
  3820  00F51E  6F80               	movwf	efgtoa@nmode& (0+255),b
  3821                           
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3823  00F520  EF94  F07A         	goto	l5695
  3824  00F524                     l5693:
  3825                           
  3826                           ; BSR set to: 0
  3827                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3828  00F524  0E65               	movlw	101
  3829  00F526  6F80               	movwf	efgtoa@nmode& (0+255),b
  3830  00F528                     l5695:
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3834  00F528  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3835  00F52C  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3836  00F530                     
  3837                           ; BSR set to: 0
  3838                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3839  00F530  0E67               	movlw	103
  3840  00F532  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3841  00F534  A4D8               	btfss	status,2,c
  3842  00F536  EF9F  F07A         	goto	u5161
  3843  00F53A  EFA1  F07A         	goto	u5160
  3844  00F53E                     u5161:
  3845  00F53E  EFB1  F07A         	goto	l5703
  3846  00F542                     u5160:
  3847  00F542                     
  3848                           ; BSR set to: 0
  3849  00F542  0E66               	movlw	102
  3850  00F544  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3851  00F546  A4D8               	btfss	status,2,c
  3852  00F548  EFA8  F07A         	goto	u5171
  3853  00F54C  EFAA  F07A         	goto	u5170
  3854  00F550                     u5171:
  3855  00F550  EFB3  F07A         	goto	l5705
  3856  00F554                     u5170:
  3857  00F554                     
  3858                           ; BSR set to: 0
  3859  00F554  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3860  00F556  EFB1  F07A         	goto	u5180
  3861  00F55A  EFAF  F07A         	goto	u5181
  3862  00F55E                     u5181:
  3863  00F55E  EFB3  F07A         	goto	l5705
  3864  00F562                     u5180:
  3865  00F562                     l5703:
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3869  00F562  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3870  00F564  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3871  00F566                     l5705:
  3872                           
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3875  00F566  0E66               	movlw	102
  3876  00F568  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3877  00F56A  A4D8               	btfss	status,2,c
  3878  00F56C  EFBA  F07A         	goto	u5191
  3879  00F570  EFBC  F07A         	goto	u5190
  3880  00F574                     u5191:
  3881  00F574  EFDC  F07A         	goto	l5715
  3882  00F578                     u5190:
  3883  00F578                     
  3884                           ; BSR set to: 0
  3885                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3886  00F578  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3887  00F57A  EFC3  F07A         	goto	u5200
  3888  00F57E  EFC1  F07A         	goto	u5201
  3889  00F582                     u5201:
  3890  00F582  EFCF  F07A         	goto	l5711
  3891  00F586                     u5200:
  3892  00F586                     
  3893                           ; BSR set to: 0
  3894                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3895  00F586  0E00               	movlw	0
  3896  00F588  6F94               	movwf	efgtoa@u& (0+255),b
  3897  00F58A  0E00               	movlw	0
  3898  00F58C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3899  00F58E  0E80               	movlw	128
  3900  00F590  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3901  00F592  0E3F               	movlw	63
  3902  00F594  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3903                           
  3904                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3905  00F596  0E00               	movlw	0
  3906  00F598  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3907  00F59A  0E00               	movlw	0
  3908  00F59C  6F90               	movwf	efgtoa@e& (0+255),b
  3909  00F59E                     l5711:
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3913  00F59E  0E67               	movlw	103
  3914  00F5A0  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3915  00F5A2  B4D8               	btfsc	status,2,c
  3916  00F5A4  EFD6  F07A         	goto	u5211
  3917  00F5A8  EFD8  F07A         	goto	u5210
  3918  00F5AC                     u5211:
  3919  00F5AC  EFDC  F07A         	goto	l5715
  3920  00F5B0                     u5210:
  3921  00F5B0                     
  3922                           ; BSR set to: 0
  3923                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3924  00F5B0  5190               	movf	efgtoa@e& (0+255),w,b
  3925  00F5B2  2772               	addwf	efgtoa@m& (0+255),f,b
  3926  00F5B4  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3927  00F5B6  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3928  00F5B8                     l5715:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3932  00F5B8  0E00               	movlw	0
  3933  00F5BA  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3934  00F5BC  0E00               	movlw	0
  3935  00F5BE  6F8A               	movwf	efgtoa@i& (0+255),b
  3936  00F5C0                     
  3937                           ; BSR set to: 0
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3939  00F5C0  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3940  00F5C4  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3941  00F5C8  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3942  00F5CC  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3943  00F5D0                     
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3946  00F5D0  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3947  00F5D4  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3948  00F5D8  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3949  00F5DC  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3950                           
  3951                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3952  00F5E0  EF6D  F07B         	goto	l5729
  3953  00F5E4                     l5721:
  3954                           
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3957  00F5E4  C082  F001         	movff	efgtoa@h,___fldiv@b
  3958  00F5E8  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3959  00F5EC  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3960  00F5F0  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3961  00F5F4  C094  F005         	movff	efgtoa@u,___fldiv@a
  3962  00F5F8  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3963  00F5FC  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3964  00F600  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3965  00F604  ECD9  F06F         	call	___fldiv	;wreg free
  3966  00F608  C001  F01A         	movff	?___fldiv,floorf@x
  3967  00F60C  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3968  00F610  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3969  00F614  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3970  00F618  ECC0  F06D         	call	_floorf	;wreg free
  3971  00F61C  C01A  F086         	movff	?_floorf,efgtoa@l
  3972  00F620  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3973  00F624  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3974  00F628  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3975                           
  3976                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3977  00F62C  C086  F001         	movff	efgtoa@l,___fltol@f1
  3978  00F630  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3979  00F634  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3980  00F638  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3981  00F63C  EC96  F06B         	call	___fltol	;wreg free
  3982  00F640  C001  F078         	movff	?___fltol,efgtoa@d
  3983  00F644  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3984  00F648                     
  3985                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3986  00F648  C082  F02E         	movff	efgtoa@h,___flsub@b
  3987  00F64C  C083  F02F         	movff	efgtoa@h+1,___flsub@b+1
  3988  00F650  C084  F030         	movff	efgtoa@h+2,___flsub@b+2
  3989  00F654  C085  F031         	movff	efgtoa@h+3,___flsub@b+3
  3990  00F658  C094  F019         	movff	efgtoa@u,___flmul@a
  3991  00F65C  C095  F01A         	movff	efgtoa@u+1,___flmul@a+1
  3992  00F660  C096  F01B         	movff	efgtoa@u+2,___flmul@a+2
  3993  00F664  C097  F01C         	movff	efgtoa@u+3,___flmul@a+3
  3994  00F668  C086  F015         	movff	efgtoa@l,___flmul@b
  3995  00F66C  C087  F016         	movff	efgtoa@l+1,___flmul@b+1
  3996  00F670  C088  F017         	movff	efgtoa@l+2,___flmul@b+2
  3997  00F674  C089  F018         	movff	efgtoa@l+3,___flmul@b+3
  3998  00F678  ECA6  F071         	call	___flmul	;wreg free
  3999  00F67C  C015  F032         	movff	?___flmul,___flsub@a
  4000  00F680  C016  F033         	movff	?___flmul+1,___flsub@a+1
  4001  00F684  C017  F034         	movff	?___flmul+2,___flsub@a+2
  4002  00F688  C018  F035         	movff	?___flmul+3,___flsub@a+3
  4003  00F68C  EC88  F062         	call	___flsub	;wreg free
  4004  00F690  C02E  F082         	movff	?___flsub,efgtoa@h
  4005  00F694  C02F  F083         	movff	?___flsub+1,efgtoa@h+1
  4006  00F698  C030  F084         	movff	?___flsub+2,efgtoa@h+2
  4007  00F69C  C031  F085         	movff	?___flsub+3,efgtoa@h+3
  4008  00F6A0                     
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  4010  00F6A0  C094  F001         	movff	efgtoa@u,___fldiv@b
  4011  00F6A4  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4012  00F6A8  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4013  00F6AC  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4014  00F6B0  0E00               	movlw	0
  4015  00F6B2  6E05               	movwf	___fldiv@a^0,c
  4016  00F6B4  0E00               	movlw	0
  4017  00F6B6  6E06               	movwf	(___fldiv@a+1)^0,c
  4018  00F6B8  0E20               	movlw	32
  4019  00F6BA  6E07               	movwf	(___fldiv@a+2)^0,c
  4020  00F6BC  0E41               	movlw	65
  4021  00F6BE  6E08               	movwf	(___fldiv@a+3)^0,c
  4022  00F6C0  ECD9  F06F         	call	___fldiv	;wreg free
  4023  00F6C4  C001  F094         	movff	?___fldiv,efgtoa@u
  4024  00F6C8  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4025  00F6CC  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4026  00F6D0  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4027  00F6D4                     
  4028                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  4029  00F6D4  0100               	movlb	0	; () banked
  4030  00F6D6  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4031  00F6D8  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4032  00F6DA                     l5729:
  4033                           
  4034                           ; BSR set to: 0
  4035                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  4036  00F6DA  5172               	movf	efgtoa@m& (0+255),w,b
  4037  00F6DC  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4038  00F6DE  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4039  00F6E0  0A80               	xorlw	128
  4040  00F6E2  6E41               	movwf	??_efgtoa^0,c
  4041  00F6E4  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4042  00F6E6  0A80               	xorlw	128
  4043  00F6E8  5841               	subwfb	??_efgtoa^0,w,c
  4044  00F6EA  A0D8               	btfss	status,0,c
  4045  00F6EC  EF7A  F07B         	goto	u5221
  4046  00F6F0  EF7C  F07B         	goto	u5220
  4047  00F6F4                     u5221:
  4048  00F6F4  EFF2  F07A         	goto	l5721
  4049  00F6F8                     u5220:
  4050  00F6F8                     
  4051                           ; BSR set to: 0
  4052                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  4053  00F6F8  C094  F015         	movff	efgtoa@u,___flmul@b
  4054  00F6FC  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  4055  00F700  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  4056  00F704  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  4057  00F708  0E00               	movlw	0
  4058  00F70A  6E19               	movwf	___flmul@a^0,c
  4059  00F70C  0E00               	movlw	0
  4060  00F70E  6E1A               	movwf	(___flmul@a+1)^0,c
  4061  00F710  0EA0               	movlw	160
  4062  00F712  6E1B               	movwf	(___flmul@a+2)^0,c
  4063  00F714  0E40               	movlw	64
  4064  00F716  6E1C               	movwf	(___flmul@a+3)^0,c
  4065  00F718  ECA6  F071         	call	___flmul	;wreg free
  4066  00F71C  C015  F086         	movff	?___flmul,efgtoa@l
  4067  00F720  C016  F087         	movff	?___flmul+1,efgtoa@l+1
  4068  00F724  C017  F088         	movff	?___flmul+2,efgtoa@l+2
  4069  00F728  C018  F089         	movff	?___flmul+3,efgtoa@l+3
  4070  00F72C                     
  4071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  4072  00F72C  C082  F02E         	movff	efgtoa@h,___flge@ff1
  4073  00F730  C083  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  4074  00F734  C084  F030         	movff	efgtoa@h+2,___flge@ff1+2
  4075  00F738  C085  F031         	movff	efgtoa@h+3,___flge@ff1+3
  4076  00F73C  C086  F032         	movff	efgtoa@l,___flge@ff2
  4077  00F740  C087  F033         	movff	efgtoa@l+1,___flge@ff2+1
  4078  00F744  C088  F034         	movff	efgtoa@l+2,___flge@ff2+2
  4079  00F748  C089  F035         	movff	efgtoa@l+3,___flge@ff2+3
  4080  00F74C  EC14  F06B         	call	___flge	;wreg free
  4081  00F750  B0D8               	btfsc	status,0,c
  4082  00F752  EFAD  F07B         	goto	u5231
  4083  00F756  EFAF  F07B         	goto	u5230
  4084  00F75A                     u5231:
  4085  00F75A  EFBA  F07B         	goto	l5737
  4086  00F75E                     u5230:
  4087  00F75E                     
  4088                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  4089  00F75E  0E00               	movlw	0
  4090  00F760  0100               	movlb	0	; () banked
  4091  00F762  6F86               	movwf	efgtoa@l& (0+255),b
  4092  00F764  0E00               	movlw	0
  4093  00F766  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4094  00F768  0E00               	movlw	0
  4095  00F76A  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4096  00F76C  0E00               	movlw	0
  4097  00F76E  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4098                           
  4099                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4100  00F770  EFE3  F07B         	goto	l5743
  4101  00F774                     l5737:
  4102                           
  4103                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4104  00F774  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4105  00F778  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4106  00F77C  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4107  00F780  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4108  00F784  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4109  00F788  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4110  00F78C  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4111  00F790  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4112  00F794  EC73  F066         	call	___fleq	;wreg free
  4113  00F798  A0D8               	btfss	status,0,c
  4114  00F79A  EFD1  F07B         	goto	u5241
  4115  00F79E  EFD3  F07B         	goto	u5240
  4116  00F7A2                     u5241:
  4117  00F7A2  EFE3  F07B         	goto	l5743
  4118  00F7A6                     u5240:
  4119  00F7A6  0100               	movlb	0	; () banked
  4120  00F7A8  B178               	btfsc	efgtoa@d& (0+255),0,b
  4121  00F7AA  EFD9  F07B         	goto	u5251
  4122  00F7AE  EFDB  F07B         	goto	u5250
  4123  00F7B2                     u5251:
  4124  00F7B2  EFE3  F07B         	goto	l5743
  4125  00F7B6                     u5250:
  4126  00F7B6                     
  4127                           ; BSR set to: 0
  4128                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4129  00F7B6  0E00               	movlw	0
  4130  00F7B8  6F86               	movwf	efgtoa@l& (0+255),b
  4131  00F7BA  0E00               	movlw	0
  4132  00F7BC  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4133  00F7BE  0E00               	movlw	0
  4134  00F7C0  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4135  00F7C2  0E00               	movlw	0
  4136  00F7C4  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4137  00F7C6                     l5743:
  4138                           
  4139                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4140  00F7C6  C08C  F001         	movff	efgtoa@g,___fladd@b
  4141  00F7CA  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  4142  00F7CE  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  4143  00F7D2  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  4144  00F7D6  C086  F005         	movff	efgtoa@l,___fladd@a
  4145  00F7DA  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4146  00F7DE  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4147  00F7E2  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4148  00F7E6  ECF7  F075         	call	___fladd	;wreg free
  4149  00F7EA  C001  F082         	movff	?___fladd,efgtoa@h
  4150  00F7EE  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4151  00F7F2  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4152  00F7F6  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4153  00F7FA                     
  4154                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4155  00F7FA  C082  F02E         	movff	efgtoa@h,___flge@ff1
  4156  00F7FE  C083  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  4157  00F802  C084  F030         	movff	efgtoa@h+2,___flge@ff1+2
  4158  00F806  C085  F031         	movff	efgtoa@h+3,___flge@ff1+3
  4159  00F80A  0E00               	movlw	0
  4160  00F80C  6E19               	movwf	___flmul@a^0,c
  4161  00F80E  0E00               	movlw	0
  4162  00F810  6E1A               	movwf	(___flmul@a+1)^0,c
  4163  00F812  0E20               	movlw	32
  4164  00F814  6E1B               	movwf	(___flmul@a+2)^0,c
  4165  00F816  0E41               	movlw	65
  4166  00F818  6E1C               	movwf	(___flmul@a+3)^0,c
  4167  00F81A  C074  F015         	movff	efgtoa@ou,___flmul@b
  4168  00F81E  C075  F016         	movff	efgtoa@ou+1,___flmul@b+1
  4169  00F822  C076  F017         	movff	efgtoa@ou+2,___flmul@b+2
  4170  00F826  C077  F018         	movff	efgtoa@ou+3,___flmul@b+3
  4171  00F82A  ECA6  F071         	call	___flmul	;wreg free
  4172  00F82E  C015  F032         	movff	?___flmul,___flge@ff2
  4173  00F832  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  4174  00F836  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  4175  00F83A  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  4176  00F83E  EC14  F06B         	call	___flge	;wreg free
  4177  00F842  A0D8               	btfss	status,0,c
  4178  00F844  EF26  F07C         	goto	u5261
  4179  00F848  EF28  F07C         	goto	u5260
  4180  00F84C                     u5261:
  4181  00F84C  EF51  F07C         	goto	l5755
  4182  00F850                     u5260:
  4183  00F850                     
  4184                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4185  00F850  0100               	movlb	0	; () banked
  4186  00F852  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4187  00F854  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4188  00F856                     
  4189                           ; BSR set to: 0
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4191  00F856  C074  F015         	movff	efgtoa@ou,___flmul@b
  4192  00F85A  C075  F016         	movff	efgtoa@ou+1,___flmul@b+1
  4193  00F85E  C076  F017         	movff	efgtoa@ou+2,___flmul@b+2
  4194  00F862  C077  F018         	movff	efgtoa@ou+3,___flmul@b+3
  4195  00F866  0E00               	movlw	0
  4196  00F868  6E19               	movwf	___flmul@a^0,c
  4197  00F86A  0E00               	movlw	0
  4198  00F86C  6E1A               	movwf	(___flmul@a+1)^0,c
  4199  00F86E  0E20               	movlw	32
  4200  00F870  6E1B               	movwf	(___flmul@a+2)^0,c
  4201  00F872  0E41               	movlw	65
  4202  00F874  6E1C               	movwf	(___flmul@a+3)^0,c
  4203  00F876  ECA6  F071         	call	___flmul	;wreg free
  4204  00F87A  C015  F074         	movff	?___flmul,efgtoa@ou
  4205  00F87E  C016  F075         	movff	?___flmul+1,efgtoa@ou+1
  4206  00F882  C017  F076         	movff	?___flmul+2,efgtoa@ou+2
  4207  00F886  C018  F077         	movff	?___flmul+3,efgtoa@ou+3
  4208  00F88A                     
  4209                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4210  00F88A  0E66               	movlw	102
  4211  00F88C  0100               	movlb	0	; () banked
  4212  00F88E  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4213  00F890  A4D8               	btfss	status,2,c
  4214  00F892  EF4D  F07C         	goto	u5271
  4215  00F896  EF4F  F07C         	goto	u5270
  4216  00F89A                     u5271:
  4217  00F89A  EF51  F07C         	goto	l5755
  4218  00F89E                     u5270:
  4219  00F89E                     
  4220                           ; BSR set to: 0
  4221                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4222  00F89E  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4223  00F8A0  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4224  00F8A2                     l5755:
  4225                           
  4226                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4227  00F8A2  C074  F094         	movff	efgtoa@ou,efgtoa@u
  4228  00F8A6  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4229  00F8AA  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4230  00F8AE  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4231  00F8B2                     
  4232                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4233  00F8B2  0E65               	movlw	101
  4234  00F8B4  0100               	movlb	0	; () banked
  4235  00F8B6  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4236  00F8B8  B4D8               	btfsc	status,2,c
  4237  00F8BA  EF61  F07C         	goto	u5281
  4238  00F8BE  EF63  F07C         	goto	u5280
  4239  00F8C2                     u5281:
  4240  00F8C2  EF69  F07C         	goto	l5761
  4241  00F8C6                     u5280:
  4242  00F8C6                     
  4243                           ; BSR set to: 0
  4244  00F8C6  C090  F070         	movff	efgtoa@e,efgtoa@ne
  4245  00F8CA  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  4246  00F8CE  EF6D  F07C         	goto	l1649
  4247  00F8D2                     l5761:
  4248                           
  4249                           ; BSR set to: 0
  4250  00F8D2  0E00               	movlw	0
  4251  00F8D4  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  4252  00F8D6  0E00               	movlw	0
  4253  00F8D8  6F70               	movwf	efgtoa@ne& (0+255),b
  4254  00F8DA                     l1649:
  4255                           
  4256                           ; BSR set to: 0
  4257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4258  00F8DA  0E00               	movlw	0
  4259  00F8DC  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4260  00F8DE  0E00               	movlw	0
  4261  00F8E0  6F6E               	movwf	efgtoa@pp& (0+255),b
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4264  00F8E2  0E00               	movlw	0
  4265  00F8E4  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  4266  00F8E6  0E00               	movlw	0
  4267  00F8E8  6F6C               	movwf	efgtoa@t& (0+255),b
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4270  00F8EA  0E00               	movlw	0
  4271  00F8EC  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4272  00F8EE  0E00               	movlw	0
  4273  00F8F0  6F8A               	movwf	efgtoa@i& (0+255),b
  4274                           
  4275                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4276  00F8F2  EF68  F07D         	goto	l5811
  4277  00F8F6                     l5763:
  4278                           
  4279                           ; BSR set to: 0
  4280                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4281  00F8F6  C082  F001         	movff	efgtoa@h,___fldiv@b
  4282  00F8FA  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4283  00F8FE  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4284  00F902  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4285  00F906  C094  F005         	movff	efgtoa@u,___fldiv@a
  4286  00F90A  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4287  00F90E  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4288  00F912  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4289  00F916  ECD9  F06F         	call	___fldiv	;wreg free
  4290  00F91A  C001  F01A         	movff	?___fldiv,floorf@x
  4291  00F91E  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4292  00F922  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4293  00F926  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4294  00F92A  ECC0  F06D         	call	_floorf	;wreg free
  4295  00F92E  C01A  F086         	movff	?_floorf,efgtoa@l
  4296  00F932  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4297  00F936  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4298  00F93A  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4299                           
  4300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4301  00F93E  C086  F001         	movff	efgtoa@l,___fltol@f1
  4302  00F942  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4303  00F946  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4304  00F94A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4305  00F94E  EC96  F06B         	call	___fltol	;wreg free
  4306  00F952  C001  F078         	movff	?___fltol,efgtoa@d
  4307  00F956  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4308  00F95A                     
  4309                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4310  00F95A  0100               	movlb	0	; () banked
  4311  00F95C  B9D4               	btfsc	_flags& (0+255),4,b
  4312  00F95E  EFB3  F07C         	goto	u5291
  4313  00F962  EFB5  F07C         	goto	u5290
  4314  00F966                     u5291:
  4315  00F966  EFD2  F07C         	goto	l5775
  4316  00F96A                     u5290:
  4317  00F96A                     
  4318                           ; BSR set to: 0
  4319  00F96A  5178               	movf	efgtoa@d& (0+255),w,b
  4320  00F96C  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4321  00F96E  A4D8               	btfss	status,2,c
  4322  00F970  EFBC  F07C         	goto	u5301
  4323  00F974  EFBE  F07C         	goto	u5300
  4324  00F978                     u5301:
  4325  00F978  EFD2  F07C         	goto	l5775
  4326  00F97C                     u5300:
  4327  00F97C                     
  4328                           ; BSR set to: 0
  4329  00F97C  0E67               	movlw	103
  4330  00F97E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4331  00F980  A4D8               	btfss	status,2,c
  4332  00F982  EFC5  F07C         	goto	u5311
  4333  00F986  EFC7  F07C         	goto	u5310
  4334  00F98A                     u5311:
  4335  00F98A  EFD2  F07C         	goto	l5775
  4336  00F98E                     u5310:
  4337  00F98E                     
  4338                           ; BSR set to: 0
  4339  00F98E  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4340  00F990  EFCE  F07C         	goto	u5320
  4341  00F994  EFCC  F07C         	goto	u5321
  4342  00F998                     u5321:
  4343  00F998  EFD2  F07C         	goto	l5775
  4344  00F99C                     u5320:
  4345  00F99C                     
  4346                           ; BSR set to: 0
  4347                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4348  00F99C  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  4349  00F99E  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4352  00F9A0  EF1C  F07D         	goto	l5803
  4353  00F9A4                     l5775:
  4354                           
  4355                           ; BSR set to: 0
  4356                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4357  00F9A4  516E               	movf	efgtoa@pp& (0+255),w,b
  4358  00F9A6  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4359  00F9A8  A4D8               	btfss	status,2,c
  4360  00F9AA  EFD9  F07C         	goto	u5331
  4361  00F9AE  EFDB  F07C         	goto	u5330
  4362  00F9B2                     u5331:
  4363  00F9B2  EF05  F07D         	goto	l5795
  4364  00F9B6                     u5330:
  4365  00F9B6                     
  4366                           ; BSR set to: 0
  4367  00F9B6  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4368  00F9B8  EFE2  F07C         	goto	u5340
  4369  00F9BC  EFE0  F07C         	goto	u5341
  4370  00F9C0                     u5341:
  4371  00F9C0  EF05  F07D         	goto	l5795
  4372  00F9C4                     u5340:
  4373  00F9C4                     
  4374                           ; BSR set to: 0
  4375                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4376  00F9C4  0E74               	movlw	low _dbuf
  4377  00F9C6  2592               	addwf	efgtoa@n& (0+255),w,b
  4378  00F9C8  6ED9               	movwf	fsr2l,c
  4379  00F9CA  0E01               	movlw	high _dbuf
  4380  00F9CC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4381  00F9CE  6EDA               	movwf	fsr2h,c
  4382  00F9D0  0E2E               	movlw	46
  4383  00F9D2  6EDF               	movwf	indf2,c
  4384  00F9D4                     
  4385                           ; BSR set to: 0
  4386  00F9D4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4387  00F9D6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4388  00F9D8                     
  4389                           ; BSR set to: 0
  4390                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4391  00F9D8  077E               	decf	efgtoa@w& (0+255),f,b
  4392  00F9DA  A0D8               	btfss	status,0,c
  4393  00F9DC  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4394  00F9DE                     
  4395                           ; BSR set to: 0
  4396                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4397  00F9DE  0E00               	movlw	0
  4398  00F9E0  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4399  00F9E2  0E01               	movlw	1
  4400  00F9E4  6F6E               	movwf	efgtoa@pp& (0+255),b
  4401  00F9E6  EF05  F07D         	goto	l5795
  4402  00F9EA                     l5787:
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4406  00F9EA  0E74               	movlw	low _dbuf
  4407  00F9EC  2592               	addwf	efgtoa@n& (0+255),w,b
  4408  00F9EE  6ED9               	movwf	fsr2l,c
  4409  00F9F0  0E01               	movlw	high _dbuf
  4410  00F9F2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4411  00F9F4  6EDA               	movwf	fsr2h,c
  4412  00F9F6  0E30               	movlw	48
  4413  00F9F8  6EDF               	movwf	indf2,c
  4414  00F9FA                     
  4415                           ; BSR set to: 0
  4416  00F9FA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4417  00F9FC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4418  00F9FE                     
  4419                           ; BSR set to: 0
  4420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4421  00F9FE  077E               	decf	efgtoa@w& (0+255),f,b
  4422  00FA00  A0D8               	btfss	status,0,c
  4423  00FA02  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4424  00FA04                     
  4425                           ; BSR set to: 0
  4426                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4427  00FA04  076C               	decf	efgtoa@t& (0+255),f,b
  4428  00FA06  A0D8               	btfss	status,0,c
  4429  00FA08  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  4430  00FA0A                     l5795:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4434  00FA0A  516C               	movf	efgtoa@t& (0+255),w,b
  4435  00FA0C  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4436  00FA0E  A4D8               	btfss	status,2,c
  4437  00FA10  EF0C  F07D         	goto	u5351
  4438  00FA14  EF0E  F07D         	goto	u5350
  4439  00FA18                     u5351:
  4440  00FA18  EFF5  F07C         	goto	l5787
  4441  00FA1C                     u5350:
  4442  00FA1C                     
  4443                           ; BSR set to: 0
  4444                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4445  00FA1C  0E74               	movlw	low _dbuf
  4446  00FA1E  2592               	addwf	efgtoa@n& (0+255),w,b
  4447  00FA20  6ED9               	movwf	fsr2l,c
  4448  00FA22  0E01               	movlw	high _dbuf
  4449  00FA24  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4450  00FA26  6EDA               	movwf	fsr2h,c
  4451  00FA28  5178               	movf	efgtoa@d& (0+255),w,b
  4452  00FA2A  0F30               	addlw	48
  4453  00FA2C  6EDF               	movwf	indf2,c
  4454  00FA2E                     
  4455                           ; BSR set to: 0
  4456  00FA2E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4457  00FA30  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4458  00FA32                     
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4461  00FA32  077E               	decf	efgtoa@w& (0+255),f,b
  4462  00FA34  A0D8               	btfss	status,0,c
  4463  00FA36  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4464  00FA38                     l5803:
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4468  00FA38  C082  F02E         	movff	efgtoa@h,___flsub@b
  4469  00FA3C  C083  F02F         	movff	efgtoa@h+1,___flsub@b+1
  4470  00FA40  C084  F030         	movff	efgtoa@h+2,___flsub@b+2
  4471  00FA44  C085  F031         	movff	efgtoa@h+3,___flsub@b+3
  4472  00FA48  C094  F019         	movff	efgtoa@u,___flmul@a
  4473  00FA4C  C095  F01A         	movff	efgtoa@u+1,___flmul@a+1
  4474  00FA50  C096  F01B         	movff	efgtoa@u+2,___flmul@a+2
  4475  00FA54  C097  F01C         	movff	efgtoa@u+3,___flmul@a+3
  4476  00FA58  C086  F015         	movff	efgtoa@l,___flmul@b
  4477  00FA5C  C087  F016         	movff	efgtoa@l+1,___flmul@b+1
  4478  00FA60  C088  F017         	movff	efgtoa@l+2,___flmul@b+2
  4479  00FA64  C089  F018         	movff	efgtoa@l+3,___flmul@b+3
  4480  00FA68  ECA6  F071         	call	___flmul	;wreg free
  4481  00FA6C  C015  F032         	movff	?___flmul,___flsub@a
  4482  00FA70  C016  F033         	movff	?___flmul+1,___flsub@a+1
  4483  00FA74  C017  F034         	movff	?___flmul+2,___flsub@a+2
  4484  00FA78  C018  F035         	movff	?___flmul+3,___flsub@a+3
  4485  00FA7C  EC88  F062         	call	___flsub	;wreg free
  4486  00FA80  C02E  F082         	movff	?___flsub,efgtoa@h
  4487  00FA84  C02F  F083         	movff	?___flsub+1,efgtoa@h+1
  4488  00FA88  C030  F084         	movff	?___flsub+2,efgtoa@h+2
  4489  00FA8C  C031  F085         	movff	?___flsub+3,efgtoa@h+3
  4490  00FA90                     
  4491                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4492  00FA90  C094  F001         	movff	efgtoa@u,___fldiv@b
  4493  00FA94  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4494  00FA98  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4495  00FA9C  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4496  00FAA0  0E00               	movlw	0
  4497  00FAA2  6E05               	movwf	___fldiv@a^0,c
  4498  00FAA4  0E00               	movlw	0
  4499  00FAA6  6E06               	movwf	(___fldiv@a+1)^0,c
  4500  00FAA8  0E20               	movlw	32
  4501  00FAAA  6E07               	movwf	(___fldiv@a+2)^0,c
  4502  00FAAC  0E41               	movlw	65
  4503  00FAAE  6E08               	movwf	(___fldiv@a+3)^0,c
  4504  00FAB0  ECD9  F06F         	call	___fldiv	;wreg free
  4505  00FAB4  C001  F094         	movff	?___fldiv,efgtoa@u
  4506  00FAB8  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4507  00FABC  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4508  00FAC0  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4509  00FAC4                     
  4510                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4511  00FAC4  0100               	movlb	0	; () banked
  4512  00FAC6  0770               	decf	efgtoa@ne& (0+255),f,b
  4513  00FAC8  A0D8               	btfss	status,0,c
  4514  00FACA  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4515  00FACC                     
  4516                           ; BSR set to: 0
  4517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4518  00FACC  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4519  00FACE  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4520  00FAD0                     l5811:
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4524  00FAD0  5172               	movf	efgtoa@m& (0+255),w,b
  4525  00FAD2  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4526  00FAD4  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4527  00FAD6  0A80               	xorlw	128
  4528  00FAD8  6E41               	movwf	??_efgtoa^0,c
  4529  00FADA  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4530  00FADC  0A80               	xorlw	128
  4531  00FADE  5841               	subwfb	??_efgtoa^0,w,c
  4532  00FAE0  B0D8               	btfsc	status,0,c
  4533  00FAE2  EF75  F07D         	goto	u5361
  4534  00FAE6  EF77  F07D         	goto	u5360
  4535  00FAEA                     u5361:
  4536  00FAEA  EF85  F07D         	goto	l5815
  4537  00FAEE                     u5360:
  4538  00FAEE                     
  4539                           ; BSR set to: 0
  4540  00FAEE  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4541  00FAF0  EF83  F07D         	goto	u5371
  4542  00FAF4  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4543  00FAF6  E109               	bnz	u5370
  4544  00FAF8  0E4B               	movlw	75
  4545  00FAFA  5D92               	subwf	efgtoa@n& (0+255),w,b
  4546  00FAFC  A0D8               	btfss	status,0,c
  4547  00FAFE  EF83  F07D         	goto	u5371
  4548  00FB02  EF85  F07D         	goto	u5370
  4549  00FB06                     u5371:
  4550  00FB06  EF7B  F07C         	goto	l5763
  4551  00FB0A                     u5370:
  4552  00FB0A                     l5815:
  4553                           
  4554                           ; BSR set to: 0
  4555                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4556  00FB0A  516E               	movf	efgtoa@pp& (0+255),w,b
  4557  00FB0C  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4558  00FB0E  A4D8               	btfss	status,2,c
  4559  00FB10  EF8C  F07D         	goto	u5381
  4560  00FB14  EF8E  F07D         	goto	u5380
  4561  00FB18                     u5381:
  4562  00FB18  EF9F  F07D         	goto	l5823
  4563  00FB1C                     u5380:
  4564  00FB1C                     
  4565                           ; BSR set to: 0
  4566  00FB1C  A9D4               	btfss	_flags& (0+255),4,b
  4567  00FB1E  EF93  F07D         	goto	u5391
  4568  00FB22  EF95  F07D         	goto	u5390
  4569  00FB26                     u5391:
  4570  00FB26  EF9F  F07D         	goto	l5823
  4571  00FB2A                     u5390:
  4572  00FB2A                     
  4573                           ; BSR set to: 0
  4574                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4575  00FB2A  0E74               	movlw	low _dbuf
  4576  00FB2C  2592               	addwf	efgtoa@n& (0+255),w,b
  4577  00FB2E  6ED9               	movwf	fsr2l,c
  4578  00FB30  0E01               	movlw	high _dbuf
  4579  00FB32  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4580  00FB34  6EDA               	movwf	fsr2h,c
  4581  00FB36  0E2E               	movlw	46
  4582  00FB38  6EDF               	movwf	indf2,c
  4583  00FB3A                     
  4584                           ; BSR set to: 0
  4585  00FB3A  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4586  00FB3C  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4587  00FB3E                     l5823:
  4588                           
  4589                           ; BSR set to: 0
  4590                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4591  00FB3E  0E74               	movlw	low _dbuf
  4592  00FB40  2592               	addwf	efgtoa@n& (0+255),w,b
  4593  00FB42  6ED9               	movwf	fsr2l,c
  4594  00FB44  0E01               	movlw	high _dbuf
  4595  00FB46  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4596  00FB48  6EDA               	movwf	fsr2h,c
  4597  00FB4A  0E00               	movlw	0
  4598  00FB4C  6EDF               	movwf	indf2,c
  4599  00FB4E                     
  4600                           ; BSR set to: 0
  4601                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4602  00FB4E  0E65               	movlw	101
  4603  00FB50  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4604  00FB52  A4D8               	btfss	status,2,c
  4605  00FB54  EFAE  F07D         	goto	u5401
  4606  00FB58  EFB0  F07D         	goto	u5400
  4607  00FB5C                     u5401:
  4608  00FB5C  EF0A  F079         	goto	l5625
  4609  00FB60                     u5400:
  4610  00FB60                     
  4611                           ; BSR set to: 0
  4612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4613  00FB60  0E00               	movlw	0
  4614  00FB62  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4615  00FB64  0E4F               	movlw	79
  4616  00FB66  6F8A               	movwf	efgtoa@i& (0+255),b
  4617  00FB68                     
  4618                           ; BSR set to: 0
  4619                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4620  00FB68  0E74               	movlw	low _dbuf
  4621  00FB6A  258A               	addwf	efgtoa@i& (0+255),w,b
  4622  00FB6C  6ED9               	movwf	fsr2l,c
  4623  00FB6E  0E01               	movlw	high _dbuf
  4624  00FB70  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4625  00FB72  6EDA               	movwf	fsr2h,c
  4626  00FB74  0E00               	movlw	0
  4627  00FB76  6EDF               	movwf	indf2,c
  4628  00FB78                     
  4629                           ; BSR set to: 0
  4630                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4631  00FB78  0E00               	movlw	0
  4632  00FB7A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4633  00FB7C  0E00               	movlw	0
  4634  00FB7E  6F7A               	movwf	efgtoa@sign& (0+255),b
  4635  00FB80                     
  4636                           ; BSR set to: 0
  4637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4638  00FB80  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4639  00FB82  EFC7  F07D         	goto	u5410
  4640  00FB86  EFC5  F07D         	goto	u5411
  4641  00FB8A                     u5411:
  4642  00FB8A  EFCF  F07D         	goto	l5839
  4643  00FB8E                     u5410:
  4644  00FB8E                     
  4645                           ; BSR set to: 0
  4646                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4647  00FB8E  0E00               	movlw	0
  4648  00FB90  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4649  00FB92  0E01               	movlw	1
  4650  00FB94  6F7A               	movwf	efgtoa@sign& (0+255),b
  4651  00FB96                     
  4652                           ; BSR set to: 0
  4653                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4654  00FB96  6D90               	negf	efgtoa@e& (0+255),b
  4655  00FB98  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4656  00FB9A  B0D8               	btfsc	status,0,c
  4657  00FB9C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4658  00FB9E                     l5839:
  4659                           
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4662  00FB9E  0E00               	movlw	0
  4663  00FBA0  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4664  00FBA2  0E02               	movlw	2
  4665  00FBA4  6F7C               	movwf	efgtoa@p& (0+255),b
  4666                           
  4667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4668  00FBA6  EF00  F07E         	goto	l5851
  4669  00FBAA                     l5841:
  4670                           
  4671                           ; BSR set to: 0
  4672                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4673  00FBAA  078A               	decf	efgtoa@i& (0+255),f,b
  4674  00FBAC  A0D8               	btfss	status,0,c
  4675  00FBAE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4676  00FBB0                     
  4677                           ; BSR set to: 0
  4678                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4679  00FBB0  0E74               	movlw	low _dbuf
  4680  00FBB2  258A               	addwf	efgtoa@i& (0+255),w,b
  4681  00FBB4  6ED9               	movwf	fsr2l,c
  4682  00FBB6  0E01               	movlw	high _dbuf
  4683  00FBB8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4684  00FBBA  6EDA               	movwf	fsr2h,c
  4685  00FBBC  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4686  00FBC0  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4687  00FBC4  0E00               	movlw	0
  4688  00FBC6  6E04               	movwf	(___awmod@divisor+1)^0,c
  4689  00FBC8  0E0A               	movlw	10
  4690  00FBCA  6E03               	movwf	___awmod@divisor^0,c
  4691  00FBCC  ECC8  F066         	call	___awmod	;wreg free
  4692  00FBD0  5001               	movf	?___awmod^0,w,c
  4693  00FBD2  0F30               	addlw	48
  4694  00FBD4  6EDF               	movwf	indf2,c
  4695  00FBD6                     
  4696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4697  00FBD6  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4698  00FBDA  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4699  00FBDE  0E00               	movlw	0
  4700  00FBE0  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4701  00FBE2  0E0A               	movlw	10
  4702  00FBE4  6E03               	movwf	___awdiv@divisor^0,c
  4703  00FBE6  EC82  F067         	call	___awdiv	;wreg free
  4704  00FBEA  C001  F090         	movff	?___awdiv,efgtoa@e
  4705  00FBEE  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4706  00FBF2                     
  4707                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4708  00FBF2  0100               	movlb	0	; () banked
  4709  00FBF4  077C               	decf	efgtoa@p& (0+255),f,b
  4710  00FBF6  A0D8               	btfss	status,0,c
  4711  00FBF8  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4712  00FBFA                     
  4713                           ; BSR set to: 0
  4714                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4715  00FBFA  077E               	decf	efgtoa@w& (0+255),f,b
  4716  00FBFC  A0D8               	btfss	status,0,c
  4717  00FBFE  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4718  00FC00                     l5851:
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4722  00FC00  5190               	movf	efgtoa@e& (0+255),w,b
  4723  00FC02  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4724  00FC04  A4D8               	btfss	status,2,c
  4725  00FC06  EF07  F07E         	goto	u5421
  4726  00FC0A  EF09  F07E         	goto	u5420
  4727  00FC0E                     u5421:
  4728  00FC0E  EFD5  F07D         	goto	l5841
  4729  00FC12                     u5420:
  4730  00FC12                     
  4731                           ; BSR set to: 0
  4732  00FC12  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4733  00FC14  EF16  F07E         	goto	u5430
  4734  00FC18  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4735  00FC1A  E106               	bnz	u5431
  4736  00FC1C  057C               	decf	efgtoa@p& (0+255),w,b
  4737  00FC1E  B0D8               	btfsc	status,0,c
  4738  00FC20  EF14  F07E         	goto	u5431
  4739  00FC24  EF16  F07E         	goto	u5430
  4740  00FC28                     u5431:
  4741  00FC28  EFD5  F07D         	goto	l5841
  4742  00FC2C                     u5430:
  4743  00FC2C                     
  4744                           ; BSR set to: 0
  4745                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4746  00FC2C  078A               	decf	efgtoa@i& (0+255),f,b
  4747  00FC2E  A0D8               	btfss	status,0,c
  4748  00FC30  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4749  00FC32                     
  4750                           ; BSR set to: 0
  4751                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4752  00FC32  517A               	movf	efgtoa@sign& (0+255),w,b
  4753  00FC34  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4754  00FC36  A4D8               	btfss	status,2,c
  4755  00FC38  EF20  F07E         	goto	u5441
  4756  00FC3C  EF22  F07E         	goto	u5440
  4757  00FC40                     u5441:
  4758  00FC40  EF28  F07E         	goto	l5861
  4759  00FC44                     u5440:
  4760  00FC44                     
  4761                           ; BSR set to: 0
  4762  00FC44  0E00               	movlw	0
  4763  00FC46  6F67               	movwf	(_efgtoa$2193+1)& (0+255),b
  4764  00FC48  0E2B               	movlw	43
  4765  00FC4A  6F66               	movwf	_efgtoa$2193& (0+255),b
  4766  00FC4C  EF2C  F07E         	goto	l5863
  4767  00FC50                     l5861:
  4768                           
  4769                           ; BSR set to: 0
  4770  00FC50  0E00               	movlw	0
  4771  00FC52  6F67               	movwf	(_efgtoa$2193+1)& (0+255),b
  4772  00FC54  0E2D               	movlw	45
  4773  00FC56  6F66               	movwf	_efgtoa$2193& (0+255),b
  4774  00FC58                     l5863:
  4775                           
  4776                           ; BSR set to: 0
  4777  00FC58  0E74               	movlw	low _dbuf
  4778  00FC5A  258A               	addwf	efgtoa@i& (0+255),w,b
  4779  00FC5C  6ED9               	movwf	fsr2l,c
  4780  00FC5E  0E01               	movlw	high _dbuf
  4781  00FC60  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4782  00FC62  6EDA               	movwf	fsr2h,c
  4783  00FC64  C066  FFDF         	movff	_efgtoa$2193,indf2
  4784  00FC68                     
  4785                           ; BSR set to: 0
  4786                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4787  00FC68  077E               	decf	efgtoa@w& (0+255),f,b
  4788  00FC6A  A0D8               	btfss	status,0,c
  4789  00FC6C  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4790  00FC6E                     
  4791                           ; BSR set to: 0
  4792                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4793  00FC6E  078A               	decf	efgtoa@i& (0+255),f,b
  4794  00FC70  A0D8               	btfss	status,0,c
  4795  00FC72  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4796  00FC74                     
  4797                           ; BSR set to: 0
  4798  00FC74  0EBF               	movlw	191
  4799  00FC76  6E41               	movwf	??_efgtoa^0,c
  4800  00FC78  0EFF               	movlw	255
  4801  00FC7A  6E42               	movwf	(??_efgtoa+1)^0,c
  4802  00FC7C  5040               	movf	efgtoa@c^0,w,c
  4803  00FC7E  6E43               	movwf	(??_efgtoa+2)^0,c
  4804  00FC80  6A44               	clrf	(??_efgtoa+3)^0,c
  4805  00FC82  5041               	movf	??_efgtoa^0,w,c
  4806  00FC84  2643               	addwf	(??_efgtoa+2)^0,f,c
  4807  00FC86  5042               	movf	(??_efgtoa+1)^0,w,c
  4808  00FC88  2244               	addwfc	(??_efgtoa+3)^0,f,c
  4809  00FC8A  5044               	movf	(??_efgtoa+3)^0,w,c
  4810  00FC8C  E10A               	bnz	u5450
  4811  00FC8E  0E1A               	movlw	26
  4812  00FC90  5C43               	subwf	(??_efgtoa+2)^0,w,c
  4813  00FC92  A0D8               	btfss	status,0,c
  4814  00FC94  EF4E  F07E         	goto	u5451
  4815  00FC98  EF51  F07E         	goto	u5450
  4816  00FC9C                     u5451:
  4817  00FC9C  0E01               	movlw	1
  4818  00FC9E  EF52  F07E         	goto	u5460
  4819  00FCA2                     u5450:
  4820  00FCA2  0E00               	movlw	0
  4821  00FCA4                     u5460:
  4822  00FCA4  6F6A               	movwf	_efgtoa$2195& (0+255),b
  4823  00FCA6  6B6B               	clrf	(_efgtoa$2195+1)& (0+255),b
  4824  00FCA8                     
  4825                           ; BSR set to: 0
  4826  00FCA8  516A               	movf	_efgtoa$2195& (0+255),w,b
  4827  00FCAA  116B               	iorwf	(_efgtoa$2195+1)& (0+255),w,b
  4828  00FCAC  A4D8               	btfss	status,2,c
  4829  00FCAE  EF5B  F07E         	goto	u5471
  4830  00FCB2  EF5D  F07E         	goto	u5470
  4831  00FCB6                     u5471:
  4832  00FCB6  EF63  F07E         	goto	l5877
  4833  00FCBA                     u5470:
  4834  00FCBA                     
  4835                           ; BSR set to: 0
  4836  00FCBA  0E00               	movlw	0
  4837  00FCBC  6F69               	movwf	(_efgtoa$2194+1)& (0+255),b
  4838  00FCBE  0E65               	movlw	101
  4839  00FCC0  6F68               	movwf	_efgtoa$2194& (0+255),b
  4840  00FCC2  EF67  F07E         	goto	l5879
  4841  00FCC6                     l5877:
  4842                           
  4843                           ; BSR set to: 0
  4844  00FCC6  0E00               	movlw	0
  4845  00FCC8  6F69               	movwf	(_efgtoa$2194+1)& (0+255),b
  4846  00FCCA  0E45               	movlw	69
  4847  00FCCC  6F68               	movwf	_efgtoa$2194& (0+255),b
  4848  00FCCE                     l5879:
  4849                           
  4850                           ; BSR set to: 0
  4851  00FCCE  0E74               	movlw	low _dbuf
  4852  00FCD0  258A               	addwf	efgtoa@i& (0+255),w,b
  4853  00FCD2  6ED9               	movwf	fsr2l,c
  4854  00FCD4  0E01               	movlw	high _dbuf
  4855  00FCD6  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4856  00FCD8  6EDA               	movwf	fsr2h,c
  4857  00FCDA  C068  FFDF         	movff	_efgtoa$2194,indf2
  4858  00FCDE                     
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4861  00FCDE  077E               	decf	efgtoa@w& (0+255),f,b
  4862  00FCE0  A0D8               	btfss	status,0,c
  4863  00FCE2  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4864  00FCE4                     
  4865                           ; BSR set to: 0
  4866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4867  00FCE4  0E74               	movlw	low _dbuf
  4868  00FCE6  2592               	addwf	efgtoa@n& (0+255),w,b
  4869  00FCE8  6E01               	movwf	strcpy@dest^0,c
  4870  00FCEA  0E01               	movlw	high _dbuf
  4871  00FCEC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4872  00FCEE  6E02               	movwf	(strcpy@dest+1)^0,c
  4873  00FCF0  0E74               	movlw	low _dbuf
  4874  00FCF2  258A               	addwf	efgtoa@i& (0+255),w,b
  4875  00FCF4  6E03               	movwf	strcpy@src^0,c
  4876  00FCF6  0E01               	movlw	high _dbuf
  4877  00FCF8  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4878  00FCFA  6E04               	movwf	(strcpy@src+1)^0,c
  4879  00FCFC  EC58  F063         	call	_strcpy	;wreg free
  4880  00FD00  EF0A  F079         	goto	l5625
  4881  00FD04                     l1603:
  4882  00FD04  0012               	return		;funcret
  4883  00FD06                     __end_of_efgtoa:
  4884                           	callstack 0
  4885                           
  4886 ;; *************** function _tolower *****************
  4887 ;; Defined at:
  4888 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4889 ;; Parameters:    Size  Location     Type
  4890 ;;  c               2    6[COMRAM] int 
  4891 ;; Auto vars:     Size  Location     Type
  4892 ;;		None
  4893 ;; Return value:  Size  Location     Type
  4894 ;;                  2    6[COMRAM] int 
  4895 ;; Registers used:
  4896 ;;		wreg, status,2, status,0
  4897 ;; Tracked objects:
  4898 ;;		On entry : 0/0
  4899 ;;		On exit  : 0/0
  4900 ;;		Unchanged: 0/0
  4901 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4902 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4903 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4904 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4905 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4906 ;;Total ram usage:        8 bytes
  4907 ;; Hardware stack levels used: 1
  4908 ;; Hardware stack levels required when called: 1
  4909 ;; This function calls:
  4910 ;;		_isupper
  4911 ;; This function is called by:
  4912 ;;		_efgtoa
  4913 ;;		_vfpfcnvrt
  4914 ;; This function uses a non-reentrant model
  4915 ;;
  4916                           
  4917                           	psect	text6
  4918  00C70E                     __ptext6:
  4919                           	callstack 0
  4920  00C70E                     _tolower:
  4921                           	callstack 26
  4922  00C70E  0EBF               	movlw	191
  4923  00C710  6E09               	movwf	??_tolower^0,c
  4924  00C712  0EFF               	movlw	255
  4925  00C714  6E0A               	movwf	(??_tolower+1)^0,c
  4926  00C716  C007  F00B         	movff	tolower@c,??_tolower+2
  4927  00C71A  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4928  00C71E  5009               	movf	??_tolower^0,w,c
  4929  00C720  260B               	addwf	(??_tolower+2)^0,f,c
  4930  00C722  500A               	movf	(??_tolower+1)^0,w,c
  4931  00C724  220C               	addwfc	(??_tolower+3)^0,f,c
  4932  00C726  500C               	movf	(??_tolower+3)^0,w,c
  4933  00C728  E10A               	bnz	u4750
  4934  00C72A  0E1A               	movlw	26
  4935  00C72C  5C0B               	subwf	(??_tolower+2)^0,w,c
  4936  00C72E  A0D8               	btfss	status,0,c
  4937  00C730  EF9C  F063         	goto	u4751
  4938  00C734  EF9F  F063         	goto	u4750
  4939  00C738                     u4751:
  4940  00C738  0E01               	movlw	1
  4941  00C73A  EFA0  F063         	goto	u4760
  4942  00C73E                     u4750:
  4943  00C73E  0E00               	movlw	0
  4944  00C740                     u4760:
  4945  00C740  6E0D               	movwf	_tolower$2341^0,c
  4946  00C742  6A0E               	clrf	(_tolower$2341+1)^0,c
  4947  00C744  500D               	movf	_tolower$2341^0,w,c
  4948  00C746  100E               	iorwf	(_tolower$2341+1)^0,w,c
  4949  00C748  B4D8               	btfsc	status,2,c
  4950  00C74A  EFA9  F063         	goto	u4771
  4951  00C74E  EFAB  F063         	goto	u4770
  4952  00C752                     u4771:
  4953  00C752  EFB2  F063         	goto	l1833
  4954  00C756                     u4770:
  4955  00C756  0E20               	movlw	32
  4956  00C758  1007               	iorwf	tolower@c^0,w,c
  4957  00C75A  6E07               	movwf	?_tolower^0,c
  4958  00C75C  5008               	movf	(tolower@c+1)^0,w,c
  4959  00C75E  6E08               	movwf	(?_tolower+1)^0,c
  4960  00C760  EFB6  F063         	goto	l1838
  4961  00C764                     l1833:
  4962  00C764  C007  F007         	movff	tolower@c,?_tolower
  4963  00C768  C008  F008         	movff	tolower@c+1,?_tolower+1
  4964  00C76C                     l1838:
  4965  00C76C  0012               	return		;funcret
  4966  00C76E                     __end_of_tolower:
  4967                           	callstack 0
  4968                           
  4969 ;; *************** function _isupper *****************
  4970 ;; Defined at:
  4971 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4972 ;; Parameters:    Size  Location     Type
  4973 ;;  c               2    0[COMRAM] int 
  4974 ;; Auto vars:     Size  Location     Type
  4975 ;;		None
  4976 ;; Return value:  Size  Location     Type
  4977 ;;                  2    0[COMRAM] int 
  4978 ;; Registers used:
  4979 ;;		wreg, status,2, status,0
  4980 ;; Tracked objects:
  4981 ;;		On entry : 0/0
  4982 ;;		On exit  : 0/0
  4983 ;;		Unchanged: 0/0
  4984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4985 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4987 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4988 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4989 ;;Total ram usage:        6 bytes
  4990 ;; Hardware stack levels used: 1
  4991 ;; This function calls:
  4992 ;;		Nothing
  4993 ;; This function is called by:
  4994 ;;		_efgtoa
  4995 ;;		_vfpfcnvrt
  4996 ;;		_tolower
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text7
  5001  00C410                     __ptext7:
  5002                           	callstack 0
  5003  00C410                     _isupper:
  5004                           	callstack 26
  5005  00C410  0EBF               	movlw	191
  5006  00C412  6E03               	movwf	??_isupper^0,c
  5007  00C414  0EFF               	movlw	255
  5008  00C416  6E04               	movwf	(??_isupper+1)^0,c
  5009  00C418  C001  F005         	movff	isupper@c,??_isupper+2
  5010  00C41C  C002  F006         	movff	isupper@c+1,??_isupper+3
  5011  00C420  5003               	movf	??_isupper^0,w,c
  5012  00C422  2605               	addwf	(??_isupper+2)^0,f,c
  5013  00C424  5004               	movf	(??_isupper+1)^0,w,c
  5014  00C426  2206               	addwfc	(??_isupper+3)^0,f,c
  5015  00C428  5006               	movf	(??_isupper+3)^0,w,c
  5016  00C42A  E10A               	bnz	u3880
  5017  00C42C  0E1A               	movlw	26
  5018  00C42E  5C05               	subwf	(??_isupper+2)^0,w,c
  5019  00C430  A0D8               	btfss	status,0,c
  5020  00C432  EF1D  F062         	goto	u3881
  5021  00C436  EF20  F062         	goto	u3880
  5022  00C43A                     u3881:
  5023  00C43A  0E01               	movlw	1
  5024  00C43C  EF21  F062         	goto	u3890
  5025  00C440                     u3880:
  5026  00C440  0E00               	movlw	0
  5027  00C442                     u3890:
  5028  00C442  6E01               	movwf	?_isupper^0,c
  5029  00C444  6A02               	clrf	(?_isupper+1)^0,c
  5030  00C446  0012               	return		;funcret
  5031  00C448                     __end_of_isupper:
  5032                           	callstack 0
  5033                           
  5034 ;; *************** function _strcpy *****************
  5035 ;; Defined at:
  5036 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5039 ;;		 -> dbuf(80), 
  5040 ;;  src             2    2[COMRAM] PTR const unsigned char 
  5041 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  5042 ;;		 -> dbuf(80), 
  5043 ;; Auto vars:     Size  Location     Type
  5044 ;;  d               2    8[COMRAM] PTR unsigned char 
  5045 ;;		 -> dbuf(80), 
  5046 ;;  s               2    6[COMRAM] PTR const unsigned char 
  5047 ;;		 -> STR_18(4), STR_17(4), STR_14(4), STR_13(4), 
  5048 ;;		 -> dbuf(80), 
  5049 ;; Return value:  Size  Location     Type
  5050 ;;                  2    0[COMRAM] PTR unsigned char 
  5051 ;; Registers used:
  5052 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5053 ;; Tracked objects:
  5054 ;;		On entry : 0/0
  5055 ;;		On exit  : 0/0
  5056 ;;		Unchanged: 0/0
  5057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5058 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5059 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5060 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5061 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5062 ;;Total ram usage:       10 bytes
  5063 ;; Hardware stack levels used: 1
  5064 ;; This function calls:
  5065 ;;		Nothing
  5066 ;; This function is called by:
  5067 ;;		_efgtoa
  5068 ;; This function uses a non-reentrant model
  5069 ;;
  5070                           
  5071                           	psect	text8
  5072  00C6B0                     __ptext8:
  5073                           	callstack 0
  5074  00C6B0                     _strcpy:
  5075                           	callstack 26
  5076  00C6B0  C003  F007         	movff	strcpy@src,strcpy@s
  5077  00C6B4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  5078  00C6B8  C001  F009         	movff	strcpy@dest,strcpy@d
  5079  00C6BC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  5080  00C6C0                     l5513:
  5081  00C6C0  5007               	movf	strcpy@s^0,w,c
  5082  00C6C2  6E05               	movwf	??_strcpy^0,c
  5083  00C6C4  5008               	movf	(strcpy@s+1)^0,w,c
  5084  00C6C6  6E06               	movwf	(??_strcpy+1)^0,c
  5085  00C6C8  4A07               	infsnz	strcpy@s^0,f,c
  5086  00C6CA  2A08               	incf	(strcpy@s+1)^0,f,c
  5087  00C6CC  C005  FFF6         	movff	??_strcpy,tblptrl
  5088  00C6D0  C006  FFF7         	movff	??_strcpy+1,tblptrh
  5089  00C6D4  0E00               	movlw	low (__mediumconst shr (0+16))
  5090  00C6D6  6EF8               	movwf	tblptru,c
  5091  00C6D8  C009  FFD9         	movff	strcpy@d,fsr2l
  5092  00C6DC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5093  00C6E0  4A09               	infsnz	strcpy@d^0,f,c
  5094  00C6E2  2A0A               	incf	(strcpy@d+1)^0,f,c
  5095  00C6E4  0E0E               	movlw	(high __ramtop+-1)
  5096  00C6E6  64F7               	cpfsgt	tblptrh,c
  5097  00C6E8  D003               	bra	u4737
  5098  00C6EA  0008               	tblrd		*
  5099  00C6EC  50F5               	movf	tablat,w,c
  5100  00C6EE  D005               	bra	u4730
  5101  00C6F0                     u4737:
  5102  00C6F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  5103  00C6F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  5104  00C6F8  50EF               	movf	indf0,w,c
  5105  00C6FA                     u4730:
  5106  00C6FA  6EDF               	movwf	indf2,c
  5107  00C6FC  50DF               	movf	indf2,w,c
  5108  00C6FE  A4D8               	btfss	status,2,c
  5109  00C700  EF84  F063         	goto	u4741
  5110  00C704  EF86  F063         	goto	u4740
  5111  00C708                     u4741:
  5112  00C708  EF60  F063         	goto	l5513
  5113  00C70C                     u4740:
  5114  00C70C  0012               	return		;funcret
  5115  00C70E                     __end_of_strcpy:
  5116                           	callstack 0
  5117                           
  5118 ;; *************** function _pad *****************
  5119 ;; Defined at:
  5120 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5121 ;; Parameters:    Size  Location     Type
  5122 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5123 ;;		 -> sprintf@f(6), 
  5124 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5125 ;;		 -> dbuf(80), 
  5126 ;;  p               2   20[COMRAM] int 
  5127 ;; Auto vars:     Size  Location     Type
  5128 ;;  w               2   25[COMRAM] int 
  5129 ;;  i               2   23[COMRAM] int 
  5130 ;; Return value:  Size  Location     Type
  5131 ;;                  2   16[COMRAM] int 
  5132 ;; Registers used:
  5133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5134 ;; Tracked objects:
  5135 ;;		On entry : 0/0
  5136 ;;		On exit  : 0/0
  5137 ;;		Unchanged: 0/0
  5138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5139 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5140 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5141 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5142 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5143 ;;Total ram usage:       11 bytes
  5144 ;; Hardware stack levels used: 1
  5145 ;; Hardware stack levels required when called: 3
  5146 ;; This function calls:
  5147 ;;		_fputc
  5148 ;;		_fputs
  5149 ;;		_strlen
  5150 ;; This function is called by:
  5151 ;;		_efgtoa
  5152 ;; This function uses a non-reentrant model
  5153 ;;
  5154                           
  5155                           	psect	text9
  5156  00CFC8                     __ptext9:
  5157                           	callstack 0
  5158  00CFC8                     _pad:
  5159                           	callstack 23
  5160  00CFC8                     
  5161                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5162  00CFC8  0100               	movlb	0	; () banked
  5163  00CFCA  A1D4               	btfss	_flags& (0+255),0,b
  5164  00CFCC  EFEA  F067         	goto	u4621
  5165  00CFD0  EFEC  F067         	goto	u4620
  5166  00CFD4                     u4621:
  5167  00CFD4  EFF6  F067         	goto	l5471
  5168  00CFD8                     u4620:
  5169  00CFD8                     
  5170                           ; BSR set to: 0
  5171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5172  00CFD8  C013  F00A         	movff	pad@buf,fputs@s
  5173  00CFDC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5174  00CFE0  C011  F00C         	movff	pad@fp,fputs@fp
  5175  00CFE4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5176  00CFE8  EC66  F062         	call	_fputs	;wreg free
  5177  00CFEC                     l5471:
  5178                           
  5179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5180  00CFEC  BE16               	btfsc	(pad@p+1)^0,7,c
  5181  00CFEE  EFFB  F067         	goto	u4631
  5182  00CFF2  EFFD  F067         	goto	u4630
  5183  00CFF6                     u4631:
  5184  00CFF6  EF03  F068         	goto	l5475
  5185  00CFFA                     u4630:
  5186  00CFFA  C015  F01A         	movff	pad@p,pad@w
  5187  00CFFE  C016  F01B         	movff	pad@p+1,pad@w+1
  5188  00D002  EF07  F068         	goto	l1580
  5189  00D006                     l5475:
  5190  00D006  0E00               	movlw	0
  5191  00D008  6E1B               	movwf	(pad@w+1)^0,c
  5192  00D00A  0E00               	movlw	0
  5193  00D00C  6E1A               	movwf	pad@w^0,c
  5194  00D00E                     l1580:
  5195                           
  5196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5197  00D00E  0E00               	movlw	0
  5198  00D010  6E19               	movwf	(pad@i+1)^0,c
  5199  00D012  0E00               	movlw	0
  5200  00D014  6E18               	movwf	pad@i^0,c
  5201                           
  5202                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5203  00D016  EF19  F068         	goto	l5481
  5204  00D01A                     l5477:
  5205                           
  5206                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5207  00D01A  0E00               	movlw	0
  5208  00D01C  6E02               	movwf	(fputc@c+1)^0,c
  5209  00D01E  0E20               	movlw	32
  5210  00D020  6E01               	movwf	fputc@c^0,c
  5211  00D022  C011  F003         	movff	pad@fp,fputc@fp
  5212  00D026  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5213  00D02A  EC47  F068         	call	_fputc	;wreg free
  5214  00D02E                     
  5215                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5216  00D02E  4A18               	infsnz	pad@i^0,f,c
  5217  00D030  2A19               	incf	(pad@i+1)^0,f,c
  5218  00D032                     l5481:
  5219                           
  5220                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5221  00D032  501A               	movf	pad@w^0,w,c
  5222  00D034  5C18               	subwf	pad@i^0,w,c
  5223  00D036  5019               	movf	(pad@i+1)^0,w,c
  5224  00D038  0A80               	xorlw	128
  5225  00D03A  6E17               	movwf	??_pad^0,c
  5226  00D03C  501B               	movf	(pad@w+1)^0,w,c
  5227  00D03E  0A80               	xorlw	128
  5228  00D040  5817               	subwfb	??_pad^0,w,c
  5229  00D042  A0D8               	btfss	status,0,c
  5230  00D044  EF26  F068         	goto	u4641
  5231  00D048  EF28  F068         	goto	u4640
  5232  00D04C                     u4641:
  5233  00D04C  EF0D  F068         	goto	l5477
  5234  00D050                     u4640:
  5235  00D050                     
  5236                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5237  00D050  0100               	movlb	0	; () banked
  5238  00D052  B1D4               	btfsc	_flags& (0+255),0,b
  5239  00D054  EF2E  F068         	goto	u4651
  5240  00D058  EF30  F068         	goto	u4650
  5241  00D05C                     u4651:
  5242  00D05C  EF3A  F068         	goto	l5485
  5243  00D060                     u4650:
  5244  00D060                     
  5245                           ; BSR set to: 0
  5246                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5247  00D060  C013  F00A         	movff	pad@buf,fputs@s
  5248  00D064  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5249  00D068  C011  F00C         	movff	pad@fp,fputs@fp
  5250  00D06C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5251  00D070  EC66  F062         	call	_fputs	;wreg free
  5252  00D074                     l5485:
  5253                           
  5254                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5255  00D074  C013  F001         	movff	pad@buf,strlen@s
  5256  00D078  C014  F002         	movff	pad@buf+1,strlen@s+1
  5257  00D07C  ECB5  F061         	call	_strlen	;wreg free
  5258  00D080  501A               	movf	pad@w^0,w,c
  5259  00D082  2401               	addwf	?_strlen^0,w,c
  5260  00D084  6E11               	movwf	?_pad^0,c
  5261  00D086  501B               	movf	(pad@w+1)^0,w,c
  5262  00D088  2002               	addwfc	(?_strlen+1)^0,w,c
  5263  00D08A  6E12               	movwf	(?_pad+1)^0,c
  5264  00D08C  0012               	return		;funcret
  5265  00D08E                     __end_of_pad:
  5266                           	callstack 0
  5267                           
  5268 ;; *************** function _strlen *****************
  5269 ;; Defined at:
  5270 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5271 ;; Parameters:    Size  Location     Type
  5272 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5273 ;;		 -> dbuf(80), 
  5274 ;; Auto vars:     Size  Location     Type
  5275 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5276 ;;		 -> dbuf(80), 
  5277 ;; Return value:  Size  Location     Type
  5278 ;;                  2    0[COMRAM] unsigned int 
  5279 ;; Registers used:
  5280 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5281 ;; Tracked objects:
  5282 ;;		On entry : 0/0
  5283 ;;		On exit  : 0/0
  5284 ;;		Unchanged: 0/0
  5285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5286 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5287 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5288 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5289 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5290 ;;Total ram usage:        4 bytes
  5291 ;; Hardware stack levels used: 1
  5292 ;; This function calls:
  5293 ;;		Nothing
  5294 ;; This function is called by:
  5295 ;;		_pad
  5296 ;; This function uses a non-reentrant model
  5297 ;;
  5298                           
  5299                           	psect	text10
  5300  00C36A                     __ptext10:
  5301                           	callstack 0
  5302  00C36A                     _strlen:
  5303                           	callstack 25
  5304  00C36A  C001  F003         	movff	strlen@s,strlen@a
  5305  00C36E  C002  F004         	movff	strlen@s+1,strlen@a+1
  5306  00C372  EFBD  F061         	goto	l4939
  5307  00C376                     l4937:
  5308  00C376  4A01               	infsnz	strlen@s^0,f,c
  5309  00C378  2A02               	incf	(strlen@s+1)^0,f,c
  5310  00C37A                     l4939:
  5311  00C37A  C001  FFD9         	movff	strlen@s,fsr2l
  5312  00C37E  C002  FFDA         	movff	strlen@s+1,fsr2h
  5313  00C382  50DF               	movf	indf2,w,c
  5314  00C384  A4D8               	btfss	status,2,c
  5315  00C386  EFC7  F061         	goto	u3871
  5316  00C38A  EFC9  F061         	goto	u3870
  5317  00C38E                     u3871:
  5318  00C38E  EFBB  F061         	goto	l4937
  5319  00C392                     u3870:
  5320  00C392  5003               	movf	strlen@a^0,w,c
  5321  00C394  5C01               	subwf	strlen@s^0,w,c
  5322  00C396  6E01               	movwf	?_strlen^0,c
  5323  00C398  5004               	movf	(strlen@a+1)^0,w,c
  5324  00C39A  5802               	subwfb	(strlen@s+1)^0,w,c
  5325  00C39C  6E02               	movwf	(?_strlen+1)^0,c
  5326  00C39E  0012               	return		;funcret
  5327  00C3A0                     __end_of_strlen:
  5328                           	callstack 0
  5329                           
  5330 ;; *************** function _fputs *****************
  5331 ;; Defined at:
  5332 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5333 ;; Parameters:    Size  Location     Type
  5334 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5335 ;;		 -> dbuf(80), 
  5336 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5337 ;;		 -> sprintf@f(6), 
  5338 ;; Auto vars:     Size  Location     Type
  5339 ;;  i               2   14[COMRAM] int 
  5340 ;;  c               1   13[COMRAM] unsigned char 
  5341 ;; Return value:  Size  Location     Type
  5342 ;;                  2    9[COMRAM] int 
  5343 ;; Registers used:
  5344 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5345 ;; Tracked objects:
  5346 ;;		On entry : 0/0
  5347 ;;		On exit  : 0/0
  5348 ;;		Unchanged: 0/0
  5349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5351 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5353 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5354 ;;Total ram usage:        7 bytes
  5355 ;; Hardware stack levels used: 1
  5356 ;; Hardware stack levels required when called: 2
  5357 ;; This function calls:
  5358 ;;		_fputc
  5359 ;; This function is called by:
  5360 ;;		_pad
  5361 ;; This function uses a non-reentrant model
  5362 ;;
  5363                           
  5364                           	psect	text11
  5365  00C4CC                     __ptext11:
  5366                           	callstack 0
  5367  00C4CC                     _fputs:
  5368                           	callstack 23
  5369  00C4CC  0E00               	movlw	0
  5370  00C4CE  6E10               	movwf	(fputs@i+1)^0,c
  5371  00C4D0  0E00               	movlw	0
  5372  00C4D2  6E0F               	movwf	fputs@i^0,c
  5373  00C4D4  EF77  F062         	goto	l4933
  5374  00C4D8                     l4929:
  5375  00C4D8  C00E  F001         	movff	fputs@c,fputc@c
  5376  00C4DC  6A02               	clrf	(fputc@c+1)^0,c
  5377  00C4DE  C00C  F003         	movff	fputs@fp,fputc@fp
  5378  00C4E2  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5379  00C4E6  EC47  F068         	call	_fputc	;wreg free
  5380  00C4EA  4A0F               	infsnz	fputs@i^0,f,c
  5381  00C4EC  2A10               	incf	(fputs@i+1)^0,f,c
  5382  00C4EE                     l4933:
  5383  00C4EE  500F               	movf	fputs@i^0,w,c
  5384  00C4F0  240A               	addwf	fputs@s^0,w,c
  5385  00C4F2  6ED9               	movwf	fsr2l,c
  5386  00C4F4  5010               	movf	(fputs@i+1)^0,w,c
  5387  00C4F6  200B               	addwfc	(fputs@s+1)^0,w,c
  5388  00C4F8  6EDA               	movwf	fsr2h,c
  5389  00C4FA  50DF               	movf	indf2,w,c
  5390  00C4FC  6E0E               	movwf	fputs@c^0,c
  5391  00C4FE  500E               	movf	fputs@c^0,w,c
  5392  00C500  A4D8               	btfss	status,2,c
  5393  00C502  EF85  F062         	goto	u3861
  5394  00C506  EF87  F062         	goto	u3860
  5395  00C50A                     u3861:
  5396  00C50A  EF6C  F062         	goto	l4929
  5397  00C50E                     u3860:
  5398  00C50E  0012               	return		;funcret
  5399  00C510                     __end_of_fputs:
  5400                           	callstack 0
  5401                           
  5402 ;; *************** function _fputc *****************
  5403 ;; Defined at:
  5404 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5405 ;; Parameters:    Size  Location     Type
  5406 ;;  c               2    0[COMRAM] int 
  5407 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5408 ;;		 -> sprintf@f(6), 
  5409 ;; Auto vars:     Size  Location     Type
  5410 ;;		None
  5411 ;; Return value:  Size  Location     Type
  5412 ;;                  2    0[COMRAM] int 
  5413 ;; Registers used:
  5414 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5415 ;; Tracked objects:
  5416 ;;		On entry : 0/0
  5417 ;;		On exit  : 0/0
  5418 ;;		Unchanged: 0/0
  5419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5420 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5421 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5422 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5423 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5424 ;;Total ram usage:        9 bytes
  5425 ;; Hardware stack levels used: 1
  5426 ;; Hardware stack levels required when called: 1
  5427 ;; This function calls:
  5428 ;;		_putch
  5429 ;; This function is called by:
  5430 ;;		_pad
  5431 ;;		_vfpfcnvrt
  5432 ;;		_fputs
  5433 ;; This function uses a non-reentrant model
  5434 ;;
  5435                           
  5436                           	psect	text12
  5437  00D08E                     __ptext12:
  5438                           	callstack 0
  5439  00D08E                     _fputc:
  5440                           	callstack 26
  5441  00D08E  5003               	movf	fputc@fp^0,w,c
  5442  00D090  1004               	iorwf	(fputc@fp+1)^0,w,c
  5443  00D092  B4D8               	btfsc	status,2,c
  5444  00D094  EF4E  F068         	goto	u3401
  5445  00D098  EF50  F068         	goto	u3400
  5446  00D09C                     u3401:
  5447  00D09C  EF59  F068         	goto	l4681
  5448  00D0A0                     u3400:
  5449  00D0A0  5003               	movf	fputc@fp^0,w,c
  5450  00D0A2  1004               	iorwf	(fputc@fp+1)^0,w,c
  5451  00D0A4  A4D8               	btfss	status,2,c
  5452  00D0A6  EF57  F068         	goto	u3411
  5453  00D0AA  EF59  F068         	goto	u3410
  5454  00D0AE                     u3411:
  5455  00D0AE  EF5E  F068         	goto	l4683
  5456  00D0B2                     u3410:
  5457  00D0B2                     l4681:
  5458  00D0B2  5001               	movf	fputc@c^0,w,c
  5459  00D0B4  ECAB  F05F         	call	_putch
  5460  00D0B8  EFAB  F068         	goto	l1796
  5461  00D0BC                     l4683:
  5462  00D0BC  EE20 F004          	lfsr	2,4
  5463  00D0C0  5003               	movf	fputc@fp^0,w,c
  5464  00D0C2  26D9               	addwf	fsr2l,f,c
  5465  00D0C4  5004               	movf	(fputc@fp+1)^0,w,c
  5466  00D0C6  22DA               	addwfc	fsr2h,f,c
  5467  00D0C8  50DE               	movf	postinc2,w,c
  5468  00D0CA  10DE               	iorwf	postinc2,w,c
  5469  00D0CC  B4D8               	btfsc	status,2,c
  5470  00D0CE  EF6B  F068         	goto	u3421
  5471  00D0D2  EF6D  F068         	goto	u3420
  5472  00D0D6                     u3421:
  5473  00D0D6  EF88  F068         	goto	l4687
  5474  00D0DA                     u3420:
  5475  00D0DA  EE20 F004          	lfsr	2,4
  5476  00D0DE  5003               	movf	fputc@fp^0,w,c
  5477  00D0E0  26D9               	addwf	fsr2l,f,c
  5478  00D0E2  5004               	movf	(fputc@fp+1)^0,w,c
  5479  00D0E4  22DA               	addwfc	fsr2h,f,c
  5480  00D0E6  EE10 F002          	lfsr	1,2
  5481  00D0EA  5003               	movf	fputc@fp^0,w,c
  5482  00D0EC  26E1               	addwf	fsr1l,f,c
  5483  00D0EE  5004               	movf	(fputc@fp+1)^0,w,c
  5484  00D0F0  22E2               	addwfc	fsr1h,f,c
  5485  00D0F2  50DE               	movf	postinc2,w,c
  5486  00D0F4  5CE6               	subwf	postinc1,w,c
  5487  00D0F6  50E6               	movf	postinc1,w,c
  5488  00D0F8  0A80               	xorlw	128
  5489  00D0FA  6E09               	movwf	(??_fputc+4)^0,c
  5490  00D0FC  50DE               	movf	postinc2,w,c
  5491  00D0FE  0A80               	xorlw	128
  5492  00D100  5809               	subwfb	(??_fputc+4)^0,w,c
  5493  00D102  B0D8               	btfsc	status,0,c
  5494  00D104  EF86  F068         	goto	u3431
  5495  00D108  EF88  F068         	goto	u3430
  5496  00D10C                     u3431:
  5497  00D10C  EFAB  F068         	goto	l1796
  5498  00D110                     u3430:
  5499  00D110                     l4687:
  5500  00D110  EE20 F002          	lfsr	2,2
  5501  00D114  5003               	movf	fputc@fp^0,w,c
  5502  00D116  26D9               	addwf	fsr2l,f,c
  5503  00D118  5004               	movf	(fputc@fp+1)^0,w,c
  5504  00D11A  22DA               	addwfc	fsr2h,f,c
  5505  00D11C  CFDE F005          	movff	postinc2,??_fputc
  5506  00D120  CFDD F006          	movff	postdec2,??_fputc+1
  5507  00D124  C003  FFD9         	movff	fputc@fp,fsr2l
  5508  00D128  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5509  00D12C  CFDE F007          	movff	postinc2,??_fputc+2
  5510  00D130  CFDD F008          	movff	postdec2,??_fputc+3
  5511  00D134  5005               	movf	??_fputc^0,w,c
  5512  00D136  2407               	addwf	(??_fputc+2)^0,w,c
  5513  00D138  6ED9               	movwf	fsr2l,c
  5514  00D13A  5006               	movf	(??_fputc+1)^0,w,c
  5515  00D13C  2008               	addwfc	(??_fputc+3)^0,w,c
  5516  00D13E  6EDA               	movwf	fsr2h,c
  5517  00D140  C001  FFDF         	movff	fputc@c,indf2
  5518  00D144  EE20 F002          	lfsr	2,2
  5519  00D148  5003               	movf	fputc@fp^0,w,c
  5520  00D14A  26D9               	addwf	fsr2l,f,c
  5521  00D14C  5004               	movf	(fputc@fp+1)^0,w,c
  5522  00D14E  22DA               	addwfc	fsr2h,f,c
  5523  00D150  2ADE               	incf	postinc2,f,c
  5524  00D152  0E00               	movlw	0
  5525  00D154  22DD               	addwfc	postdec2,f,c
  5526  00D156                     l1796:
  5527  00D156  0012               	return		;funcret
  5528  00D158                     __end_of_fputc:
  5529                           	callstack 0
  5530                           
  5531 ;; *************** function _putch *****************
  5532 ;; Defined at:
  5533 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5534 ;; Parameters:    Size  Location     Type
  5535 ;;  c               1    wreg     unsigned char 
  5536 ;; Auto vars:     Size  Location     Type
  5537 ;;  c               1    0[COMRAM] unsigned char 
  5538 ;; Return value:  Size  Location     Type
  5539 ;;                  1    wreg      void 
  5540 ;; Registers used:
  5541 ;;		wreg
  5542 ;; Tracked objects:
  5543 ;;		On entry : 0/0
  5544 ;;		On exit  : 0/0
  5545 ;;		Unchanged: 0/0
  5546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5547 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5549 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5550 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5551 ;;Total ram usage:        0 bytes
  5552 ;; Hardware stack levels used: 1
  5553 ;; This function calls:
  5554 ;;		Nothing
  5555 ;; This function is called by:
  5556 ;;		_fputc
  5557 ;; This function uses a non-reentrant model
  5558 ;;
  5559                           
  5560                           	psect	text13
  5561  00BF56                     __ptext13:
  5562                           	callstack 0
  5563  00BF56                     _putch:
  5564                           	callstack 26
  5565  00BF56  0012               	return		;funcret
  5566  00BF58                     __end_of_putch:
  5567                           	callstack 0
  5568                           
  5569 ;; *************** function _floorf *****************
  5570 ;; Defined at:
  5571 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;  x               4   25[COMRAM] float 
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;  u               4   41[COMRAM] struct .
  5576 ;;  m               4   35[COMRAM] unsigned long 
  5577 ;;  e               2   39[COMRAM] int 
  5578 ;; Return value:  Size  Location     Type
  5579 ;;                  4   25[COMRAM] float 
  5580 ;; Registers used:
  5581 ;;		wreg, status,2, status,0
  5582 ;; Tracked objects:
  5583 ;;		On entry : 0/0
  5584 ;;		On exit  : 0/0
  5585 ;;		Unchanged: 0/0
  5586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5587 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5588 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5589 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5590 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5591 ;;Total ram usage:       20 bytes
  5592 ;; Hardware stack levels used: 1
  5593 ;; This function calls:
  5594 ;;		Nothing
  5595 ;; This function is called by:
  5596 ;;		_efgtoa
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text14
  5601  00DB80                     __ptext14:
  5602                           	callstack 0
  5603  00DB80                     _floorf:
  5604                           	callstack 26
  5605  00DB80  C0AE  F02A         	movff	floorf@F527,floorf@u
  5606  00DB84  C0AF  F02B         	movff	floorf@F527+1,floorf@u+1
  5607  00DB88  C0B0  F02C         	movff	floorf@F527+2,floorf@u+2
  5608  00DB8C  C0B1  F02D         	movff	floorf@F527+3,floorf@u+3
  5609  00DB90  C01A  F02A         	movff	floorf@x,floorf@u
  5610  00DB94  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5611  00DB98  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5612  00DB9C  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5613  00DBA0  0E81               	movlw	129
  5614  00DBA2  6E1E               	movwf	??_floorf^0,c
  5615  00DBA4  0EFF               	movlw	255
  5616  00DBA6  6E1F               	movwf	(??_floorf+1)^0,c
  5617  00DBA8  C02A  F020         	movff	floorf@u,??_floorf+2
  5618  00DBAC  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5619  00DBB0  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5620  00DBB4  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5621  00DBB8  0E18               	movlw	24
  5622  00DBBA  EFE4  F06D         	goto	u4780
  5623  00DBBE                     u4785:
  5624  00DBBE  90D8               	bcf	status,0,c
  5625  00DBC0  3223               	rrcf	(??_floorf+5)^0,f,c
  5626  00DBC2  3222               	rrcf	(??_floorf+4)^0,f,c
  5627  00DBC4  3221               	rrcf	(??_floorf+3)^0,f,c
  5628  00DBC6  3220               	rrcf	(??_floorf+2)^0,f,c
  5629  00DBC8                     u4780:
  5630  00DBC8  2EE8               	decfsz	wreg,f,c
  5631  00DBCA  EFDF  F06D         	goto	u4785
  5632  00DBCE  5020               	movf	(??_floorf+2)^0,w,c
  5633  00DBD0  241E               	addwf	??_floorf^0,w,c
  5634  00DBD2  6E28               	movwf	floorf@e^0,c
  5635  00DBD4  0E00               	movlw	0
  5636  00DBD6  201F               	addwfc	(??_floorf+1)^0,w,c
  5637  00DBD8  6E29               	movwf	(floorf@e+1)^0,c
  5638  00DBDA  BE29               	btfsc	(floorf@e+1)^0,7,c
  5639  00DBDC  EFF9  F06D         	goto	u4791
  5640  00DBE0  5029               	movf	(floorf@e+1)^0,w,c
  5641  00DBE2  E109               	bnz	u4790
  5642  00DBE4  0E17               	movlw	23
  5643  00DBE6  5C28               	subwf	floorf@e^0,w,c
  5644  00DBE8  A0D8               	btfss	status,0,c
  5645  00DBEA  EFF9  F06D         	goto	u4791
  5646  00DBEE  EFFB  F06D         	goto	u4790
  5647  00DBF2                     u4791:
  5648  00DBF2  EF05  F06E         	goto	l5531
  5649  00DBF6                     u4790:
  5650  00DBF6                     l5529:
  5651  00DBF6  C01A  F01A         	movff	floorf@x,?_floorf
  5652  00DBFA  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5653  00DBFE  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5654  00DC02  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5655  00DC06  EFC8  F06E         	goto	l1757
  5656  00DC0A                     l5531:
  5657  00DC0A  BE29               	btfsc	(floorf@e+1)^0,7,c
  5658  00DC0C  EF0A  F06E         	goto	u4801
  5659  00DC10  EF0C  F06E         	goto	u4800
  5660  00DC14                     u4801:
  5661  00DC14  EF7C  F06E         	goto	l5541
  5662  00DC18                     u4800:
  5663  00DC18  C028  F01E         	movff	floorf@e,??_floorf
  5664  00DC1C  0EFF               	movlw	255
  5665  00DC1E  6E1F               	movwf	(??_floorf+1)^0,c
  5666  00DC20  0EFF               	movlw	255
  5667  00DC22  6E20               	movwf	(??_floorf+2)^0,c
  5668  00DC24  0E7F               	movlw	127
  5669  00DC26  6E21               	movwf	(??_floorf+3)^0,c
  5670  00DC28  0E00               	movlw	0
  5671  00DC2A  6E22               	movwf	(??_floorf+4)^0,c
  5672  00DC2C                     u4815:
  5673  00DC2C  661E               	tstfsz	??_floorf^0,c
  5674  00DC2E  EF1B  F06E         	goto	u4816
  5675  00DC32  EF23  F06E         	goto	u4817
  5676  00DC36                     u4816:
  5677  00DC36  3422               	rlcf	(??_floorf+4)^0,w,c
  5678  00DC38  3222               	rrcf	(??_floorf+4)^0,f,c
  5679  00DC3A  3221               	rrcf	(??_floorf+3)^0,f,c
  5680  00DC3C  3220               	rrcf	(??_floorf+2)^0,f,c
  5681  00DC3E  321F               	rrcf	(??_floorf+1)^0,f,c
  5682  00DC40  2E1E               	decfsz	??_floorf^0,f,c
  5683  00DC42  EF16  F06E         	goto	u4815
  5684  00DC46                     u4817:
  5685  00DC46  C01F  F024         	movff	??_floorf+1,floorf@m
  5686  00DC4A  C020  F025         	movff	??_floorf+2,floorf@m+1
  5687  00DC4E  C021  F026         	movff	??_floorf+3,floorf@m+2
  5688  00DC52  C022  F027         	movff	??_floorf+4,floorf@m+3
  5689  00DC56  5024               	movf	floorf@m^0,w,c
  5690  00DC58  142A               	andwf	floorf@u^0,w,c
  5691  00DC5A  6E1E               	movwf	??_floorf^0,c
  5692  00DC5C  5025               	movf	(floorf@m+1)^0,w,c
  5693  00DC5E  142B               	andwf	(floorf@u+1)^0,w,c
  5694  00DC60  6E1F               	movwf	(??_floorf+1)^0,c
  5695  00DC62  5026               	movf	(floorf@m+2)^0,w,c
  5696  00DC64  142C               	andwf	(floorf@u+2)^0,w,c
  5697  00DC66  6E20               	movwf	(??_floorf+2)^0,c
  5698  00DC68  5027               	movf	(floorf@m+3)^0,w,c
  5699  00DC6A  142D               	andwf	(floorf@u+3)^0,w,c
  5700  00DC6C  6E21               	movwf	(??_floorf+3)^0,c
  5701  00DC6E  501E               	movf	??_floorf^0,w,c
  5702  00DC70  101F               	iorwf	(??_floorf+1)^0,w,c
  5703  00DC72  1020               	iorwf	(??_floorf+2)^0,w,c
  5704  00DC74  1021               	iorwf	(??_floorf+3)^0,w,c
  5705  00DC76  A4D8               	btfss	status,2,c
  5706  00DC78  EF40  F06E         	goto	u4821
  5707  00DC7C  EF42  F06E         	goto	u4820
  5708  00DC80                     u4821:
  5709  00DC80  EF44  F06E         	goto	l5537
  5710  00DC84                     u4820:
  5711  00DC84  EFFB  F06D         	goto	l5529
  5712  00DC88                     l5537:
  5713  00DC88  C02A  F01E         	movff	floorf@u,??_floorf
  5714  00DC8C  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5715  00DC90  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5716  00DC94  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5717  00DC98  0E20               	movlw	32
  5718  00DC9A  EF54  F06E         	goto	u4830
  5719  00DC9E                     u4835:
  5720  00DC9E  90D8               	bcf	status,0,c
  5721  00DCA0  3221               	rrcf	(??_floorf+3)^0,f,c
  5722  00DCA2  3220               	rrcf	(??_floorf+2)^0,f,c
  5723  00DCA4  321F               	rrcf	(??_floorf+1)^0,f,c
  5724  00DCA6  321E               	rrcf	??_floorf^0,f,c
  5725  00DCA8                     u4830:
  5726  00DCA8  2EE8               	decfsz	wreg,f,c
  5727  00DCAA  EF4F  F06E         	goto	u4835
  5728  00DCAE  501E               	movf	??_floorf^0,w,c
  5729  00DCB0  101F               	iorwf	(??_floorf+1)^0,w,c
  5730  00DCB2  1020               	iorwf	(??_floorf+2)^0,w,c
  5731  00DCB4  1021               	iorwf	(??_floorf+3)^0,w,c
  5732  00DCB6  B4D8               	btfsc	status,2,c
  5733  00DCB8  EF60  F06E         	goto	u4841
  5734  00DCBC  EF62  F06E         	goto	u4840
  5735  00DCC0                     u4841:
  5736  00DCC0  EF6A  F06E         	goto	l1760
  5737  00DCC4                     u4840:
  5738  00DCC4  5024               	movf	floorf@m^0,w,c
  5739  00DCC6  262A               	addwf	floorf@u^0,f,c
  5740  00DCC8  5025               	movf	(floorf@m+1)^0,w,c
  5741  00DCCA  222B               	addwfc	(floorf@u+1)^0,f,c
  5742  00DCCC  5026               	movf	(floorf@m+2)^0,w,c
  5743  00DCCE  222C               	addwfc	(floorf@u+2)^0,f,c
  5744  00DCD0  5027               	movf	(floorf@m+3)^0,w,c
  5745  00DCD2  222D               	addwfc	(floorf@u+3)^0,f,c
  5746  00DCD4                     l1760:
  5747  00DCD4  1C24               	comf	floorf@m^0,w,c
  5748  00DCD6  6E1E               	movwf	??_floorf^0,c
  5749  00DCD8  1C25               	comf	(floorf@m+1)^0,w,c
  5750  00DCDA  6E1F               	movwf	(??_floorf+1)^0,c
  5751  00DCDC  1C26               	comf	(floorf@m+2)^0,w,c
  5752  00DCDE  6E20               	movwf	(??_floorf+2)^0,c
  5753  00DCE0  1C27               	comf	(floorf@m+3)^0,w,c
  5754  00DCE2  6E21               	movwf	(??_floorf+3)^0,c
  5755  00DCE4  501E               	movf	??_floorf^0,w,c
  5756  00DCE6  162A               	andwf	floorf@u^0,f,c
  5757  00DCE8  501F               	movf	(??_floorf+1)^0,w,c
  5758  00DCEA  162B               	andwf	(floorf@u+1)^0,f,c
  5759  00DCEC  5020               	movf	(??_floorf+2)^0,w,c
  5760  00DCEE  162C               	andwf	(floorf@u+2)^0,f,c
  5761  00DCF0  5021               	movf	(??_floorf+3)^0,w,c
  5762  00DCF2  162D               	andwf	(floorf@u+3)^0,f,c
  5763  00DCF4  EFC0  F06E         	goto	l5549
  5764  00DCF8                     l5541:
  5765  00DCF8  C02A  F01E         	movff	floorf@u,??_floorf
  5766  00DCFC  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5767  00DD00  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5768  00DD04  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5769  00DD08  0E20               	movlw	32
  5770  00DD0A  EF8C  F06E         	goto	u4850
  5771  00DD0E                     u4855:
  5772  00DD0E  90D8               	bcf	status,0,c
  5773  00DD10  3221               	rrcf	(??_floorf+3)^0,f,c
  5774  00DD12  3220               	rrcf	(??_floorf+2)^0,f,c
  5775  00DD14  321F               	rrcf	(??_floorf+1)^0,f,c
  5776  00DD16  321E               	rrcf	??_floorf^0,f,c
  5777  00DD18                     u4850:
  5778  00DD18  2EE8               	decfsz	wreg,f,c
  5779  00DD1A  EF87  F06E         	goto	u4855
  5780  00DD1E  501E               	movf	??_floorf^0,w,c
  5781  00DD20  101F               	iorwf	(??_floorf+1)^0,w,c
  5782  00DD22  1020               	iorwf	(??_floorf+2)^0,w,c
  5783  00DD24  1021               	iorwf	(??_floorf+3)^0,w,c
  5784  00DD26  A4D8               	btfss	status,2,c
  5785  00DD28  EF98  F06E         	goto	u4861
  5786  00DD2C  EF9A  F06E         	goto	u4860
  5787  00DD30                     u4861:
  5788  00DD30  EFA4  F06E         	goto	l5545
  5789  00DD34                     u4860:
  5790  00DD34  0E00               	movlw	0
  5791  00DD36  6E2A               	movwf	floorf@u^0,c
  5792  00DD38  0E00               	movlw	0
  5793  00DD3A  6E2B               	movwf	(floorf@u+1)^0,c
  5794  00DD3C  0E00               	movlw	0
  5795  00DD3E  6E2C               	movwf	(floorf@u+2)^0,c
  5796  00DD40  0E00               	movlw	0
  5797  00DD42  6E2D               	movwf	(floorf@u+3)^0,c
  5798  00DD44  EFC0  F06E         	goto	l5549
  5799  00DD48                     l5545:
  5800  00DD48  90D8               	bcf	status,0,c
  5801  00DD4A  342A               	rlcf	floorf@u^0,w,c
  5802  00DD4C  6E1E               	movwf	??_floorf^0,c
  5803  00DD4E  342B               	rlcf	(floorf@u+1)^0,w,c
  5804  00DD50  6E1F               	movwf	(??_floorf+1)^0,c
  5805  00DD52  342C               	rlcf	(floorf@u+2)^0,w,c
  5806  00DD54  6E20               	movwf	(??_floorf+2)^0,c
  5807  00DD56  342D               	rlcf	(floorf@u+3)^0,w,c
  5808  00DD58  6E21               	movwf	(??_floorf+3)^0,c
  5809  00DD5A  501E               	movf	??_floorf^0,w,c
  5810  00DD5C  101F               	iorwf	(??_floorf+1)^0,w,c
  5811  00DD5E  1020               	iorwf	(??_floorf+2)^0,w,c
  5812  00DD60  1021               	iorwf	(??_floorf+3)^0,w,c
  5813  00DD62  B4D8               	btfsc	status,2,c
  5814  00DD64  EFB6  F06E         	goto	u4871
  5815  00DD68  EFB8  F06E         	goto	u4870
  5816  00DD6C                     u4871:
  5817  00DD6C  EFC0  F06E         	goto	l5549
  5818  00DD70                     u4870:
  5819  00DD70  0E00               	movlw	0
  5820  00DD72  6E2A               	movwf	floorf@u^0,c
  5821  00DD74  0E00               	movlw	0
  5822  00DD76  6E2B               	movwf	(floorf@u+1)^0,c
  5823  00DD78  0E80               	movlw	128
  5824  00DD7A  6E2C               	movwf	(floorf@u+2)^0,c
  5825  00DD7C  0EBF               	movlw	191
  5826  00DD7E  6E2D               	movwf	(floorf@u+3)^0,c
  5827  00DD80                     l5549:
  5828  00DD80  C02A  F01A         	movff	floorf@u,?_floorf
  5829  00DD84  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5830  00DD88  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5831  00DD8C  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5832  00DD90                     l1757:
  5833  00DD90  0012               	return		;funcret
  5834  00DD92                     __end_of_floorf:
  5835                           	callstack 0
  5836                           
  5837 ;; *************** function ___fpclassifyf *****************
  5838 ;; Defined at:
  5839 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5840 ;; Parameters:    Size  Location     Type
  5841 ;;  x               4    0[COMRAM] float 
  5842 ;; Auto vars:     Size  Location     Type
  5843 ;;  u               4   10[COMRAM] struct .
  5844 ;;  e               2    8[COMRAM] int 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  2    0[COMRAM] int 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5855 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5856 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5857 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5858 ;;Total ram usage:       14 bytes
  5859 ;; Hardware stack levels used: 1
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_efgtoa
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           	psect	text15
  5868  00D326                     __ptext15:
  5869                           	callstack 0
  5870  00D326                     ___fpclassifyf:
  5871                           	callstack 26
  5872  00D326  C0B2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5873  00D32A  C0B3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5874  00D32E  C0B4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5875  00D332  C0B5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5876  00D336  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5877  00D33A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5878  00D33E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5879  00D342  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5880  00D346  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5881  00D34A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5882  00D34E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5883  00D352  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5884  00D356  0E18               	movlw	24
  5885  00D358  EFB3  F069         	goto	u4660
  5886  00D35C                     u4665:
  5887  00D35C  90D8               	bcf	status,0,c
  5888  00D35E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5889  00D360  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5890  00D362  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5891  00D364  3205               	rrcf	??___fpclassifyf^0,f,c
  5892  00D366                     u4660:
  5893  00D366  2EE8               	decfsz	wreg,f,c
  5894  00D368  EFAE  F069         	goto	u4665
  5895  00D36C  5005               	movf	??___fpclassifyf^0,w,c
  5896  00D36E  6E09               	movwf	___fpclassifyf@e^0,c
  5897  00D370  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5898  00D372  5009               	movf	___fpclassifyf@e^0,w,c
  5899  00D374  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5900  00D376  A4D8               	btfss	status,2,c
  5901  00D378  EFC0  F069         	goto	u4671
  5902  00D37C  EFC2  F069         	goto	u4670
  5903  00D380                     u4671:
  5904  00D380  EFE2  F069         	goto	l5501
  5905  00D384                     u4670:
  5906  00D384  90D8               	bcf	status,0,c
  5907  00D386  340B               	rlcf	___fpclassifyf@u^0,w,c
  5908  00D388  6E05               	movwf	??___fpclassifyf^0,c
  5909  00D38A  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5910  00D38C  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5911  00D38E  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5912  00D390  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5913  00D392  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5914  00D394  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5915  00D396  5005               	movf	??___fpclassifyf^0,w,c
  5916  00D398  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5917  00D39A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5918  00D39C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5919  00D39E  A4D8               	btfss	status,2,c
  5920  00D3A0  EFD4  F069         	goto	u4681
  5921  00D3A4  EFD6  F069         	goto	u4680
  5922  00D3A8                     u4681:
  5923  00D3A8  EFDC  F069         	goto	l5497
  5924  00D3AC                     u4680:
  5925  00D3AC  0E00               	movlw	0
  5926  00D3AE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5927  00D3B0  0E02               	movlw	2
  5928  00D3B2  6E01               	movwf	?___fpclassifyf^0,c
  5929  00D3B4  EF11  F06A         	goto	l1719
  5930  00D3B8                     l5497:
  5931  00D3B8  0E00               	movlw	0
  5932  00D3BA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5933  00D3BC  0E03               	movlw	3
  5934  00D3BE  6E01               	movwf	?___fpclassifyf^0,c
  5935  00D3C0  EF11  F06A         	goto	l1719
  5936  00D3C4                     l5501:
  5937  00D3C4  2809               	incf	___fpclassifyf@e^0,w,c
  5938  00D3C6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5939  00D3C8  A4D8               	btfss	status,2,c
  5940  00D3CA  EFE9  F069         	goto	u4691
  5941  00D3CE  EFEB  F069         	goto	u4690
  5942  00D3D2                     u4691:
  5943  00D3D2  EF0D  F06A         	goto	l5507
  5944  00D3D6                     u4690:
  5945  00D3D6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5946  00D3DA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5947  00D3DE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5948  00D3E2  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5949  00D3E6  0E09               	movlw	9
  5950  00D3E8                     u4705:
  5951  00D3E8  90D8               	bcf	status,0,c
  5952  00D3EA  3605               	rlcf	??___fpclassifyf^0,f,c
  5953  00D3EC  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5954  00D3EE  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5955  00D3F0  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5956  00D3F2  2EE8               	decfsz	wreg,f,c
  5957  00D3F4  EFF4  F069         	goto	u4705
  5958  00D3F8  5005               	movf	??___fpclassifyf^0,w,c
  5959  00D3FA  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5960  00D3FC  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5961  00D3FE  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5962  00D400  B4D8               	btfsc	status,2,c
  5963  00D402  EF05  F06A         	goto	u4711
  5964  00D406  EF08  F06A         	goto	u4710
  5965  00D40A                     u4711:
  5966  00D40A  0E01               	movlw	1
  5967  00D40C  EF09  F06A         	goto	u4720
  5968  00D410                     u4710:
  5969  00D410  0E00               	movlw	0
  5970  00D412                     u4720:
  5971  00D412  6E01               	movwf	?___fpclassifyf^0,c
  5972  00D414  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5973  00D416  EF11  F06A         	goto	l1719
  5974  00D41A                     l5507:
  5975  00D41A  0E00               	movlw	0
  5976  00D41C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5977  00D41E  0E04               	movlw	4
  5978  00D420  6E01               	movwf	?___fpclassifyf^0,c
  5979  00D422                     l1719:
  5980  00D422  0012               	return		;funcret
  5981  00D424                     __end_of___fpclassifyf:
  5982                           	callstack 0
  5983                           
  5984 ;; *************** function ___fltol *****************
  5985 ;; Defined at:
  5986 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;  f1              4    0[COMRAM] int 
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;  exp1            1    9[COMRAM] unsigned char 
  5991 ;;  sign1           1    8[COMRAM] unsigned char 
  5992 ;; Return value:  Size  Location     Type
  5993 ;;                  4    0[COMRAM] long 
  5994 ;; Registers used:
  5995 ;;		wreg, status,2, status,0
  5996 ;; Tracked objects:
  5997 ;;		On entry : 0/0
  5998 ;;		On exit  : 0/0
  5999 ;;		Unchanged: 0/0
  6000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6001 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6002 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6003 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6004 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6005 ;;Total ram usage:       10 bytes
  6006 ;; Hardware stack levels used: 1
  6007 ;; This function calls:
  6008 ;;		Nothing
  6009 ;; This function is called by:
  6010 ;;		_efgtoa
  6011 ;; This function uses a non-reentrant model
  6012 ;;
  6013                           
  6014                           	psect	text16
  6015  00D72C                     __ptext16:
  6016                           	callstack 0
  6017  00D72C                     ___fltol:
  6018                           	callstack 26
  6019  00D72C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6020  00D72E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6021  00D730  6E0A               	movwf	___fltol@exp1^0,c
  6022  00D732  500A               	movf	___fltol@exp1^0,w,c
  6023  00D734  A4D8               	btfss	status,2,c
  6024  00D736  EF9F  F06B         	goto	u4551
  6025  00D73A  EFA1  F06B         	goto	u4550
  6026  00D73E                     u4551:
  6027  00D73E  EFAB  F06B         	goto	l5429
  6028  00D742                     u4550:
  6029  00D742                     l5425:
  6030  00D742  0E00               	movlw	0
  6031  00D744  6E01               	movwf	?___fltol^0,c
  6032  00D746  0E00               	movlw	0
  6033  00D748  6E02               	movwf	(?___fltol+1)^0,c
  6034  00D74A  0E00               	movlw	0
  6035  00D74C  6E03               	movwf	(?___fltol+2)^0,c
  6036  00D74E  0E00               	movlw	0
  6037  00D750  6E04               	movwf	(?___fltol+3)^0,c
  6038  00D752  EF18  F06C         	goto	l1158
  6039  00D756                     l5429:
  6040  00D756  C001  F005         	movff	___fltol@f1,??___fltol
  6041  00D75A  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6042  00D75E  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6043  00D762  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6044  00D766  0E20               	movlw	32
  6045  00D768  EFBB  F06B         	goto	u4560
  6046  00D76C                     u4565:
  6047  00D76C  90D8               	bcf	status,0,c
  6048  00D76E  3208               	rrcf	(??___fltol+3)^0,f,c
  6049  00D770  3207               	rrcf	(??___fltol+2)^0,f,c
  6050  00D772  3206               	rrcf	(??___fltol+1)^0,f,c
  6051  00D774  3205               	rrcf	??___fltol^0,f,c
  6052  00D776                     u4560:
  6053  00D776  2EE8               	decfsz	wreg,f,c
  6054  00D778  EFB6  F06B         	goto	u4565
  6055  00D77C  5005               	movf	??___fltol^0,w,c
  6056  00D77E  6E09               	movwf	___fltol@sign1^0,c
  6057  00D780  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6058  00D782  0EFF               	movlw	255
  6059  00D784  1601               	andwf	___fltol@f1^0,f,c
  6060  00D786  0EFF               	movlw	255
  6061  00D788  1602               	andwf	(___fltol@f1+1)^0,f,c
  6062  00D78A  0EFF               	movlw	255
  6063  00D78C  1603               	andwf	(___fltol@f1+2)^0,f,c
  6064  00D78E  0E00               	movlw	0
  6065  00D790  1604               	andwf	(___fltol@f1+3)^0,f,c
  6066  00D792  0E96               	movlw	150
  6067  00D794  5E0A               	subwf	___fltol@exp1^0,f,c
  6068  00D796  BE0A               	btfsc	___fltol@exp1^0,7,c
  6069  00D798  EFD2  F06B         	goto	u4570
  6070  00D79C  EFD0  F06B         	goto	u4571
  6071  00D7A0                     u4571:
  6072  00D7A0  EFE8  F06B         	goto	l5449
  6073  00D7A4                     u4570:
  6074  00D7A4  500A               	movf	___fltol@exp1^0,w,c
  6075  00D7A6  0A80               	xorlw	128
  6076  00D7A8  0F97               	addlw	151
  6077  00D7AA  B0D8               	btfsc	status,0,c
  6078  00D7AC  EFDA  F06B         	goto	u4581
  6079  00D7B0  EFDC  F06B         	goto	u4580
  6080  00D7B4                     u4581:
  6081  00D7B4  EFDE  F06B         	goto	l5445
  6082  00D7B8                     u4580:
  6083  00D7B8  EFA1  F06B         	goto	l5425
  6084  00D7BC                     l5445:
  6085  00D7BC  90D8               	bcf	status,0,c
  6086  00D7BE  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6087  00D7C0  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6088  00D7C2  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6089  00D7C4  3201               	rrcf	___fltol@f1^0,f,c
  6090  00D7C6  3E0A               	incfsz	___fltol@exp1^0,f,c
  6091  00D7C8  EFDE  F06B         	goto	l5445
  6092  00D7CC  EF00  F06C         	goto	l5459
  6093  00D7D0                     l5449:
  6094  00D7D0  0E1F               	movlw	31
  6095  00D7D2  640A               	cpfsgt	___fltol@exp1^0,c
  6096  00D7D4  EFEE  F06B         	goto	u4591
  6097  00D7D8  EFF0  F06B         	goto	u4590
  6098  00D7DC                     u4591:
  6099  00D7DC  EFF8  F06B         	goto	l5457
  6100  00D7E0                     u4590:
  6101  00D7E0  EFA1  F06B         	goto	l5425
  6102  00D7E4                     l5455:
  6103  00D7E4  90D8               	bcf	status,0,c
  6104  00D7E6  3601               	rlcf	___fltol@f1^0,f,c
  6105  00D7E8  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6106  00D7EA  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6107  00D7EC  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6108  00D7EE  060A               	decf	___fltol@exp1^0,f,c
  6109  00D7F0                     l5457:
  6110  00D7F0  500A               	movf	___fltol@exp1^0,w,c
  6111  00D7F2  A4D8               	btfss	status,2,c
  6112  00D7F4  EFFE  F06B         	goto	u4601
  6113  00D7F8  EF00  F06C         	goto	u4600
  6114  00D7FC                     u4601:
  6115  00D7FC  EFF2  F06B         	goto	l5455
  6116  00D800                     u4600:
  6117  00D800                     l5459:
  6118  00D800  5009               	movf	___fltol@sign1^0,w,c
  6119  00D802  B4D8               	btfsc	status,2,c
  6120  00D804  EF06  F06C         	goto	u4611
  6121  00D808  EF08  F06C         	goto	u4610
  6122  00D80C                     u4611:
  6123  00D80C  EF10  F06C         	goto	l5463
  6124  00D810                     u4610:
  6125  00D810  1E04               	comf	(___fltol@f1+3)^0,f,c
  6126  00D812  1E03               	comf	(___fltol@f1+2)^0,f,c
  6127  00D814  1E02               	comf	(___fltol@f1+1)^0,f,c
  6128  00D816  6C01               	negf	___fltol@f1^0,c
  6129  00D818  0E00               	movlw	0
  6130  00D81A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6131  00D81C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6132  00D81E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6133  00D820                     l5463:
  6134  00D820  C001  F001         	movff	___fltol@f1,?___fltol
  6135  00D824  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6136  00D828  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6137  00D82C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6138  00D830                     l1158:
  6139  00D830  0012               	return		;funcret
  6140  00D832                     __end_of___fltol:
  6141                           	callstack 0
  6142                           
  6143 ;; *************** function ___flsub *****************
  6144 ;; Defined at:
  6145 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6146 ;; Parameters:    Size  Location     Type
  6147 ;;  b               4   45[COMRAM] long 
  6148 ;;  a               4   49[COMRAM] long 
  6149 ;; Auto vars:     Size  Location     Type
  6150 ;;		None
  6151 ;; Return value:  Size  Location     Type
  6152 ;;                  4   45[COMRAM] long 
  6153 ;; Registers used:
  6154 ;;		wreg, status,2, status,0, cstack
  6155 ;; Tracked objects:
  6156 ;;		On entry : 0/0
  6157 ;;		On exit  : 0/0
  6158 ;;		Unchanged: 0/0
  6159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6160 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6161 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6163 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6164 ;;Total ram usage:        8 bytes
  6165 ;; Hardware stack levels used: 1
  6166 ;; Hardware stack levels required when called: 1
  6167 ;; This function calls:
  6168 ;;		___fladd
  6169 ;; This function is called by:
  6170 ;;		_efgtoa
  6171 ;; This function uses a non-reentrant model
  6172 ;;
  6173                           
  6174                           	psect	text17
  6175  00C510                     __ptext17:
  6176                           	callstack 0
  6177  00C510                     ___flsub:
  6178                           	callstack 25
  6179  00C510  0E00               	movlw	0
  6180  00C512  1A32               	xorwf	___flsub@a^0,f,c
  6181  00C514  0E00               	movlw	0
  6182  00C516  1A33               	xorwf	(___flsub@a+1)^0,f,c
  6183  00C518  0E00               	movlw	0
  6184  00C51A  1A34               	xorwf	(___flsub@a+2)^0,f,c
  6185  00C51C  0E80               	movlw	128
  6186  00C51E  1A35               	xorwf	(___flsub@a+3)^0,f,c
  6187  00C520  C02E  F001         	movff	___flsub@b,___fladd@b
  6188  00C524  C02F  F002         	movff	___flsub@b+1,___fladd@b+1
  6189  00C528  C030  F003         	movff	___flsub@b+2,___fladd@b+2
  6190  00C52C  C031  F004         	movff	___flsub@b+3,___fladd@b+3
  6191  00C530  C032  F005         	movff	___flsub@a,___fladd@a
  6192  00C534  C033  F006         	movff	___flsub@a+1,___fladd@a+1
  6193  00C538  C034  F007         	movff	___flsub@a+2,___fladd@a+2
  6194  00C53C  C035  F008         	movff	___flsub@a+3,___fladd@a+3
  6195  00C540  ECF7  F075         	call	___fladd	;wreg free
  6196  00C544  C001  F02E         	movff	?___fladd,?___flsub
  6197  00C548  C002  F02F         	movff	?___fladd+1,?___flsub+1
  6198  00C54C  C003  F030         	movff	?___fladd+2,?___flsub+2
  6199  00C550  C004  F031         	movff	?___fladd+3,?___flsub+3
  6200  00C554  0012               	return		;funcret
  6201  00C556                     __end_of___flsub:
  6202                           	callstack 0
  6203                           
  6204 ;; *************** function ___fladd *****************
  6205 ;; Defined at:
  6206 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6207 ;; Parameters:    Size  Location     Type
  6208 ;;  b               4    0[COMRAM] long 
  6209 ;;  a               4    4[COMRAM] long 
  6210 ;; Auto vars:     Size  Location     Type
  6211 ;;  grs             1   15[COMRAM] unsigned char 
  6212 ;;  bexp            1   14[COMRAM] unsigned char 
  6213 ;;  aexp            1   13[COMRAM] unsigned char 
  6214 ;;  signs           1   12[COMRAM] unsigned char 
  6215 ;; Return value:  Size  Location     Type
  6216 ;;                  4    0[COMRAM] unsigned char 
  6217 ;; Registers used:
  6218 ;;		wreg, status,2, status,0
  6219 ;; Tracked objects:
  6220 ;;		On entry : 0/0
  6221 ;;		On exit  : 0/0
  6222 ;;		Unchanged: 0/0
  6223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6224 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6227 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6228 ;;Total ram usage:       16 bytes
  6229 ;; Hardware stack levels used: 1
  6230 ;; This function calls:
  6231 ;;		Nothing
  6232 ;; This function is called by:
  6233 ;;		___flsub
  6234 ;;		_efgtoa
  6235 ;; This function uses a non-reentrant model
  6236 ;;
  6237                           
  6238                           	psect	text18
  6239  00EBEE                     __ptext18:
  6240                           	callstack 0
  6241  00EBEE                     ___fladd:
  6242                           	callstack 25
  6243  00EBEE  5004               	movf	(___fladd@b+3)^0,w,c
  6244  00EBF0  0B80               	andlw	128
  6245  00EBF2  6E0D               	movwf	___fladd@signs^0,c
  6246  00EBF4  5004               	movf	(___fladd@b+3)^0,w,c
  6247  00EBF6  2404               	addwf	(___fladd@b+3)^0,w,c
  6248  00EBF8  6E0F               	movwf	___fladd@bexp^0,c
  6249  00EBFA  AE03               	btfss	(___fladd@b+2)^0,7,c
  6250  00EBFC  EF02  F076         	goto	u3471
  6251  00EC00  EF04  F076         	goto	u3470
  6252  00EC04                     u3471:
  6253  00EC04  EF05  F076         	goto	l4731
  6254  00EC08                     u3470:
  6255  00EC08  800F               	bsf	___fladd@bexp^0,0,c
  6256  00EC0A                     l4731:
  6257  00EC0A  500F               	movf	___fladd@bexp^0,w,c
  6258  00EC0C  B4D8               	btfsc	status,2,c
  6259  00EC0E  EF0B  F076         	goto	u3481
  6260  00EC12  EF0D  F076         	goto	u3480
  6261  00EC16                     u3481:
  6262  00EC16  EF22  F076         	goto	l4741
  6263  00EC1A                     u3480:
  6264  00EC1A  280F               	incf	___fladd@bexp^0,w,c
  6265  00EC1C  A4D8               	btfss	status,2,c
  6266  00EC1E  EF13  F076         	goto	u3491
  6267  00EC22  EF15  F076         	goto	u3490
  6268  00EC26                     u3491:
  6269  00EC26  EF1D  F076         	goto	l4737
  6270  00EC2A                     u3490:
  6271  00EC2A  0E00               	movlw	0
  6272  00EC2C  6E01               	movwf	___fladd@b^0,c
  6273  00EC2E  0E00               	movlw	0
  6274  00EC30  6E02               	movwf	(___fladd@b+1)^0,c
  6275  00EC32  0E00               	movlw	0
  6276  00EC34  6E03               	movwf	(___fladd@b+2)^0,c
  6277  00EC36  0E00               	movlw	0
  6278  00EC38  6E04               	movwf	(___fladd@b+3)^0,c
  6279  00EC3A                     l4737:
  6280  00EC3A  8E03               	bsf	(___fladd@b+2)^0,7,c
  6281  00EC3C  0E00               	movlw	0
  6282  00EC3E  6E04               	movwf	(___fladd@b+3)^0,c
  6283  00EC40  EF2A  F076         	goto	l4743
  6284  00EC44                     l4741:
  6285  00EC44  0E00               	movlw	0
  6286  00EC46  6E01               	movwf	___fladd@b^0,c
  6287  00EC48  0E00               	movlw	0
  6288  00EC4A  6E02               	movwf	(___fladd@b+1)^0,c
  6289  00EC4C  0E00               	movlw	0
  6290  00EC4E  6E03               	movwf	(___fladd@b+2)^0,c
  6291  00EC50  0E00               	movlw	0
  6292  00EC52  6E04               	movwf	(___fladd@b+3)^0,c
  6293  00EC54                     l4743:
  6294  00EC54  5008               	movf	(___fladd@a+3)^0,w,c
  6295  00EC56  0B80               	andlw	128
  6296  00EC58  6E0E               	movwf	___fladd@aexp^0,c
  6297  00EC5A  500D               	movf	___fladd@signs^0,w,c
  6298  00EC5C  180E               	xorwf	___fladd@aexp^0,w,c
  6299  00EC5E  B4D8               	btfsc	status,2,c
  6300  00EC60  EF34  F076         	goto	u3501
  6301  00EC64  EF36  F076         	goto	u3500
  6302  00EC68                     u3501:
  6303  00EC68  EF37  F076         	goto	l4749
  6304  00EC6C                     u3500:
  6305  00EC6C  8C0D               	bsf	___fladd@signs^0,6,c
  6306  00EC6E                     l4749:
  6307  00EC6E  5008               	movf	(___fladd@a+3)^0,w,c
  6308  00EC70  2408               	addwf	(___fladd@a+3)^0,w,c
  6309  00EC72  6E0E               	movwf	___fladd@aexp^0,c
  6310  00EC74  AE07               	btfss	(___fladd@a+2)^0,7,c
  6311  00EC76  EF3F  F076         	goto	u3511
  6312  00EC7A  EF41  F076         	goto	u3510
  6313  00EC7E                     u3511:
  6314  00EC7E  EF42  F076         	goto	l4755
  6315  00EC82                     u3510:
  6316  00EC82  800E               	bsf	___fladd@aexp^0,0,c
  6317  00EC84                     l4755:
  6318  00EC84  500E               	movf	___fladd@aexp^0,w,c
  6319  00EC86  B4D8               	btfsc	status,2,c
  6320  00EC88  EF48  F076         	goto	u3521
  6321  00EC8C  EF4A  F076         	goto	u3520
  6322  00EC90                     u3521:
  6323  00EC90  EF5F  F076         	goto	l4765
  6324  00EC94                     u3520:
  6325  00EC94  280E               	incf	___fladd@aexp^0,w,c
  6326  00EC96  A4D8               	btfss	status,2,c
  6327  00EC98  EF50  F076         	goto	u3531
  6328  00EC9C  EF52  F076         	goto	u3530
  6329  00ECA0                     u3531:
  6330  00ECA0  EF5A  F076         	goto	l4761
  6331  00ECA4                     u3530:
  6332  00ECA4  0E00               	movlw	0
  6333  00ECA6  6E05               	movwf	___fladd@a^0,c
  6334  00ECA8  0E00               	movlw	0
  6335  00ECAA  6E06               	movwf	(___fladd@a+1)^0,c
  6336  00ECAC  0E00               	movlw	0
  6337  00ECAE  6E07               	movwf	(___fladd@a+2)^0,c
  6338  00ECB0  0E00               	movlw	0
  6339  00ECB2  6E08               	movwf	(___fladd@a+3)^0,c
  6340  00ECB4                     l4761:
  6341  00ECB4  8E07               	bsf	(___fladd@a+2)^0,7,c
  6342  00ECB6  0E00               	movlw	0
  6343  00ECB8  6E08               	movwf	(___fladd@a+3)^0,c
  6344  00ECBA  EF67  F076         	goto	l4767
  6345  00ECBE                     l4765:
  6346  00ECBE  0E00               	movlw	0
  6347  00ECC0  6E05               	movwf	___fladd@a^0,c
  6348  00ECC2  0E00               	movlw	0
  6349  00ECC4  6E06               	movwf	(___fladd@a+1)^0,c
  6350  00ECC6  0E00               	movlw	0
  6351  00ECC8  6E07               	movwf	(___fladd@a+2)^0,c
  6352  00ECCA  0E00               	movlw	0
  6353  00ECCC  6E08               	movwf	(___fladd@a+3)^0,c
  6354  00ECCE                     l4767:
  6355  00ECCE  500F               	movf	___fladd@bexp^0,w,c
  6356  00ECD0  5C0E               	subwf	___fladd@aexp^0,w,c
  6357  00ECD2  B0D8               	btfsc	status,0,c
  6358  00ECD4  EF6E  F076         	goto	u3541
  6359  00ECD8  EF70  F076         	goto	u3540
  6360  00ECDC                     u3541:
  6361  00ECDC  EF97  F076         	goto	l4803
  6362  00ECE0                     u3540:
  6363  00ECE0  AC0D               	btfss	___fladd@signs^0,6,c
  6364  00ECE2  EF75  F076         	goto	u3551
  6365  00ECE6  EF77  F076         	goto	u3550
  6366  00ECEA                     u3551:
  6367  00ECEA  EF79  F076         	goto	l4773
  6368  00ECEE                     u3550:
  6369  00ECEE  0E80               	movlw	128
  6370  00ECF0  1A0D               	xorwf	___fladd@signs^0,f,c
  6371  00ECF2                     l4773:
  6372  00ECF2  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6373  00ECF6  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6374  00ECFA  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6375  00ECFE  C001  F010         	movff	___fladd@b,___fladd@grs
  6376  00ED02  C005  F001         	movff	___fladd@a,___fladd@b
  6377  00ED06  C010  F005         	movff	___fladd@grs,___fladd@a
  6378  00ED0A  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6379  00ED0E  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6380  00ED12  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6381  00ED16  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6382  00ED1A  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6383  00ED1E  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6384  00ED22  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6385  00ED26  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6386  00ED2A  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6387  00ED2E                     l4803:
  6388  00ED2E  0E00               	movlw	0
  6389  00ED30  6E10               	movwf	___fladd@grs^0,c
  6390  00ED32  500F               	movf	___fladd@bexp^0,w,c
  6391  00ED34  C00E  F009         	movff	___fladd@aexp,??___fladd
  6392  00ED38  6A0A               	clrf	(??___fladd+1)^0,c
  6393  00ED3A  5E09               	subwf	??___fladd^0,f,c
  6394  00ED3C  0E00               	movlw	0
  6395  00ED3E  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6396  00ED40  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6397  00ED42  EFAC  F076         	goto	u3561
  6398  00ED46  500A               	movf	(??___fladd+1)^0,w,c
  6399  00ED48  E109               	bnz	u3560
  6400  00ED4A  0E1A               	movlw	26
  6401  00ED4C  5C09               	subwf	??___fladd^0,w,c
  6402  00ED4E  A0D8               	btfss	status,0,c
  6403  00ED50  EFAC  F076         	goto	u3561
  6404  00ED54  EFAE  F076         	goto	u3560
  6405  00ED58                     u3561:
  6406  00ED58  EFE5  F076         	goto	l1390
  6407  00ED5C                     u3560:
  6408  00ED5C  5001               	movf	___fladd@b^0,w,c
  6409  00ED5E  1002               	iorwf	(___fladd@b+1)^0,w,c
  6410  00ED60  1003               	iorwf	(___fladd@b+2)^0,w,c
  6411  00ED62  1004               	iorwf	(___fladd@b+3)^0,w,c
  6412  00ED64  A4D8               	btfss	status,2,c
  6413  00ED66  EFB7  F076         	goto	u3571
  6414  00ED6A  EFBA  F076         	goto	u3570
  6415  00ED6E                     u3571:
  6416  00ED6E  0E01               	movlw	1
  6417  00ED70  EFBB  F076         	goto	u3580
  6418  00ED74                     u3570:
  6419  00ED74  0E00               	movlw	0
  6420  00ED76                     u3580:
  6421  00ED76  6E10               	movwf	___fladd@grs^0,c
  6422  00ED78  0E00               	movlw	0
  6423  00ED7A  6E01               	movwf	___fladd@b^0,c
  6424  00ED7C  0E00               	movlw	0
  6425  00ED7E  6E02               	movwf	(___fladd@b+1)^0,c
  6426  00ED80  0E00               	movlw	0
  6427  00ED82  6E03               	movwf	(___fladd@b+2)^0,c
  6428  00ED84  0E00               	movlw	0
  6429  00ED86  6E04               	movwf	(___fladd@b+3)^0,c
  6430  00ED88  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6431  00ED8C  EFEE  F076         	goto	l1389
  6432  00ED90                     l1391:
  6433  00ED90  A010               	btfss	___fladd@grs^0,0,c
  6434  00ED92  EFCD  F076         	goto	u3591
  6435  00ED96  EFCF  F076         	goto	u3590
  6436  00ED9A                     u3591:
  6437  00ED9A  EFD5  F076         	goto	l4815
  6438  00ED9E                     u3590:
  6439  00ED9E  90D8               	bcf	status,0,c
  6440  00EDA0  3010               	rrcf	___fladd@grs^0,w,c
  6441  00EDA2  0901               	iorlw	1
  6442  00EDA4  6E10               	movwf	___fladd@grs^0,c
  6443  00EDA6  EFD7  F076         	goto	l4817
  6444  00EDAA                     l4815:
  6445  00EDAA  90D8               	bcf	status,0,c
  6446  00EDAC  3210               	rrcf	___fladd@grs^0,f,c
  6447  00EDAE                     l4817:
  6448  00EDAE  A001               	btfss	___fladd@b^0,0,c
  6449  00EDB0  EFDC  F076         	goto	u3601
  6450  00EDB4  EFDE  F076         	goto	u3600
  6451  00EDB8                     u3601:
  6452  00EDB8  EFDF  F076         	goto	l4821
  6453  00EDBC                     u3600:
  6454  00EDBC  8E10               	bsf	___fladd@grs^0,7,c
  6455  00EDBE                     l4821:
  6456  00EDBE  3404               	rlcf	(___fladd@b+3)^0,w,c
  6457  00EDC0  3204               	rrcf	(___fladd@b+3)^0,f,c
  6458  00EDC2  3203               	rrcf	(___fladd@b+2)^0,f,c
  6459  00EDC4  3202               	rrcf	(___fladd@b+1)^0,f,c
  6460  00EDC6  3201               	rrcf	___fladd@b^0,f,c
  6461  00EDC8  2A0F               	incf	___fladd@bexp^0,f,c
  6462  00EDCA                     l1390:
  6463  00EDCA  500E               	movf	___fladd@aexp^0,w,c
  6464  00EDCC  5C0F               	subwf	___fladd@bexp^0,w,c
  6465  00EDCE  A0D8               	btfss	status,0,c
  6466  00EDD0  EFEC  F076         	goto	u3611
  6467  00EDD4  EFEE  F076         	goto	u3610
  6468  00EDD8                     u3611:
  6469  00EDD8  EFC8  F076         	goto	l1391
  6470  00EDDC                     u3610:
  6471  00EDDC                     l1389:
  6472  00EDDC  BC0D               	btfsc	___fladd@signs^0,6,c
  6473  00EDDE  EFF3  F076         	goto	u3621
  6474  00EDE2  EFF5  F076         	goto	u3620
  6475  00EDE6                     u3621:
  6476  00EDE6  EF35  F077         	goto	l4849
  6477  00EDEA                     u3620:
  6478  00EDEA  500F               	movf	___fladd@bexp^0,w,c
  6479  00EDEC  A4D8               	btfss	status,2,c
  6480  00EDEE  EFFB  F076         	goto	u3631
  6481  00EDF2  EFFD  F076         	goto	u3630
  6482  00EDF6                     u3631:
  6483  00EDF6  EF07  F077         	goto	l4831
  6484  00EDFA                     u3630:
  6485  00EDFA  0E00               	movlw	0
  6486  00EDFC  6E01               	movwf	?___fladd^0,c
  6487  00EDFE  0E00               	movlw	0
  6488  00EE00  6E02               	movwf	(?___fladd+1)^0,c
  6489  00EE02  0E00               	movlw	0
  6490  00EE04  6E03               	movwf	(?___fladd+2)^0,c
  6491  00EE06  0E00               	movlw	0
  6492  00EE08  6E04               	movwf	(?___fladd+3)^0,c
  6493  00EE0A  EF56  F078         	goto	l1398
  6494  00EE0E                     l4831:
  6495  00EE0E  5005               	movf	___fladd@a^0,w,c
  6496  00EE10  2601               	addwf	___fladd@b^0,f,c
  6497  00EE12  5006               	movf	(___fladd@a+1)^0,w,c
  6498  00EE14  2202               	addwfc	(___fladd@b+1)^0,f,c
  6499  00EE16  5007               	movf	(___fladd@a+2)^0,w,c
  6500  00EE18  2203               	addwfc	(___fladd@b+2)^0,f,c
  6501  00EE1A  5008               	movf	(___fladd@a+3)^0,w,c
  6502  00EE1C  2204               	addwfc	(___fladd@b+3)^0,f,c
  6503  00EE1E  A004               	btfss	(___fladd@b+3)^0,0,c
  6504  00EE20  EF14  F077         	goto	u3641
  6505  00EE24  EF16  F077         	goto	u3640
  6506  00EE28                     u3641:
  6507  00EE28  EFC2  F077         	goto	l4885
  6508  00EE2C                     u3640:
  6509  00EE2C  A010               	btfss	___fladd@grs^0,0,c
  6510  00EE2E  EF1B  F077         	goto	u3651
  6511  00EE32  EF1D  F077         	goto	u3650
  6512  00EE36                     u3651:
  6513  00EE36  EF23  F077         	goto	l4839
  6514  00EE3A                     u3650:
  6515  00EE3A  90D8               	bcf	status,0,c
  6516  00EE3C  3010               	rrcf	___fladd@grs^0,w,c
  6517  00EE3E  0901               	iorlw	1
  6518  00EE40  6E10               	movwf	___fladd@grs^0,c
  6519  00EE42  EF25  F077         	goto	l4841
  6520  00EE46                     l4839:
  6521  00EE46  90D8               	bcf	status,0,c
  6522  00EE48  3210               	rrcf	___fladd@grs^0,f,c
  6523  00EE4A                     l4841:
  6524  00EE4A  A001               	btfss	___fladd@b^0,0,c
  6525  00EE4C  EF2A  F077         	goto	u3661
  6526  00EE50  EF2C  F077         	goto	u3660
  6527  00EE54                     u3661:
  6528  00EE54  EF2D  F077         	goto	l4845
  6529  00EE58                     u3660:
  6530  00EE58  8E10               	bsf	___fladd@grs^0,7,c
  6531  00EE5A                     l4845:
  6532  00EE5A  3404               	rlcf	(___fladd@b+3)^0,w,c
  6533  00EE5C  3204               	rrcf	(___fladd@b+3)^0,f,c
  6534  00EE5E  3203               	rrcf	(___fladd@b+2)^0,f,c
  6535  00EE60  3202               	rrcf	(___fladd@b+1)^0,f,c
  6536  00EE62  3201               	rrcf	___fladd@b^0,f,c
  6537  00EE64  2A0F               	incf	___fladd@bexp^0,f,c
  6538  00EE66  EFC2  F077         	goto	l4885
  6539  00EE6A                     l4849:
  6540  00EE6A  5005               	movf	___fladd@a^0,w,c
  6541  00EE6C  5C01               	subwf	___fladd@b^0,w,c
  6542  00EE6E  5006               	movf	(___fladd@a+1)^0,w,c
  6543  00EE70  5802               	subwfb	(___fladd@b+1)^0,w,c
  6544  00EE72  5007               	movf	(___fladd@a+2)^0,w,c
  6545  00EE74  5803               	subwfb	(___fladd@b+2)^0,w,c
  6546  00EE76  5004               	movf	(___fladd@b+3)^0,w,c
  6547  00EE78  0A80               	xorlw	128
  6548  00EE7A  6E09               	movwf	??___fladd^0,c
  6549  00EE7C  5008               	movf	(___fladd@a+3)^0,w,c
  6550  00EE7E  0A80               	xorlw	128
  6551  00EE80  5809               	subwfb	??___fladd^0,w,c
  6552  00EE82  B0D8               	btfsc	status,0,c
  6553  00EE84  EF46  F077         	goto	u3671
  6554  00EE88  EF48  F077         	goto	u3670
  6555  00EE8C                     u3671:
  6556  00EE8C  EF73  F077         	goto	l4859
  6557  00EE90                     u3670:
  6558  00EE90  5001               	movf	___fladd@b^0,w,c
  6559  00EE92  5C05               	subwf	___fladd@a^0,w,c
  6560  00EE94  6E09               	movwf	??___fladd^0,c
  6561  00EE96  5002               	movf	(___fladd@b+1)^0,w,c
  6562  00EE98  5806               	subwfb	(___fladd@a+1)^0,w,c
  6563  00EE9A  6E0A               	movwf	(??___fladd+1)^0,c
  6564  00EE9C  5003               	movf	(___fladd@b+2)^0,w,c
  6565  00EE9E  5807               	subwfb	(___fladd@a+2)^0,w,c
  6566  00EEA0  6E0B               	movwf	(??___fladd+2)^0,c
  6567  00EEA2  5004               	movf	(___fladd@b+3)^0,w,c
  6568  00EEA4  5808               	subwfb	(___fladd@a+3)^0,w,c
  6569  00EEA6  6E0C               	movwf	(??___fladd+3)^0,c
  6570  00EEA8  0EFF               	movlw	255
  6571  00EEAA  2409               	addwf	??___fladd^0,w,c
  6572  00EEAC  6E01               	movwf	___fladd@b^0,c
  6573  00EEAE  0EFF               	movlw	255
  6574  00EEB0  200A               	addwfc	(??___fladd+1)^0,w,c
  6575  00EEB2  6E02               	movwf	(___fladd@b+1)^0,c
  6576  00EEB4  0EFF               	movlw	255
  6577  00EEB6  200B               	addwfc	(??___fladd+2)^0,w,c
  6578  00EEB8  6E03               	movwf	(___fladd@b+2)^0,c
  6579  00EEBA  0EFF               	movlw	255
  6580  00EEBC  200C               	addwfc	(??___fladd+3)^0,w,c
  6581  00EEBE  6E04               	movwf	(___fladd@b+3)^0,c
  6582  00EEC0  0E80               	movlw	128
  6583  00EEC2  1A0D               	xorwf	___fladd@signs^0,f,c
  6584  00EEC4  6C10               	negf	___fladd@grs^0,c
  6585  00EEC6  5010               	movf	___fladd@grs^0,w,c
  6586  00EEC8  A4D8               	btfss	status,2,c
  6587  00EECA  EF69  F077         	goto	u3681
  6588  00EECE  EF6B  F077         	goto	u3680
  6589  00EED2                     u3681:
  6590  00EED2  EF7B  F077         	goto	l1406
  6591  00EED6                     u3680:
  6592  00EED6  0E01               	movlw	1
  6593  00EED8  2601               	addwf	___fladd@b^0,f,c
  6594  00EEDA  0E00               	movlw	0
  6595  00EEDC  2202               	addwfc	(___fladd@b+1)^0,f,c
  6596  00EEDE  2203               	addwfc	(___fladd@b+2)^0,f,c
  6597  00EEE0  2204               	addwfc	(___fladd@b+3)^0,f,c
  6598  00EEE2  EF7B  F077         	goto	l1406
  6599  00EEE6                     l4859:
  6600  00EEE6  5005               	movf	___fladd@a^0,w,c
  6601  00EEE8  5E01               	subwf	___fladd@b^0,f,c
  6602  00EEEA  5006               	movf	(___fladd@a+1)^0,w,c
  6603  00EEEC  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6604  00EEEE  5007               	movf	(___fladd@a+2)^0,w,c
  6605  00EEF0  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6606  00EEF2  5008               	movf	(___fladd@a+3)^0,w,c
  6607  00EEF4  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6608  00EEF6                     l1406:
  6609  00EEF6  5001               	movf	___fladd@b^0,w,c
  6610  00EEF8  1002               	iorwf	(___fladd@b+1)^0,w,c
  6611  00EEFA  1003               	iorwf	(___fladd@b+2)^0,w,c
  6612  00EEFC  1004               	iorwf	(___fladd@b+3)^0,w,c
  6613  00EEFE  A4D8               	btfss	status,2,c
  6614  00EF00  EF84  F077         	goto	u3691
  6615  00EF04  EF86  F077         	goto	u3690
  6616  00EF08                     u3691:
  6617  00EF08  EFBB  F077         	goto	l4883
  6618  00EF0C                     u3690:
  6619  00EF0C  5010               	movf	___fladd@grs^0,w,c
  6620  00EF0E  A4D8               	btfss	status,2,c
  6621  00EF10  EF8C  F077         	goto	u3701
  6622  00EF14  EF8E  F077         	goto	u3700
  6623  00EF18                     u3701:
  6624  00EF18  EFBB  F077         	goto	l4883
  6625  00EF1C                     u3700:
  6626  00EF1C  0E00               	movlw	0
  6627  00EF1E  6E01               	movwf	?___fladd^0,c
  6628  00EF20  0E00               	movlw	0
  6629  00EF22  6E02               	movwf	(?___fladd+1)^0,c
  6630  00EF24  0E00               	movlw	0
  6631  00EF26  6E03               	movwf	(?___fladd+2)^0,c
  6632  00EF28  0E00               	movlw	0
  6633  00EF2A  6E04               	movwf	(?___fladd+3)^0,c
  6634  00EF2C  EF56  F078         	goto	l1398
  6635  00EF30                     l4867:
  6636  00EF30  90D8               	bcf	status,0,c
  6637  00EF32  3601               	rlcf	___fladd@b^0,f,c
  6638  00EF34  3602               	rlcf	(___fladd@b+1)^0,f,c
  6639  00EF36  3603               	rlcf	(___fladd@b+2)^0,f,c
  6640  00EF38  3604               	rlcf	(___fladd@b+3)^0,f,c
  6641  00EF3A  AE10               	btfss	___fladd@grs^0,7,c
  6642  00EF3C  EFA2  F077         	goto	u3711
  6643  00EF40  EFA4  F077         	goto	u3710
  6644  00EF44                     u3711:
  6645  00EF44  EFA5  F077         	goto	l4873
  6646  00EF48                     u3710:
  6647  00EF48  8001               	bsf	___fladd@b^0,0,c
  6648  00EF4A                     l4873:
  6649  00EF4A  A010               	btfss	___fladd@grs^0,0,c
  6650  00EF4C  EFAA  F077         	goto	u3721
  6651  00EF50  EFAC  F077         	goto	u3720
  6652  00EF54                     u3721:
  6653  00EF54  EFB0  F077         	goto	l4877
  6654  00EF58                     u3720:
  6655  00EF58  80D8               	bsf	status,0,c
  6656  00EF5A  3610               	rlcf	___fladd@grs^0,f,c
  6657  00EF5C  EFB2  F077         	goto	l4879
  6658  00EF60                     l4877:
  6659  00EF60  90D8               	bcf	status,0,c
  6660  00EF62  3610               	rlcf	___fladd@grs^0,f,c
  6661  00EF64                     l4879:
  6662  00EF64  500F               	movf	___fladd@bexp^0,w,c
  6663  00EF66  B4D8               	btfsc	status,2,c
  6664  00EF68  EFB8  F077         	goto	u3731
  6665  00EF6C  EFBA  F077         	goto	u3730
  6666  00EF70                     u3731:
  6667  00EF70  EFBB  F077         	goto	l4883
  6668  00EF74                     u3730:
  6669  00EF74  060F               	decf	___fladd@bexp^0,f,c
  6670  00EF76                     l4883:
  6671  00EF76  AE03               	btfss	(___fladd@b+2)^0,7,c
  6672  00EF78  EFC0  F077         	goto	u3741
  6673  00EF7C  EFC2  F077         	goto	u3740
  6674  00EF80                     u3741:
  6675  00EF80  EF98  F077         	goto	l4867
  6676  00EF84                     u3740:
  6677  00EF84                     l4885:
  6678  00EF84  0E00               	movlw	0
  6679  00EF86  6E0E               	movwf	___fladd@aexp^0,c
  6680  00EF88  AE10               	btfss	___fladd@grs^0,7,c
  6681  00EF8A  EFC9  F077         	goto	u3751
  6682  00EF8E  EFCB  F077         	goto	u3750
  6683  00EF92                     u3751:
  6684  00EF92  EFE3  F077         	goto	l1415
  6685  00EF96                     u3750:
  6686  00EF96  C010  F009         	movff	___fladd@grs,??___fladd
  6687  00EF9A  0E7F               	movlw	127
  6688  00EF9C  1609               	andwf	??___fladd^0,f,c
  6689  00EF9E  B4D8               	btfsc	status,2,c
  6690  00EFA0  EFD4  F077         	goto	u3761
  6691  00EFA4  EFD6  F077         	goto	u3760
  6692  00EFA8                     u3761:
  6693  00EFA8  EFDA  F077         	goto	l1416
  6694  00EFAC                     u3760:
  6695  00EFAC                     l4891:
  6696  00EFAC  0E01               	movlw	1
  6697  00EFAE  6E0E               	movwf	___fladd@aexp^0,c
  6698  00EFB0  EFE3  F077         	goto	l1415
  6699  00EFB4                     l1416:
  6700  00EFB4  A001               	btfss	___fladd@b^0,0,c
  6701  00EFB6  EFDF  F077         	goto	u3771
  6702  00EFBA  EFE1  F077         	goto	u3770
  6703  00EFBE                     u3771:
  6704  00EFBE  EFE3  F077         	goto	l1415
  6705  00EFC2                     u3770:
  6706  00EFC2  EFD6  F077         	goto	l4891
  6707  00EFC6                     l1415:
  6708  00EFC6  500E               	movf	___fladd@aexp^0,w,c
  6709  00EFC8  B4D8               	btfsc	status,2,c
  6710  00EFCA  EFE9  F077         	goto	u3781
  6711  00EFCE  EFEB  F077         	goto	u3780
  6712  00EFD2                     u3781:
  6713  00EFD2  EF16  F078         	goto	l4903
  6714  00EFD6                     u3780:
  6715  00EFD6  0E01               	movlw	1
  6716  00EFD8  2601               	addwf	___fladd@b^0,f,c
  6717  00EFDA  0E00               	movlw	0
  6718  00EFDC  2202               	addwfc	(___fladd@b+1)^0,f,c
  6719  00EFDE  2203               	addwfc	(___fladd@b+2)^0,f,c
  6720  00EFE0  2204               	addwfc	(___fladd@b+3)^0,f,c
  6721  00EFE2  A004               	btfss	(___fladd@b+3)^0,0,c
  6722  00EFE4  EFF6  F077         	goto	u3791
  6723  00EFE8  EFF8  F077         	goto	u3790
  6724  00EFEC                     u3791:
  6725  00EFEC  EF16  F078         	goto	l4903
  6726  00EFF0                     u3790:
  6727  00EFF0  C001  F009         	movff	___fladd@b,??___fladd
  6728  00EFF4  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6729  00EFF8  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6730  00EFFC  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6731  00F000  340C               	rlcf	(??___fladd+3)^0,w,c
  6732  00F002  320C               	rrcf	(??___fladd+3)^0,f,c
  6733  00F004  320B               	rrcf	(??___fladd+2)^0,f,c
  6734  00F006  320A               	rrcf	(??___fladd+1)^0,f,c
  6735  00F008  3209               	rrcf	??___fladd^0,f,c
  6736  00F00A  C009  F001         	movff	??___fladd,___fladd@b
  6737  00F00E  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6738  00F012  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6739  00F016  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6740  00F01A  280F               	incf	___fladd@bexp^0,w,c
  6741  00F01C  B4D8               	btfsc	status,2,c
  6742  00F01E  EF13  F078         	goto	u3801
  6743  00F022  EF15  F078         	goto	u3800
  6744  00F026                     u3801:
  6745  00F026  EF16  F078         	goto	l4903
  6746  00F02A                     u3800:
  6747  00F02A  2A0F               	incf	___fladd@bexp^0,f,c
  6748  00F02C                     l4903:
  6749  00F02C  280F               	incf	___fladd@bexp^0,w,c
  6750  00F02E  B4D8               	btfsc	status,2,c
  6751  00F030  EF1C  F078         	goto	u3811
  6752  00F034  EF1E  F078         	goto	u3810
  6753  00F038                     u3811:
  6754  00F038  EF26  F078         	goto	l4907
  6755  00F03C                     u3810:
  6756  00F03C  500F               	movf	___fladd@bexp^0,w,c
  6757  00F03E  A4D8               	btfss	status,2,c
  6758  00F040  EF24  F078         	goto	u3821
  6759  00F044  EF26  F078         	goto	u3820
  6760  00F048                     u3821:
  6761  00F048  EF38  F078         	goto	l4911
  6762  00F04C                     u3820:
  6763  00F04C                     l4907:
  6764  00F04C  0E00               	movlw	0
  6765  00F04E  6E01               	movwf	___fladd@b^0,c
  6766  00F050  0E00               	movlw	0
  6767  00F052  6E02               	movwf	(___fladd@b+1)^0,c
  6768  00F054  0E00               	movlw	0
  6769  00F056  6E03               	movwf	(___fladd@b+2)^0,c
  6770  00F058  0E00               	movlw	0
  6771  00F05A  6E04               	movwf	(___fladd@b+3)^0,c
  6772  00F05C  500F               	movf	___fladd@bexp^0,w,c
  6773  00F05E  A4D8               	btfss	status,2,c
  6774  00F060  EF34  F078         	goto	u3831
  6775  00F064  EF36  F078         	goto	u3830
  6776  00F068                     u3831:
  6777  00F068  EF38  F078         	goto	l4911
  6778  00F06C                     u3830:
  6779  00F06C  0E00               	movlw	0
  6780  00F06E  6E0D               	movwf	___fladd@signs^0,c
  6781  00F070                     l4911:
  6782  00F070  A00F               	btfss	___fladd@bexp^0,0,c
  6783  00F072  EF3D  F078         	goto	u3841
  6784  00F076  EF3F  F078         	goto	u3840
  6785  00F07A                     u3841:
  6786  00F07A  EF42  F078         	goto	l4915
  6787  00F07E                     u3840:
  6788  00F07E  8E03               	bsf	(___fladd@b+2)^0,7,c
  6789  00F080  EF43  F078         	goto	l4917
  6790  00F084                     l4915:
  6791  00F084  9E03               	bcf	(___fladd@b+2)^0,7,c
  6792  00F086                     l4917:
  6793  00F086  90D8               	bcf	status,0,c
  6794  00F088  300F               	rrcf	___fladd@bexp^0,w,c
  6795  00F08A  6E04               	movwf	(___fladd@b+3)^0,c
  6796  00F08C  AE0D               	btfss	___fladd@signs^0,7,c
  6797  00F08E  EF4B  F078         	goto	u3851
  6798  00F092  EF4D  F078         	goto	u3850
  6799  00F096                     u3851:
  6800  00F096  EF4E  F078         	goto	l4923
  6801  00F09A                     u3850:
  6802  00F09A  8E04               	bsf	(___fladd@b+3)^0,7,c
  6803  00F09C                     l4923:
  6804  00F09C  C001  F001         	movff	___fladd@b,?___fladd
  6805  00F0A0  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6806  00F0A4  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6807  00F0A8  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6808  00F0AC                     l1398:
  6809  00F0AC  0012               	return		;funcret
  6810  00F0AE                     __end_of___fladd:
  6811                           	callstack 0
  6812                           
  6813 ;; *************** function ___flneg *****************
  6814 ;; Defined at:
  6815 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6816 ;; Parameters:    Size  Location     Type
  6817 ;;  f1              4    0[COMRAM] unsigned char 
  6818 ;; Auto vars:     Size  Location     Type
  6819 ;;		None
  6820 ;; Return value:  Size  Location     Type
  6821 ;;                  4    0[COMRAM] unsigned char 
  6822 ;; Registers used:
  6823 ;;		wreg, status,2, status,0
  6824 ;; Tracked objects:
  6825 ;;		On entry : 0/0
  6826 ;;		On exit  : 0/0
  6827 ;;		Unchanged: 0/0
  6828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6829 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6832 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6833 ;;Total ram usage:        4 bytes
  6834 ;; Hardware stack levels used: 1
  6835 ;; This function calls:
  6836 ;;		Nothing
  6837 ;; This function is called by:
  6838 ;;		_efgtoa
  6839 ;; This function uses a non-reentrant model
  6840 ;;
  6841                           
  6842                           	psect	text19
  6843  00C3D8                     __ptext19:
  6844                           	callstack 0
  6845  00C3D8                     ___flneg:
  6846                           	callstack 26
  6847  00C3D8  5001               	movf	___flneg@f1^0,w,c
  6848  00C3DA  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6849  00C3DC  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6850  00C3DE  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6851  00C3E0  B4D8               	btfsc	status,2,c
  6852  00C3E2  EFF5  F061         	goto	u4541
  6853  00C3E6  EFF7  F061         	goto	u4540
  6854  00C3EA                     u4541:
  6855  00C3EA  EFFF  F061         	goto	l5419
  6856  00C3EE                     u4540:
  6857  00C3EE  0E00               	movlw	0
  6858  00C3F0  1A01               	xorwf	___flneg@f1^0,f,c
  6859  00C3F2  0E00               	movlw	0
  6860  00C3F4  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6861  00C3F6  0E00               	movlw	0
  6862  00C3F8  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6863  00C3FA  0E80               	movlw	128
  6864  00C3FC  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6865  00C3FE                     l5419:
  6866  00C3FE  C001  F001         	movff	___flneg@f1,?___flneg
  6867  00C402  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6868  00C406  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6869  00C40A  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6870  00C40E  0012               	return		;funcret
  6871  00C410                     __end_of___flneg:
  6872                           	callstack 0
  6873                           
  6874 ;; *************** function ___flge *****************
  6875 ;; Defined at:
  6876 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6877 ;; Parameters:    Size  Location     Type
  6878 ;;  ff1             4   45[COMRAM] unsigned char 
  6879 ;;  ff2             4   49[COMRAM] unsigned char 
  6880 ;; Auto vars:     Size  Location     Type
  6881 ;;		None
  6882 ;; Return value:  Size  Location     Type
  6883 ;;		None               void
  6884 ;; Registers used:
  6885 ;;		wreg, status,2, status,0
  6886 ;; Tracked objects:
  6887 ;;		On entry : 0/0
  6888 ;;		On exit  : 0/0
  6889 ;;		Unchanged: 0/0
  6890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6891 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6893 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6894 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6895 ;;Total ram usage:       12 bytes
  6896 ;; Hardware stack levels used: 1
  6897 ;; This function calls:
  6898 ;;		Nothing
  6899 ;; This function is called by:
  6900 ;;		_efgtoa
  6901 ;; This function uses a non-reentrant model
  6902 ;;
  6903                           
  6904                           	psect	text20
  6905  00D628                     __ptext20:
  6906                           	callstack 0
  6907  00D628                     ___flge:
  6908                           	callstack 26
  6909  00D628  0E00               	movlw	0
  6910  00D62A  142E               	andwf	___flge@ff1^0,w,c
  6911  00D62C  6E36               	movwf	??___flge^0,c
  6912  00D62E  0E00               	movlw	0
  6913  00D630  142F               	andwf	(___flge@ff1+1)^0,w,c
  6914  00D632  6E37               	movwf	(??___flge+1)^0,c
  6915  00D634  0E80               	movlw	128
  6916  00D636  1430               	andwf	(___flge@ff1+2)^0,w,c
  6917  00D638  6E38               	movwf	(??___flge+2)^0,c
  6918  00D63A  0E7F               	movlw	127
  6919  00D63C  1431               	andwf	(___flge@ff1+3)^0,w,c
  6920  00D63E  6E39               	movwf	(??___flge+3)^0,c
  6921  00D640  5036               	movf	??___flge^0,w,c
  6922  00D642  1037               	iorwf	(??___flge+1)^0,w,c
  6923  00D644  1038               	iorwf	(??___flge+2)^0,w,c
  6924  00D646  1039               	iorwf	(??___flge+3)^0,w,c
  6925  00D648  A4D8               	btfss	status,2,c
  6926  00D64A  EF29  F06B         	goto	u4491
  6927  00D64E  EF2B  F06B         	goto	u4490
  6928  00D652                     u4491:
  6929  00D652  EF33  F06B         	goto	l5397
  6930  00D656                     u4490:
  6931  00D656  0E00               	movlw	0
  6932  00D658  6E2E               	movwf	___flge@ff1^0,c
  6933  00D65A  0E00               	movlw	0
  6934  00D65C  6E2F               	movwf	(___flge@ff1+1)^0,c
  6935  00D65E  0E00               	movlw	0
  6936  00D660  6E30               	movwf	(___flge@ff1+2)^0,c
  6937  00D662  0E00               	movlw	0
  6938  00D664  6E31               	movwf	(___flge@ff1+3)^0,c
  6939  00D666                     l5397:
  6940  00D666  0E00               	movlw	0
  6941  00D668  1432               	andwf	___flge@ff2^0,w,c
  6942  00D66A  6E36               	movwf	??___flge^0,c
  6943  00D66C  0E00               	movlw	0
  6944  00D66E  1433               	andwf	(___flge@ff2+1)^0,w,c
  6945  00D670  6E37               	movwf	(??___flge+1)^0,c
  6946  00D672  0E80               	movlw	128
  6947  00D674  1434               	andwf	(___flge@ff2+2)^0,w,c
  6948  00D676  6E38               	movwf	(??___flge+2)^0,c
  6949  00D678  0E7F               	movlw	127
  6950  00D67A  1435               	andwf	(___flge@ff2+3)^0,w,c
  6951  00D67C  6E39               	movwf	(??___flge+3)^0,c
  6952  00D67E  5036               	movf	??___flge^0,w,c
  6953  00D680  1037               	iorwf	(??___flge+1)^0,w,c
  6954  00D682  1038               	iorwf	(??___flge+2)^0,w,c
  6955  00D684  1039               	iorwf	(??___flge+3)^0,w,c
  6956  00D686  A4D8               	btfss	status,2,c
  6957  00D688  EF48  F06B         	goto	u4501
  6958  00D68C  EF4A  F06B         	goto	u4500
  6959  00D690                     u4501:
  6960  00D690  EF52  F06B         	goto	l5401
  6961  00D694                     u4500:
  6962  00D694  0E00               	movlw	0
  6963  00D696  6E32               	movwf	___flge@ff2^0,c
  6964  00D698  0E00               	movlw	0
  6965  00D69A  6E33               	movwf	(___flge@ff2+1)^0,c
  6966  00D69C  0E00               	movlw	0
  6967  00D69E  6E34               	movwf	(___flge@ff2+2)^0,c
  6968  00D6A0  0E00               	movlw	0
  6969  00D6A2  6E35               	movwf	(___flge@ff2+3)^0,c
  6970  00D6A4                     l5401:
  6971  00D6A4  AE31               	btfss	(___flge@ff1+3)^0,7,c
  6972  00D6A6  EF57  F06B         	goto	u4511
  6973  00D6AA  EF59  F06B         	goto	u4510
  6974  00D6AE                     u4511:
  6975  00D6AE  EF62  F06B         	goto	l5405
  6976  00D6B2                     u4510:
  6977  00D6B2  6C2E               	negf	___flge@ff1^0,c
  6978  00D6B4  1E2F               	comf	(___flge@ff1+1)^0,f,c
  6979  00D6B6  B0D8               	btfsc	status,0,c
  6980  00D6B8  2A2F               	incf	(___flge@ff1+1)^0,f,c
  6981  00D6BA  1E30               	comf	(___flge@ff1+2)^0,f,c
  6982  00D6BC  B0D8               	btfsc	status,0,c
  6983  00D6BE  2A30               	incf	(___flge@ff1+2)^0,f,c
  6984  00D6C0  0E80               	movlw	128
  6985  00D6C2  5631               	subfwb	(___flge@ff1+3)^0,f,c
  6986  00D6C4                     l5405:
  6987  00D6C4  AE35               	btfss	(___flge@ff2+3)^0,7,c
  6988  00D6C6  EF67  F06B         	goto	u4521
  6989  00D6CA  EF69  F06B         	goto	u4520
  6990  00D6CE                     u4521:
  6991  00D6CE  EF72  F06B         	goto	l1126
  6992  00D6D2                     u4520:
  6993  00D6D2  6C32               	negf	___flge@ff2^0,c
  6994  00D6D4  1E33               	comf	(___flge@ff2+1)^0,f,c
  6995  00D6D6  B0D8               	btfsc	status,0,c
  6996  00D6D8  2A33               	incf	(___flge@ff2+1)^0,f,c
  6997  00D6DA  1E34               	comf	(___flge@ff2+2)^0,f,c
  6998  00D6DC  B0D8               	btfsc	status,0,c
  6999  00D6DE  2A34               	incf	(___flge@ff2+2)^0,f,c
  7000  00D6E0  0E80               	movlw	128
  7001  00D6E2  5635               	subfwb	(___flge@ff2+3)^0,f,c
  7002  00D6E4                     l1126:
  7003  00D6E4  0E00               	movlw	0
  7004  00D6E6  1A2E               	xorwf	___flge@ff1^0,f,c
  7005  00D6E8  0E00               	movlw	0
  7006  00D6EA  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  7007  00D6EC  0E00               	movlw	0
  7008  00D6EE  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  7009  00D6F0  0E80               	movlw	128
  7010  00D6F2  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  7011  00D6F4  0E00               	movlw	0
  7012  00D6F6  1A32               	xorwf	___flge@ff2^0,f,c
  7013  00D6F8  0E00               	movlw	0
  7014  00D6FA  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  7015  00D6FC  0E00               	movlw	0
  7016  00D6FE  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  7017  00D700  0E80               	movlw	128
  7018  00D702  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  7019  00D704  5032               	movf	___flge@ff2^0,w,c
  7020  00D706  5C2E               	subwf	___flge@ff1^0,w,c
  7021  00D708  5033               	movf	(___flge@ff2+1)^0,w,c
  7022  00D70A  582F               	subwfb	(___flge@ff1+1)^0,w,c
  7023  00D70C  5034               	movf	(___flge@ff2+2)^0,w,c
  7024  00D70E  5830               	subwfb	(___flge@ff1+2)^0,w,c
  7025  00D710  5035               	movf	(___flge@ff2+3)^0,w,c
  7026  00D712  5831               	subwfb	(___flge@ff1+3)^0,w,c
  7027  00D714  B0D8               	btfsc	status,0,c
  7028  00D716  EF8F  F06B         	goto	u4531
  7029  00D71A  EF91  F06B         	goto	u4530
  7030  00D71E                     u4531:
  7031  00D71E  EF94  F06B         	goto	l5411
  7032  00D722                     u4530:
  7033  00D722  90D8               	bcf	status,0,c
  7034  00D724  EF95  F06B         	goto	l1131
  7035  00D728                     l5411:
  7036  00D728  80D8               	bsf	status,0,c
  7037  00D72A                     l1131:
  7038  00D72A  0012               	return		;funcret
  7039  00D72C                     __end_of___flge:
  7040                           	callstack 0
  7041                           
  7042 ;; *************** function ___fleq *****************
  7043 ;; Defined at:
  7044 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  7045 ;; Parameters:    Size  Location     Type
  7046 ;;  ff1             4    0[COMRAM] unsigned char 
  7047 ;;  ff2             4    4[COMRAM] unsigned char 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;		None               void
  7052 ;; Registers used:
  7053 ;;		wreg, status,2, status,0
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7059 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7061 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7062 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7063 ;;Total ram usage:       12 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; This function calls:
  7066 ;;		Nothing
  7067 ;; This function is called by:
  7068 ;;		_efgtoa
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           	psect	text21
  7073  00CCE6                     __ptext21:
  7074                           	callstack 0
  7075  00CCE6                     ___fleq:
  7076                           	callstack 26
  7077  00CCE6  0E00               	movlw	0
  7078  00CCE8  1401               	andwf	___fleq@ff1^0,w,c
  7079  00CCEA  6E09               	movwf	??___fleq^0,c
  7080  00CCEC  0E00               	movlw	0
  7081  00CCEE  1402               	andwf	(___fleq@ff1+1)^0,w,c
  7082  00CCF0  6E0A               	movwf	(??___fleq+1)^0,c
  7083  00CCF2  0E80               	movlw	128
  7084  00CCF4  1403               	andwf	(___fleq@ff1+2)^0,w,c
  7085  00CCF6  6E0B               	movwf	(??___fleq+2)^0,c
  7086  00CCF8  0E7F               	movlw	127
  7087  00CCFA  1404               	andwf	(___fleq@ff1+3)^0,w,c
  7088  00CCFC  6E0C               	movwf	(??___fleq+3)^0,c
  7089  00CCFE  5009               	movf	??___fleq^0,w,c
  7090  00CD00  100A               	iorwf	(??___fleq+1)^0,w,c
  7091  00CD02  100B               	iorwf	(??___fleq+2)^0,w,c
  7092  00CD04  100C               	iorwf	(??___fleq+3)^0,w,c
  7093  00CD06  A4D8               	btfss	status,2,c
  7094  00CD08  EF88  F066         	goto	u4461
  7095  00CD0C  EF8A  F066         	goto	u4460
  7096  00CD10                     u4461:
  7097  00CD10  EF92  F066         	goto	l5381
  7098  00CD14                     u4460:
  7099  00CD14  0E00               	movlw	0
  7100  00CD16  6E01               	movwf	___fleq@ff1^0,c
  7101  00CD18  0E00               	movlw	0
  7102  00CD1A  6E02               	movwf	(___fleq@ff1+1)^0,c
  7103  00CD1C  0E00               	movlw	0
  7104  00CD1E  6E03               	movwf	(___fleq@ff1+2)^0,c
  7105  00CD20  0E00               	movlw	0
  7106  00CD22  6E04               	movwf	(___fleq@ff1+3)^0,c
  7107  00CD24                     l5381:
  7108  00CD24  0E00               	movlw	0
  7109  00CD26  1405               	andwf	___fleq@ff2^0,w,c
  7110  00CD28  6E09               	movwf	??___fleq^0,c
  7111  00CD2A  0E00               	movlw	0
  7112  00CD2C  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7113  00CD2E  6E0A               	movwf	(??___fleq+1)^0,c
  7114  00CD30  0E80               	movlw	128
  7115  00CD32  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7116  00CD34  6E0B               	movwf	(??___fleq+2)^0,c
  7117  00CD36  0E7F               	movlw	127
  7118  00CD38  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7119  00CD3A  6E0C               	movwf	(??___fleq+3)^0,c
  7120  00CD3C  5009               	movf	??___fleq^0,w,c
  7121  00CD3E  100A               	iorwf	(??___fleq+1)^0,w,c
  7122  00CD40  100B               	iorwf	(??___fleq+2)^0,w,c
  7123  00CD42  100C               	iorwf	(??___fleq+3)^0,w,c
  7124  00CD44  A4D8               	btfss	status,2,c
  7125  00CD46  EFA7  F066         	goto	u4471
  7126  00CD4A  EFA9  F066         	goto	u4470
  7127  00CD4E                     u4471:
  7128  00CD4E  EFB1  F066         	goto	l5385
  7129  00CD52                     u4470:
  7130  00CD52  0E00               	movlw	0
  7131  00CD54  6E05               	movwf	___fleq@ff2^0,c
  7132  00CD56  0E00               	movlw	0
  7133  00CD58  6E06               	movwf	(___fleq@ff2+1)^0,c
  7134  00CD5A  0E00               	movlw	0
  7135  00CD5C  6E07               	movwf	(___fleq@ff2+2)^0,c
  7136  00CD5E  0E00               	movlw	0
  7137  00CD60  6E08               	movwf	(___fleq@ff2+3)^0,c
  7138  00CD62                     l5385:
  7139  00CD62  5005               	movf	___fleq@ff2^0,w,c
  7140  00CD64  1801               	xorwf	___fleq@ff1^0,w,c
  7141  00CD66  E10F               	bnz	u4480
  7142  00CD68  5006               	movf	(___fleq@ff2+1)^0,w,c
  7143  00CD6A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7144  00CD6C  E10C               	bnz	u4480
  7145  00CD6E  5007               	movf	(___fleq@ff2+2)^0,w,c
  7146  00CD70  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7147  00CD72  E109               	bnz	u4480
  7148  00CD74  5008               	movf	(___fleq@ff2+3)^0,w,c
  7149  00CD76  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7150  00CD78  B4D8               	btfsc	status,2,c
  7151  00CD7A  EFC1  F066         	goto	u4481
  7152  00CD7E  EFC3  F066         	goto	u4480
  7153  00CD82                     u4481:
  7154  00CD82  EFC6  F066         	goto	l5389
  7155  00CD86                     u4480:
  7156  00CD86  90D8               	bcf	status,0,c
  7157  00CD88  EFC7  F066         	goto	l1120
  7158  00CD8C                     l5389:
  7159  00CD8C  80D8               	bsf	status,0,c
  7160  00CD8E                     l1120:
  7161  00CD8E  0012               	return		;funcret
  7162  00CD90                     __end_of___fleq:
  7163                           	callstack 0
  7164                           
  7165 ;; *************** function ___awmod *****************
  7166 ;; Defined at:
  7167 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7168 ;; Parameters:    Size  Location     Type
  7169 ;;  dividend        2    0[COMRAM] int 
  7170 ;;  divisor         2    2[COMRAM] int 
  7171 ;; Auto vars:     Size  Location     Type
  7172 ;;  sign            1    5[COMRAM] unsigned char 
  7173 ;;  counter         1    4[COMRAM] unsigned char 
  7174 ;; Return value:  Size  Location     Type
  7175 ;;                  2    0[COMRAM] int 
  7176 ;; Registers used:
  7177 ;;		wreg, status,2, status,0
  7178 ;; Tracked objects:
  7179 ;;		On entry : 0/0
  7180 ;;		On exit  : 0/0
  7181 ;;		Unchanged: 0/0
  7182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7183 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7184 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7186 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7187 ;;Total ram usage:        6 bytes
  7188 ;; Hardware stack levels used: 1
  7189 ;; This function calls:
  7190 ;;		Nothing
  7191 ;; This function is called by:
  7192 ;;		_efgtoa
  7193 ;; This function uses a non-reentrant model
  7194 ;;
  7195                           
  7196                           	psect	text22
  7197  00CD90                     __ptext22:
  7198                           	callstack 0
  7199  00CD90                     ___awmod:
  7200                           	callstack 26
  7201  00CD90  0E00               	movlw	0
  7202  00CD92  6E06               	movwf	___awmod@sign^0,c
  7203  00CD94  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7204  00CD96  EFD1  F066         	goto	u4400
  7205  00CD9A  EFCF  F066         	goto	u4401
  7206  00CD9E                     u4401:
  7207  00CD9E  EFD7  F066         	goto	l5349
  7208  00CDA2                     u4400:
  7209  00CDA2  6C01               	negf	___awmod@dividend^0,c
  7210  00CDA4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7211  00CDA6  B0D8               	btfsc	status,0,c
  7212  00CDA8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7213  00CDAA  0E01               	movlw	1
  7214  00CDAC  6E06               	movwf	___awmod@sign^0,c
  7215  00CDAE                     l5349:
  7216  00CDAE  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7217  00CDB0  EFDE  F066         	goto	u4410
  7218  00CDB4  EFDC  F066         	goto	u4411
  7219  00CDB8                     u4411:
  7220  00CDB8  EFE2  F066         	goto	l5353
  7221  00CDBC                     u4410:
  7222  00CDBC  6C03               	negf	___awmod@divisor^0,c
  7223  00CDBE  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7224  00CDC0  B0D8               	btfsc	status,0,c
  7225  00CDC2  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7226  00CDC4                     l5353:
  7227  00CDC4  5003               	movf	___awmod@divisor^0,w,c
  7228  00CDC6  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7229  00CDC8  B4D8               	btfsc	status,2,c
  7230  00CDCA  EFE9  F066         	goto	u4421
  7231  00CDCE  EFEB  F066         	goto	u4420
  7232  00CDD2                     u4421:
  7233  00CDD2  EF0F  F067         	goto	l5369
  7234  00CDD6                     u4420:
  7235  00CDD6  0E01               	movlw	1
  7236  00CDD8  6E05               	movwf	___awmod@counter^0,c
  7237  00CDDA  EFF3  F066         	goto	l5359
  7238  00CDDE                     l5357:
  7239  00CDDE  90D8               	bcf	status,0,c
  7240  00CDE0  3603               	rlcf	___awmod@divisor^0,f,c
  7241  00CDE2  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7242  00CDE4  2A05               	incf	___awmod@counter^0,f,c
  7243  00CDE6                     l5359:
  7244  00CDE6  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7245  00CDE8  EFF8  F066         	goto	u4431
  7246  00CDEC  EFFA  F066         	goto	u4430
  7247  00CDF0                     u4431:
  7248  00CDF0  EFEF  F066         	goto	l5357
  7249  00CDF4                     u4430:
  7250  00CDF4                     l5361:
  7251  00CDF4  5003               	movf	___awmod@divisor^0,w,c
  7252  00CDF6  5C01               	subwf	___awmod@dividend^0,w,c
  7253  00CDF8  5004               	movf	(___awmod@divisor+1)^0,w,c
  7254  00CDFA  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7255  00CDFC  A0D8               	btfss	status,0,c
  7256  00CDFE  EF03  F067         	goto	u4441
  7257  00CE02  EF05  F067         	goto	u4440
  7258  00CE06                     u4441:
  7259  00CE06  EF09  F067         	goto	l5365
  7260  00CE0A                     u4440:
  7261  00CE0A  5003               	movf	___awmod@divisor^0,w,c
  7262  00CE0C  5E01               	subwf	___awmod@dividend^0,f,c
  7263  00CE0E  5004               	movf	(___awmod@divisor+1)^0,w,c
  7264  00CE10  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7265  00CE12                     l5365:
  7266  00CE12  90D8               	bcf	status,0,c
  7267  00CE14  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7268  00CE16  3203               	rrcf	___awmod@divisor^0,f,c
  7269  00CE18  2E05               	decfsz	___awmod@counter^0,f,c
  7270  00CE1A  EFFA  F066         	goto	l5361
  7271  00CE1E                     l5369:
  7272  00CE1E  5006               	movf	___awmod@sign^0,w,c
  7273  00CE20  B4D8               	btfsc	status,2,c
  7274  00CE22  EF15  F067         	goto	u4451
  7275  00CE26  EF17  F067         	goto	u4450
  7276  00CE2A                     u4451:
  7277  00CE2A  EF1B  F067         	goto	l5373
  7278  00CE2E                     u4450:
  7279  00CE2E  6C01               	negf	___awmod@dividend^0,c
  7280  00CE30  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7281  00CE32  B0D8               	btfsc	status,0,c
  7282  00CE34  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7283  00CE36                     l5373:
  7284  00CE36  C001  F001         	movff	___awmod@dividend,?___awmod
  7285  00CE3A  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7286  00CE3E  0012               	return		;funcret
  7287  00CE40                     __end_of___awmod:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function ___awdiv *****************
  7291 ;; Defined at:
  7292 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  dividend        2    0[COMRAM] int 
  7295 ;;  divisor         2    2[COMRAM] int 
  7296 ;; Auto vars:     Size  Location     Type
  7297 ;;  quotient        2    6[COMRAM] int 
  7298 ;;  sign            1    5[COMRAM] unsigned char 
  7299 ;;  counter         1    4[COMRAM] unsigned char 
  7300 ;; Return value:  Size  Location     Type
  7301 ;;                  2    0[COMRAM] int 
  7302 ;; Registers used:
  7303 ;;		wreg, status,2, status,0
  7304 ;; Tracked objects:
  7305 ;;		On entry : 0/0
  7306 ;;		On exit  : 0/0
  7307 ;;		Unchanged: 0/0
  7308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7309 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7310 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7312 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7313 ;;Total ram usage:        8 bytes
  7314 ;; Hardware stack levels used: 1
  7315 ;; This function calls:
  7316 ;;		Nothing
  7317 ;; This function is called by:
  7318 ;;		_efgtoa
  7319 ;;		_ssd1306_DrawPixel
  7320 ;;		_OLED_DrawPixel
  7321 ;; This function uses a non-reentrant model
  7322 ;;
  7323                           
  7324                           	psect	text23
  7325  00CF04                     __ptext23:
  7326                           	callstack 0
  7327  00CF04                     ___awdiv:
  7328                           	callstack 26
  7329  00CF04  0E00               	movlw	0
  7330  00CF06  6E06               	movwf	___awdiv@sign^0,c
  7331  00CF08  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7332  00CF0A  EF8B  F067         	goto	u4340
  7333  00CF0E  EF89  F067         	goto	u4341
  7334  00CF12                     u4341:
  7335  00CF12  EF91  F067         	goto	l5305
  7336  00CF16                     u4340:
  7337  00CF16  6C03               	negf	___awdiv@divisor^0,c
  7338  00CF18  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7339  00CF1A  B0D8               	btfsc	status,0,c
  7340  00CF1C  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7341  00CF1E  0E01               	movlw	1
  7342  00CF20  6E06               	movwf	___awdiv@sign^0,c
  7343  00CF22                     l5305:
  7344  00CF22  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7345  00CF24  EF98  F067         	goto	u4350
  7346  00CF28  EF96  F067         	goto	u4351
  7347  00CF2C                     u4351:
  7348  00CF2C  EF9E  F067         	goto	l5311
  7349  00CF30                     u4350:
  7350  00CF30  6C01               	negf	___awdiv@dividend^0,c
  7351  00CF32  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7352  00CF34  B0D8               	btfsc	status,0,c
  7353  00CF36  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7354  00CF38  0E01               	movlw	1
  7355  00CF3A  1A06               	xorwf	___awdiv@sign^0,f,c
  7356  00CF3C                     l5311:
  7357  00CF3C  0E00               	movlw	0
  7358  00CF3E  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7359  00CF40  0E00               	movlw	0
  7360  00CF42  6E07               	movwf	___awdiv@quotient^0,c
  7361  00CF44  5003               	movf	___awdiv@divisor^0,w,c
  7362  00CF46  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7363  00CF48  B4D8               	btfsc	status,2,c
  7364  00CF4A  EFA9  F067         	goto	u4361
  7365  00CF4E  EFAB  F067         	goto	u4360
  7366  00CF52                     u4361:
  7367  00CF52  EFD3  F067         	goto	l5333
  7368  00CF56                     u4360:
  7369  00CF56  0E01               	movlw	1
  7370  00CF58  6E05               	movwf	___awdiv@counter^0,c
  7371  00CF5A  EFB3  F067         	goto	l5319
  7372  00CF5E                     l5317:
  7373  00CF5E  90D8               	bcf	status,0,c
  7374  00CF60  3603               	rlcf	___awdiv@divisor^0,f,c
  7375  00CF62  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7376  00CF64  2A05               	incf	___awdiv@counter^0,f,c
  7377  00CF66                     l5319:
  7378  00CF66  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7379  00CF68  EFB8  F067         	goto	u4371
  7380  00CF6C  EFBA  F067         	goto	u4370
  7381  00CF70                     u4371:
  7382  00CF70  EFAF  F067         	goto	l5317
  7383  00CF74                     u4370:
  7384  00CF74                     l5321:
  7385  00CF74  90D8               	bcf	status,0,c
  7386  00CF76  3607               	rlcf	___awdiv@quotient^0,f,c
  7387  00CF78  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7388  00CF7A  5003               	movf	___awdiv@divisor^0,w,c
  7389  00CF7C  5C01               	subwf	___awdiv@dividend^0,w,c
  7390  00CF7E  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7391  00CF80  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7392  00CF82  A0D8               	btfss	status,0,c
  7393  00CF84  EFC6  F067         	goto	u4381
  7394  00CF88  EFC8  F067         	goto	u4380
  7395  00CF8C                     u4381:
  7396  00CF8C  EFCD  F067         	goto	l5329
  7397  00CF90                     u4380:
  7398  00CF90  5003               	movf	___awdiv@divisor^0,w,c
  7399  00CF92  5E01               	subwf	___awdiv@dividend^0,f,c
  7400  00CF94  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7401  00CF96  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7402  00CF98  8007               	bsf	___awdiv@quotient^0,0,c
  7403  00CF9A                     l5329:
  7404  00CF9A  90D8               	bcf	status,0,c
  7405  00CF9C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7406  00CF9E  3203               	rrcf	___awdiv@divisor^0,f,c
  7407  00CFA0  2E05               	decfsz	___awdiv@counter^0,f,c
  7408  00CFA2  EFBA  F067         	goto	l5321
  7409  00CFA6                     l5333:
  7410  00CFA6  5006               	movf	___awdiv@sign^0,w,c
  7411  00CFA8  B4D8               	btfsc	status,2,c
  7412  00CFAA  EFD9  F067         	goto	u4391
  7413  00CFAE  EFDB  F067         	goto	u4390
  7414  00CFB2                     u4391:
  7415  00CFB2  EFDF  F067         	goto	l5337
  7416  00CFB6                     u4390:
  7417  00CFB6  6C07               	negf	___awdiv@quotient^0,c
  7418  00CFB8  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7419  00CFBA  B0D8               	btfsc	status,0,c
  7420  00CFBC  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7421  00CFBE                     l5337:
  7422  00CFBE  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7423  00CFC2  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7424  00CFC6  0012               	return		;funcret
  7425  00CFC8                     __end_of___awdiv:
  7426                           	callstack 0
  7427                           
  7428 ;; *************** function _atoi *****************
  7429 ;; Defined at:
  7430 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7431 ;; Parameters:    Size  Location     Type
  7432 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7433 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  7434 ;; Auto vars:     Size  Location     Type
  7435 ;;  n               2   20[COMRAM] int 
  7436 ;;  neg             2   13[COMRAM] int 
  7437 ;; Return value:  Size  Location     Type
  7438 ;;                  2    7[COMRAM] int 
  7439 ;; Registers used:
  7440 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7441 ;; Tracked objects:
  7442 ;;		On entry : 0/0
  7443 ;;		On exit  : 0/0
  7444 ;;		Unchanged: 0/0
  7445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7447 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7448 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;Total ram usage:       15 bytes
  7451 ;; Hardware stack levels used: 1
  7452 ;; Hardware stack levels required when called: 1
  7453 ;; This function calls:
  7454 ;;		___wmul
  7455 ;;		_isdigit
  7456 ;;		_isspace
  7457 ;; This function is called by:
  7458 ;;		_vfpfcnvrt
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text24
  7463  00D832                     __ptext24:
  7464                           	callstack 0
  7465  00D832                     _atoi:
  7466                           	callstack 26
  7467  00D832  0E00               	movlw	0
  7468  00D834  6E16               	movwf	(atoi@n+1)^0,c
  7469  00D836  0E00               	movlw	0
  7470  00D838  6E15               	movwf	atoi@n^0,c
  7471  00D83A  0E00               	movlw	0
  7472  00D83C  6E0F               	movwf	(atoi@neg+1)^0,c
  7473  00D83E  0E00               	movlw	0
  7474  00D840  6E0E               	movwf	atoi@neg^0,c
  7475  00D842  EF25  F06C         	goto	l5893
  7476  00D846                     l5891:
  7477  00D846  4A08               	infsnz	atoi@s^0,f,c
  7478  00D848  2A09               	incf	(atoi@s+1)^0,f,c
  7479  00D84A                     l5893:
  7480  00D84A  0E01               	movlw	1
  7481  00D84C  6E14               	movwf	_atoi$2248^0,c
  7482  00D84E  C008  FFF6         	movff	atoi@s,tblptrl
  7483  00D852  C009  FFF7         	movff	atoi@s+1,tblptrh
  7484  00D856                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7485  00D856  6AF8               	clrf	tblptru,c
  7486  00D858                     	endif
  7487  00D858                     	if	0	;tblptru may be non-zero
  7488  00D858                     	endif
  7489  00D858  0008               	tblrd		*
  7490  00D85A  50F5               	movf	tablat,w,c
  7491  00D85C  0A20               	xorlw	32
  7492  00D85E  B4D8               	btfsc	status,2,c
  7493  00D860  EF34  F06C         	goto	u5481
  7494  00D864  EF36  F06C         	goto	u5480
  7495  00D868                     u5481:
  7496  00D868  EF54  F06C         	goto	l5901
  7497  00D86C                     u5480:
  7498  00D86C  0EF7               	movlw	247
  7499  00D86E  6E0A               	movwf	??_atoi^0,c
  7500  00D870  0EFF               	movlw	255
  7501  00D872  6E0B               	movwf	(??_atoi+1)^0,c
  7502  00D874  C008  FFF6         	movff	atoi@s,tblptrl
  7503  00D878  C009  FFF7         	movff	atoi@s+1,tblptrh
  7504  00D87C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7505  00D87C  6AF8               	clrf	tblptru,c
  7506  00D87E                     	endif
  7507  00D87E                     	if	0	;tblptru may be non-zero
  7508  00D87E                     	endif
  7509  00D87E  0008               	tblrd		*
  7510  00D880  50F5               	movf	tablat,w,c
  7511  00D882  6E0C               	movwf	(??_atoi+2)^0,c
  7512  00D884  6A0D               	clrf	(??_atoi+3)^0,c
  7513  00D886  500A               	movf	??_atoi^0,w,c
  7514  00D888  260C               	addwf	(??_atoi+2)^0,f,c
  7515  00D88A  500B               	movf	(??_atoi+1)^0,w,c
  7516  00D88C  220D               	addwfc	(??_atoi+3)^0,f,c
  7517  00D88E  500D               	movf	(??_atoi+3)^0,w,c
  7518  00D890  E109               	bnz	u5490
  7519  00D892  0E05               	movlw	5
  7520  00D894  5C0C               	subwf	(??_atoi+2)^0,w,c
  7521  00D896  A0D8               	btfss	status,0,c
  7522  00D898  EF50  F06C         	goto	u5491
  7523  00D89C  EF52  F06C         	goto	u5490
  7524  00D8A0                     u5491:
  7525  00D8A0  EF54  F06C         	goto	l5901
  7526  00D8A4                     u5490:
  7527  00D8A4  0E00               	movlw	0
  7528  00D8A6  6E14               	movwf	_atoi$2248^0,c
  7529  00D8A8                     l5901:
  7530  00D8A8  C014  F010         	movff	_atoi$2248,_atoi$2247
  7531  00D8AC  6A11               	clrf	(_atoi$2247+1)^0,c
  7532  00D8AE  5010               	movf	_atoi$2247^0,w,c
  7533  00D8B0  1011               	iorwf	(_atoi$2247+1)^0,w,c
  7534  00D8B2  A4D8               	btfss	status,2,c
  7535  00D8B4  EF5E  F06C         	goto	u5501
  7536  00D8B8  EF60  F06C         	goto	u5500
  7537  00D8BC                     u5501:
  7538  00D8BC  EF23  F06C         	goto	l5891
  7539  00D8C0                     u5500:
  7540  00D8C0  EF6A  F06C         	goto	l5911
  7541  00D8C4                     l5907:
  7542  00D8C4  0E00               	movlw	0
  7543  00D8C6  6E0F               	movwf	(atoi@neg+1)^0,c
  7544  00D8C8  0E01               	movlw	1
  7545  00D8CA  6E0E               	movwf	atoi@neg^0,c
  7546  00D8CC                     l5909:
  7547  00D8CC  4A08               	infsnz	atoi@s^0,f,c
  7548  00D8CE  2A09               	incf	(atoi@s+1)^0,f,c
  7549  00D8D0  EFA1  F06C         	goto	l5917
  7550  00D8D4                     l5911:
  7551  00D8D4  C008  FFF6         	movff	atoi@s,tblptrl
  7552  00D8D8  C009  FFF7         	movff	atoi@s+1,tblptrh
  7553  00D8DC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7554  00D8DC  6AF8               	clrf	tblptru,c
  7555  00D8DE                     	endif
  7556  00D8DE                     	if	0	;tblptru may be non-zero
  7557  00D8DE                     	endif
  7558  00D8DE  0008               	tblrd		*
  7559  00D8E0  50F5               	movf	tablat,w,c
  7560  00D8E2  6E0A               	movwf	??_atoi^0,c
  7561  00D8E4  6A0B               	clrf	(??_atoi+1)^0,c
  7562                           
  7563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7564                           ; Switch size 1, requested type "simple"
  7565                           ; Number of cases is 1, Range of values is 0 to 0
  7566                           ; switch strategies available:
  7567                           ; Name         Instructions Cycles
  7568                           ; simple_byte            4     3 (average)
  7569                           ;	Chosen strategy is simple_byte
  7570  00D8E6  500B               	movf	(??_atoi+1)^0,w,c
  7571  00D8E8  0A00               	xorlw	0	; case 0
  7572  00D8EA  B4D8               	btfsc	status,2,c
  7573  00D8EC  EF7A  F06C         	goto	l6739
  7574  00D8F0  EFA1  F06C         	goto	l5917
  7575  00D8F4                     l6739:
  7576                           
  7577                           ; Switch size 1, requested type "simple"
  7578                           ; Number of cases is 2, Range of values is 43 to 45
  7579                           ; switch strategies available:
  7580                           ; Name         Instructions Cycles
  7581                           ; simple_byte            7     4 (average)
  7582                           ;	Chosen strategy is simple_byte
  7583  00D8F4  500A               	movf	??_atoi^0,w,c
  7584  00D8F6  0A2B               	xorlw	43	; case 43
  7585  00D8F8  B4D8               	btfsc	status,2,c
  7586  00D8FA  EF66  F06C         	goto	l5909
  7587  00D8FE  0A06               	xorlw	6	; case 45
  7588  00D900  B4D8               	btfsc	status,2,c
  7589  00D902  EF62  F06C         	goto	l5907
  7590  00D906  EFA1  F06C         	goto	l5917
  7591  00D90A                     l5913:
  7592  00D90A  C015  F001         	movff	atoi@n,___wmul@multiplier
  7593  00D90E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7594  00D912  0E00               	movlw	0
  7595  00D914  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7596  00D916  0E0A               	movlw	10
  7597  00D918  6E03               	movwf	___wmul@multiplicand^0,c
  7598  00D91A  ECD6  F060         	call	___wmul	;wreg free
  7599  00D91E  C008  FFF6         	movff	atoi@s,tblptrl
  7600  00D922  C009  FFF7         	movff	atoi@s+1,tblptrh
  7601  00D926                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7602  00D926  6AF8               	clrf	tblptru,c
  7603  00D928                     	endif
  7604  00D928                     	if	0	;tblptru may be non-zero
  7605  00D928                     	endif
  7606  00D928  0008               	tblrd		*
  7607  00D92A  50F5               	movf	tablat,w,c
  7608  00D92C  5E01               	subwf	?___wmul^0,f,c
  7609  00D92E  0E00               	movlw	0
  7610  00D930  5A02               	subwfb	(?___wmul+1)^0,f,c
  7611  00D932  0E30               	movlw	48
  7612  00D934  2401               	addwf	?___wmul^0,w,c
  7613  00D936  6E15               	movwf	atoi@n^0,c
  7614  00D938  0E00               	movlw	0
  7615  00D93A  2002               	addwfc	(?___wmul+1)^0,w,c
  7616  00D93C  6E16               	movwf	(atoi@n+1)^0,c
  7617  00D93E  EF66  F06C         	goto	l5909
  7618  00D942                     l5917:
  7619  00D942  0ED0               	movlw	208
  7620  00D944  6E0A               	movwf	??_atoi^0,c
  7621  00D946  0EFF               	movlw	255
  7622  00D948  6E0B               	movwf	(??_atoi+1)^0,c
  7623  00D94A  C008  FFF6         	movff	atoi@s,tblptrl
  7624  00D94E  C009  FFF7         	movff	atoi@s+1,tblptrh
  7625  00D952                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7626  00D952  6AF8               	clrf	tblptru,c
  7627  00D954                     	endif
  7628  00D954                     	if	0	;tblptru may be non-zero
  7629  00D954                     	endif
  7630  00D954  0008               	tblrd		*
  7631  00D956  50F5               	movf	tablat,w,c
  7632  00D958  6E0C               	movwf	(??_atoi+2)^0,c
  7633  00D95A  6A0D               	clrf	(??_atoi+3)^0,c
  7634  00D95C  500A               	movf	??_atoi^0,w,c
  7635  00D95E  260C               	addwf	(??_atoi+2)^0,f,c
  7636  00D960  500B               	movf	(??_atoi+1)^0,w,c
  7637  00D962  220D               	addwfc	(??_atoi+3)^0,f,c
  7638  00D964  500D               	movf	(??_atoi+3)^0,w,c
  7639  00D966  E10A               	bnz	u5510
  7640  00D968  0E0A               	movlw	10
  7641  00D96A  5C0C               	subwf	(??_atoi+2)^0,w,c
  7642  00D96C  A0D8               	btfss	status,0,c
  7643  00D96E  EFBB  F06C         	goto	u5511
  7644  00D972  EFBE  F06C         	goto	u5510
  7645  00D976                     u5511:
  7646  00D976  0E01               	movlw	1
  7647  00D978  EFBF  F06C         	goto	u5520
  7648  00D97C                     u5510:
  7649  00D97C  0E00               	movlw	0
  7650  00D97E                     u5520:
  7651  00D97E  6E12               	movwf	_atoi$2249^0,c
  7652  00D980  6A13               	clrf	(_atoi$2249+1)^0,c
  7653  00D982  5012               	movf	_atoi$2249^0,w,c
  7654  00D984  1013               	iorwf	(_atoi$2249+1)^0,w,c
  7655  00D986  A4D8               	btfss	status,2,c
  7656  00D988  EFC8  F06C         	goto	u5531
  7657  00D98C  EFCA  F06C         	goto	u5530
  7658  00D990                     u5531:
  7659  00D990  EF85  F06C         	goto	l5913
  7660  00D994                     u5530:
  7661  00D994  500E               	movf	atoi@neg^0,w,c
  7662  00D996  100F               	iorwf	(atoi@neg+1)^0,w,c
  7663  00D998  A4D8               	btfss	status,2,c
  7664  00D99A  EFD1  F06C         	goto	u5541
  7665  00D99E  EFD3  F06C         	goto	u5540
  7666  00D9A2                     u5541:
  7667  00D9A2  EFE1  F06C         	goto	l1748
  7668  00D9A6                     u5540:
  7669  00D9A6  C015  F00A         	movff	atoi@n,??_atoi
  7670  00D9AA  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7671  00D9AE  1E0A               	comf	??_atoi^0,f,c
  7672  00D9B0  1E0B               	comf	(??_atoi+1)^0,f,c
  7673  00D9B2  4A0A               	infsnz	??_atoi^0,f,c
  7674  00D9B4  2A0B               	incf	(??_atoi+1)^0,f,c
  7675  00D9B6  C00A  F008         	movff	??_atoi,?_atoi
  7676  00D9BA  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7677  00D9BE  EFE5  F06C         	goto	l1751
  7678  00D9C2                     l1748:
  7679  00D9C2  C015  F008         	movff	atoi@n,?_atoi
  7680  00D9C6  C016  F009         	movff	atoi@n+1,?_atoi+1
  7681  00D9CA                     l1751:
  7682  00D9CA  0012               	return		;funcret
  7683  00D9CC                     __end_of_atoi:
  7684                           	callstack 0
  7685                           
  7686 ;; *************** function _isspace *****************
  7687 ;; Defined at:
  7688 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7689 ;; Parameters:    Size  Location     Type
  7690 ;;  c               2    0[COMRAM] int 
  7691 ;; Auto vars:     Size  Location     Type
  7692 ;;		None
  7693 ;; Return value:  Size  Location     Type
  7694 ;;                  2    0[COMRAM] int 
  7695 ;; Registers used:
  7696 ;;		wreg, status,2, status,0
  7697 ;; Tracked objects:
  7698 ;;		On entry : 0/0
  7699 ;;		On exit  : 0/0
  7700 ;;		Unchanged: 0/0
  7701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7702 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7703 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7704 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7705 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7706 ;;Total ram usage:        7 bytes
  7707 ;; Hardware stack levels used: 1
  7708 ;; This function calls:
  7709 ;;		Nothing
  7710 ;; This function is called by:
  7711 ;;		_atoi
  7712 ;; This function uses a non-reentrant model
  7713 ;;
  7714                           
  7715                           	psect	text25
  7716  00C556                     __ptext25:
  7717                           	callstack 0
  7718  00C556                     _isspace:
  7719                           	callstack 26
  7720  00C556  0E01               	movlw	1
  7721  00C558  6E07               	movwf	_isspace$2278^0,c
  7722  00C55A  0E20               	movlw	32
  7723  00C55C  1801               	xorwf	isspace@c^0,w,c
  7724  00C55E  1002               	iorwf	(isspace@c+1)^0,w,c
  7725  00C560  B4D8               	btfsc	status,2,c
  7726  00C562  EFB5  F062         	goto	u4901
  7727  00C566  EFB7  F062         	goto	u4900
  7728  00C56A                     u4901:
  7729  00C56A  EFD0  F062         	goto	l5565
  7730  00C56E                     u4900:
  7731  00C56E  0EF7               	movlw	247
  7732  00C570  6E03               	movwf	??_isspace^0,c
  7733  00C572  0EFF               	movlw	255
  7734  00C574  6E04               	movwf	(??_isspace+1)^0,c
  7735  00C576  C001  F005         	movff	isspace@c,??_isspace+2
  7736  00C57A  C002  F006         	movff	isspace@c+1,??_isspace+3
  7737  00C57E  5003               	movf	??_isspace^0,w,c
  7738  00C580  2605               	addwf	(??_isspace+2)^0,f,c
  7739  00C582  5004               	movf	(??_isspace+1)^0,w,c
  7740  00C584  2206               	addwfc	(??_isspace+3)^0,f,c
  7741  00C586  5006               	movf	(??_isspace+3)^0,w,c
  7742  00C588  E109               	bnz	u4910
  7743  00C58A  0E05               	movlw	5
  7744  00C58C  5C05               	subwf	(??_isspace+2)^0,w,c
  7745  00C58E  A0D8               	btfss	status,0,c
  7746  00C590  EFCC  F062         	goto	u4911
  7747  00C594  EFCE  F062         	goto	u4910
  7748  00C598                     u4911:
  7749  00C598  EFD0  F062         	goto	l5565
  7750  00C59C                     u4910:
  7751  00C59C  0E00               	movlw	0
  7752  00C59E  6E07               	movwf	_isspace$2278^0,c
  7753  00C5A0                     l5565:
  7754  00C5A0  C007  F001         	movff	_isspace$2278,?_isspace
  7755  00C5A4  6A02               	clrf	(?_isspace+1)^0,c
  7756  00C5A6  0012               	return		;funcret
  7757  00C5A8                     __end_of_isspace:
  7758                           	callstack 0
  7759                           
  7760 ;; *************** function _isdigit *****************
  7761 ;; Defined at:
  7762 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7763 ;; Parameters:    Size  Location     Type
  7764 ;;  c               2    0[COMRAM] int 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;		None
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  2    0[COMRAM] int 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7776 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7778 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7779 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7780 ;;Total ram usage:        6 bytes
  7781 ;; Hardware stack levels used: 1
  7782 ;; This function calls:
  7783 ;;		Nothing
  7784 ;; This function is called by:
  7785 ;;		_vfpfcnvrt
  7786 ;;		_atoi
  7787 ;; This function uses a non-reentrant model
  7788 ;;
  7789                           
  7790                           	psect	text26
  7791  00C3A0                     __ptext26:
  7792                           	callstack 0
  7793  00C3A0                     _isdigit:
  7794                           	callstack 27
  7795  00C3A0  0ED0               	movlw	208
  7796  00C3A2  6E03               	movwf	??_isdigit^0,c
  7797  00C3A4  0EFF               	movlw	255
  7798  00C3A6  6E04               	movwf	(??_isdigit+1)^0,c
  7799  00C3A8  C001  F005         	movff	isdigit@c,??_isdigit+2
  7800  00C3AC  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7801  00C3B0  5003               	movf	??_isdigit^0,w,c
  7802  00C3B2  2605               	addwf	(??_isdigit+2)^0,f,c
  7803  00C3B4  5004               	movf	(??_isdigit+1)^0,w,c
  7804  00C3B6  2206               	addwfc	(??_isdigit+3)^0,f,c
  7805  00C3B8  5006               	movf	(??_isdigit+3)^0,w,c
  7806  00C3BA  E10A               	bnz	u4880
  7807  00C3BC  0E0A               	movlw	10
  7808  00C3BE  5C05               	subwf	(??_isdigit+2)^0,w,c
  7809  00C3C0  A0D8               	btfss	status,0,c
  7810  00C3C2  EFE5  F061         	goto	u4881
  7811  00C3C6  EFE8  F061         	goto	u4880
  7812  00C3CA                     u4881:
  7813  00C3CA  0E01               	movlw	1
  7814  00C3CC  EFE9  F061         	goto	u4890
  7815  00C3D0                     u4880:
  7816  00C3D0  0E00               	movlw	0
  7817  00C3D2                     u4890:
  7818  00C3D2  6E01               	movwf	?_isdigit^0,c
  7819  00C3D4  6A02               	clrf	(?_isdigit+1)^0,c
  7820  00C3D6  0012               	return		;funcret
  7821  00C3D8                     __end_of_isdigit:
  7822                           	callstack 0
  7823                           
  7824 ;; *************** function _Voltage_ReadRegister *****************
  7825 ;; Defined at:
  7826 ;;		line 30 in file "INA260.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;  temp_b          2   51[COMRAM] unsigned int 
  7831 ;;  temp_a          1   53[COMRAM] unsigned char 
  7832 ;; Return value:  Size  Location     Type
  7833 ;;                  4   45[COMRAM] float 
  7834 ;; Registers used:
  7835 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7836 ;; Tracked objects:
  7837 ;;		On entry : 0/0
  7838 ;;		On exit  : 0/0
  7839 ;;		Unchanged: 0/0
  7840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7841 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7842 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7843 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7844 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7845 ;;Total ram usage:        9 bytes
  7846 ;; Hardware stack levels used: 1
  7847 ;; Hardware stack levels required when called: 2
  7848 ;; This function calls:
  7849 ;;		_I2C_Master_Read
  7850 ;;		_I2C_Master_RepeatedStart
  7851 ;;		_I2C_Master_Start
  7852 ;;		_I2C_Master_Stop
  7853 ;;		_I2C_Master_Write
  7854 ;;		___fldiv
  7855 ;;		___flmul
  7856 ;;		___xxtofl
  7857 ;; This function is called by:
  7858 ;;		_main
  7859 ;; This function uses a non-reentrant model
  7860 ;;
  7861                           
  7862                           	psect	text27
  7863  00D526                     __ptext27:
  7864                           	callstack 0
  7865  00D526                     _Voltage_ReadRegister:
  7866                           	callstack 28
  7867  00D526                     
  7868                           ;INA260.c: 31:     I2C_Master_Start();
  7869  00D526  ECCC  F05F         	call	_I2C_Master_Start	;wreg free
  7870                           
  7871                           ;INA260.c: 32:     I2C_Master_Write(0x80);
  7872  00D52A  0E00               	movlw	0
  7873  00D52C  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7874  00D52E  0E80               	movlw	128
  7875  00D530  6E02               	movwf	I2C_Master_Write@d^0,c
  7876  00D532  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
  7877                           
  7878                           ;INA260.c: 33:     I2C_Master_Write(0x02);
  7879  00D536  0E00               	movlw	0
  7880  00D538  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7881  00D53A  0E02               	movlw	2
  7882  00D53C  6E02               	movwf	I2C_Master_Write@d^0,c
  7883  00D53E  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
  7884                           
  7885                           ;INA260.c: 34:     I2C_Master_RepeatedStart();
  7886  00D542  ECC8  F05F         	call	_I2C_Master_RepeatedStart	;wreg free
  7887                           
  7888                           ;INA260.c: 35:     I2C_Master_Write(0x81);
  7889  00D546  0E00               	movlw	0
  7890  00D548  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7891  00D54A  0E81               	movlw	129
  7892  00D54C  6E02               	movwf	I2C_Master_Write@d^0,c
  7893  00D54E  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
  7894                           
  7895                           ;INA260.c: 36:     char temp_a = I2C_Master_Read(1);
  7896  00D552  0E00               	movlw	0
  7897  00D554  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7898  00D556  0E01               	movlw	1
  7899  00D558  6E02               	movwf	I2C_Master_Read@a^0,c
  7900  00D55A  EC9A  F061         	call	_I2C_Master_Read	;wreg free
  7901  00D55E  5002               	movf	?_I2C_Master_Read^0,w,c
  7902  00D560  6E36               	movwf	Voltage_ReadRegister@temp_a^0,c
  7903                           
  7904                           ;INA260.c: 37:     unsigned int temp_b = temp_a<<8 | I2C_Master_Read(0);
  7905  00D562  0E00               	movlw	0
  7906  00D564  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7907  00D566  0E00               	movlw	0
  7908  00D568  6E02               	movwf	I2C_Master_Read@a^0,c
  7909  00D56A  EC9A  F061         	call	_I2C_Master_Read	;wreg free
  7910  00D56E  5036               	movf	Voltage_ReadRegister@temp_a^0,w,c
  7911  00D570  6E33               	movwf	(??_Voltage_ReadRegister+1)^0,c
  7912  00D572  6A32               	clrf	??_Voltage_ReadRegister^0,c
  7913  00D574  5002               	movf	?_I2C_Master_Read^0,w,c
  7914  00D576  1032               	iorwf	??_Voltage_ReadRegister^0,w,c
  7915  00D578  6E34               	movwf	Voltage_ReadRegister@temp_b^0,c
  7916  00D57A  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
  7917  00D57C  1033               	iorwf	(??_Voltage_ReadRegister+1)^0,w,c
  7918  00D57E  6E35               	movwf	(Voltage_ReadRegister@temp_b+1)^0,c
  7919  00D580                     
  7920                           ;INA260.c: 38:     voltage = temp_b *1.25;
  7921  00D580  C034  F007         	movff	Voltage_ReadRegister@temp_b,___xxtofl@val
  7922  00D584  C035  F008         	movff	Voltage_ReadRegister@temp_b+1,___xxtofl@val+1
  7923  00D588  6A09               	clrf	(___xxtofl@val+2)^0,c
  7924  00D58A  6A0A               	clrf	(___xxtofl@val+3)^0,c
  7925  00D58C  0E00               	movlw	0
  7926  00D58E  ECE6  F06C         	call	___xxtofl
  7927  00D592  C007  F015         	movff	?___xxtofl,___flmul@b
  7928  00D596  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  7929  00D59A  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  7930  00D59E  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  7931  00D5A2  0E00               	movlw	0
  7932  00D5A4  6E19               	movwf	___flmul@a^0,c
  7933  00D5A6  0E00               	movlw	0
  7934  00D5A8  6E1A               	movwf	(___flmul@a+1)^0,c
  7935  00D5AA  0EA0               	movlw	160
  7936  00D5AC  6E1B               	movwf	(___flmul@a+2)^0,c
  7937  00D5AE  0E3F               	movlw	63
  7938  00D5B0  6E1C               	movwf	(___flmul@a+3)^0,c
  7939  00D5B2  ECA6  F071         	call	___flmul	;wreg free
  7940  00D5B6  C015  F0BE         	movff	?___flmul,_voltage
  7941  00D5BA  C016  F0BF         	movff	?___flmul+1,_voltage+1
  7942  00D5BE  C017  F0C0         	movff	?___flmul+2,_voltage+2
  7943  00D5C2  C018  F0C1         	movff	?___flmul+3,_voltage+3
  7944  00D5C6                     
  7945                           ;INA260.c: 39:     I2C_Master_Stop();
  7946  00D5C6  ECD0  F05F         	call	_I2C_Master_Stop	;wreg free
  7947  00D5CA                     
  7948                           ;INA260.c: 40:     voltage = voltage/1000;
  7949  00D5CA  C0BE  F001         	movff	_voltage,___fldiv@b
  7950  00D5CE  C0BF  F002         	movff	_voltage+1,___fldiv@b+1
  7951  00D5D2  C0C0  F003         	movff	_voltage+2,___fldiv@b+2
  7952  00D5D6  C0C1  F004         	movff	_voltage+3,___fldiv@b+3
  7953  00D5DA  0E00               	movlw	0
  7954  00D5DC  6E05               	movwf	___fldiv@a^0,c
  7955  00D5DE  0E00               	movlw	0
  7956  00D5E0  6E06               	movwf	(___fldiv@a+1)^0,c
  7957  00D5E2  0E7A               	movlw	122
  7958  00D5E4  6E07               	movwf	(___fldiv@a+2)^0,c
  7959  00D5E6  0E44               	movlw	68
  7960  00D5E8  6E08               	movwf	(___fldiv@a+3)^0,c
  7961  00D5EA  ECD9  F06F         	call	___fldiv	;wreg free
  7962  00D5EE  C001  F0BE         	movff	?___fldiv,_voltage
  7963  00D5F2  C002  F0BF         	movff	?___fldiv+1,_voltage+1
  7964  00D5F6  C003  F0C0         	movff	?___fldiv+2,_voltage+2
  7965  00D5FA  C004  F0C1         	movff	?___fldiv+3,_voltage+3
  7966  00D5FE                     
  7967                           ;INA260.c: 42:     _delay((unsigned long)((600)*(8000000/4000.0)));
  7968  00D5FE  0E07               	movlw	7
  7969  00D600  6E33               	movwf	(??_Voltage_ReadRegister+1)^0,c
  7970  00D602  0E17               	movlw	23
  7971  00D604  6E32               	movwf	??_Voltage_ReadRegister^0,c
  7972  00D606  0E6A               	movlw	106
  7973  00D608                     u6397:
  7974  00D608  2EE8               	decfsz	wreg,f,c
  7975  00D60A  D7FE               	bra	u6397
  7976  00D60C  2E32               	decfsz	??_Voltage_ReadRegister^0,f,c
  7977  00D60E  D7FC               	bra	u6397
  7978  00D610  2E33               	decfsz	(??_Voltage_ReadRegister+1)^0,f,c
  7979  00D612  D7FA               	bra	u6397
  7980  00D614  D000               	nop2	
  7981  00D616                     
  7982                           ;INA260.c: 43:     return voltage;
  7983  00D616  C0BE  F02E         	movff	_voltage,?_Voltage_ReadRegister
  7984  00D61A  C0BF  F02F         	movff	_voltage+1,?_Voltage_ReadRegister+1
  7985  00D61E  C0C0  F030         	movff	_voltage+2,?_Voltage_ReadRegister+2
  7986  00D622  C0C1  F031         	movff	_voltage+3,?_Voltage_ReadRegister+3
  7987  00D626  0012               	return		;funcret
  7988  00D628                     __end_of_Voltage_ReadRegister:
  7989                           	callstack 0
  7990                           
  7991 ;; *************** function _SYSTEM_Initialize *****************
  7992 ;; Defined at:
  7993 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7994 ;; Parameters:    Size  Location     Type
  7995 ;;		None
  7996 ;; Auto vars:     Size  Location     Type
  7997 ;;		None
  7998 ;; Return value:  Size  Location     Type
  7999 ;;                  1    wreg      void 
  8000 ;; Registers used:
  8001 ;;		wreg, status,2, cstack
  8002 ;; Tracked objects:
  8003 ;;		On entry : 0/0
  8004 ;;		On exit  : 0/0
  8005 ;;		Unchanged: 0/0
  8006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8011 ;;Total ram usage:        0 bytes
  8012 ;; Hardware stack levels used: 1
  8013 ;; Hardware stack levels required when called: 1
  8014 ;; This function calls:
  8015 ;;		_OSCILLATOR_Initialize
  8016 ;;		_PIN_MANAGER_Initialize
  8017 ;; This function is called by:
  8018 ;;		_main
  8019 ;; This function uses a non-reentrant model
  8020 ;;
  8021                           
  8022                           	psect	text28
  8023  00BFFA                     __ptext28:
  8024                           	callstack 0
  8025  00BFFA                     _SYSTEM_Initialize:
  8026                           	callstack 29
  8027  00BFFA                     
  8028                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  8029  00BFFA  ECE9  F060         	call	_PIN_MANAGER_Initialize	;wreg free
  8030                           
  8031                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  8032  00BFFE  EC2C  F060         	call	_OSCILLATOR_Initialize	;wreg free
  8033  00C002  0012               	return		;funcret
  8034  00C004                     __end_of_SYSTEM_Initialize:
  8035                           	callstack 0
  8036                           
  8037 ;; *************** function _PIN_MANAGER_Initialize *****************
  8038 ;; Defined at:
  8039 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  8040 ;; Parameters:    Size  Location     Type
  8041 ;;		None
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;		None
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  1    wreg      void 
  8046 ;; Registers used:
  8047 ;;		wreg, status,2
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8054 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8055 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8056 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8057 ;;Total ram usage:        0 bytes
  8058 ;; Hardware stack levels used: 1
  8059 ;; This function calls:
  8060 ;;		Nothing
  8061 ;; This function is called by:
  8062 ;;		_SYSTEM_Initialize
  8063 ;; This function uses a non-reentrant model
  8064 ;;
  8065                           
  8066                           	psect	text29
  8067  00C1D2                     __ptext29:
  8068                           	callstack 0
  8069  00C1D2                     _PIN_MANAGER_Initialize:
  8070                           	callstack 29
  8071  00C1D2                     
  8072                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  8073  00C1D2  0E00               	movlw	0
  8074  00C1D4  6E89               	movwf	137,c	;volatile
  8075                           
  8076                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  8077  00C1D6  0E00               	movlw	0
  8078  00C1D8  6E8A               	movwf	138,c	;volatile
  8079                           
  8080                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  8081  00C1DA  0E00               	movlw	0
  8082  00C1DC  6E8B               	movwf	139,c	;volatile
  8083                           
  8084                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xEF;
  8085  00C1DE  0EEF               	movlw	239
  8086  00C1E0  6E92               	movwf	146,c	;volatile
  8087  00C1E2                     
  8088                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  8089  00C1E2  6893               	setf	147,c	;volatile
  8090                           
  8091                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  8092  00C1E4  0EBF               	movlw	191
  8093  00C1E6  6E94               	movwf	148,c	;volatile
  8094                           
  8095                           ;mcc_generated_files/pin_manager.c: 78:     ANCON0 = 0xDF;
  8096  00C1E8  0EDF               	movlw	223
  8097  00C1EA  010F               	movlb	15	; () banked
  8098  00C1EC  6F5D               	movwf	93,b	;volatile
  8099                           
  8100                           ;mcc_generated_files/pin_manager.c: 79:     ANCON1 = 0x7F;
  8101  00C1EE  0E7F               	movlw	127
  8102  00C1F0  6F5C               	movwf	92,b	;volatile
  8103                           
  8104                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  8105  00C1F2  0E00               	movlw	0
  8106  00C1F4  6F5B               	movwf	91,b	;volatile
  8107  00C1F6                     
  8108                           ; BSR set to: 15
  8109                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  8110  00C1F6  8EF1               	bsf	241,7,c	;volatile
  8111  00C1F8                     
  8112                           ; BSR set to: 15
  8113  00C1F8  0012               	return		;funcret
  8114  00C1FA                     __end_of_PIN_MANAGER_Initialize:
  8115                           	callstack 0
  8116                           
  8117 ;; *************** function _OSCILLATOR_Initialize *****************
  8118 ;; Defined at:
  8119 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8120 ;; Parameters:    Size  Location     Type
  8121 ;;		None
  8122 ;; Auto vars:     Size  Location     Type
  8123 ;;		None
  8124 ;; Return value:  Size  Location     Type
  8125 ;;                  1    wreg      void 
  8126 ;; Registers used:
  8127 ;;		wreg, status,2
  8128 ;; Tracked objects:
  8129 ;;		On entry : 0/0
  8130 ;;		On exit  : 0/0
  8131 ;;		Unchanged: 0/0
  8132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8133 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8136 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8137 ;;Total ram usage:        0 bytes
  8138 ;; Hardware stack levels used: 1
  8139 ;; This function calls:
  8140 ;;		Nothing
  8141 ;; This function is called by:
  8142 ;;		_SYSTEM_Initialize
  8143 ;; This function uses a non-reentrant model
  8144 ;;
  8145                           
  8146                           	psect	text30
  8147  00C058                     __ptext30:
  8148                           	callstack 0
  8149  00C058                     _OSCILLATOR_Initialize:
  8150                           	callstack 29
  8151  00C058                     
  8152                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x60;
  8153  00C058  0E60               	movlw	96
  8154  00C05A  6ED3               	movwf	211,c	;volatile
  8155                           
  8156                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x00;
  8157  00C05C  0E00               	movlw	0
  8158  00C05E  6ED2               	movwf	210,c	;volatile
  8159                           
  8160                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  8161  00C060  0E00               	movlw	0
  8162  00C062  6E9B               	movwf	155,c	;volatile
  8163                           
  8164                           ;mcc_generated_files/mcc.c: 67:     REFOCON = 0x00;
  8165  00C064  0E00               	movlw	0
  8166  00C066  6E9A               	movwf	154,c	;volatile
  8167  00C068  0012               	return		;funcret
  8168  00C06A                     __end_of_OSCILLATOR_Initialize:
  8169                           	callstack 0
  8170                           
  8171 ;; *************** function _Power_ReadRegister *****************
  8172 ;; Defined at:
  8173 ;;		line 62 in file "INA260.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;		None
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  temp_f          2   31[COMRAM] unsigned int 
  8178 ;;  temp_e          1   33[COMRAM] unsigned char 
  8179 ;; Return value:  Size  Location     Type
  8180 ;;                  4   25[COMRAM] float 
  8181 ;; Registers used:
  8182 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8183 ;; Tracked objects:
  8184 ;;		On entry : 0/0
  8185 ;;		On exit  : 0/0
  8186 ;;		Unchanged: 0/0
  8187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8188 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8189 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8190 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8191 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;Total ram usage:        9 bytes
  8193 ;; Hardware stack levels used: 1
  8194 ;; Hardware stack levels required when called: 2
  8195 ;; This function calls:
  8196 ;;		_I2C_Master_Read
  8197 ;;		_I2C_Master_RepeatedStart
  8198 ;;		_I2C_Master_Start
  8199 ;;		_I2C_Master_Stop
  8200 ;;		_I2C_Master_Write
  8201 ;;		___fldiv
  8202 ;;		___wmul
  8203 ;;		___xxtofl
  8204 ;; This function is called by:
  8205 ;;		_main
  8206 ;; This function uses a non-reentrant model
  8207 ;;
  8208                           
  8209                           	psect	text31
  8210  00D234                     __ptext31:
  8211                           	callstack 0
  8212  00D234                     _Power_ReadRegister:
  8213                           	callstack 28
  8214  00D234                     
  8215                           ;INA260.c: 63:     I2C_Master_Start();
  8216  00D234  ECCC  F05F         	call	_I2C_Master_Start	;wreg free
  8217                           
  8218                           ;INA260.c: 64:     I2C_Master_Write(0x80);
  8219  00D238  0E00               	movlw	0
  8220  00D23A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  8221  00D23C  0E80               	movlw	128
  8222  00D23E  6E02               	movwf	I2C_Master_Write@d^0,c
  8223  00D240  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
  8224                           
  8225                           ;INA260.c: 65:     I2C_Master_Write(0x03);
  8226  00D244  0E00               	movlw	0
  8227  00D246  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  8228  00D248  0E03               	movlw	3
  8229  00D24A  6E02               	movwf	I2C_Master_Write@d^0,c
  8230  00D24C  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
  8231                           
  8232                           ;INA260.c: 66:     I2C_Master_RepeatedStart();
  8233  00D250  ECC8  F05F         	call	_I2C_Master_RepeatedStart	;wreg free
  8234                           
  8235                           ;INA260.c: 67:     I2C_Master_Write(0x81);
  8236  00D254  0E00               	movlw	0
  8237  00D256  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  8238  00D258  0E81               	movlw	129
  8239  00D25A  6E02               	movwf	I2C_Master_Write@d^0,c
  8240  00D25C  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
  8241                           
  8242                           ;INA260.c: 68:     char temp_e = I2C_Master_Read(1);
  8243  00D260  0E00               	movlw	0
  8244  00D262  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  8245  00D264  0E01               	movlw	1
  8246  00D266  6E02               	movwf	I2C_Master_Read@a^0,c
  8247  00D268  EC9A  F061         	call	_I2C_Master_Read	;wreg free
  8248  00D26C  5002               	movf	?_I2C_Master_Read^0,w,c
  8249  00D26E  6E22               	movwf	Power_ReadRegister@temp_e^0,c
  8250                           
  8251                           ;INA260.c: 69:     unsigned int temp_f = temp_e<<8 | I2C_Master_Read(0);
  8252  00D270  0E00               	movlw	0
  8253  00D272  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  8254  00D274  0E00               	movlw	0
  8255  00D276  6E02               	movwf	I2C_Master_Read@a^0,c
  8256  00D278  EC9A  F061         	call	_I2C_Master_Read	;wreg free
  8257  00D27C  5022               	movf	Power_ReadRegister@temp_e^0,w,c
  8258  00D27E  6E1F               	movwf	(??_Power_ReadRegister+1)^0,c
  8259  00D280  6A1E               	clrf	??_Power_ReadRegister^0,c
  8260  00D282  5002               	movf	?_I2C_Master_Read^0,w,c
  8261  00D284  101E               	iorwf	??_Power_ReadRegister^0,w,c
  8262  00D286  6E20               	movwf	Power_ReadRegister@temp_f^0,c
  8263  00D288  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
  8264  00D28A  101F               	iorwf	(??_Power_ReadRegister+1)^0,w,c
  8265  00D28C  6E21               	movwf	(Power_ReadRegister@temp_f+1)^0,c
  8266  00D28E                     
  8267                           ;INA260.c: 70:     power = temp_f *10;
  8268  00D28E  C020  F001         	movff	Power_ReadRegister@temp_f,___wmul@multiplier
  8269  00D292  C021  F002         	movff	Power_ReadRegister@temp_f+1,___wmul@multiplier+1
  8270  00D296  0E00               	movlw	0
  8271  00D298  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8272  00D29A  0E0A               	movlw	10
  8273  00D29C  6E03               	movwf	___wmul@multiplicand^0,c
  8274  00D29E  ECD6  F060         	call	___wmul	;wreg free
  8275  00D2A2  C001  F007         	movff	?___wmul,___xxtofl@val
  8276  00D2A6  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  8277  00D2AA  6A09               	clrf	(___xxtofl@val+2)^0,c
  8278  00D2AC  6A0A               	clrf	(___xxtofl@val+3)^0,c
  8279  00D2AE  0E00               	movlw	0
  8280  00D2B0  ECE6  F06C         	call	___xxtofl
  8281  00D2B4  C007  F0B6         	movff	?___xxtofl,_power
  8282  00D2B8  C008  F0B7         	movff	?___xxtofl+1,_power+1
  8283  00D2BC  C009  F0B8         	movff	?___xxtofl+2,_power+2
  8284  00D2C0  C00A  F0B9         	movff	?___xxtofl+3,_power+3
  8285  00D2C4                     
  8286                           ;INA260.c: 71:     I2C_Master_Stop();
  8287  00D2C4  ECD0  F05F         	call	_I2C_Master_Stop	;wreg free
  8288  00D2C8                     
  8289                           ;INA260.c: 72:     power = power/1000;
  8290  00D2C8  C0B6  F001         	movff	_power,___fldiv@b
  8291  00D2CC  C0B7  F002         	movff	_power+1,___fldiv@b+1
  8292  00D2D0  C0B8  F003         	movff	_power+2,___fldiv@b+2
  8293  00D2D4  C0B9  F004         	movff	_power+3,___fldiv@b+3
  8294  00D2D8  0E00               	movlw	0
  8295  00D2DA  6E05               	movwf	___fldiv@a^0,c
  8296  00D2DC  0E00               	movlw	0
  8297  00D2DE  6E06               	movwf	(___fldiv@a+1)^0,c
  8298  00D2E0  0E7A               	movlw	122
  8299  00D2E2  6E07               	movwf	(___fldiv@a+2)^0,c
  8300  00D2E4  0E44               	movlw	68
  8301  00D2E6  6E08               	movwf	(___fldiv@a+3)^0,c
  8302  00D2E8  ECD9  F06F         	call	___fldiv	;wreg free
  8303  00D2EC  C001  F0B6         	movff	?___fldiv,_power
  8304  00D2F0  C002  F0B7         	movff	?___fldiv+1,_power+1
  8305  00D2F4  C003  F0B8         	movff	?___fldiv+2,_power+2
  8306  00D2F8  C004  F0B9         	movff	?___fldiv+3,_power+3
  8307  00D2FC                     
  8308                           ;INA260.c: 74:     _delay((unsigned long)((600)*(8000000/4000.0)));
  8309  00D2FC  0E07               	movlw	7
  8310  00D2FE  6E1F               	movwf	(??_Power_ReadRegister+1)^0,c
  8311  00D300  0E17               	movlw	23
  8312  00D302  6E1E               	movwf	??_Power_ReadRegister^0,c
  8313  00D304  0E6A               	movlw	106
  8314  00D306                     u6407:
  8315  00D306  2EE8               	decfsz	wreg,f,c
  8316  00D308  D7FE               	bra	u6407
  8317  00D30A  2E1E               	decfsz	??_Power_ReadRegister^0,f,c
  8318  00D30C  D7FC               	bra	u6407
  8319  00D30E  2E1F               	decfsz	(??_Power_ReadRegister+1)^0,f,c
  8320  00D310  D7FA               	bra	u6407
  8321  00D312  D000               	nop2	
  8322  00D314                     
  8323                           ;INA260.c: 75:     return power;
  8324  00D314  C0B6  F01A         	movff	_power,?_Power_ReadRegister
  8325  00D318  C0B7  F01B         	movff	_power+1,?_Power_ReadRegister+1
  8326  00D31C  C0B8  F01C         	movff	_power+2,?_Power_ReadRegister+2
  8327  00D320  C0B9  F01D         	movff	_power+3,?_Power_ReadRegister+3
  8328  00D324  0012               	return		;funcret
  8329  00D326                     __end_of_Power_ReadRegister:
  8330                           	callstack 0
  8331                           
  8332 ;; *************** function ___wmul *****************
  8333 ;; Defined at:
  8334 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8335 ;; Parameters:    Size  Location     Type
  8336 ;;  multiplier      2    0[COMRAM] unsigned int 
  8337 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  product         2    4[COMRAM] unsigned int 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  2    0[COMRAM] unsigned int 
  8342 ;; Registers used:
  8343 ;;		wreg, status,2, status,0, prodl, prodh
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8349 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8351 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8352 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;Total ram usage:        6 bytes
  8354 ;; Hardware stack levels used: 1
  8355 ;; This function calls:
  8356 ;;		Nothing
  8357 ;; This function is called by:
  8358 ;;		_Power_ReadRegister
  8359 ;;		_atoi
  8360 ;; This function uses a non-reentrant model
  8361 ;;
  8362                           
  8363                           	psect	text32
  8364  00C1AC                     __ptext32:
  8365                           	callstack 0
  8366  00C1AC                     ___wmul:
  8367                           	callstack 26
  8368  00C1AC  5001               	movf	___wmul@multiplier^0,w,c
  8369  00C1AE  0203               	mulwf	___wmul@multiplicand^0,c
  8370  00C1B0  CFF3 F005          	movff	prodl,___wmul@product
  8371  00C1B4  CFF4 F006          	movff	prodh,___wmul@product+1
  8372  00C1B8  5001               	movf	___wmul@multiplier^0,w,c
  8373  00C1BA  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8374  00C1BC  50F3               	movf	243,w,c
  8375  00C1BE  2606               	addwf	(___wmul@product+1)^0,f,c
  8376  00C1C0  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8377  00C1C2  0203               	mulwf	___wmul@multiplicand^0,c
  8378  00C1C4  50F3               	movf	243,w,c
  8379  00C1C6  2606               	addwf	(___wmul@product+1)^0,f,c
  8380  00C1C8  C005  F001         	movff	___wmul@product,?___wmul
  8381  00C1CC  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8382  00C1D0  0012               	return		;funcret
  8383  00C1D2                     __end_of___wmul:
  8384                           	callstack 0
  8385                           
  8386 ;; *************** function _Oled_WriteString *****************
  8387 ;; Defined at:
  8388 ;;		line 91 in file "OLED.c"
  8389 ;; Parameters:    Size  Location     Type
  8390 ;;  characters      2   32[COMRAM] PTR unsigned char 
  8391 ;;		 -> STR_12(3), STR_11(11), STR_10(3), STR_9(11), 
  8392 ;;		 -> STR_8(3), STR_7(9), STR_6(18), power_str(6), 
  8393 ;;		 -> current_str(6), voltage_str(6), STR_2(21), STR_1(16), 
  8394 ;; Auto vars:     Size  Location     Type
  8395 ;;		None
  8396 ;; Return value:  Size  Location     Type
  8397 ;;                  1    wreg      void 
  8398 ;; Registers used:
  8399 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8400 ;; Tracked objects:
  8401 ;;		On entry : 0/0
  8402 ;;		On exit  : 0/0
  8403 ;;		Unchanged: 0/0
  8404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8405 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8406 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8407 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8408 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8409 ;;Total ram usage:        2 bytes
  8410 ;; Hardware stack levels used: 1
  8411 ;; Hardware stack levels required when called: 11
  8412 ;; This function calls:
  8413 ;;		_Oled_WriteCharacter
  8414 ;; This function is called by:
  8415 ;;		_main
  8416 ;; This function uses a non-reentrant model
  8417 ;;
  8418                           
  8419                           	psect	text33
  8420  00C76E                     __ptext33:
  8421                           	callstack 0
  8422  00C76E                     _Oled_WriteString:
  8423                           	callstack 19
  8424  00C76E                     
  8425                           ;OLED.c: 92:     while (*characters) Oled_WriteCharacter(*characters++);
  8426  00C76E  EFCE  F063         	goto	l6219
  8427  00C772                     l6215:
  8428  00C772  C021  FFF6         	movff	Oled_WriteString@characters,tblptrl
  8429  00C776  C022  FFF7         	movff	Oled_WriteString@characters+1,tblptrh
  8430  00C77A  0E00               	movlw	low (__mediumconst shr (0+16))
  8431  00C77C  6EF8               	movwf	tblptru,c
  8432  00C77E  0E0E               	movlw	(high __ramtop+-1)
  8433  00C780  64F7               	cpfsgt	tblptrh,c
  8434  00C782  D003               	bra	u5947
  8435  00C784  0008               	tblrd		*
  8436  00C786  50F5               	movf	tablat,w,c
  8437  00C788  D005               	bra	u5940
  8438  00C78A                     u5947:
  8439  00C78A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8440  00C78E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8441  00C792  50EF               	movf	indf0,w,c
  8442  00C794                     u5940:
  8443  00C794  EC85  F064         	call	_Oled_WriteCharacter
  8444  00C798  4A21               	infsnz	Oled_WriteString@characters^0,f,c
  8445  00C79A  2A22               	incf	(Oled_WriteString@characters+1)^0,f,c
  8446  00C79C                     l6219:
  8447  00C79C  C021  FFF6         	movff	Oled_WriteString@characters,tblptrl
  8448  00C7A0  C022  FFF7         	movff	Oled_WriteString@characters+1,tblptrh
  8449  00C7A4  0E00               	movlw	low (__mediumconst shr (0+16))
  8450  00C7A6  6EF8               	movwf	tblptru,c
  8451  00C7A8  0E0E               	movlw	(high __ramtop+-1)
  8452  00C7AA  64F7               	cpfsgt	tblptrh,c
  8453  00C7AC  D003               	bra	u5957
  8454  00C7AE  0008               	tblrd		*
  8455  00C7B0  50F5               	movf	tablat,w,c
  8456  00C7B2  D005               	bra	u5950
  8457  00C7B4                     u5957:
  8458  00C7B4  CFF6 FFE9          	movff	tblptrl,fsr0l
  8459  00C7B8  CFF7 FFEA          	movff	tblptrh,fsr0h
  8460  00C7BC  50EF               	movf	indf0,w,c
  8461  00C7BE                     u5950:
  8462  00C7BE  0900               	iorlw	0
  8463  00C7C0  A4D8               	btfss	status,2,c
  8464  00C7C2  EFE5  F063         	goto	u5961
  8465  00C7C6  EFE7  F063         	goto	u5960
  8466  00C7CA                     u5961:
  8467  00C7CA  EFB9  F063         	goto	l6215
  8468  00C7CE                     u5960:
  8469  00C7CE  0012               	return		;funcret
  8470  00C7D0                     __end_of_Oled_WriteString:
  8471                           	callstack 0
  8472                           
  8473 ;; *************** function _Oled_WriteCharacter *****************
  8474 ;; Defined at:
  8475 ;;		line 97 in file "OLED.c"
  8476 ;; Parameters:    Size  Location     Type
  8477 ;;  character       1    wreg     unsigned char 
  8478 ;; Auto vars:     Size  Location     Type
  8479 ;;  character       1   29[COMRAM] unsigned char 
  8480 ;;  i               2   30[COMRAM] int 
  8481 ;; Return value:  Size  Location     Type
  8482 ;;                  1    wreg      void 
  8483 ;; Registers used:
  8484 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8485 ;; Tracked objects:
  8486 ;;		On entry : 0/0
  8487 ;;		On exit  : 0/0
  8488 ;;		Unchanged: 0/0
  8489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8490 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8491 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8493 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8494 ;;Total ram usage:        7 bytes
  8495 ;; Hardware stack levels used: 1
  8496 ;; Hardware stack levels required when called: 10
  8497 ;; This function calls:
  8498 ;;		_Oled_Data
  8499 ;; This function is called by:
  8500 ;;		_Oled_WriteString
  8501 ;; This function uses a non-reentrant model
  8502 ;;
  8503                           
  8504                           	psect	text34
  8505  00C90A                     __ptext34:
  8506                           	callstack 0
  8507  00C90A                     _Oled_WriteCharacter:
  8508                           	callstack 19
  8509                           
  8510                           ;incstack = 0
  8511                           ;Oled_WriteCharacter@character stored from wreg
  8512  00C90A  6E1E               	movwf	Oled_WriteCharacter@character^0,c
  8513  00C90C                     
  8514                           ;OLED.c: 98:     for (int i = 0; i < 5; i++) Oled_Data((ASCII[character - 0x20][i]));
  8515  00C90C  0E00               	movlw	0
  8516  00C90E  6E20               	movwf	(Oled_WriteCharacter@i+1)^0,c
  8517  00C910  0E00               	movlw	0
  8518  00C912  6E1F               	movwf	Oled_WriteCharacter@i^0,c
  8519  00C914                     l6071:
  8520  00C914  0E60               	movlw	96
  8521  00C916  6E1A               	movwf	??_Oled_WriteCharacter^0,c
  8522  00C918  0EFF               	movlw	255
  8523  00C91A  6E1B               	movwf	(??_Oled_WriteCharacter+1)^0,c
  8524  00C91C  501E               	movf	Oled_WriteCharacter@character^0,w,c
  8525  00C91E  0D05               	mullw	5
  8526  00C920  0EA7               	movlw	low _ASCII
  8527  00C922  6E1C               	movwf	(??_Oled_WriteCharacter+2)^0,c
  8528  00C924  0EFD               	movlw	high _ASCII
  8529  00C926  6E1D               	movwf	(??_Oled_WriteCharacter+3)^0,c
  8530  00C928  50F3               	movf	243,w,c
  8531  00C92A  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8532  00C92C  50F4               	movf	244,w,c
  8533  00C92E  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8534  00C930  501F               	movf	Oled_WriteCharacter@i^0,w,c
  8535  00C932  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8536  00C934  5020               	movf	(Oled_WriteCharacter@i+1)^0,w,c
  8537  00C936  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8538  00C938  501A               	movf	??_Oled_WriteCharacter^0,w,c
  8539  00C93A  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8540  00C93C  501B               	movf	(??_Oled_WriteCharacter+1)^0,w,c
  8541  00C93E  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8542  00C940  C01C  FFF6         	movff	??_Oled_WriteCharacter+2,tblptrl
  8543  00C944  C01D  FFF7         	movff	??_Oled_WriteCharacter+3,tblptrh
  8544  00C948                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8545  00C948  6AF8               	clrf	tblptru,c
  8546  00C94A                     	endif
  8547  00C94A                     	if	0	;tblptru may be non-zero
  8548  00C94A                     	endif
  8549  00C94A  0008               	tblrd		*
  8550  00C94C  50F5               	movf	tablat,w,c
  8551  00C94E  EC8F  F060         	call	_Oled_Data
  8552  00C952  4A1F               	infsnz	Oled_WriteCharacter@i^0,f,c
  8553  00C954  2A20               	incf	(Oled_WriteCharacter@i+1)^0,f,c
  8554  00C956  BE20               	btfsc	(Oled_WriteCharacter@i+1)^0,7,c
  8555  00C958  EFB7  F064         	goto	u5761
  8556  00C95C  5020               	movf	(Oled_WriteCharacter@i+1)^0,w,c
  8557  00C95E  E109               	bnz	u5760
  8558  00C960  0E05               	movlw	5
  8559  00C962  5C1F               	subwf	Oled_WriteCharacter@i^0,w,c
  8560  00C964  A0D8               	btfss	status,0,c
  8561  00C966  EFB7  F064         	goto	u5761
  8562  00C96A  EFB9  F064         	goto	u5760
  8563  00C96E                     u5761:
  8564  00C96E  EF8A  F064         	goto	l6071
  8565  00C972                     u5760:
  8566  00C972                     
  8567                           ;OLED.c: 99:     Oled_Data(0x00);
  8568  00C972  0E00               	movlw	0
  8569  00C974  EC8F  F060         	call	_Oled_Data
  8570  00C978  0012               	return		;funcret
  8571  00C97A                     __end_of_Oled_WriteCharacter:
  8572                           	callstack 0
  8573                           
  8574 ;; *************** function _Oled_SelectPage *****************
  8575 ;; Defined at:
  8576 ;;		line 142 in file "OLED.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  page_num        1    wreg     unsigned char 
  8579 ;; Auto vars:     Size  Location     Type
  8580 ;;  page_num        1   25[COMRAM] unsigned char 
  8581 ;;  Result          1   26[COMRAM] unsigned char 
  8582 ;; Return value:  Size  Location     Type
  8583 ;;                  1    wreg      void 
  8584 ;; Registers used:
  8585 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8586 ;; Tracked objects:
  8587 ;;		On entry : 0/0
  8588 ;;		On exit  : 0/0
  8589 ;;		Unchanged: 0/0
  8590 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8591 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8592 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8593 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8594 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8595 ;;Total ram usage:        2 bytes
  8596 ;; Hardware stack levels used: 1
  8597 ;; Hardware stack levels required when called: 10
  8598 ;; This function calls:
  8599 ;;		_Oled_Command
  8600 ;; This function is called by:
  8601 ;;		_main
  8602 ;;		_Oled_ClearLine
  8603 ;; This function uses a non-reentrant model
  8604 ;;
  8605                           
  8606                           	psect	text35
  8607  00C0C2                     __ptext35:
  8608                           	callstack 0
  8609  00C0C2                     _Oled_SelectPage:
  8610                           	callstack 20
  8611                           
  8612                           ;incstack = 0
  8613                           ;Oled_SelectPage@page_num stored from wreg
  8614  00C0C2  6E1A               	movwf	Oled_SelectPage@page_num^0,c
  8615  00C0C4                     
  8616                           ;OLED.c: 143:     uint8_t Result = 0xB0 | page_num;
  8617  00C0C4  501A               	movf	Oled_SelectPage@page_num^0,w,c
  8618  00C0C6  09B0               	iorlw	176
  8619  00C0C8  6E1B               	movwf	Oled_SelectPage@Result^0,c
  8620  00C0CA                     
  8621                           ;OLED.c: 144:     Oled_Command(Result);
  8622  00C0CA  501B               	movf	Oled_SelectPage@Result^0,w,c
  8623  00C0CC  ECA0  F060         	call	_Oled_Command
  8624  00C0D0                     
  8625                           ;OLED.c: 145:     Oled_Command(0x00);
  8626  00C0D0  0E00               	movlw	0
  8627  00C0D2  ECA0  F060         	call	_Oled_Command
  8628  00C0D6                     
  8629                           ;OLED.c: 146:     Oled_Command(0x10);
  8630  00C0D6  0E10               	movlw	16
  8631  00C0D8  ECA0  F060         	call	_Oled_Command
  8632  00C0DC  0012               	return		;funcret
  8633  00C0DE                     __end_of_Oled_SelectPage:
  8634                           	callstack 0
  8635                           
  8636 ;; *************** function _Oled_Init *****************
  8637 ;; Defined at:
  8638 ;;		line 59 in file "OLED.c"
  8639 ;; Parameters:    Size  Location     Type
  8640 ;;		None
  8641 ;; Auto vars:     Size  Location     Type
  8642 ;;		None
  8643 ;; Return value:  Size  Location     Type
  8644 ;;                  1    wreg      void 
  8645 ;; Registers used:
  8646 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8647 ;; Tracked objects:
  8648 ;;		On entry : 0/0
  8649 ;;		On exit  : 0/0
  8650 ;;		Unchanged: 0/0
  8651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8656 ;;Total ram usage:        0 bytes
  8657 ;; Hardware stack levels used: 1
  8658 ;; Hardware stack levels required when called: 10
  8659 ;; This function calls:
  8660 ;;		_Oled_Command
  8661 ;; This function is called by:
  8662 ;;		_main
  8663 ;; This function uses a non-reentrant model
  8664 ;;
  8665                           
  8666                           	psect	text36
  8667  00CAFE                     __ptext36:
  8668                           	callstack 0
  8669  00CAFE                     _Oled_Init:
  8670                           	callstack 20
  8671  00CAFE                     
  8672                           ;OLED.c: 61:     Oled_Command(0xAE);
  8673  00CAFE  0EAE               	movlw	174
  8674  00CB00  ECA0  F060         	call	_Oled_Command
  8675                           
  8676                           ;OLED.c: 62:     Oled_Command(0xD5);
  8677  00CB04  0ED5               	movlw	213
  8678  00CB06  ECA0  F060         	call	_Oled_Command
  8679                           
  8680                           ;OLED.c: 63:     Oled_Command(0x80);
  8681  00CB0A  0E80               	movlw	128
  8682  00CB0C  ECA0  F060         	call	_Oled_Command
  8683                           
  8684                           ;OLED.c: 64:     Oled_Command(0xA8);
  8685  00CB10  0EA8               	movlw	168
  8686  00CB12  ECA0  F060         	call	_Oled_Command
  8687                           
  8688                           ;OLED.c: 65:     Oled_Command(64 - 1);
  8689  00CB16  0E3F               	movlw	63
  8690  00CB18  ECA0  F060         	call	_Oled_Command
  8691                           
  8692                           ;OLED.c: 66:     Oled_Command(0xD3);
  8693  00CB1C  0ED3               	movlw	211
  8694  00CB1E  ECA0  F060         	call	_Oled_Command
  8695                           
  8696                           ;OLED.c: 67:     Oled_Command(0x00);
  8697  00CB22  0E00               	movlw	0
  8698  00CB24  ECA0  F060         	call	_Oled_Command
  8699                           
  8700                           ;OLED.c: 68:     Oled_Command(0x40 | 0x00);
  8701  00CB28  0E40               	movlw	64
  8702  00CB2A  ECA0  F060         	call	_Oled_Command
  8703                           
  8704                           ;OLED.c: 69:     Oled_Command(0x8D);
  8705  00CB2E  0E8D               	movlw	141
  8706  00CB30  ECA0  F060         	call	_Oled_Command
  8707                           
  8708                           ;OLED.c: 70:     Oled_Command(0x14);
  8709  00CB34  0E14               	movlw	20
  8710  00CB36  ECA0  F060         	call	_Oled_Command
  8711                           
  8712                           ;OLED.c: 71:     Oled_Command(0x20);
  8713  00CB3A  0E20               	movlw	32
  8714  00CB3C  ECA0  F060         	call	_Oled_Command
  8715                           
  8716                           ;OLED.c: 72:     Oled_Command(0x00);
  8717  00CB40  0E00               	movlw	0
  8718  00CB42  ECA0  F060         	call	_Oled_Command
  8719                           
  8720                           ;OLED.c: 73:     Oled_Command(0xA0 | 0x01);
  8721  00CB46  0EA1               	movlw	161
  8722  00CB48  ECA0  F060         	call	_Oled_Command
  8723                           
  8724                           ;OLED.c: 74:     Oled_Command(0xC8);
  8725  00CB4C  0EC8               	movlw	200
  8726  00CB4E  ECA0  F060         	call	_Oled_Command
  8727                           
  8728                           ;OLED.c: 75:     Oled_Command(0xDA);
  8729  00CB52  0EDA               	movlw	218
  8730  00CB54  ECA0  F060         	call	_Oled_Command
  8731                           
  8732                           ;OLED.c: 76:     Oled_Command(0x02);
  8733  00CB58  0E02               	movlw	2
  8734  00CB5A  ECA0  F060         	call	_Oled_Command
  8735                           
  8736                           ;OLED.c: 77:     Oled_Command(0x81);
  8737  00CB5E  0E81               	movlw	129
  8738  00CB60  ECA0  F060         	call	_Oled_Command
  8739                           
  8740                           ;OLED.c: 78:     Oled_Command(0x8F);
  8741  00CB64  0E8F               	movlw	143
  8742  00CB66  ECA0  F060         	call	_Oled_Command
  8743                           
  8744                           ;OLED.c: 79:     Oled_Command(0xD9);
  8745  00CB6A  0ED9               	movlw	217
  8746  00CB6C  ECA0  F060         	call	_Oled_Command
  8747                           
  8748                           ;OLED.c: 80:     Oled_Command(0xF1);
  8749  00CB70  0EF1               	movlw	241
  8750  00CB72  ECA0  F060         	call	_Oled_Command
  8751                           
  8752                           ;OLED.c: 81:     Oled_Command(0xDB);
  8753  00CB76  0EDB               	movlw	219
  8754  00CB78  ECA0  F060         	call	_Oled_Command
  8755                           
  8756                           ;OLED.c: 82:     Oled_Command(0x40);
  8757  00CB7C  0E40               	movlw	64
  8758  00CB7E  ECA0  F060         	call	_Oled_Command
  8759                           
  8760                           ;OLED.c: 83:     Oled_Command(0xA4);
  8761  00CB82  0EA4               	movlw	164
  8762  00CB84  ECA0  F060         	call	_Oled_Command
  8763                           
  8764                           ;OLED.c: 84:     Oled_Command(0xA6);
  8765  00CB88  0EA6               	movlw	166
  8766  00CB8A  ECA0  F060         	call	_Oled_Command
  8767                           
  8768                           ;OLED.c: 85:     Oled_Command(0x2E);
  8769  00CB8E  0E2E               	movlw	46
  8770  00CB90  ECA0  F060         	call	_Oled_Command
  8771                           
  8772                           ;OLED.c: 86:     Oled_Command(0xAF);
  8773  00CB94  0EAF               	movlw	175
  8774  00CB96  ECA0  F060         	call	_Oled_Command
  8775  00CB9A  0012               	return		;funcret
  8776  00CB9C                     __end_of_Oled_Init:
  8777                           	callstack 0
  8778                           
  8779 ;; *************** function _Oled_Command *****************
  8780 ;; Defined at:
  8781 ;;		line 33 in file "OLED.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;  command         1    wreg     unsigned char 
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;  command         1   22[COMRAM] unsigned char 
  8786 ;;  data_I2C        2   23[COMRAM] unsigned char [2]
  8787 ;; Return value:  Size  Location     Type
  8788 ;;                  1    wreg      void 
  8789 ;; Registers used:
  8790 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8791 ;; Tracked objects:
  8792 ;;		On entry : 0/0
  8793 ;;		On exit  : 0/0
  8794 ;;		Unchanged: 0/0
  8795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8796 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8797 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8798 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8799 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8800 ;;Total ram usage:        3 bytes
  8801 ;; Hardware stack levels used: 1
  8802 ;; Hardware stack levels required when called: 9
  8803 ;; This function calls:
  8804 ;;		_I2C_WriteNBytes
  8805 ;; This function is called by:
  8806 ;;		_Oled_Init
  8807 ;;		_Oled_SelectPage
  8808 ;;		_Oled_SetContrast
  8809 ;;		_ssd1306_UpdateScreen
  8810 ;; This function uses a non-reentrant model
  8811 ;;
  8812                           
  8813                           	psect	text37
  8814  00C140                     __ptext37:
  8815                           	callstack 0
  8816  00C140                     _Oled_Command:
  8817                           	callstack 20
  8818                           
  8819                           ;incstack = 0
  8820                           ;Oled_Command@command stored from wreg
  8821  00C140  6E17               	movwf	Oled_Command@command^0,c
  8822  00C142                     
  8823                           ;OLED.c: 34:     uint8_t data_I2C[2];;OLED.c: 36:     data_I2C[0] = 0x00;
  8824  00C142  0E00               	movlw	0
  8825  00C144  6E18               	movwf	Oled_Command@data_I2C^0,c
  8826  00C146                     
  8827                           ;OLED.c: 37:     data_I2C[1] = command;
  8828  00C146  C017  F019         	movff	Oled_Command@command,Oled_Command@data_I2C+1
  8829  00C14A                     
  8830                           ;OLED.c: 40:     I2C_WriteNBytes(0x3C, data_I2C, 2);
  8831  00C14A  0E18               	movlw	low Oled_Command@data_I2C
  8832  00C14C  6E12               	movwf	I2C_WriteNBytes@data^0,c
  8833  00C14E  0E00               	movlw	high Oled_Command@data_I2C
  8834  00C150  6E13               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8835  00C152  0E00               	movlw	0
  8836  00C154  6E15               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8837  00C156  0E02               	movlw	2
  8838  00C158  6E14               	movwf	I2C_WriteNBytes@len^0,c
  8839  00C15A  0E3C               	movlw	60
  8840  00C15C  ECFD  F062         	call	_I2C_WriteNBytes
  8841  00C160  0012               	return		;funcret
  8842  00C162                     __end_of_Oled_Command:
  8843                           	callstack 0
  8844                           
  8845 ;; *************** function _Oled_Clear *****************
  8846 ;; Defined at:
  8847 ;;		line 109 in file "OLED.c"
  8848 ;; Parameters:    Size  Location     Type
  8849 ;;		None
  8850 ;; Auto vars:     Size  Location     Type
  8851 ;;  i               2   25[COMRAM] int 
  8852 ;; Return value:  Size  Location     Type
  8853 ;;                  1    wreg      void 
  8854 ;; Registers used:
  8855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8856 ;; Tracked objects:
  8857 ;;		On entry : 0/0
  8858 ;;		On exit  : 0/0
  8859 ;;		Unchanged: 0/0
  8860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8862 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8863 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8864 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8865 ;;Total ram usage:        2 bytes
  8866 ;; Hardware stack levels used: 1
  8867 ;; Hardware stack levels required when called: 10
  8868 ;; This function calls:
  8869 ;;		_Oled_Data
  8870 ;; This function is called by:
  8871 ;;		_main
  8872 ;; This function uses a non-reentrant model
  8873 ;;
  8874                           
  8875                           	psect	text38
  8876  00C2D6                     __ptext38:
  8877                           	callstack 0
  8878  00C2D6                     _Oled_Clear:
  8879                           	callstack 20
  8880  00C2D6                     
  8881                           ;OLED.c: 110:     int i = 0;
  8882  00C2D6  0E00               	movlw	0
  8883  00C2D8  6E1B               	movwf	(Oled_Clear@i+1)^0,c
  8884  00C2DA  0E00               	movlw	0
  8885  00C2DC  6E1A               	movwf	Oled_Clear@i^0,c
  8886  00C2DE                     l6199:
  8887                           
  8888                           ;OLED.c: 114:         Oled_Data(0x00);
  8889  00C2DE  0E00               	movlw	0
  8890  00C2E0  EC8F  F060         	call	_Oled_Data
  8891  00C2E4                     
  8892                           ;OLED.c: 115:     }
  8893  00C2E4  4A1A               	infsnz	Oled_Clear@i^0,f,c
  8894  00C2E6  2A1B               	incf	(Oled_Clear@i+1)^0,f,c
  8895  00C2E8  BE1B               	btfsc	(Oled_Clear@i+1)^0,7,c
  8896  00C2EA  EF7E  F061         	goto	u5931
  8897  00C2EE  0E04               	movlw	4
  8898  00C2F0  5C1B               	subwf	(Oled_Clear@i+1)^0,w,c
  8899  00C2F2  A0D8               	btfss	status,0,c
  8900  00C2F4  EF7E  F061         	goto	u5931
  8901  00C2F8  EF80  F061         	goto	u5930
  8902  00C2FC                     u5931:
  8903  00C2FC  EF6F  F061         	goto	l6199
  8904  00C300                     u5930:
  8905  00C300  0012               	return		;funcret
  8906  00C302                     __end_of_Oled_Clear:
  8907                           	callstack 0
  8908                           
  8909 ;; *************** function _Oled_Data *****************
  8910 ;; Defined at:
  8911 ;;		line 46 in file "OLED.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  value           1    wreg     unsigned char 
  8914 ;; Auto vars:     Size  Location     Type
  8915 ;;  value           1   22[COMRAM] unsigned char 
  8916 ;;  data_I2C        2   23[COMRAM] unsigned char [2]
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8927 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8929 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8930 ;;Total ram usage:        3 bytes
  8931 ;; Hardware stack levels used: 1
  8932 ;; Hardware stack levels required when called: 9
  8933 ;; This function calls:
  8934 ;;		_I2C_WriteNBytes
  8935 ;; This function is called by:
  8936 ;;		_Oled_WriteCharacter
  8937 ;;		_Oled_Clear
  8938 ;;		_Oled_ClearLine
  8939 ;;		_OLEDWriteLargeCharacter
  8940 ;;		_ssd1306_UpdateScreen
  8941 ;; This function uses a non-reentrant model
  8942 ;;
  8943                           
  8944                           	psect	text39
  8945  00C11E                     __ptext39:
  8946                           	callstack 0
  8947  00C11E                     _Oled_Data:
  8948                           	callstack 19
  8949                           
  8950                           ;incstack = 0
  8951                           ;Oled_Data@value stored from wreg
  8952  00C11E  6E17               	movwf	Oled_Data@value^0,c
  8953  00C120                     
  8954                           ;OLED.c: 47:     uint8_t data_I2C[2];;OLED.c: 49:     data_I2C[0] = 0x40;
  8955  00C120  0E40               	movlw	64
  8956  00C122  6E18               	movwf	Oled_Data@data_I2C^0,c
  8957  00C124                     
  8958                           ;OLED.c: 50:     data_I2C[1] = value;
  8959  00C124  C017  F019         	movff	Oled_Data@value,Oled_Data@data_I2C+1
  8960  00C128                     
  8961                           ;OLED.c: 53:     I2C_WriteNBytes(0x3C, data_I2C, 2);
  8962  00C128  0E18               	movlw	low Oled_Data@data_I2C
  8963  00C12A  6E12               	movwf	I2C_WriteNBytes@data^0,c
  8964  00C12C  0E00               	movlw	high Oled_Data@data_I2C
  8965  00C12E  6E13               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8966  00C130  0E00               	movlw	0
  8967  00C132  6E15               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8968  00C134  0E02               	movlw	2
  8969  00C136  6E14               	movwf	I2C_WriteNBytes@len^0,c
  8970  00C138  0E3C               	movlw	60
  8971  00C13A  ECFD  F062         	call	_I2C_WriteNBytes
  8972  00C13E  0012               	return		;funcret
  8973  00C140                     __end_of_Oled_Data:
  8974                           	callstack 0
  8975                           
  8976 ;; *************** function _I2C_WriteNBytes *****************
  8977 ;; Defined at:
  8978 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8979 ;; Parameters:    Size  Location     Type
  8980 ;;  address         1    wreg     unsigned char 
  8981 ;;  data            2   17[COMRAM] PTR unsigned char 
  8982 ;;		 -> Oled_Data@data_I2C(2), Oled_Command@data_I2C(2), 
  8983 ;;  len             2   19[COMRAM] unsigned int 
  8984 ;; Auto vars:     Size  Location     Type
  8985 ;;  address         1   21[COMRAM] unsigned char 
  8986 ;; Return value:  Size  Location     Type
  8987 ;;                  1    wreg      void 
  8988 ;; Registers used:
  8989 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8990 ;; Tracked objects:
  8991 ;;		On entry : 0/0
  8992 ;;		On exit  : 0/0
  8993 ;;		Unchanged: 0/0
  8994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8995 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8996 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8997 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8998 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8999 ;;Total ram usage:        5 bytes
  9000 ;; Hardware stack levels used: 1
  9001 ;; Hardware stack levels required when called: 8
  9002 ;; This function calls:
  9003 ;;		_I2C_Close
  9004 ;;		_I2C_MasterWrite
  9005 ;;		_I2C_Open
  9006 ;;		_I2C_SetAddressNackCallback
  9007 ;;		_I2C_SetBuffer
  9008 ;; This function is called by:
  9009 ;;		_Oled_Command
  9010 ;;		_Oled_Data
  9011 ;; This function uses a non-reentrant model
  9012 ;;
  9013                           
  9014                           	psect	text40
  9015  00C5FA                     __ptext40:
  9016                           	callstack 0
  9017  00C5FA                     _I2C_WriteNBytes:
  9018                           	callstack 19
  9019                           
  9020                           ;incstack = 0
  9021                           ;I2C_WriteNBytes@address stored from wreg
  9022  00C5FA  6E16               	movwf	I2C_WriteNBytes@address^0,c
  9023  00C5FC                     l5571:
  9024  00C5FC  5016               	movf	I2C_WriteNBytes@address^0,w,c
  9025  00C5FE  EC38  F065         	call	_I2C_Open
  9026  00C602  0900               	iorlw	0
  9027  00C604  B4D8               	btfsc	status,2,c
  9028  00C606  EF07  F063         	goto	u4921
  9029  00C60A  EF09  F063         	goto	u4920
  9030  00C60E                     u4921:
  9031  00C60E  EFFE  F062         	goto	l5571
  9032  00C612                     u4920:
  9033  00C612                     
  9034                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  9035  00C612  C012  F001         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  9036  00C616  C013  F002         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  9037  00C61A  C014  F003         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  9038  00C61E  C015  F004         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  9039  00C622  ECB1  F060         	call	_I2C_SetBuffer	;wreg free
  9040  00C626                     
  9041                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  9042  00C626  0E00               	movlw	0
  9043  00C628  6E06               	movwf	I2C_SetAddressNackCallback@cb^0,c
  9044  00C62A  0E00               	movlw	0
  9045  00C62C  6E07               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  9046  00C62E  0E00               	movlw	0
  9047  00C630  6E08               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  9048  00C632  0E00               	movlw	0
  9049  00C634  6E09               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  9050  00C636  EC55  F060         	call	_I2C_SetAddressNackCallback	;wreg free
  9051  00C63A                     
  9052                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  9053  00C63A  ECF4  F05F         	call	_I2C_MasterWrite	;wreg free
  9054  00C63E                     l5579:
  9055  00C63E  ECFD  F060         	call	_I2C_Close	;wreg free
  9056  00C642  06E8               	decf	wreg,f,c
  9057  00C644  B4D8               	btfsc	status,2,c
  9058  00C646  EF27  F063         	goto	u4931
  9059  00C64A  EF29  F063         	goto	u4930
  9060  00C64E                     u4931:
  9061  00C64E  EF1F  F063         	goto	l5579
  9062  00C652                     u4930:
  9063  00C652  0012               	return		;funcret
  9064  00C654                     __end_of_I2C_WriteNBytes:
  9065                           	callstack 0
  9066                           
  9067 ;; *************** function _I2C_SetAddressNackCallback *****************
  9068 ;; Defined at:
  9069 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  9070 ;; Parameters:    Size  Location     Type
  9071 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
  9072 ;;		 -> Absolute function(1), 
  9073 ;;  ptr             2    7[COMRAM] PTR void 
  9074 ;;		 -> NULL(0), 
  9075 ;; Auto vars:     Size  Location     Type
  9076 ;;		None
  9077 ;; Return value:  Size  Location     Type
  9078 ;;                  1    wreg      void 
  9079 ;; Registers used:
  9080 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  9081 ;; Tracked objects:
  9082 ;;		On entry : 0/0
  9083 ;;		On exit  : 0/0
  9084 ;;		Unchanged: 0/0
  9085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9086 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9087 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9089 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9090 ;;Total ram usage:        4 bytes
  9091 ;; Hardware stack levels used: 1
  9092 ;; Hardware stack levels required when called: 1
  9093 ;; This function calls:
  9094 ;;		_I2C_SetCallback
  9095 ;; This function is called by:
  9096 ;;		_I2C_WriteNBytes
  9097 ;;		_I2C_Read1ByteRegister
  9098 ;;		_I2C_Read2ByteRegister
  9099 ;;		_I2C_Write1ByteRegister
  9100 ;;		_I2C_Write2ByteRegister
  9101 ;;		_I2C_ReadDataBlock
  9102 ;; This function uses a non-reentrant model
  9103 ;;
  9104                           
  9105                           	psect	text41
  9106  00C0AA                     __ptext41:
  9107                           	callstack 0
  9108  00C0AA                     _I2C_SetAddressNackCallback:
  9109                           	callstack 25
  9110  00C0AA                     
  9111                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  9112  00C0AA  C006  F001         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  9113  00C0AE  C007  F002         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  9114  00C0B2  C008  F003         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  9115  00C0B6  C009  F004         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  9116  00C0BA  0E02               	movlw	2
  9117  00C0BC  ECBD  F064         	call	_I2C_SetCallback
  9118  00C0C0  0012               	return		;funcret
  9119  00C0C2                     __end_of_I2C_SetAddressNackCallback:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _I2C_Open *****************
  9123 ;; Defined at:
  9124 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  address         1    wreg     unsigned char 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  address         1    0[COMRAM] unsigned char 
  9129 ;;  returnValue     1    1[COMRAM] enum E355
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      enum E355
  9132 ;; Registers used:
  9133 ;;		wreg, status,2, status,0, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9139 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9140 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9143 ;;Total ram usage:        2 bytes
  9144 ;; Hardware stack levels used: 1
  9145 ;; Hardware stack levels required when called: 1
  9146 ;; This function calls:
  9147 ;;		_I2C_MasterClearIrq
  9148 ;;		_I2C_MasterOpen
  9149 ;; This function is called by:
  9150 ;;		_I2C_WriteNBytes
  9151 ;;		_I2C_Read1ByteRegister
  9152 ;;		_I2C_Read2ByteRegister
  9153 ;;		_I2C_Write1ByteRegister
  9154 ;;		_I2C_Write2ByteRegister
  9155 ;;		_I2C_ReadNBytes
  9156 ;;		_I2C_ReadDataBlock
  9157 ;; This function uses a non-reentrant model
  9158 ;;
  9159                           
  9160                           	psect	text42
  9161  00CA70                     __ptext42:
  9162                           	callstack 0
  9163  00CA70                     _I2C_Open:
  9164                           	callstack 25
  9165                           
  9166                           ;incstack = 0
  9167                           ;I2C_Open@address stored from wreg
  9168  00CA70  6E01               	movwf	I2C_Open@address^0,c
  9169  00CA72                     
  9170                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9171  00CA72  0E01               	movlw	1
  9172  00CA74  6E02               	movwf	I2C_Open@returnValue^0,c
  9173  00CA76                     
  9174                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  9175  00CA76  0101               	movlb	1	; () banked
  9176  00CA78  B573               	btfsc	(_I2C_Status+35)& (0+255),2,b
  9177  00CA7A  EF41  F065         	goto	u3901
  9178  00CA7E  EF43  F065         	goto	u3900
  9179  00CA82                     u3901:
  9180  00CA82  EF7D  F065         	goto	l4993
  9181  00CA86                     u3900:
  9182  00CA86                     
  9183                           ; BSR set to: 1
  9184                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  9185  00CA86  C001  F16C         	movff	I2C_Open@address,_I2C_Status+28
  9186  00CA8A                     
  9187                           ; BSR set to: 1
  9188                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  9189  00CA8A  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
  9190  00CA8C                     
  9191                           ; BSR set to: 1
  9192                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  9193  00CA8C  8573               	bsf	(_I2C_Status+35)& (0+255),2,b
  9194  00CA8E                     
  9195                           ; BSR set to: 1
  9196                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  9197  00CA8E  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
  9198  00CA90                     
  9199                           ; BSR set to: 1
  9200                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  9201  00CA90  0E0E               	movlw	14
  9202  00CA92  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9203  00CA94                     
  9204                           ; BSR set to: 1
  9205                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  9206  00CA94  0E01               	movlw	1
  9207  00CA96  6F6B               	movwf	(_I2C_Status+27)& (0+255),b
  9208  00CA98  0EF4               	movlw	244
  9209  00CA9A  6F6A               	movwf	(_I2C_Status+26)& (0+255),b
  9210  00CA9C                     
  9211                           ; BSR set to: 1
  9212                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  9213  00CA9C  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
  9214  00CA9E                     
  9215                           ; BSR set to: 1
  9216                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  9217  00CA9E  0E70               	movlw	low _I2C_CallbackReturnStop
  9218  00CAA0  6F50               	movwf	_I2C_Status& (0+255),b
  9219  00CAA2  0EBF               	movlw	high _I2C_CallbackReturnStop
  9220  00CAA4  6F51               	movwf	(_I2C_Status+1)& (0+255),b
  9221  00CAA6                     
  9222                           ; BSR set to: 1
  9223                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  9224  00CAA6  0E00               	movlw	0
  9225  00CAA8  6F5C               	movwf	(_I2C_Status+12)& (0+255),b
  9226  00CAAA  0E00               	movlw	0
  9227  00CAAC  6F5D               	movwf	(_I2C_Status+13)& (0+255),b
  9228  00CAAE                     
  9229                           ; BSR set to: 1
  9230                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  9231  00CAAE  0E70               	movlw	low _I2C_CallbackReturnStop
  9232  00CAB0  6F52               	movwf	(_I2C_Status+2)& (0+255),b
  9233  00CAB2  0EBF               	movlw	high _I2C_CallbackReturnStop
  9234  00CAB4  6F53               	movwf	(_I2C_Status+3)& (0+255),b
  9235  00CAB6                     
  9236                           ; BSR set to: 1
  9237                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  9238  00CAB6  0E00               	movlw	0
  9239  00CAB8  6F5E               	movwf	(_I2C_Status+14)& (0+255),b
  9240  00CABA  0E00               	movlw	0
  9241  00CABC  6F5F               	movwf	(_I2C_Status+15)& (0+255),b
  9242  00CABE                     
  9243                           ; BSR set to: 1
  9244                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  9245  00CABE  0E70               	movlw	low _I2C_CallbackReturnStop
  9246  00CAC0  6F54               	movwf	(_I2C_Status+4)& (0+255),b
  9247  00CAC2  0EBF               	movlw	high _I2C_CallbackReturnStop
  9248  00CAC4  6F55               	movwf	(_I2C_Status+5)& (0+255),b
  9249  00CAC6                     
  9250                           ; BSR set to: 1
  9251                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  9252  00CAC6  0E00               	movlw	0
  9253  00CAC8  6F60               	movwf	(_I2C_Status+16)& (0+255),b
  9254  00CACA  0E00               	movlw	0
  9255  00CACC  6F61               	movwf	(_I2C_Status+17)& (0+255),b
  9256  00CACE                     
  9257                           ; BSR set to: 1
  9258                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  9259  00CACE  0E70               	movlw	low _I2C_CallbackReturnStop
  9260  00CAD0  6F56               	movwf	(_I2C_Status+6)& (0+255),b
  9261  00CAD2  0EBF               	movlw	high _I2C_CallbackReturnStop
  9262  00CAD4  6F57               	movwf	(_I2C_Status+7)& (0+255),b
  9263  00CAD6                     
  9264                           ; BSR set to: 1
  9265                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  9266  00CAD6  0E00               	movlw	0
  9267  00CAD8  6F62               	movwf	(_I2C_Status+18)& (0+255),b
  9268  00CADA  0E00               	movlw	0
  9269  00CADC  6F63               	movwf	(_I2C_Status+19)& (0+255),b
  9270  00CADE                     
  9271                           ; BSR set to: 1
  9272                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  9273  00CADE  0E74               	movlw	low _I2C_CallbackReturnReset
  9274  00CAE0  6F58               	movwf	(_I2C_Status+8)& (0+255),b
  9275  00CAE2  0EBF               	movlw	high _I2C_CallbackReturnReset
  9276  00CAE4  6F59               	movwf	(_I2C_Status+9)& (0+255),b
  9277  00CAE6                     
  9278                           ; BSR set to: 1
  9279                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  9280  00CAE6  0E00               	movlw	0
  9281  00CAE8  6F64               	movwf	(_I2C_Status+20)& (0+255),b
  9282  00CAEA  0E00               	movlw	0
  9283  00CAEC  6F65               	movwf	(_I2C_Status+21)& (0+255),b
  9284  00CAEE                     
  9285                           ; BSR set to: 1
  9286                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  9287  00CAEE  ECAC  F05F         	call	_I2C_MasterClearIrq	;wreg free
  9288  00CAF2                     
  9289                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  9290  00CAF2  EC7E  F060         	call	_I2C_MasterOpen	;wreg free
  9291  00CAF6                     
  9292                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  9293  00CAF6  0E00               	movlw	0
  9294  00CAF8  6E02               	movwf	I2C_Open@returnValue^0,c
  9295  00CAFA                     l4993:
  9296                           
  9297                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  9298  00CAFA  5002               	movf	I2C_Open@returnValue^0,w,c
  9299  00CAFC  0012               	return		;funcret
  9300  00CAFE                     __end_of_I2C_Open:
  9301                           	callstack 0
  9302                           
  9303 ;; *************** function _I2C_MasterOpen *****************
  9304 ;; Defined at:
  9305 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  9306 ;; Parameters:    Size  Location     Type
  9307 ;;		None
  9308 ;; Auto vars:     Size  Location     Type
  9309 ;;		None
  9310 ;; Return value:  Size  Location     Type
  9311 ;;                  1    wreg      _Bool 
  9312 ;; Registers used:
  9313 ;;		wreg, status,2
  9314 ;; Tracked objects:
  9315 ;;		On entry : 0/0
  9316 ;;		On exit  : 0/0
  9317 ;;		Unchanged: 0/0
  9318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9323 ;;Total ram usage:        0 bytes
  9324 ;; Hardware stack levels used: 1
  9325 ;; This function calls:
  9326 ;;		Nothing
  9327 ;; This function is called by:
  9328 ;;		_I2C_Open
  9329 ;; This function uses a non-reentrant model
  9330 ;;
  9331                           
  9332                           	psect	text43
  9333  00C0FC                     __ptext43:
  9334                           	callstack 0
  9335  00C0FC                     _I2C_MasterOpen:
  9336                           	callstack 25
  9337  00C0FC                     
  9338                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  9339  00C0FC  BAC6               	btfsc	198,5,c	;volatile
  9340  00C0FE  EF83  F060         	goto	u3441
  9341  00C102  EF85  F060         	goto	u3440
  9342  00C106                     u3441:
  9343  00C106  EF8E  F060         	goto	l424
  9344  00C10A                     u3440:
  9345  00C10A                     
  9346                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  9347  00C10A  0E00               	movlw	0
  9348  00C10C  6EC7               	movwf	199,c	;volatile
  9349                           
  9350                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  9351  00C10E  0E08               	movlw	8
  9352  00C110  6EC6               	movwf	198,c	;volatile
  9353                           
  9354                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  9355  00C112  0E00               	movlw	0
  9356  00C114  6EC5               	movwf	197,c	;volatile
  9357                           
  9358                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  9359  00C116  0E13               	movlw	19
  9360  00C118  6EC8               	movwf	200,c	;volatile
  9361  00C11A                     
  9362                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  9363  00C11A  8AC6               	bsf	198,5,c	;volatile
  9364  00C11C                     l424:
  9365  00C11C  0012               	return		;funcret
  9366  00C11E                     __end_of_I2C_MasterOpen:
  9367                           	callstack 0
  9368                           
  9369 ;; *************** function _I2C_MasterWrite *****************
  9370 ;; Defined at:
  9371 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  9372 ;; Parameters:    Size  Location     Type
  9373 ;;		None
  9374 ;; Auto vars:     Size  Location     Type
  9375 ;;		None
  9376 ;; Return value:  Size  Location     Type
  9377 ;;                  1    wreg      enum E355
  9378 ;; Registers used:
  9379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9380 ;; Tracked objects:
  9381 ;;		On entry : 0/0
  9382 ;;		On exit  : 0/0
  9383 ;;		Unchanged: 0/0
  9384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9386 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9388 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9389 ;;Total ram usage:        0 bytes
  9390 ;; Hardware stack levels used: 1
  9391 ;; Hardware stack levels required when called: 7
  9392 ;; This function calls:
  9393 ;;		_I2C_MasterOperation
  9394 ;; This function is called by:
  9395 ;;		_I2C_WriteNBytes
  9396 ;;		_I2C_Read1ByteRegister
  9397 ;;		_I2C_Read2ByteRegister
  9398 ;;		_I2C_Write1ByteRegister
  9399 ;;		_I2C_Write2ByteRegister
  9400 ;;		_I2C_ReadDataBlock
  9401 ;; This function uses a non-reentrant model
  9402 ;;
  9403                           
  9404                           	psect	text44
  9405  00BFE8                     __ptext44:
  9406                           	callstack 0
  9407  00BFE8                     _I2C_MasterWrite:
  9408                           	callstack 19
  9409  00BFE8                     
  9410                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  9411  00BFE8  0E00               	movlw	0
  9412  00BFEA  EC44  F062         	call	_I2C_MasterOperation
  9413  00BFEE  0012               	return		;funcret
  9414  00BFF0                     __end_of_I2C_MasterWrite:
  9415                           	callstack 0
  9416                           
  9417 ;; *************** function _I2C_MasterOperation *****************
  9418 ;; Defined at:
  9419 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  9420 ;; Parameters:    Size  Location     Type
  9421 ;;  read            1    wreg     _Bool 
  9422 ;; Auto vars:     Size  Location     Type
  9423 ;;  read            1   15[COMRAM] _Bool 
  9424 ;;  returnValue     1   16[COMRAM] enum E355
  9425 ;; Return value:  Size  Location     Type
  9426 ;;                  1    wreg      enum E355
  9427 ;; Registers used:
  9428 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9429 ;; Tracked objects:
  9430 ;;		On entry : 0/0
  9431 ;;		On exit  : 0/0
  9432 ;;		Unchanged: 0/0
  9433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9434 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9435 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9436 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9437 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9438 ;;Total ram usage:        2 bytes
  9439 ;; Hardware stack levels used: 1
  9440 ;; Hardware stack levels required when called: 6
  9441 ;; This function calls:
  9442 ;;		_I2C_MasterStart
  9443 ;;		_I2C_Poller
  9444 ;; This function is called by:
  9445 ;;		_I2C_MasterWrite
  9446 ;;		_I2C_MasterRead
  9447 ;; This function uses a non-reentrant model
  9448 ;;
  9449                           
  9450                           	psect	text45
  9451  00C488                     __ptext45:
  9452                           	callstack 0
  9453  00C488                     _I2C_MasterOperation:
  9454                           	callstack 19
  9455                           
  9456                           ;incstack = 0
  9457                           ;I2C_MasterOperation@read stored from wreg
  9458  00C488  6E10               	movwf	I2C_MasterOperation@read^0,c
  9459  00C48A                     
  9460                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9461  00C48A  0E01               	movlw	1
  9462  00C48C  6E11               	movwf	I2C_MasterOperation@returnValue^0,c
  9463  00C48E                     
  9464                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  9465  00C48E  0101               	movlb	1	; () banked
  9466  00C490  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9467  00C492  EF4D  F062         	goto	u3451
  9468  00C496  EF4F  F062         	goto	u3450
  9469  00C49A                     u3451:
  9470  00C49A  EF64  F062         	goto	l4721
  9471  00C49E                     u3450:
  9472  00C49E                     
  9473                           ; BSR set to: 1
  9474                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  9475  00C49E  8373               	bsf	(_I2C_Status+35)& (0+255),1,b
  9476  00C4A0                     
  9477                           ; BSR set to: 1
  9478                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  9479  00C4A0  0E00               	movlw	0
  9480  00C4A2  6E11               	movwf	I2C_MasterOperation@returnValue^0,c
  9481  00C4A4                     
  9482                           ; BSR set to: 1
  9483                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  9484  00C4A4  5010               	movf	I2C_MasterOperation@read^0,w,c
  9485  00C4A6  B4D8               	btfsc	status,2,c
  9486  00C4A8  EF58  F062         	goto	u3461
  9487  00C4AC  EF5A  F062         	goto	u3460
  9488  00C4B0                     u3461:
  9489  00C4B0  EF5E  F062         	goto	l4715
  9490  00C4B4                     u3460:
  9491  00C4B4                     
  9492                           ; BSR set to: 1
  9493                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9494  00C4B4  0E01               	movlw	1
  9495  00C4B6  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9496                           
  9497                           ;mcc_generated_files/i2c_master.c: 235:         }
  9498  00C4B8  EF60  F062         	goto	l4717
  9499  00C4BC                     l4715:
  9500                           
  9501                           ; BSR set to: 1
  9502                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9503  00C4BC  0E02               	movlw	2
  9504  00C4BE  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9505  00C4C0                     l4717:
  9506                           
  9507                           ; BSR set to: 1
  9508                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  9509  00C4C0  ECB2  F05F         	call	_I2C_MasterStart	;wreg free
  9510  00C4C4                     
  9511                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  9512  00C4C4  EC6F  F060         	call	_I2C_Poller	;wreg free
  9513  00C4C8                     l4721:
  9514                           
  9515                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  9516  00C4C8  5011               	movf	I2C_MasterOperation@returnValue^0,w,c
  9517  00C4CA  0012               	return		;funcret
  9518  00C4CC                     __end_of_I2C_MasterOperation:
  9519                           	callstack 0
  9520                           
  9521 ;; *************** function _I2C_Poller *****************
  9522 ;; Defined at:
  9523 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  9524 ;; Parameters:    Size  Location     Type
  9525 ;;		None
  9526 ;; Auto vars:     Size  Location     Type
  9527 ;;		None
  9528 ;; Return value:  Size  Location     Type
  9529 ;;                  1    wreg      void 
  9530 ;; Registers used:
  9531 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9532 ;; Tracked objects:
  9533 ;;		On entry : 0/0
  9534 ;;		On exit  : 0/0
  9535 ;;		Unchanged: 0/0
  9536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9537 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9540 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9541 ;;Total ram usage:        0 bytes
  9542 ;; Hardware stack levels used: 1
  9543 ;; Hardware stack levels required when called: 5
  9544 ;; This function calls:
  9545 ;;		_I2C_MasterFsm
  9546 ;;		_I2C_MasterWaitForEvent
  9547 ;; This function is called by:
  9548 ;;		_I2C_MasterOperation
  9549 ;; This function uses a non-reentrant model
  9550 ;;
  9551                           
  9552                           	psect	text46
  9553  00C0DE                     __ptext46:
  9554                           	callstack 0
  9555  00C0DE                     _I2C_Poller:
  9556                           	callstack 19
  9557  00C0DE                     
  9558                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9559  00C0DE  EF75  F060         	goto	l4675
  9560  00C0E2                     l4671:
  9561                           
  9562                           ; BSR set to: 1
  9563                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  9564  00C0E2  EC24  F060         	call	_I2C_MasterWaitForEvent	;wreg free
  9565  00C0E6                     
  9566                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  9567  00C0E6  EC4D  F064         	call	_I2C_MasterFsm	;wreg free
  9568  00C0EA                     l4675:
  9569                           
  9570                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9571  00C0EA  0101               	movlb	1	; () banked
  9572  00C0EC  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9573  00C0EE  EF7B  F060         	goto	u3391
  9574  00C0F2  EF7D  F060         	goto	u3390
  9575  00C0F6                     u3391:
  9576  00C0F6  EF71  F060         	goto	l4671
  9577  00C0FA                     u3390:
  9578  00C0FA                     
  9579                           ; BSR set to: 1
  9580  00C0FA  0012               	return		;funcret
  9581  00C0FC                     __end_of_I2C_Poller:
  9582                           	callstack 0
  9583                           
  9584 ;; *************** function _I2C_MasterWaitForEvent *****************
  9585 ;; Defined at:
  9586 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  9587 ;; Parameters:    Size  Location     Type
  9588 ;;		None
  9589 ;; Auto vars:     Size  Location     Type
  9590 ;;		None
  9591 ;; Return value:  Size  Location     Type
  9592 ;;                  1    wreg      void 
  9593 ;; Registers used:
  9594 ;;		None
  9595 ;; Tracked objects:
  9596 ;;		On entry : 0/0
  9597 ;;		On exit  : 0/0
  9598 ;;		Unchanged: 0/0
  9599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9604 ;;Total ram usage:        0 bytes
  9605 ;; Hardware stack levels used: 1
  9606 ;; This function calls:
  9607 ;;		Nothing
  9608 ;; This function is called by:
  9609 ;;		_I2C_Poller
  9610 ;; This function uses a non-reentrant model
  9611 ;;
  9612                           
  9613                           	psect	text47
  9614  00C048                     __ptext47:
  9615                           	callstack 0
  9616  00C048                     _I2C_MasterWaitForEvent:
  9617                           	callstack 23
  9618  00C048                     l481:
  9619                           
  9620                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  9621  00C048  A69E               	btfss	158,3,c	;volatile
  9622  00C04A  EF29  F060         	goto	u3351
  9623  00C04E  EF2B  F060         	goto	u3350
  9624  00C052                     u3351:
  9625  00C052  EF24  F060         	goto	l481
  9626  00C056                     u3350:
  9627  00C056  0012               	return		;funcret
  9628  00C058                     __end_of_I2C_MasterWaitForEvent:
  9629                           	callstack 0
  9630                           
  9631 ;; *************** function _I2C_MasterFsm *****************
  9632 ;; Defined at:
  9633 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  9634 ;; Parameters:    Size  Location     Type
  9635 ;;		None
  9636 ;; Auto vars:     Size  Location     Type
  9637 ;;		None
  9638 ;; Return value:  Size  Location     Type
  9639 ;;                  1    wreg      void 
  9640 ;; Registers used:
  9641 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9642 ;; Tracked objects:
  9643 ;;		On entry : 0/0
  9644 ;;		On exit  : 0/0
  9645 ;;		Unchanged: 0/0
  9646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9648 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9649 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9650 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9651 ;;Total ram usage:        2 bytes
  9652 ;; Hardware stack levels used: 1
  9653 ;; Hardware stack levels required when called: 4
  9654 ;; This function calls:
  9655 ;;		_I2C_DO_ADDRESS_NACK
  9656 ;;		_I2C_DO_IDLE
  9657 ;;		_I2C_DO_RCEN
  9658 ;;		_I2C_DO_RESET
  9659 ;;		_I2C_DO_RX
  9660 ;;		_I2C_DO_RX_ACK
  9661 ;;		_I2C_DO_RX_NACK_RESTART
  9662 ;;		_I2C_DO_RX_NACK_STOP
  9663 ;;		_I2C_DO_SEND_ADR_READ
  9664 ;;		_I2C_DO_SEND_ADR_WRITE
  9665 ;;		_I2C_DO_SEND_RESTART
  9666 ;;		_I2C_DO_SEND_RESTART_READ
  9667 ;;		_I2C_DO_SEND_RESTART_WRITE
  9668 ;;		_I2C_DO_SEND_STOP
  9669 ;;		_I2C_DO_TX
  9670 ;;		_I2C_DO_TX_EMPTY
  9671 ;;		_I2C_MasterClearIrq
  9672 ;;		_I2C_MasterIsNack
  9673 ;; This function is called by:
  9674 ;;		_I2C_Poller
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           	psect	text48
  9679  00C89A                     __ptext48:
  9680                           	callstack 0
  9681  00C89A                     _I2C_MasterFsm:
  9682                           	callstack 19
  9683  00C89A                     
  9684                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  9685  00C89A  ECAC  F05F         	call	_I2C_MasterClearIrq	;wreg free
  9686  00C89E                     
  9687                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  9688  00C89E  0101               	movlb	1	; () banked
  9689  00C8A0  A173               	btfss	(_I2C_Status+35)& (0+255),0,b
  9690  00C8A2  EF55  F064         	goto	u3361
  9691  00C8A6  EF57  F064         	goto	u3360
  9692  00C8AA                     u3361:
  9693  00C8AA  EF64  F064         	goto	l4665
  9694  00C8AE                     u3360:
  9695  00C8AE                     
  9696                           ; BSR set to: 1
  9697  00C8AE  EC3F  F060         	call	_I2C_MasterIsNack	;wreg free
  9698  00C8B2  0900               	iorlw	0
  9699  00C8B4  B4D8               	btfsc	status,2,c
  9700  00C8B6  EF5F  F064         	goto	u3371
  9701  00C8BA  EF61  F064         	goto	u3370
  9702  00C8BE                     u3371:
  9703  00C8BE  EF64  F064         	goto	l4665
  9704  00C8C2                     u3370:
  9705  00C8C2                     
  9706                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  9707  00C8C2  0E0F               	movlw	15
  9708  00C8C4  0101               	movlb	1	; () banked
  9709  00C8C6  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9710  00C8C8                     l4665:
  9711                           
  9712                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  9713  00C8C8  0101               	movlb	1	; () banked
  9714  00C8CA  5171               	movf	(_I2C_Status+33)& (0+255),w,b
  9715  00C8CC  0D02               	mullw	2
  9716  00C8CE  0E87               	movlw	low _i2c_fsmStateTable
  9717  00C8D0  24F3               	addwf	243,w,c
  9718  00C8D2  6EF6               	movwf	tblptrl,c
  9719  00C8D4  0EFD               	movlw	high _i2c_fsmStateTable
  9720  00C8D6  20F4               	addwfc	244,w,c
  9721  00C8D8  6EF7               	movwf	tblptrh,c
  9722  00C8DA                     	if	1	;There are 3 active tblptr bytes
  9723  00C8DA  6AF8               	clrf	tblptru,c
  9724  00C8DC  0E00               	movlw	low (__mediumconst shr (0+16))
  9725  00C8DE  22F8               	addwfc	tblptru,f,c
  9726  00C8E0                     	endif
  9727  00C8E0  0009               	tblrd		*+
  9728  00C8E2  CFF5 F00E          	movff	tablat,??_I2C_MasterFsm
  9729  00C8E6  0009               	tblrd		*+
  9730  00C8E8  CFF5 F00F          	movff	tablat,??_I2C_MasterFsm+1
  9731  00C8EC  D802               	call	u3388
  9732  00C8EE  EF82  F064         	goto	u3389
  9733  00C8F2                     u3388:
  9734  00C8F2  0005               	push	
  9735  00C8F4  6EFA               	movwf	pclath,c
  9736  00C8F6  500E               	movf	??_I2C_MasterFsm^0,w,c
  9737  00C8F8  6EFD               	movwf	tosl,c
  9738  00C8FA  500F               	movf	(??_I2C_MasterFsm+1)^0,w,c
  9739  00C8FC  6EFE               	movwf	tosh,c
  9740  00C8FE  6AFF               	clrf	tosu,c
  9741  00C900  50FA               	movf	pclath,w,c
  9742  00C902  0012               	return		;indir
  9743  00C904                     u3389:
  9744  00C904  0101               	movlb	1	; () banked
  9745  00C906  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9746  00C908                     
  9747                           ; BSR set to: 1
  9748  00C908  0012               	return		;funcret
  9749  00C90A                     __end_of_I2C_MasterFsm:
  9750                           	callstack 0
  9751                           
  9752 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  9753 ;; Defined at:
  9754 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  9755 ;; Parameters:    Size  Location     Type
  9756 ;;		None
  9757 ;; Auto vars:     Size  Location     Type
  9758 ;;		None
  9759 ;; Return value:  Size  Location     Type
  9760 ;;                  1    wreg      enum E12577
  9761 ;; Registers used:
  9762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9763 ;; Tracked objects:
  9764 ;;		On entry : 0/0
  9765 ;;		On exit  : 0/0
  9766 ;;		Unchanged: 0/0
  9767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9769 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9770 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9771 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9772 ;;Total ram usage:        2 bytes
  9773 ;; Hardware stack levels used: 1
  9774 ;; Hardware stack levels required when called: 3
  9775 ;; This function calls:
  9776 ;;		Absolute function
  9777 ;;		_I2C_CallbackReturnReset
  9778 ;;		_I2C_CallbackReturnStop
  9779 ;;		_I2C_DO_SEND_RESTART
  9780 ;;		_I2C_DO_SEND_STOP
  9781 ;;		_rd1RegCompleteHandler
  9782 ;;		_rd2RegCompleteHandler
  9783 ;;		_rdBlkRegCompleteHandler
  9784 ;;		_wr1RegCompleteHandler
  9785 ;;		_wr2RegCompleteHandler
  9786 ;; This function is called by:
  9787 ;;		_I2C_MasterFsm
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text49
  9792  00C834                     __ptext49:
  9793                           	callstack 0
  9794  00C834                     _I2C_DO_ADDRESS_NACK:
  9795                           	callstack 19
  9796  00C834                     
  9797                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  9798  00C834  0101               	movlb	1	; () banked
  9799  00C836  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
  9800  00C838                     
  9801                           ; BSR set to: 1
  9802                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  9803  00C838  0E02               	movlw	2
  9804  00C83A  6F72               	movwf	(_I2C_Status+34)& (0+255),b
  9805                           
  9806                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  9807  00C83C  EF28  F064         	goto	l4647
  9808  00C840                     l4637:
  9809                           
  9810                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  9811  00C840  ECE0  F05F         	call	_I2C_DO_SEND_RESTART	;wreg free
  9812  00C844  EF4C  F064         	goto	l403
  9813  00C848                     l4641:
  9814                           
  9815                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  9816  00C848  ECE4  F05F         	call	_I2C_DO_SEND_STOP	;wreg free
  9817  00C84C  EF4C  F064         	goto	l403
  9818  00C850                     l4647:
  9819                           
  9820                           ; BSR set to: 1
  9821  00C850  C160  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  9822  00C854  C161  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  9823  00C858  D802               	call	u3348
  9824  00C85A  EF38  F064         	goto	u3349
  9825  00C85E                     u3348:
  9826  00C85E  0005               	push	
  9827  00C860  6EFA               	movwf	pclath,c
  9828  00C862  5154               	movf	(_I2C_Status+4)& (0+255),w,b
  9829  00C864  6EFD               	movwf	tosl,c
  9830  00C866  5155               	movf	(_I2C_Status+5)& (0+255),w,b
  9831  00C868  6EFE               	movwf	tosh,c
  9832  00C86A  6AFF               	clrf	tosu,c
  9833  00C86C  50FA               	movf	pclath,w,c
  9834  00C86E  0012               	return		;indir
  9835  00C870                     u3349:
  9836  00C870  6E0C               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  9837  00C872  6A0D               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  9838                           
  9839                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9840                           ; Switch size 1, requested type "simple"
  9841                           ; Number of cases is 1, Range of values is 0 to 0
  9842                           ; switch strategies available:
  9843                           ; Name         Instructions Cycles
  9844                           ; simple_byte            4     3 (average)
  9845                           ;	Chosen strategy is simple_byte
  9846  00C874  500D               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  9847  00C876  0A00               	xorlw	0	; case 0
  9848  00C878  B4D8               	btfsc	status,2,c
  9849  00C87A  EF41  F064         	goto	l6741
  9850  00C87E  EF24  F064         	goto	l4641
  9851  00C882                     l6741:
  9852                           
  9853                           ; Switch size 1, requested type "simple"
  9854                           ; Number of cases is 2, Range of values is 2 to 3
  9855                           ; switch strategies available:
  9856                           ; Name         Instructions Cycles
  9857                           ; simple_byte            7     4 (average)
  9858                           ;	Chosen strategy is simple_byte
  9859  00C882  500C               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  9860  00C884  0A02               	xorlw	2	; case 2
  9861  00C886  B4D8               	btfsc	status,2,c
  9862  00C888  EF20  F064         	goto	l4637
  9863  00C88C  0A01               	xorlw	1	; case 3
  9864  00C88E  B4D8               	btfsc	status,2,c
  9865  00C890  EF20  F064         	goto	l4637
  9866  00C894  EF24  F064         	goto	l4641
  9867  00C898                     l403:
  9868  00C898  0012               	return		;funcret
  9869  00C89A                     __end_of_I2C_DO_ADDRESS_NACK:
  9870                           	callstack 0
  9871                           
  9872 ;; *************** function _I2C_DO_RESET *****************
  9873 ;; Defined at:
  9874 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  9875 ;; Parameters:    Size  Location     Type
  9876 ;;		None
  9877 ;; Auto vars:     Size  Location     Type
  9878 ;;		None
  9879 ;; Return value:  Size  Location     Type
  9880 ;;                  1    wreg      enum E12577
  9881 ;; Registers used:
  9882 ;;		wreg, status,2
  9883 ;; Tracked objects:
  9884 ;;		On entry : 0/0
  9885 ;;		On exit  : 0/0
  9886 ;;		Unchanged: 0/0
  9887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9888 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9889 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9890 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9891 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9892 ;;Total ram usage:        0 bytes
  9893 ;; Hardware stack levels used: 1
  9894 ;; This function calls:
  9895 ;;		Nothing
  9896 ;; This function is called by:
  9897 ;;		_I2C_MasterFsm
  9898 ;; This function uses a non-reentrant model
  9899 ;;
  9900                           
  9901                           	psect	text50
  9902  00C01C                     __ptext50:
  9903                           	callstack 0
  9904  00C01C                     _I2C_DO_RESET:
  9905                           	callstack 22
  9906  00C01C                     
  9907                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  9908  00C01C  0101               	movlb	1	; () banked
  9909  00C01E  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
  9910  00C020                     
  9911                           ; BSR set to: 1
  9912                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  9913  00C020  0E00               	movlw	0
  9914  00C022  6F72               	movwf	(_I2C_Status+34)& (0+255),b
  9915  00C024                     
  9916                           ; BSR set to: 1
  9917                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  9918  00C024  0E0E               	movlw	14
  9919  00C026                     
  9920                           ; BSR set to: 1
  9921  00C026  0012               	return		;funcret
  9922  00C028                     __end_of_I2C_DO_RESET:
  9923                           	callstack 0
  9924                           
  9925 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  9926 ;; Defined at:
  9927 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  9928 ;; Parameters:    Size  Location     Type
  9929 ;;		None
  9930 ;; Auto vars:     Size  Location     Type
  9931 ;;		None
  9932 ;; Return value:  Size  Location     Type
  9933 ;;                  1    wreg      enum E12577
  9934 ;; Registers used:
  9935 ;;		wreg, cstack
  9936 ;; Tracked objects:
  9937 ;;		On entry : 0/0
  9938 ;;		On exit  : 0/0
  9939 ;;		Unchanged: 0/0
  9940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9945 ;;Total ram usage:        0 bytes
  9946 ;; Hardware stack levels used: 1
  9947 ;; Hardware stack levels required when called: 1
  9948 ;; This function calls:
  9949 ;;		_I2C_MasterSendNack
  9950 ;; This function is called by:
  9951 ;;		_I2C_DO_RX
  9952 ;;		_I2C_MasterFsm
  9953 ;; This function uses a non-reentrant model
  9954 ;;
  9955                           
  9956                           	psect	text51
  9957  00BFE0                     __ptext51:
  9958                           	callstack 0
  9959  00BFE0                     _I2C_DO_RX_NACK_RESTART:
  9960                           	callstack 21
  9961  00BFE0                     
  9962                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  9963  00BFE0  ECC2  F05F         	call	_I2C_MasterSendNack	;wreg free
  9964  00BFE4                     
  9965                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  9966  00BFE4  0E09               	movlw	9
  9967  00BFE6  0012               	return		;funcret
  9968  00BFE8                     __end_of_I2C_DO_RX_NACK_RESTART:
  9969                           	callstack 0
  9970                           
  9971 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  9972 ;; Defined at:
  9973 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  9974 ;; Parameters:    Size  Location     Type
  9975 ;;		None
  9976 ;; Auto vars:     Size  Location     Type
  9977 ;;		None
  9978 ;; Return value:  Size  Location     Type
  9979 ;;                  1    wreg      enum E12577
  9980 ;; Registers used:
  9981 ;;		wreg, cstack
  9982 ;; Tracked objects:
  9983 ;;		On entry : 0/0
  9984 ;;		On exit  : 0/0
  9985 ;;		Unchanged: 0/0
  9986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9987 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9988 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;Total ram usage:        0 bytes
  9992 ;; Hardware stack levels used: 1
  9993 ;; Hardware stack levels required when called: 1
  9994 ;; This function calls:
  9995 ;;		_I2C_MasterSendNack
  9996 ;; This function is called by:
  9997 ;;		_I2C_DO_RX
  9998 ;;		_I2C_MasterFsm
  9999 ;; This function uses a non-reentrant model
 10000 ;;
 10001                           
 10002                           	psect	text52
 10003  00BFD8                     __ptext52:
 10004                           	callstack 0
 10005  00BFD8                     _I2C_DO_RX_NACK_STOP:
 10006                           	callstack 21
 10007  00BFD8                     
 10008                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
 10009  00BFD8  ECC2  F05F         	call	_I2C_MasterSendNack	;wreg free
 10010  00BFDC                     
 10011                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
 10012  00BFDC  0E0A               	movlw	10
 10013  00BFDE  0012               	return		;funcret
 10014  00BFE0                     __end_of_I2C_DO_RX_NACK_STOP:
 10015                           	callstack 0
 10016                           
 10017 ;; *************** function _I2C_DO_RX_ACK *****************
 10018 ;; Defined at:
 10019 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
 10020 ;; Parameters:    Size  Location     Type
 10021 ;;		None
 10022 ;; Auto vars:     Size  Location     Type
 10023 ;;		None
 10024 ;; Return value:  Size  Location     Type
 10025 ;;                  1    wreg      enum E12577
 10026 ;; Registers used:
 10027 ;;		wreg, cstack
 10028 ;; Tracked objects:
 10029 ;;		On entry : 0/0
 10030 ;;		On exit  : 0/0
 10031 ;;		Unchanged: 0/0
 10032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10033 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10034 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10035 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10036 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10037 ;;Total ram usage:        0 bytes
 10038 ;; Hardware stack levels used: 1
 10039 ;; Hardware stack levels required when called: 1
 10040 ;; This function calls:
 10041 ;;		_I2C_MasterSendAck
 10042 ;; This function is called by:
 10043 ;;		_I2C_MasterFsm
 10044 ;; This function uses a non-reentrant model
 10045 ;;
 10046                           
 10047                           	psect	text53
 10048  00BFD0                     __ptext53:
 10049                           	callstack 0
 10050  00BFD0                     _I2C_DO_RX_ACK:
 10051                           	callstack 21
 10052  00BFD0                     
 10053                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
 10054  00BFD0  ECC5  F05F         	call	_I2C_MasterSendAck	;wreg free
 10055  00BFD4                     
 10056                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
 10057  00BFD4  0E05               	movlw	5
 10058  00BFD6  0012               	return		;funcret
 10059  00BFD8                     __end_of_I2C_DO_RX_ACK:
 10060                           	callstack 0
 10061                           
 10062 ;; *************** function _I2C_DO_SEND_STOP *****************
 10063 ;; Defined at:
 10064 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
 10065 ;; Parameters:    Size  Location     Type
 10066 ;;		None
 10067 ;; Auto vars:     Size  Location     Type
 10068 ;;		None
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  1    wreg      enum E12577
 10071 ;; Registers used:
 10072 ;;		wreg, cstack
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10079 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10081 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10082 ;;Total ram usage:        0 bytes
 10083 ;; Hardware stack levels used: 1
 10084 ;; Hardware stack levels required when called: 1
 10085 ;; This function calls:
 10086 ;;		_I2C_MasterStop
 10087 ;; This function is called by:
 10088 ;;		_I2C_DO_TX
 10089 ;;		_I2C_DO_TX_EMPTY
 10090 ;;		_I2C_DO_ADDRESS_NACK
 10091 ;;		_I2C_MasterFsm
 10092 ;; This function uses a non-reentrant model
 10093 ;;
 10094                           
 10095                           	psect	text54
 10096  00BFC8                     __ptext54:
 10097                           	callstack 0
 10098  00BFC8                     _I2C_DO_SEND_STOP:
 10099                           	callstack 20
 10100  00BFC8                     
 10101                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 10102  00BFC8  ECB6  F05F         	call	_I2C_MasterStop	;wreg free
 10103  00BFCC                     
 10104                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 10105  00BFCC  0E00               	movlw	0
 10106  00BFCE  0012               	return		;funcret
 10107  00BFD0                     __end_of_I2C_DO_SEND_STOP:
 10108                           	callstack 0
 10109                           
 10110 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10111 ;; Defined at:
 10112 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 10113 ;; Parameters:    Size  Location     Type
 10114 ;;		None
 10115 ;; Auto vars:     Size  Location     Type
 10116 ;;		None
 10117 ;; Return value:  Size  Location     Type
 10118 ;;                  1    wreg      enum E12577
 10119 ;; Registers used:
 10120 ;;		wreg, cstack
 10121 ;; Tracked objects:
 10122 ;;		On entry : 0/0
 10123 ;;		On exit  : 0/0
 10124 ;;		Unchanged: 0/0
 10125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10129 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10130 ;;Total ram usage:        0 bytes
 10131 ;; Hardware stack levels used: 1
 10132 ;; Hardware stack levels required when called: 1
 10133 ;; This function calls:
 10134 ;;		_I2C_MasterEnableRestart
 10135 ;; This function is called by:
 10136 ;;		_I2C_DO_TX_EMPTY
 10137 ;;		_I2C_DO_ADDRESS_NACK
 10138 ;;		_I2C_MasterFsm
 10139 ;; This function uses a non-reentrant model
 10140 ;;
 10141                           
 10142                           	psect	text55
 10143  00BFC0                     __ptext55:
 10144                           	callstack 0
 10145  00BFC0                     _I2C_DO_SEND_RESTART:
 10146                           	callstack 20
 10147  00BFC0                     
 10148                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 10149  00BFC0  ECB4  F05F         	call	_I2C_MasterEnableRestart	;wreg free
 10150  00BFC4                     
 10151                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 10152  00BFC4  0E01               	movlw	1
 10153  00BFC6  0012               	return		;funcret
 10154  00BFC8                     __end_of_I2C_DO_SEND_RESTART:
 10155                           	callstack 0
 10156                           
 10157 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 10158 ;; Defined at:
 10159 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 10160 ;; Parameters:    Size  Location     Type
 10161 ;;		None
 10162 ;; Auto vars:     Size  Location     Type
 10163 ;;		None
 10164 ;; Return value:  Size  Location     Type
 10165 ;;                  1    wreg      enum E12577
 10166 ;; Registers used:
 10167 ;;		wreg, cstack
 10168 ;; Tracked objects:
 10169 ;;		On entry : 0/0
 10170 ;;		On exit  : 0/0
 10171 ;;		Unchanged: 0/0
 10172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10173 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10176 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10177 ;;Total ram usage:        0 bytes
 10178 ;; Hardware stack levels used: 1
 10179 ;; Hardware stack levels required when called: 1
 10180 ;; This function calls:
 10181 ;;		_I2C_MasterEnableRestart
 10182 ;; This function is called by:
 10183 ;;		_I2C_DO_TX
 10184 ;;		_I2C_MasterFsm
 10185 ;; This function uses a non-reentrant model
 10186 ;;
 10187                           
 10188                           	psect	text56
 10189  00BFB8                     __ptext56:
 10190                           	callstack 0
 10191  00BFB8                     _I2C_DO_SEND_RESTART_WRITE:
 10192                           	callstack 20
 10193  00BFB8                     
 10194                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 10195  00BFB8  ECB4  F05F         	call	_I2C_MasterEnableRestart	;wreg free
 10196  00BFBC                     
 10197                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 10198  00BFBC  0E02               	movlw	2
 10199  00BFBE  0012               	return		;funcret
 10200  00BFC0                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 10201                           	callstack 0
 10202                           
 10203 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 10204 ;; Defined at:
 10205 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 10206 ;; Parameters:    Size  Location     Type
 10207 ;;		None
 10208 ;; Auto vars:     Size  Location     Type
 10209 ;;		None
 10210 ;; Return value:  Size  Location     Type
 10211 ;;                  1    wreg      enum E12577
 10212 ;; Registers used:
 10213 ;;		wreg, cstack
 10214 ;; Tracked objects:
 10215 ;;		On entry : 0/0
 10216 ;;		On exit  : 0/0
 10217 ;;		Unchanged: 0/0
 10218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10219 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10220 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10222 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10223 ;;Total ram usage:        0 bytes
 10224 ;; Hardware stack levels used: 1
 10225 ;; Hardware stack levels required when called: 1
 10226 ;; This function calls:
 10227 ;;		_I2C_MasterEnableRestart
 10228 ;; This function is called by:
 10229 ;;		_I2C_DO_TX
 10230 ;;		_I2C_MasterFsm
 10231 ;; This function uses a non-reentrant model
 10232 ;;
 10233                           
 10234                           	psect	text57
 10235  00BFB0                     __ptext57:
 10236                           	callstack 0
 10237  00BFB0                     _I2C_DO_SEND_RESTART_READ:
 10238                           	callstack 20
 10239  00BFB0                     
 10240                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 10241  00BFB0  ECB4  F05F         	call	_I2C_MasterEnableRestart	;wreg free
 10242  00BFB4                     
 10243                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 10244  00BFB4  0E01               	movlw	1
 10245  00BFB6  0012               	return		;funcret
 10246  00BFB8                     __end_of_I2C_DO_SEND_RESTART_READ:
 10247                           	callstack 0
 10248                           
 10249 ;; *************** function _I2C_DO_RCEN *****************
 10250 ;; Defined at:
 10251 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 10252 ;; Parameters:    Size  Location     Type
 10253 ;;		None
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;		None
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      enum E12577
 10258 ;; Registers used:
 10259 ;;		wreg, cstack
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10266 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10268 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10269 ;;Total ram usage:        0 bytes
 10270 ;; Hardware stack levels used: 1
 10271 ;; Hardware stack levels required when called: 1
 10272 ;; This function calls:
 10273 ;;		_I2C_MasterStartRx
 10274 ;; This function is called by:
 10275 ;;		_I2C_MasterFsm
 10276 ;; This function uses a non-reentrant model
 10277 ;;
 10278                           
 10279                           	psect	text58
 10280  00C010                     __ptext58:
 10281                           	callstack 0
 10282  00C010                     _I2C_DO_RCEN:
 10283                           	callstack 21
 10284  00C010                     
 10285                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 10286  00C010  0101               	movlb	1	; () banked
 10287  00C012  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 10288  00C014                     
 10289                           ; BSR set to: 1
 10290                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 10291  00C014  ECBC  F05F         	call	_I2C_MasterStartRx	;wreg free
 10292  00C018                     
 10293                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 10294  00C018  0E04               	movlw	4
 10295  00C01A  0012               	return		;funcret
 10296  00C01C                     __end_of_I2C_DO_RCEN:
 10297                           	callstack 0
 10298                           
 10299 ;; *************** function _I2C_DO_RX *****************
 10300 ;; Defined at:
 10301 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 10302 ;; Parameters:    Size  Location     Type
 10303 ;;		None
 10304 ;; Auto vars:     Size  Location     Type
 10305 ;;		None
 10306 ;; Return value:  Size  Location     Type
 10307 ;;                  1    wreg      enum E12577
 10308 ;; Registers used:
 10309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10310 ;; Tracked objects:
 10311 ;;		On entry : 0/0
 10312 ;;		On exit  : 0/0
 10313 ;;		Unchanged: 0/0
 10314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10315 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10317 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10319 ;;Total ram usage:        2 bytes
 10320 ;; Hardware stack levels used: 1
 10321 ;; Hardware stack levels required when called: 3
 10322 ;; This function calls:
 10323 ;;		Absolute function
 10324 ;;		_I2C_CallbackReturnReset
 10325 ;;		_I2C_CallbackReturnStop
 10326 ;;		_I2C_DO_RX_NACK_RESTART
 10327 ;;		_I2C_DO_RX_NACK_STOP
 10328 ;;		_I2C_MasterGetRxData
 10329 ;;		_I2C_MasterSendAck
 10330 ;;		_rd1RegCompleteHandler
 10331 ;;		_rd2RegCompleteHandler
 10332 ;;		_rdBlkRegCompleteHandler
 10333 ;;		_wr1RegCompleteHandler
 10334 ;;		_wr2RegCompleteHandler
 10335 ;; This function is called by:
 10336 ;;		_I2C_MasterFsm
 10337 ;; This function uses a non-reentrant model
 10338 ;;
 10339                           
 10340                           	psect	text59
 10341  00CC40                     __ptext59:
 10342                           	callstack 0
 10343  00CC40                     _I2C_DO_RX:
 10344                           	callstack 19
 10345  00CC40                     
 10346                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 10347  00CC40  ECBE  F05F         	call	_I2C_MasterGetRxData	;wreg free
 10348  00CC44  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 10349  00CC48  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 10350  00CC4C  6EDF               	movwf	indf2,c
 10351  00CC4E  0101               	movlb	1	; () banked
 10352  00CC50  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10353  00CC52  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 10354  00CC54                     
 10355                           ; BSR set to: 1
 10356                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 10357  00CC54  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 10358  00CC56  A0D8               	btfss	status,0,c
 10359  00CC58  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 10360  00CC5A  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 10361  00CC5C  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10362  00CC5E  B4D8               	btfsc	status,2,c
 10363  00CC60  EF34  F066         	goto	u3311
 10364  00CC64  EF36  F066         	goto	u3310
 10365  00CC68                     u3311:
 10366  00CC68  EF3B  F066         	goto	l340
 10367  00CC6C                     u3310:
 10368  00CC6C                     
 10369                           ; BSR set to: 1
 10370                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 10371  00CC6C  ECC5  F05F         	call	_I2C_MasterSendAck	;wreg free
 10372  00CC70                     
 10373                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 10374  00CC70  0E05               	movlw	5
 10375  00CC72  EF72  F066         	goto	l341
 10376  00CC76                     l340:
 10377                           
 10378                           ; BSR set to: 1
 10379                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 10380  00CC76  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 10381                           
 10382                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10383  00CC78  EF46  F066         	goto	l4577
 10384  00CC7C                     l4567:
 10385                           
 10386                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 10387  00CC7C  ECF0  F05F         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 10388  00CC80  EF72  F066         	goto	l341
 10389  00CC84                     l4571:
 10390                           
 10391                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 10392  00CC84  ECEC  F05F         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 10393  00CC88  EF72  F066         	goto	l341
 10394  00CC8C                     l4577:
 10395                           
 10396                           ; BSR set to: 1
 10397  00CC8C  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10398  00CC90  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10399  00CC94  D802               	call	u3328
 10400  00CC96  EF56  F066         	goto	u3329
 10401  00CC9A                     u3328:
 10402  00CC9A  0005               	push	
 10403  00CC9C  6EFA               	movwf	pclath,c
 10404  00CC9E  5150               	movf	_I2C_Status& (0+255),w,b
 10405  00CCA0  6EFD               	movwf	tosl,c
 10406  00CCA2  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 10407  00CCA4  6EFE               	movwf	tosh,c
 10408  00CCA6  6AFF               	clrf	tosu,c
 10409  00CCA8  50FA               	movf	pclath,w,c
 10410  00CCAA  0012               	return		;indir
 10411  00CCAC                     u3329:
 10412  00CCAC  6E0C               	movwf	??_I2C_DO_RX^0,c
 10413  00CCAE  6A0D               	clrf	(??_I2C_DO_RX+1)^0,c
 10414                           
 10415                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10416                           ; Switch size 1, requested type "simple"
 10417                           ; Number of cases is 1, Range of values is 0 to 0
 10418                           ; switch strategies available:
 10419                           ; Name         Instructions Cycles
 10420                           ; simple_byte            4     3 (average)
 10421                           ;	Chosen strategy is simple_byte
 10422  00CCB0  500D               	movf	(??_I2C_DO_RX+1)^0,w,c
 10423  00CCB2  0A00               	xorlw	0	; case 0
 10424  00CCB4  B4D8               	btfsc	status,2,c
 10425  00CCB6  EF5F  F066         	goto	l6743
 10426  00CCBA  EF42  F066         	goto	l4571
 10427  00CCBE                     l6743:
 10428                           
 10429                           ; Switch size 1, requested type "simple"
 10430                           ; Number of cases is 4, Range of values is 1 to 4
 10431                           ; switch strategies available:
 10432                           ; Name         Instructions Cycles
 10433                           ; simple_byte           13     7 (average)
 10434                           ;	Chosen strategy is simple_byte
 10435  00CCBE  500C               	movf	??_I2C_DO_RX^0,w,c
 10436  00CCC0  0A01               	xorlw	1	; case 1
 10437  00CCC2  B4D8               	btfsc	status,2,c
 10438  00CCC4  EF42  F066         	goto	l4571
 10439  00CCC8  0A03               	xorlw	3	; case 2
 10440  00CCCA  B4D8               	btfsc	status,2,c
 10441  00CCCC  EF3E  F066         	goto	l4567
 10442  00CCD0  0A01               	xorlw	1	; case 3
 10443  00CCD2  B4D8               	btfsc	status,2,c
 10444  00CCD4  EF3E  F066         	goto	l4567
 10445  00CCD8  0A07               	xorlw	7	; case 4
 10446  00CCDA  B4D8               	btfsc	status,2,c
 10447  00CCDC  EF42  F066         	goto	l4571
 10448  00CCE0  EF42  F066         	goto	l4571
 10449  00CCE4                     l341:
 10450  00CCE4  0012               	return		;funcret
 10451  00CCE6                     __end_of_I2C_DO_RX:
 10452                           	callstack 0
 10453                           
 10454 ;; *************** function _I2C_DO_TX *****************
 10455 ;; Defined at:
 10456 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;		None
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      enum E12577
 10463 ;; Registers used:
 10464 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10470 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10471 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10472 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10473 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10474 ;;Total ram usage:        2 bytes
 10475 ;; Hardware stack levels used: 1
 10476 ;; Hardware stack levels required when called: 3
 10477 ;; This function calls:
 10478 ;;		Absolute function
 10479 ;;		_I2C_CallbackReturnReset
 10480 ;;		_I2C_CallbackReturnStop
 10481 ;;		_I2C_DO_SEND_RESTART_READ
 10482 ;;		_I2C_DO_SEND_RESTART_WRITE
 10483 ;;		_I2C_DO_SEND_STOP
 10484 ;;		_I2C_MasterIsNack
 10485 ;;		_I2C_MasterSendTxData
 10486 ;;		_rd1RegCompleteHandler
 10487 ;;		_rd2RegCompleteHandler
 10488 ;;		_rdBlkRegCompleteHandler
 10489 ;;		_wr1RegCompleteHandler
 10490 ;;		_wr2RegCompleteHandler
 10491 ;; This function is called by:
 10492 ;;		_I2C_MasterFsm
 10493 ;; This function uses a non-reentrant model
 10494 ;;
 10495                           
 10496                           	psect	text60
 10497  00CE40                     __ptext60:
 10498                           	callstack 0
 10499  00CE40                     _I2C_DO_TX:
 10500                           	callstack 19
 10501  00CE40                     
 10502                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 10503  00CE40  EC3F  F060         	call	_I2C_MasterIsNack	;wreg free
 10504  00CE44  0900               	iorlw	0
 10505  00CE46  B4D8               	btfsc	status,2,c
 10506  00CE48  EF28  F067         	goto	u3281
 10507  00CE4C  EF2A  F067         	goto	u3280
 10508  00CE50                     u3281:
 10509  00CE50  EF65  F067         	goto	l324
 10510  00CE54                     u3280:
 10511  00CE54  EF38  F067         	goto	l4537
 10512  00CE58                     l4523:
 10513                           
 10514                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 10515  00CE58  ECD8  F05F         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 10516  00CE5C  EF81  F067         	goto	l327
 10517  00CE60                     l4527:
 10518                           
 10519                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 10520  00CE60  ECDC  F05F         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 10521  00CE64  EF81  F067         	goto	l327
 10522  00CE68                     l4531:
 10523                           
 10524                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 10525  00CE68  ECE4  F05F         	call	_I2C_DO_SEND_STOP	;wreg free
 10526  00CE6C  EF81  F067         	goto	l327
 10527  00CE70                     l4537:
 10528  00CE70  C162  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 10529  00CE74  C163  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 10530  00CE78  D802               	call	u3298
 10531  00CE7A  EF49  F067         	goto	u3299
 10532  00CE7E                     u3298:
 10533  00CE7E  0005               	push	
 10534  00CE80  6EFA               	movwf	pclath,c
 10535  00CE82  0101               	movlb	1	; () banked
 10536  00CE84  5156               	movf	(_I2C_Status+6)& (0+255),w,b
 10537  00CE86  6EFD               	movwf	tosl,c
 10538  00CE88  5157               	movf	(_I2C_Status+7)& (0+255),w,b
 10539  00CE8A  6EFE               	movwf	tosh,c
 10540  00CE8C  6AFF               	clrf	tosu,c
 10541  00CE8E  50FA               	movf	pclath,w,c
 10542  00CE90  0012               	return		;indir
 10543  00CE92                     u3299:
 10544  00CE92  6E0C               	movwf	??_I2C_DO_TX^0,c
 10545  00CE94  6A0D               	clrf	(??_I2C_DO_TX+1)^0,c
 10546                           
 10547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10548                           ; Switch size 1, requested type "simple"
 10549                           ; Number of cases is 1, Range of values is 0 to 0
 10550                           ; switch strategies available:
 10551                           ; Name         Instructions Cycles
 10552                           ; simple_byte            4     3 (average)
 10553                           ;	Chosen strategy is simple_byte
 10554  00CE96  500D               	movf	(??_I2C_DO_TX+1)^0,w,c
 10555  00CE98  0A00               	xorlw	0	; case 0
 10556  00CE9A  B4D8               	btfsc	status,2,c
 10557  00CE9C  EF52  F067         	goto	l6745
 10558  00CEA0  EF34  F067         	goto	l4531
 10559  00CEA4                     l6745:
 10560                           
 10561                           ; Switch size 1, requested type "simple"
 10562                           ; Number of cases is 4, Range of values is 1 to 4
 10563                           ; switch strategies available:
 10564                           ; Name         Instructions Cycles
 10565                           ; simple_byte           13     7 (average)
 10566                           ;	Chosen strategy is simple_byte
 10567  00CEA4  500C               	movf	??_I2C_DO_TX^0,w,c
 10568  00CEA6  0A01               	xorlw	1	; case 1
 10569  00CEA8  B4D8               	btfsc	status,2,c
 10570  00CEAA  EF34  F067         	goto	l4531
 10571  00CEAE  0A03               	xorlw	3	; case 2
 10572  00CEB0  B4D8               	btfsc	status,2,c
 10573  00CEB2  EF2C  F067         	goto	l4523
 10574  00CEB6  0A01               	xorlw	1	; case 3
 10575  00CEB8  B4D8               	btfsc	status,2,c
 10576  00CEBA  EF30  F067         	goto	l4527
 10577  00CEBE  0A07               	xorlw	7	; case 4
 10578  00CEC0  B4D8               	btfsc	status,2,c
 10579  00CEC2  EF34  F067         	goto	l4531
 10580  00CEC6  EF34  F067         	goto	l4531
 10581  00CECA                     l324:
 10582                           
 10583                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 10584  00CECA  0101               	movlb	1	; () banked
 10585  00CECC  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 10586  00CECE                     
 10587                           ; BSR set to: 1
 10588                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 10589  00CECE  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 10590  00CED2  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 10591  00CED6  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10592  00CED8  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 10593  00CEDA  50DF               	movf	indf2,w,c
 10594  00CEDC  ECD4  F05F         	call	_I2C_MasterSendTxData
 10595  00CEE0                     
 10596                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 10597  00CEE0  0101               	movlb	1	; () banked
 10598  00CEE2  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 10599  00CEE4  A0D8               	btfss	status,0,c
 10600  00CEE6  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 10601  00CEE8  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 10602  00CEEA  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10603  00CEEC  A4D8               	btfss	status,2,c
 10604  00CEEE  EF7B  F067         	goto	u3301
 10605  00CEF2  EF7D  F067         	goto	u3300
 10606  00CEF6                     u3301:
 10607  00CEF6  EF80  F067         	goto	l4545
 10608  00CEFA                     u3300:
 10609  00CEFA                     
 10610                           ; BSR set to: 1
 10611  00CEFA  0E06               	movlw	6
 10612  00CEFC  EF81  F067         	goto	l327
 10613  00CF00                     l4545:
 10614                           
 10615                           ; BSR set to: 1
 10616  00CF00  0E03               	movlw	3
 10617  00CF02                     l327:
 10618  00CF02  0012               	return		;funcret
 10619  00CF04                     __end_of_I2C_DO_TX:
 10620                           	callstack 0
 10621                           
 10622 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 10623 ;; Defined at:
 10624 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 10625 ;; Parameters:    Size  Location     Type
 10626 ;;		None
 10627 ;; Auto vars:     Size  Location     Type
 10628 ;;		None
 10629 ;; Return value:  Size  Location     Type
 10630 ;;                  1    wreg      enum E12577
 10631 ;; Registers used:
 10632 ;;		wreg, status,2, status,0, cstack
 10633 ;; Tracked objects:
 10634 ;;		On entry : 0/0
 10635 ;;		On exit  : 0/0
 10636 ;;		Unchanged: 0/0
 10637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10638 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10639 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10640 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10641 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10642 ;;Total ram usage:        0 bytes
 10643 ;; Hardware stack levels used: 1
 10644 ;; Hardware stack levels required when called: 1
 10645 ;; This function calls:
 10646 ;;		_I2C_MasterSendTxData
 10647 ;; This function is called by:
 10648 ;;		_I2C_MasterFsm
 10649 ;; This function uses a non-reentrant model
 10650 ;;
 10651                           
 10652                           	psect	text61
 10653  00C038                     __ptext61:
 10654                           	callstack 0
 10655  00C038                     _I2C_DO_SEND_ADR_WRITE:
 10656                           	callstack 21
 10657  00C038                     
 10658                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 10659  00C038  0101               	movlb	1	; () banked
 10660  00C03A  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 10661  00C03C                     
 10662                           ; BSR set to: 1
 10663                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 10664  00C03C  516C               	movf	(_I2C_Status+28)& (0+255),w,b
 10665  00C03E  256C               	addwf	(_I2C_Status+28)& (0+255),w,b
 10666  00C040  ECD4  F05F         	call	_I2C_MasterSendTxData
 10667  00C044                     
 10668                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 10669  00C044  0E03               	movlw	3
 10670  00C046  0012               	return		;funcret
 10671  00C048                     __end_of_I2C_DO_SEND_ADR_WRITE:
 10672                           	callstack 0
 10673                           
 10674 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 10675 ;; Defined at:
 10676 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 10677 ;; Parameters:    Size  Location     Type
 10678 ;;		None
 10679 ;; Auto vars:     Size  Location     Type
 10680 ;;		None
 10681 ;; Return value:  Size  Location     Type
 10682 ;;                  1    wreg      enum E12577
 10683 ;; Registers used:
 10684 ;;		wreg, status,0, cstack
 10685 ;; Tracked objects:
 10686 ;;		On entry : 0/0
 10687 ;;		On exit  : 0/0
 10688 ;;		Unchanged: 0/0
 10689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10690 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10693 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10694 ;;Total ram usage:        0 bytes
 10695 ;; Hardware stack levels used: 1
 10696 ;; Hardware stack levels required when called: 1
 10697 ;; This function calls:
 10698 ;;		_I2C_MasterSendTxData
 10699 ;; This function is called by:
 10700 ;;		_I2C_MasterFsm
 10701 ;; This function uses a non-reentrant model
 10702 ;;
 10703                           
 10704                           	psect	text62
 10705  00C028                     __ptext62:
 10706                           	callstack 0
 10707  00C028                     _I2C_DO_SEND_ADR_READ:
 10708                           	callstack 21
 10709  00C028                     
 10710                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 10711  00C028  0101               	movlb	1	; () banked
 10712  00C02A  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 10713  00C02C                     
 10714                           ; BSR set to: 1
 10715                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 10716  00C02C  80D8               	bsf	status,0,c
 10717  00C02E  356C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 10718  00C030  ECD4  F05F         	call	_I2C_MasterSendTxData
 10719  00C034                     
 10720                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 10721  00C034  0E05               	movlw	5
 10722  00C036  0012               	return		;funcret
 10723  00C038                     __end_of_I2C_DO_SEND_ADR_READ:
 10724                           	callstack 0
 10725                           
 10726 ;; *************** function _I2C_DO_IDLE *****************
 10727 ;; Defined at:
 10728 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 10729 ;; Parameters:    Size  Location     Type
 10730 ;;		None
 10731 ;; Auto vars:     Size  Location     Type
 10732 ;;		None
 10733 ;; Return value:  Size  Location     Type
 10734 ;;                  1    wreg      enum E12577
 10735 ;; Registers used:
 10736 ;;		wreg, status,2
 10737 ;; Tracked objects:
 10738 ;;		On entry : 0/0
 10739 ;;		On exit  : 0/0
 10740 ;;		Unchanged: 0/0
 10741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10742 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10743 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10744 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10745 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10746 ;;Total ram usage:        0 bytes
 10747 ;; Hardware stack levels used: 1
 10748 ;; This function calls:
 10749 ;;		Nothing
 10750 ;; This function is called by:
 10751 ;;		_I2C_MasterFsm
 10752 ;; This function uses a non-reentrant model
 10753 ;;
 10754                           
 10755                           	psect	text63
 10756  00C004                     __ptext63:
 10757                           	callstack 0
 10758  00C004                     _I2C_DO_IDLE:
 10759                           	callstack 22
 10760  00C004                     
 10761                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 10762  00C004  0101               	movlb	1	; () banked
 10763  00C006  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
 10764  00C008                     
 10765                           ; BSR set to: 1
 10766                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 10767  00C008  0E00               	movlw	0
 10768  00C00A  6F72               	movwf	(_I2C_Status+34)& (0+255),b
 10769  00C00C                     
 10770                           ; BSR set to: 1
 10771                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 10772  00C00C  0E0E               	movlw	14
 10773  00C00E                     
 10774                           ; BSR set to: 1
 10775  00C00E  0012               	return		;funcret
 10776  00C010                     __end_of_I2C_DO_IDLE:
 10777                           	callstack 0
 10778                           
 10779 ;; *************** function _I2C_DO_TX_EMPTY *****************
 10780 ;; Defined at:
 10781 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 10782 ;; Parameters:    Size  Location     Type
 10783 ;;		None
 10784 ;; Auto vars:     Size  Location     Type
 10785 ;;		None
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  1    wreg      enum E12577
 10788 ;; Registers used:
 10789 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10795 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10796 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10797 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10798 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10799 ;;Total ram usage:        2 bytes
 10800 ;; Hardware stack levels used: 1
 10801 ;; Hardware stack levels required when called: 3
 10802 ;; This function calls:
 10803 ;;		Absolute function
 10804 ;;		_I2C_CallbackReturnReset
 10805 ;;		_I2C_CallbackReturnStop
 10806 ;;		_I2C_DO_SEND_RESTART
 10807 ;;		_I2C_DO_SEND_STOP
 10808 ;;		_I2C_MasterSetIrq
 10809 ;;		_rd1RegCompleteHandler
 10810 ;;		_rd2RegCompleteHandler
 10811 ;;		_rdBlkRegCompleteHandler
 10812 ;;		_wr1RegCompleteHandler
 10813 ;;		_wr2RegCompleteHandler
 10814 ;; This function is called by:
 10815 ;;		_I2C_MasterFsm
 10816 ;; This function uses a non-reentrant model
 10817 ;;
 10818                           
 10819                           	psect	text64
 10820  00C9F4                     __ptext64:
 10821                           	callstack 0
 10822  00C9F4                     _I2C_DO_TX_EMPTY:
 10823                           	callstack 19
 10824  00C9F4                     
 10825                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 10826  00C9F4  0101               	movlb	1	; () banked
 10827  00C9F6  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 10828                           
 10829                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10830  00C9F8  EF0B  F065         	goto	l4611
 10831  00C9FC                     l4595:
 10832                           
 10833                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 10834  00C9FC  ECE0  F05F         	call	_I2C_DO_SEND_RESTART	;wreg free
 10835  00CA00  EF37  F065         	goto	l358
 10836  00CA04                     l4599:
 10837                           
 10838                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 10839  00CA04  ECC0  F05F         	call	_I2C_MasterSetIrq	;wreg free
 10840  00CA08                     
 10841                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 10842  00CA08  0E03               	movlw	3
 10843  00CA0A  EF37  F065         	goto	l358
 10844  00CA0E                     l4605:
 10845                           
 10846                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 10847  00CA0E  ECE4  F05F         	call	_I2C_DO_SEND_STOP	;wreg free
 10848  00CA12  EF37  F065         	goto	l358
 10849  00CA16                     l4611:
 10850                           
 10851                           ; BSR set to: 1
 10852  00CA16  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10853  00CA1A  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10854  00CA1E  D802               	call	u3338
 10855  00CA20  EF1B  F065         	goto	u3339
 10856  00CA24                     u3338:
 10857  00CA24  0005               	push	
 10858  00CA26  6EFA               	movwf	pclath,c
 10859  00CA28  5150               	movf	_I2C_Status& (0+255),w,b
 10860  00CA2A  6EFD               	movwf	tosl,c
 10861  00CA2C  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 10862  00CA2E  6EFE               	movwf	tosh,c
 10863  00CA30  6AFF               	clrf	tosu,c
 10864  00CA32  50FA               	movf	pclath,w,c
 10865  00CA34  0012               	return		;indir
 10866  00CA36                     u3339:
 10867  00CA36  6E0C               	movwf	??_I2C_DO_TX_EMPTY^0,c
 10868  00CA38  6A0D               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 10869                           
 10870                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10871                           ; Switch size 1, requested type "simple"
 10872                           ; Number of cases is 1, Range of values is 0 to 0
 10873                           ; switch strategies available:
 10874                           ; Name         Instructions Cycles
 10875                           ; simple_byte            4     3 (average)
 10876                           ;	Chosen strategy is simple_byte
 10877  00CA3A  500D               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 10878  00CA3C  0A00               	xorlw	0	; case 0
 10879  00CA3E  B4D8               	btfsc	status,2,c
 10880  00CA40  EF24  F065         	goto	l6747
 10881  00CA44  EF07  F065         	goto	l4605
 10882  00CA48                     l6747:
 10883                           
 10884                           ; Switch size 1, requested type "simple"
 10885                           ; Number of cases is 4, Range of values is 1 to 4
 10886                           ; switch strategies available:
 10887                           ; Name         Instructions Cycles
 10888                           ; simple_byte           13     7 (average)
 10889                           ;	Chosen strategy is simple_byte
 10890  00CA48  500C               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 10891  00CA4A  0A01               	xorlw	1	; case 1
 10892  00CA4C  B4D8               	btfsc	status,2,c
 10893  00CA4E  EF07  F065         	goto	l4605
 10894  00CA52  0A03               	xorlw	3	; case 2
 10895  00CA54  B4D8               	btfsc	status,2,c
 10896  00CA56  EFFE  F064         	goto	l4595
 10897  00CA5A  0A01               	xorlw	1	; case 3
 10898  00CA5C  B4D8               	btfsc	status,2,c
 10899  00CA5E  EFFE  F064         	goto	l4595
 10900  00CA62  0A07               	xorlw	7	; case 4
 10901  00CA64  B4D8               	btfsc	status,2,c
 10902  00CA66  EF02  F065         	goto	l4599
 10903  00CA6A  EF07  F065         	goto	l4605
 10904  00CA6E                     l358:
 10905  00CA6E  0012               	return		;funcret
 10906  00CA70                     __end_of_I2C_DO_TX_EMPTY:
 10907                           	callstack 0
 10908                           
 10909 ;; *************** function _I2C_MasterSetIrq *****************
 10910 ;; Defined at:
 10911 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 10912 ;; Parameters:    Size  Location     Type
 10913 ;;		None
 10914 ;; Auto vars:     Size  Location     Type
 10915 ;;		None
 10916 ;; Return value:  Size  Location     Type
 10917 ;;                  1    wreg      void 
 10918 ;; Registers used:
 10919 ;;		None
 10920 ;; Tracked objects:
 10921 ;;		On entry : 0/0
 10922 ;;		On exit  : 0/0
 10923 ;;		Unchanged: 0/0
 10924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10929 ;;Total ram usage:        0 bytes
 10930 ;; Hardware stack levels used: 1
 10931 ;; This function calls:
 10932 ;;		Nothing
 10933 ;; This function is called by:
 10934 ;;		_I2C_DO_TX_EMPTY
 10935 ;; This function uses a non-reentrant model
 10936 ;;
 10937                           
 10938                           	psect	text65
 10939  00BF80                     __ptext65:
 10940                           	callstack 0
 10941  00BF80                     _I2C_MasterSetIrq:
 10942                           	callstack 21
 10943  00BF80                     
 10944                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 10945  00BF80  869E               	bsf	158,3,c	;volatile
 10946  00BF82  0012               	return		;funcret
 10947  00BF84                     __end_of_I2C_MasterSetIrq:
 10948                           	callstack 0
 10949                           
 10950 ;; *************** function _I2C_MasterIsNack *****************
 10951 ;; Defined at:
 10952 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;		None
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  1    wreg      _Bool 
 10959 ;; Registers used:
 10960 ;;		wreg
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10966 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10967 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10968 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10969 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10970 ;;Total ram usage:        0 bytes
 10971 ;; Hardware stack levels used: 1
 10972 ;; This function calls:
 10973 ;;		Nothing
 10974 ;; This function is called by:
 10975 ;;		_I2C_MasterFsm
 10976 ;;		_I2C_DO_TX
 10977 ;; This function uses a non-reentrant model
 10978 ;;
 10979                           
 10980                           	psect	text66
 10981  00C07E                     __ptext66:
 10982                           	callstack 0
 10983  00C07E                     _I2C_MasterIsNack:
 10984                           	callstack 22
 10985  00C07E                     
 10986                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 10987  00C07E  BCC5               	btfsc	197,6,c	;volatile
 10988  00C080  EF44  F060         	goto	u3271
 10989  00C084  EF47  F060         	goto	u3270
 10990  00C088                     u3271:
 10991  00C088  0E01               	movlw	1
 10992  00C08A  EF48  F060         	goto	u3276
 10993  00C08E                     u3270:
 10994  00C08E  0E00               	movlw	0
 10995  00C090                     u3276:
 10996  00C090  0012               	return		;funcret
 10997  00C092                     __end_of_I2C_MasterIsNack:
 10998                           	callstack 0
 10999                           
 11000 ;; *************** function _I2C_MasterSendTxData *****************
 11001 ;; Defined at:
 11002 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 11003 ;; Parameters:    Size  Location     Type
 11004 ;;  data            1    wreg     unsigned char 
 11005 ;; Auto vars:     Size  Location     Type
 11006 ;;  data            1    0[COMRAM] unsigned char 
 11007 ;; Return value:  Size  Location     Type
 11008 ;;                  1    wreg      void 
 11009 ;; Registers used:
 11010 ;;		wreg
 11011 ;; Tracked objects:
 11012 ;;		On entry : 0/0
 11013 ;;		On exit  : 0/0
 11014 ;;		Unchanged: 0/0
 11015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11016 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11017 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11018 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11019 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;Total ram usage:        1 bytes
 11021 ;; Hardware stack levels used: 1
 11022 ;; This function calls:
 11023 ;;		Nothing
 11024 ;; This function is called by:
 11025 ;;		_I2C_DO_SEND_ADR_READ
 11026 ;;		_I2C_DO_SEND_ADR_WRITE
 11027 ;;		_I2C_DO_TX
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text67
 11032  00BFA8                     __ptext67:
 11033                           	callstack 0
 11034  00BFA8                     _I2C_MasterSendTxData:
 11035                           	callstack 21
 11036                           
 11037                           ;incstack = 0
 11038                           ;I2C_MasterSendTxData@data stored from wreg
 11039  00BFA8  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 11040  00BFAA                     
 11041                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 11042  00BFAA  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 11043  00BFAE  0012               	return		;funcret
 11044  00BFB0                     __end_of_I2C_MasterSendTxData:
 11045                           	callstack 0
 11046                           
 11047 ;; *************** function _I2C_MasterSendAck *****************
 11048 ;; Defined at:
 11049 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 11050 ;; Parameters:    Size  Location     Type
 11051 ;;		None
 11052 ;; Auto vars:     Size  Location     Type
 11053 ;;		None
 11054 ;; Return value:  Size  Location     Type
 11055 ;;                  1    wreg      void 
 11056 ;; Registers used:
 11057 ;;		None
 11058 ;; Tracked objects:
 11059 ;;		On entry : 0/0
 11060 ;;		On exit  : 0/0
 11061 ;;		Unchanged: 0/0
 11062 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11063 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11064 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11065 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11066 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11067 ;;Total ram usage:        0 bytes
 11068 ;; Hardware stack levels used: 1
 11069 ;; This function calls:
 11070 ;;		Nothing
 11071 ;; This function is called by:
 11072 ;;		_I2C_DO_RX
 11073 ;;		_I2C_DO_RX_ACK
 11074 ;; This function uses a non-reentrant model
 11075 ;;
 11076                           
 11077                           	psect	text68
 11078  00BF8A                     __ptext68:
 11079                           	callstack 0
 11080  00BF8A                     _I2C_MasterSendAck:
 11081                           	callstack 21
 11082  00BF8A                     
 11083                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 11084  00BF8A  9AC5               	bcf	197,5,c	;volatile
 11085                           
 11086                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 11087  00BF8C  88C5               	bsf	197,4,c	;volatile
 11088  00BF8E  0012               	return		;funcret
 11089  00BF90                     __end_of_I2C_MasterSendAck:
 11090                           	callstack 0
 11091                           
 11092 ;; *************** function _I2C_MasterGetRxData *****************
 11093 ;; Defined at:
 11094 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 11095 ;; Parameters:    Size  Location     Type
 11096 ;;		None
 11097 ;; Auto vars:     Size  Location     Type
 11098 ;;		None
 11099 ;; Return value:  Size  Location     Type
 11100 ;;                  1    wreg      unsigned char 
 11101 ;; Registers used:
 11102 ;;		wreg, status,2
 11103 ;; Tracked objects:
 11104 ;;		On entry : 0/0
 11105 ;;		On exit  : 0/0
 11106 ;;		Unchanged: 0/0
 11107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11108 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11110 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11111 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11112 ;;Total ram usage:        0 bytes
 11113 ;; Hardware stack levels used: 1
 11114 ;; This function calls:
 11115 ;;		Nothing
 11116 ;; This function is called by:
 11117 ;;		_I2C_DO_RX
 11118 ;; This function uses a non-reentrant model
 11119 ;;
 11120                           
 11121                           	psect	text69
 11122  00BF7C                     __ptext69:
 11123                           	callstack 0
 11124  00BF7C                     _I2C_MasterGetRxData:
 11125                           	callstack 21
 11126  00BF7C                     
 11127                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 11128  00BF7C  50C9               	movf	201,w,c	;volatile
 11129  00BF7E  0012               	return		;funcret
 11130  00BF80                     __end_of_I2C_MasterGetRxData:
 11131                           	callstack 0
 11132                           
 11133 ;; *************** function _I2C_MasterSendNack *****************
 11134 ;; Defined at:
 11135 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 11136 ;; Parameters:    Size  Location     Type
 11137 ;;		None
 11138 ;; Auto vars:     Size  Location     Type
 11139 ;;		None
 11140 ;; Return value:  Size  Location     Type
 11141 ;;                  1    wreg      void 
 11142 ;; Registers used:
 11143 ;;		None
 11144 ;; Tracked objects:
 11145 ;;		On entry : 0/0
 11146 ;;		On exit  : 0/0
 11147 ;;		Unchanged: 0/0
 11148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11153 ;;Total ram usage:        0 bytes
 11154 ;; Hardware stack levels used: 1
 11155 ;; This function calls:
 11156 ;;		Nothing
 11157 ;; This function is called by:
 11158 ;;		_I2C_DO_RX_NACK_STOP
 11159 ;;		_I2C_DO_RX_NACK_RESTART
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text70
 11164  00BF84                     __ptext70:
 11165                           	callstack 0
 11166  00BF84                     _I2C_MasterSendNack:
 11167                           	callstack 21
 11168  00BF84                     
 11169                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 11170  00BF84  8AC5               	bsf	197,5,c	;volatile
 11171                           
 11172                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 11173  00BF86  88C5               	bsf	197,4,c	;volatile
 11174  00BF88  0012               	return		;funcret
 11175  00BF8A                     __end_of_I2C_MasterSendNack:
 11176                           	callstack 0
 11177                           
 11178 ;; *************** function _I2C_MasterStartRx *****************
 11179 ;; Defined at:
 11180 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 11181 ;; Parameters:    Size  Location     Type
 11182 ;;		None
 11183 ;; Auto vars:     Size  Location     Type
 11184 ;;		None
 11185 ;; Return value:  Size  Location     Type
 11186 ;;                  1    wreg      void 
 11187 ;; Registers used:
 11188 ;;		None
 11189 ;; Tracked objects:
 11190 ;;		On entry : 0/0
 11191 ;;		On exit  : 0/0
 11192 ;;		Unchanged: 0/0
 11193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11194 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11195 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11196 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;Total ram usage:        0 bytes
 11199 ;; Hardware stack levels used: 1
 11200 ;; This function calls:
 11201 ;;		Nothing
 11202 ;; This function is called by:
 11203 ;;		_I2C_DO_RCEN
 11204 ;; This function uses a non-reentrant model
 11205 ;;
 11206                           
 11207                           	psect	text71
 11208  00BF78                     __ptext71:
 11209                           	callstack 0
 11210  00BF78                     _I2C_MasterStartRx:
 11211                           	callstack 21
 11212  00BF78                     
 11213                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 11214  00BF78  86C5               	bsf	197,3,c	;volatile
 11215  00BF7A  0012               	return		;funcret
 11216  00BF7C                     __end_of_I2C_MasterStartRx:
 11217                           	callstack 0
 11218                           
 11219 ;; *************** function _I2C_CallbackReturnReset *****************
 11220 ;; Defined at:
 11221 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 11222 ;; Parameters:    Size  Location     Type
 11223 ;;  funPtr          2    9[COMRAM] PTR void 
 11224 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11225 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11226 ;; Auto vars:     Size  Location     Type
 11227 ;;		None
 11228 ;; Return value:  Size  Location     Type
 11229 ;;                  1    wreg      enum E360
 11230 ;; Registers used:
 11231 ;;		wreg
 11232 ;; Tracked objects:
 11233 ;;		On entry : 0/0
 11234 ;;		On exit  : 0/0
 11235 ;;		Unchanged: 0/0
 11236 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11237 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11238 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11239 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11240 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11241 ;;Total ram usage:        2 bytes
 11242 ;; Hardware stack levels used: 1
 11243 ;; This function calls:
 11244 ;;		Nothing
 11245 ;; This function is called by:
 11246 ;;		_I2C_Open
 11247 ;;		_I2C_DO_TX
 11248 ;;		_I2C_DO_RX
 11249 ;;		_I2C_DO_TX_EMPTY
 11250 ;;		_I2C_DO_ADDRESS_NACK
 11251 ;;		_I2C_DO_RX_EMPTY
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text72
 11256  00BF74                     __ptext72:
 11257                           	callstack 0
 11258  00BF74                     _I2C_CallbackReturnReset:
 11259                           	callstack 21
 11260  00BF74                     
 11261                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 11262  00BF74  0E05               	movlw	5
 11263  00BF76  0012               	return		;funcret
 11264  00BF78                     __end_of_I2C_CallbackReturnReset:
 11265                           	callstack 0
 11266                           
 11267 ;; *************** function _I2C_CallbackReturnStop *****************
 11268 ;; Defined at:
 11269 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 11270 ;; Parameters:    Size  Location     Type
 11271 ;;  funPtr          2    9[COMRAM] PTR void 
 11272 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11273 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11274 ;; Auto vars:     Size  Location     Type
 11275 ;;		None
 11276 ;; Return value:  Size  Location     Type
 11277 ;;                  1    wreg      enum E360
 11278 ;; Registers used:
 11279 ;;		wreg
 11280 ;; Tracked objects:
 11281 ;;		On entry : 0/0
 11282 ;;		On exit  : 0/0
 11283 ;;		Unchanged: 0/0
 11284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11285 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11288 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11289 ;;Total ram usage:        2 bytes
 11290 ;; Hardware stack levels used: 1
 11291 ;; This function calls:
 11292 ;;		Nothing
 11293 ;; This function is called by:
 11294 ;;		_I2C_Open
 11295 ;;		_I2C_SetCallback
 11296 ;;		_I2C_DO_TX
 11297 ;;		_I2C_DO_RX
 11298 ;;		_I2C_DO_TX_EMPTY
 11299 ;;		_I2C_DO_ADDRESS_NACK
 11300 ;;		_I2C_DO_RX_EMPTY
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text73
 11305  00BF70                     __ptext73:
 11306                           	callstack 0
 11307  00BF70                     _I2C_CallbackReturnStop:
 11308                           	callstack 21
 11309  00BF70                     
 11310                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP_;
 11311  00BF70  0E01               	movlw	1
 11312  00BF72  0012               	return		;funcret
 11313  00BF74                     __end_of_I2C_CallbackReturnStop:
 11314                           	callstack 0
 11315                           
 11316 ;; *************** function _rdBlkRegCompleteHandler *****************
 11317 ;; Defined at:
 11318 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  ptr             2    9[COMRAM] PTR void 
 11321 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11322 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11323 ;; Auto vars:     Size  Location     Type
 11324 ;;		None
 11325 ;; Return value:  Size  Location     Type
 11326 ;;                  1    wreg      enum E360
 11327 ;; Registers used:
 11328 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11329 ;; Tracked objects:
 11330 ;;		On entry : 0/0
 11331 ;;		On exit  : 0/0
 11332 ;;		Unchanged: 0/0
 11333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11334 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11337 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11338 ;;Total ram usage:        2 bytes
 11339 ;; Hardware stack levels used: 1
 11340 ;; Hardware stack levels required when called: 2
 11341 ;; This function calls:
 11342 ;;		_I2C_SetBuffer
 11343 ;;		_I2C_SetDataCompleteCallback
 11344 ;; This function is called by:
 11345 ;;		_I2C_ReadDataBlock
 11346 ;;		_I2C_DO_TX
 11347 ;;		_I2C_DO_RX
 11348 ;;		_I2C_DO_TX_EMPTY
 11349 ;;		_I2C_DO_ADDRESS_NACK
 11350 ;;		_I2C_DO_RX_EMPTY
 11351 ;; This function uses a non-reentrant model
 11352 ;;
 11353                           
 11354                           	psect	text74
 11355  00C448                     __ptext74:
 11356                           	callstack 0
 11357  00C448                     _rdBlkRegCompleteHandler:
 11358                           	callstack 19
 11359  00C448                     
 11360                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 11361  00C448  EE20 F002          	lfsr	2,2
 11362  00C44C  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 11363  00C44E  26D9               	addwf	fsr2l,f,c
 11364  00C450  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 11365  00C452  22DA               	addwfc	fsr2h,f,c
 11366  00C454  CFDE F001          	movff	postinc2,I2C_SetBuffer@buffer
 11367  00C458  CFDD F002          	movff	postdec2,I2C_SetBuffer@buffer+1
 11368  00C45C  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 11369  00C460  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 11370  00C464  CFDE F003          	movff	postinc2,I2C_SetBuffer@bufferSize
 11371  00C468  CFDD F004          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 11372  00C46C  ECB1  F060         	call	_I2C_SetBuffer	;wreg free
 11373  00C470                     
 11374                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11375  00C470  0E00               	movlw	0
 11376  00C472  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11377  00C474  0E00               	movlw	0
 11378  00C476  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11379  00C478  0E00               	movlw	0
 11380  00C47A  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11381  00C47C  0E00               	movlw	0
 11382  00C47E  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11383  00C480  EC49  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11384  00C484                     
 11385                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 11386  00C484  0E02               	movlw	2
 11387  00C486  0012               	return		;funcret
 11388  00C488                     __end_of_rdBlkRegCompleteHandler:
 11389                           	callstack 0
 11390                           
 11391 ;; *************** function _wr1RegCompleteHandler *****************
 11392 ;; Defined at:
 11393 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 11394 ;; Parameters:    Size  Location     Type
 11395 ;;  ptr             2    9[COMRAM] PTR void 
 11396 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11397 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11398 ;; Auto vars:     Size  Location     Type
 11399 ;;		None
 11400 ;; Return value:  Size  Location     Type
 11401 ;;                  1    wreg      enum E360
 11402 ;; Registers used:
 11403 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11404 ;; Tracked objects:
 11405 ;;		On entry : 0/0
 11406 ;;		On exit  : 0/0
 11407 ;;		Unchanged: 0/0
 11408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11409 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11410 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11412 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11413 ;;Total ram usage:        2 bytes
 11414 ;; Hardware stack levels used: 1
 11415 ;; Hardware stack levels required when called: 2
 11416 ;; This function calls:
 11417 ;;		_I2C_SetBuffer
 11418 ;;		_I2C_SetDataCompleteCallback
 11419 ;; This function is called by:
 11420 ;;		_I2C_Write1ByteRegister
 11421 ;;		_I2C_DO_TX
 11422 ;;		_I2C_DO_RX
 11423 ;;		_I2C_DO_TX_EMPTY
 11424 ;;		_I2C_DO_ADDRESS_NACK
 11425 ;;		_I2C_DO_RX_EMPTY
 11426 ;; This function uses a non-reentrant model
 11427 ;;
 11428                           
 11429                           	psect	text75
 11430  00C2AA                     __ptext75:
 11431                           	callstack 0
 11432  00C2AA                     _wr1RegCompleteHandler:
 11433                           	callstack 19
 11434  00C2AA                     
 11435                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 11436  00C2AA  C00A  F001         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11437  00C2AE  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11438  00C2B2  0E00               	movlw	0
 11439  00C2B4  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11440  00C2B6  0E01               	movlw	1
 11441  00C2B8  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11442  00C2BA  ECB1  F060         	call	_I2C_SetBuffer	;wreg free
 11443  00C2BE                     
 11444                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11445  00C2BE  0E00               	movlw	0
 11446  00C2C0  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11447  00C2C2  0E00               	movlw	0
 11448  00C2C4  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11449  00C2C6  0E00               	movlw	0
 11450  00C2C8  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11451  00C2CA  0E00               	movlw	0
 11452  00C2CC  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11453  00C2CE  EC49  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11454  00C2D2                     
 11455                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 11456  00C2D2  0E04               	movlw	4
 11457  00C2D4  0012               	return		;funcret
 11458  00C2D6                     __end_of_wr1RegCompleteHandler:
 11459                           	callstack 0
 11460                           
 11461 ;; *************** function _rd2RegCompleteHandler *****************
 11462 ;; Defined at:
 11463 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 11464 ;; Parameters:    Size  Location     Type
 11465 ;;  ptr             2    9[COMRAM] PTR void 
 11466 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11467 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11468 ;; Auto vars:     Size  Location     Type
 11469 ;;		None
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  1    wreg      enum E360
 11472 ;; Registers used:
 11473 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11479 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11480 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11482 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11483 ;;Total ram usage:        2 bytes
 11484 ;; Hardware stack levels used: 1
 11485 ;; Hardware stack levels required when called: 2
 11486 ;; This function calls:
 11487 ;;		_I2C_SetBuffer
 11488 ;;		_I2C_SetDataCompleteCallback
 11489 ;; This function is called by:
 11490 ;;		_I2C_Read2ByteRegister
 11491 ;;		_I2C_DO_TX
 11492 ;;		_I2C_DO_RX
 11493 ;;		_I2C_DO_TX_EMPTY
 11494 ;;		_I2C_DO_ADDRESS_NACK
 11495 ;;		_I2C_DO_RX_EMPTY
 11496 ;; This function uses a non-reentrant model
 11497 ;;
 11498                           
 11499                           	psect	text76
 11500  00C27E                     __ptext76:
 11501                           	callstack 0
 11502  00C27E                     _rd2RegCompleteHandler:
 11503                           	callstack 19
 11504  00C27E                     
 11505                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 11506  00C27E  C00A  F001         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11507  00C282  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11508  00C286  0E00               	movlw	0
 11509  00C288  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11510  00C28A  0E02               	movlw	2
 11511  00C28C  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11512  00C28E  ECB1  F060         	call	_I2C_SetBuffer	;wreg free
 11513  00C292                     
 11514                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11515  00C292  0E00               	movlw	0
 11516  00C294  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11517  00C296  0E00               	movlw	0
 11518  00C298  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11519  00C29A  0E00               	movlw	0
 11520  00C29C  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11521  00C29E  0E00               	movlw	0
 11522  00C2A0  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11523  00C2A2  EC49  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11524  00C2A6                     
 11525                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 11526  00C2A6  0E02               	movlw	2
 11527  00C2A8  0012               	return		;funcret
 11528  00C2AA                     __end_of_rd2RegCompleteHandler:
 11529                           	callstack 0
 11530                           
 11531 ;; *************** function _rd1RegCompleteHandler *****************
 11532 ;; Defined at:
 11533 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 11534 ;; Parameters:    Size  Location     Type
 11535 ;;  ptr             2    9[COMRAM] PTR void 
 11536 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11537 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11538 ;; Auto vars:     Size  Location     Type
 11539 ;;		None
 11540 ;; Return value:  Size  Location     Type
 11541 ;;                  1    wreg      enum E360
 11542 ;; Registers used:
 11543 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11544 ;; Tracked objects:
 11545 ;;		On entry : 0/0
 11546 ;;		On exit  : 0/0
 11547 ;;		Unchanged: 0/0
 11548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11549 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11550 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11551 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11552 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11553 ;;Total ram usage:        2 bytes
 11554 ;; Hardware stack levels used: 1
 11555 ;; Hardware stack levels required when called: 2
 11556 ;; This function calls:
 11557 ;;		_I2C_SetBuffer
 11558 ;;		_I2C_SetDataCompleteCallback
 11559 ;; This function is called by:
 11560 ;;		_I2C_Read1ByteRegister
 11561 ;;		_I2C_DO_TX
 11562 ;;		_I2C_DO_RX
 11563 ;;		_I2C_DO_TX_EMPTY
 11564 ;;		_I2C_DO_ADDRESS_NACK
 11565 ;;		_I2C_DO_RX_EMPTY
 11566 ;; This function uses a non-reentrant model
 11567 ;;
 11568                           
 11569                           	psect	text77
 11570  00C252                     __ptext77:
 11571                           	callstack 0
 11572  00C252                     _rd1RegCompleteHandler:
 11573                           	callstack 19
 11574  00C252                     
 11575                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 11576  00C252  C00A  F001         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11577  00C256  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11578  00C25A  0E00               	movlw	0
 11579  00C25C  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11580  00C25E  0E01               	movlw	1
 11581  00C260  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11582  00C262  ECB1  F060         	call	_I2C_SetBuffer	;wreg free
 11583  00C266                     
 11584                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11585  00C266  0E00               	movlw	0
 11586  00C268  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11587  00C26A  0E00               	movlw	0
 11588  00C26C  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11589  00C26E  0E00               	movlw	0
 11590  00C270  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11591  00C272  0E00               	movlw	0
 11592  00C274  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11593  00C276  EC49  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11594  00C27A                     
 11595                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 11596  00C27A  0E02               	movlw	2
 11597  00C27C  0012               	return		;funcret
 11598  00C27E                     __end_of_rd1RegCompleteHandler:
 11599                           	callstack 0
 11600                           
 11601 ;; *************** function _wr2RegCompleteHandler *****************
 11602 ;; Defined at:
 11603 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 11604 ;; Parameters:    Size  Location     Type
 11605 ;;  ptr             2    9[COMRAM] PTR void 
 11606 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11607 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11608 ;; Auto vars:     Size  Location     Type
 11609 ;;		None
 11610 ;; Return value:  Size  Location     Type
 11611 ;;                  1    wreg      enum E360
 11612 ;; Registers used:
 11613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11614 ;; Tracked objects:
 11615 ;;		On entry : 0/0
 11616 ;;		On exit  : 0/0
 11617 ;;		Unchanged: 0/0
 11618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11619 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11622 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11623 ;;Total ram usage:        2 bytes
 11624 ;; Hardware stack levels used: 1
 11625 ;; Hardware stack levels required when called: 2
 11626 ;; This function calls:
 11627 ;;		_I2C_SetBuffer
 11628 ;;		_I2C_SetDataCompleteCallback
 11629 ;; This function is called by:
 11630 ;;		_I2C_Write2ByteRegister
 11631 ;;		_I2C_DO_TX
 11632 ;;		_I2C_DO_RX
 11633 ;;		_I2C_DO_TX_EMPTY
 11634 ;;		_I2C_DO_ADDRESS_NACK
 11635 ;;		_I2C_DO_RX_EMPTY
 11636 ;; This function uses a non-reentrant model
 11637 ;;
 11638                           
 11639                           	psect	text78
 11640  00C226                     __ptext78:
 11641                           	callstack 0
 11642  00C226                     _wr2RegCompleteHandler:
 11643                           	callstack 19
 11644  00C226                     
 11645                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 11646  00C226  C00A  F001         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11647  00C22A  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11648  00C22E  0E00               	movlw	0
 11649  00C230  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11650  00C232  0E02               	movlw	2
 11651  00C234  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11652  00C236  ECB1  F060         	call	_I2C_SetBuffer	;wreg free
 11653  00C23A                     
 11654                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11655  00C23A  0E00               	movlw	0
 11656  00C23C  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11657  00C23E  0E00               	movlw	0
 11658  00C240  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11659  00C242  0E00               	movlw	0
 11660  00C244  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11661  00C246  0E00               	movlw	0
 11662  00C248  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11663  00C24A  EC49  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11664  00C24E                     
 11665                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 11666  00C24E  0E04               	movlw	4
 11667  00C250  0012               	return		;funcret
 11668  00C252                     __end_of_wr2RegCompleteHandler:
 11669                           	callstack 0
 11670                           
 11671 ;; *************** function _I2C_SetDataCompleteCallback *****************
 11672 ;; Defined at:
 11673 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 11676 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11677 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11678 ;;  ptr             2    7[COMRAM] PTR void 
 11679 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11680 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11681 ;; Auto vars:     Size  Location     Type
 11682 ;;		None
 11683 ;; Return value:  Size  Location     Type
 11684 ;;                  1    wreg      void 
 11685 ;; Registers used:
 11686 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11687 ;; Tracked objects:
 11688 ;;		On entry : 0/0
 11689 ;;		On exit  : 0/0
 11690 ;;		Unchanged: 0/0
 11691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11692 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11693 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11695 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11696 ;;Total ram usage:        4 bytes
 11697 ;; Hardware stack levels used: 1
 11698 ;; Hardware stack levels required when called: 1
 11699 ;; This function calls:
 11700 ;;		_I2C_SetCallback
 11701 ;; This function is called by:
 11702 ;;		_rd1RegCompleteHandler
 11703 ;;		_rd2RegCompleteHandler
 11704 ;;		_wr1RegCompleteHandler
 11705 ;;		_wr2RegCompleteHandler
 11706 ;;		_rdBlkRegCompleteHandler
 11707 ;;		_I2C_Read1ByteRegister
 11708 ;;		_I2C_Read2ByteRegister
 11709 ;;		_I2C_Write1ByteRegister
 11710 ;;		_I2C_Write2ByteRegister
 11711 ;;		_I2C_ReadDataBlock
 11712 ;; This function uses a non-reentrant model
 11713 ;;
 11714                           
 11715                           	psect	text79
 11716  00C092                     __ptext79:
 11717                           	callstack 0
 11718  00C092                     _I2C_SetDataCompleteCallback:
 11719                           	callstack 19
 11720  00C092                     
 11721                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 11722  00C092  C006  F001         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 11723  00C096  C007  F002         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 11724  00C09A  C008  F003         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 11725  00C09E  C009  F004         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 11726  00C0A2  0E00               	movlw	0
 11727  00C0A4  ECBD  F064         	call	_I2C_SetCallback
 11728  00C0A8  0012               	return		;funcret
 11729  00C0AA                     __end_of_I2C_SetDataCompleteCallback:
 11730                           	callstack 0
 11731                           
 11732 ;; *************** function _I2C_SetCallback *****************
 11733 ;; Defined at:
 11734 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 11735 ;; Parameters:    Size  Location     Type
 11736 ;;  idx             1    wreg     enum E12595
 11737 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 11738 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11739 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11740 ;;  ptr             2    2[COMRAM] PTR void 
 11741 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11742 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  idx             1    4[COMRAM] enum E12595
 11745 ;; Return value:  Size  Location     Type
 11746 ;;                  1    wreg      void 
 11747 ;; Registers used:
 11748 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11749 ;; Tracked objects:
 11750 ;;		On entry : 0/0
 11751 ;;		On exit  : 0/0
 11752 ;;		Unchanged: 0/0
 11753 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11754 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11755 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11756 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11757 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11758 ;;Total ram usage:        5 bytes
 11759 ;; Hardware stack levels used: 1
 11760 ;; This function calls:
 11761 ;;		Nothing
 11762 ;; This function is called by:
 11763 ;;		_I2C_SetDataCompleteCallback
 11764 ;;		_I2C_SetAddressNackCallback
 11765 ;;		_I2C_SetWriteCollisionCallback
 11766 ;;		_I2C_SetDataNackCallback
 11767 ;;		_I2C_SetTimeoutCallback
 11768 ;; This function uses a non-reentrant model
 11769 ;;
 11770                           
 11771                           	psect	text80
 11772  00C97A                     __ptext80:
 11773                           	callstack 0
 11774  00C97A                     _I2C_SetCallback:
 11775                           	callstack 25
 11776                           
 11777                           ;incstack = 0
 11778                           ;I2C_SetCallback@idx stored from wreg
 11779  00C97A  6E05               	movwf	I2C_SetCallback@idx^0,c
 11780  00C97C                     
 11781                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 11782  00C97C  5001               	movf	I2C_SetCallback@cb^0,w,c
 11783  00C97E  1002               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 11784  00C980  B4D8               	btfsc	status,2,c
 11785  00C982  EFC5  F064         	goto	u3251
 11786  00C986  EFC7  F064         	goto	u3250
 11787  00C98A                     u3251:
 11788  00C98A  EFE1  F064         	goto	l4375
 11789  00C98E                     u3250:
 11790  00C98E                     
 11791                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 11792  00C98E  5005               	movf	I2C_SetCallback@idx^0,w,c
 11793  00C990  0D02               	mullw	2
 11794  00C992  0E50               	movlw	low _I2C_Status
 11795  00C994  24F3               	addwf	243,w,c
 11796  00C996  6ED9               	movwf	fsr2l,c
 11797  00C998  0E01               	movlw	high _I2C_Status
 11798  00C99A  20F4               	addwfc	prodh,w,c
 11799  00C99C  6EDA               	movwf	fsr2h,c
 11800  00C99E  C001  FFDE         	movff	I2C_SetCallback@cb,postinc2
 11801  00C9A2  C002  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 11802                           
 11803                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 11804  00C9A6  5005               	movf	I2C_SetCallback@idx^0,w,c
 11805  00C9A8  0D02               	mullw	2
 11806  00C9AA  0E5C               	movlw	low (_I2C_Status+12)
 11807  00C9AC  24F3               	addwf	243,w,c
 11808  00C9AE  6ED9               	movwf	fsr2l,c
 11809  00C9B0  0E01               	movlw	high (_I2C_Status+12)
 11810  00C9B2  20F4               	addwfc	prodh,w,c
 11811  00C9B4  6EDA               	movwf	fsr2h,c
 11812  00C9B6  C003  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 11813  00C9BA  C004  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 11814                           
 11815                           ;mcc_generated_files/i2c_master.c: 304:     }
 11816  00C9BE  EFF9  F064         	goto	l302
 11817  00C9C2                     l4375:
 11818                           
 11819                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 11820  00C9C2  5005               	movf	I2C_SetCallback@idx^0,w,c
 11821  00C9C4  0D02               	mullw	2
 11822  00C9C6  0E50               	movlw	low _I2C_Status
 11823  00C9C8  24F3               	addwf	243,w,c
 11824  00C9CA  6ED9               	movwf	fsr2l,c
 11825  00C9CC  0E01               	movlw	high _I2C_Status
 11826  00C9CE  20F4               	addwfc	prodh,w,c
 11827  00C9D0  6EDA               	movwf	fsr2h,c
 11828  00C9D2  0E70               	movlw	low _I2C_CallbackReturnStop
 11829  00C9D4  6EDE               	movwf	postinc2,c
 11830  00C9D6  0EBF               	movlw	high _I2C_CallbackReturnStop
 11831  00C9D8  6EDD               	movwf	postdec2,c
 11832                           
 11833                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 11834  00C9DA  5005               	movf	I2C_SetCallback@idx^0,w,c
 11835  00C9DC  0D02               	mullw	2
 11836  00C9DE  0E5C               	movlw	low (_I2C_Status+12)
 11837  00C9E0  24F3               	addwf	243,w,c
 11838  00C9E2  6ED9               	movwf	fsr2l,c
 11839  00C9E4  0E01               	movlw	high (_I2C_Status+12)
 11840  00C9E6  20F4               	addwfc	prodh,w,c
 11841  00C9E8  6EDA               	movwf	fsr2h,c
 11842  00C9EA  0E00               	movlw	0
 11843  00C9EC  6EDE               	movwf	postinc2,c
 11844  00C9EE  0E00               	movlw	0
 11845  00C9F0  6EDD               	movwf	postdec2,c
 11846  00C9F2                     l302:
 11847  00C9F2  0012               	return		;funcret
 11848  00C9F4                     __end_of_I2C_SetCallback:
 11849                           	callstack 0
 11850                           
 11851 ;; *************** function _I2C_SetBuffer *****************
 11852 ;; Defined at:
 11853 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 11854 ;; Parameters:    Size  Location     Type
 11855 ;;  buffer          2    0[COMRAM] PTR void 
 11856 ;;		 -> Oled_Data@data_I2C(2), Oled_Command@data_I2C(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 11857 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 11858 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 11859 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 11860 ;;  bufferSize      2    2[COMRAM] unsigned int 
 11861 ;; Auto vars:     Size  Location     Type
 11862 ;;		None
 11863 ;; Return value:  Size  Location     Type
 11864 ;;                  1    wreg      void 
 11865 ;; Registers used:
 11866 ;;		wreg, status,2, status,0
 11867 ;; Tracked objects:
 11868 ;;		On entry : 0/0
 11869 ;;		On exit  : 0/0
 11870 ;;		Unchanged: 0/0
 11871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11873 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11875 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11876 ;;Total ram usage:        4 bytes
 11877 ;; Hardware stack levels used: 1
 11878 ;; This function calls:
 11879 ;;		Nothing
 11880 ;; This function is called by:
 11881 ;;		_I2C_WriteNBytes
 11882 ;;		_rd1RegCompleteHandler
 11883 ;;		_rd2RegCompleteHandler
 11884 ;;		_wr1RegCompleteHandler
 11885 ;;		_wr2RegCompleteHandler
 11886 ;;		_rdBlkRegCompleteHandler
 11887 ;;		_I2C_Read1ByteRegister
 11888 ;;		_I2C_Read2ByteRegister
 11889 ;;		_I2C_Write1ByteRegister
 11890 ;;		_I2C_Write2ByteRegister
 11891 ;;		_I2C_ReadNBytes
 11892 ;;		_I2C_ReadDataBlock
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           	psect	text81
 11897  00C162                     __ptext81:
 11898                           	callstack 0
 11899  00C162                     _I2C_SetBuffer:
 11900                           	callstack 26
 11901  00C162                     
 11902                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 11903  00C162  0101               	movlb	1	; () banked
 11904  00C164  A773               	btfss	(_I2C_Status+35)& (0+255),3,b
 11905  00C166  EFB7  F060         	goto	u3261
 11906  00C16A  EFB9  F060         	goto	u3260
 11907  00C16E                     u3261:
 11908  00C16E  EFC2  F060         	goto	l282
 11909  00C172                     u3260:
 11910  00C172                     
 11911                           ; BSR set to: 1
 11912                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 11913  00C172  C001  F16D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 11914  00C176  C002  F16E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 11915  00C17A                     
 11916                           ; BSR set to: 1
 11917                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 11918  00C17A  C003  F16F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 11919  00C17E  C004  F170         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 11920  00C182                     
 11921                           ; BSR set to: 1
 11922                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 11923  00C182  9773               	bcf	(_I2C_Status+35)& (0+255),3,b
 11924  00C184                     l282:
 11925                           
 11926                           ; BSR set to: 1
 11927  00C184  0012               	return		;funcret
 11928  00C186                     __end_of_I2C_SetBuffer:
 11929                           	callstack 0
 11930                           
 11931 ;; *************** function _I2C_MasterStop *****************
 11932 ;; Defined at:
 11933 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 11934 ;; Parameters:    Size  Location     Type
 11935 ;;		None
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;		None
 11938 ;; Return value:  Size  Location     Type
 11939 ;;                  1    wreg      void 
 11940 ;; Registers used:
 11941 ;;		None
 11942 ;; Tracked objects:
 11943 ;;		On entry : 0/0
 11944 ;;		On exit  : 0/0
 11945 ;;		Unchanged: 0/0
 11946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11948 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11950 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11951 ;;Total ram usage:        0 bytes
 11952 ;; Hardware stack levels used: 1
 11953 ;; This function calls:
 11954 ;;		Nothing
 11955 ;; This function is called by:
 11956 ;;		_I2C_DO_SEND_STOP
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           	psect	text82
 11961  00BF6C                     __ptext82:
 11962                           	callstack 0
 11963  00BF6C                     _I2C_MasterStop:
 11964                           	callstack 20
 11965  00BF6C                     
 11966                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 11967  00BF6C  84C5               	bsf	197,2,c	;volatile
 11968  00BF6E  0012               	return		;funcret
 11969  00BF70                     __end_of_I2C_MasterStop:
 11970                           	callstack 0
 11971                           
 11972 ;; *************** function _I2C_MasterEnableRestart *****************
 11973 ;; Defined at:
 11974 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 11975 ;; Parameters:    Size  Location     Type
 11976 ;;		None
 11977 ;; Auto vars:     Size  Location     Type
 11978 ;;		None
 11979 ;; Return value:  Size  Location     Type
 11980 ;;                  1    wreg      void 
 11981 ;; Registers used:
 11982 ;;		None
 11983 ;; Tracked objects:
 11984 ;;		On entry : 0/0
 11985 ;;		On exit  : 0/0
 11986 ;;		Unchanged: 0/0
 11987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11992 ;;Total ram usage:        0 bytes
 11993 ;; Hardware stack levels used: 1
 11994 ;; This function calls:
 11995 ;;		Nothing
 11996 ;; This function is called by:
 11997 ;;		_I2C_DO_SEND_RESTART_READ
 11998 ;;		_I2C_DO_SEND_RESTART_WRITE
 11999 ;;		_I2C_DO_SEND_RESTART
 12000 ;;		_I2C_DO_RX_EMPTY
 12001 ;; This function uses a non-reentrant model
 12002 ;;
 12003                           
 12004                           	psect	text83
 12005  00BF68                     __ptext83:
 12006                           	callstack 0
 12007  00BF68                     _I2C_MasterEnableRestart:
 12008                           	callstack 20
 12009  00BF68                     
 12010                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 12011  00BF68  82C5               	bsf	197,1,c	;volatile
 12012  00BF6A  0012               	return		;funcret
 12013  00BF6C                     __end_of_I2C_MasterEnableRestart:
 12014                           	callstack 0
 12015                           
 12016 ;; *************** function _I2C_MasterStart *****************
 12017 ;; Defined at:
 12018 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 12019 ;; Parameters:    Size  Location     Type
 12020 ;;		None
 12021 ;; Auto vars:     Size  Location     Type
 12022 ;;		None
 12023 ;; Return value:  Size  Location     Type
 12024 ;;                  1    wreg      void 
 12025 ;; Registers used:
 12026 ;;		None
 12027 ;; Tracked objects:
 12028 ;;		On entry : 0/0
 12029 ;;		On exit  : 0/0
 12030 ;;		Unchanged: 0/0
 12031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12032 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12033 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12034 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12035 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12036 ;;Total ram usage:        0 bytes
 12037 ;; Hardware stack levels used: 1
 12038 ;; This function calls:
 12039 ;;		Nothing
 12040 ;; This function is called by:
 12041 ;;		_I2C_MasterOperation
 12042 ;; This function uses a non-reentrant model
 12043 ;;
 12044                           
 12045                           	psect	text84
 12046  00BF64                     __ptext84:
 12047                           	callstack 0
 12048  00BF64                     _I2C_MasterStart:
 12049                           	callstack 24
 12050  00BF64                     
 12051                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 12052  00BF64  80C5               	bsf	197,0,c	;volatile
 12053  00BF66  0012               	return		;funcret
 12054  00BF68                     __end_of_I2C_MasterStart:
 12055                           	callstack 0
 12056                           
 12057 ;; *************** function _I2C_Close *****************
 12058 ;; Defined at:
 12059 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 12060 ;; Parameters:    Size  Location     Type
 12061 ;;		None
 12062 ;; Auto vars:     Size  Location     Type
 12063 ;;  returnValue     1    0[COMRAM] enum E355
 12064 ;; Return value:  Size  Location     Type
 12065 ;;                  1    wreg      enum E355
 12066 ;; Registers used:
 12067 ;;		wreg, status,2, cstack
 12068 ;; Tracked objects:
 12069 ;;		On entry : 0/0
 12070 ;;		On exit  : 0/0
 12071 ;;		Unchanged: 0/0
 12072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12073 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12074 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12075 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12076 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12077 ;;Total ram usage:        1 bytes
 12078 ;; Hardware stack levels used: 1
 12079 ;; Hardware stack levels required when called: 1
 12080 ;; This function calls:
 12081 ;;		_I2C_MasterClearIrq
 12082 ;;		_I2C_MasterClose
 12083 ;;		_I2C_MasterDisableIrq
 12084 ;; This function is called by:
 12085 ;;		_I2C_WriteNBytes
 12086 ;;		_I2C_Read1ByteRegister
 12087 ;;		_I2C_Read2ByteRegister
 12088 ;;		_I2C_Write1ByteRegister
 12089 ;;		_I2C_Write2ByteRegister
 12090 ;;		_I2C_ReadNBytes
 12091 ;;		_I2C_ReadDataBlock
 12092 ;; This function uses a non-reentrant model
 12093 ;;
 12094                           
 12095                           	psect	text85
 12096  00C1FA                     __ptext85:
 12097                           	callstack 0
 12098  00C1FA                     _I2C_Close:
 12099                           	callstack 25
 12100  00C1FA                     
 12101                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 12102  00C1FA  0E01               	movlw	1
 12103  00C1FC  6E01               	movwf	I2C_Close@returnValue^0,c
 12104  00C1FE                     
 12105                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 12106  00C1FE  0101               	movlb	1	; () banked
 12107  00C200  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12108  00C202  EF05  F061         	goto	u3911
 12109  00C206  EF07  F061         	goto	u3910
 12110  00C20A                     u3911:
 12111  00C20A  EF11  F061         	goto	l5013
 12112  00C20E                     u3910:
 12113  00C20E                     
 12114                           ; BSR set to: 1
 12115                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 12116  00C20E  9573               	bcf	(_I2C_Status+35)& (0+255),2,b
 12117                           
 12118                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 12119  00C210  696C               	setf	(_I2C_Status+28)& (0+255),b
 12120  00C212                     
 12121                           ; BSR set to: 1
 12122                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 12123  00C212  ECAC  F05F         	call	_I2C_MasterClearIrq	;wreg free
 12124                           
 12125                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 12126  00C216  ECB0  F05F         	call	_I2C_MasterDisableIrq	;wreg free
 12127                           
 12128                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 12129  00C21A  ECAE  F05F         	call	_I2C_MasterClose	;wreg free
 12130  00C21E                     
 12131                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 12132  00C21E  C172  F001         	movff	_I2C_Status+34,I2C_Close@returnValue
 12133  00C222                     l5013:
 12134                           
 12135                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 12136  00C222  5001               	movf	I2C_Close@returnValue^0,w,c
 12137  00C224  0012               	return		;funcret
 12138  00C226                     __end_of_I2C_Close:
 12139                           	callstack 0
 12140                           
 12141 ;; *************** function _I2C_MasterDisableIrq *****************
 12142 ;; Defined at:
 12143 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 12144 ;; Parameters:    Size  Location     Type
 12145 ;;		None
 12146 ;; Auto vars:     Size  Location     Type
 12147 ;;		None
 12148 ;; Return value:  Size  Location     Type
 12149 ;;                  1    wreg      void 
 12150 ;; Registers used:
 12151 ;;		None
 12152 ;; Tracked objects:
 12153 ;;		On entry : 0/0
 12154 ;;		On exit  : 0/0
 12155 ;;		Unchanged: 0/0
 12156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12157 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12158 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12159 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12160 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12161 ;;Total ram usage:        0 bytes
 12162 ;; Hardware stack levels used: 1
 12163 ;; This function calls:
 12164 ;;		Nothing
 12165 ;; This function is called by:
 12166 ;;		_I2C_Close
 12167 ;;		_I2C_SetTimeOut
 12168 ;; This function uses a non-reentrant model
 12169 ;;
 12170                           
 12171                           	psect	text86
 12172  00BF60                     __ptext86:
 12173                           	callstack 0
 12174  00BF60                     _I2C_MasterDisableIrq:
 12175                           	callstack 25
 12176  00BF60                     
 12177                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 12178  00BF60  969D               	bcf	157,3,c	;volatile
 12179  00BF62  0012               	return		;funcret
 12180  00BF64                     __end_of_I2C_MasterDisableIrq:
 12181                           	callstack 0
 12182                           
 12183 ;; *************** function _I2C_MasterClose *****************
 12184 ;; Defined at:
 12185 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;		None
 12188 ;; Auto vars:     Size  Location     Type
 12189 ;;		None
 12190 ;; Return value:  Size  Location     Type
 12191 ;;                  1    wreg      void 
 12192 ;; Registers used:
 12193 ;;		None
 12194 ;; Tracked objects:
 12195 ;;		On entry : 0/0
 12196 ;;		On exit  : 0/0
 12197 ;;		Unchanged: 0/0
 12198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12199 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12202 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12203 ;;Total ram usage:        0 bytes
 12204 ;; Hardware stack levels used: 1
 12205 ;; This function calls:
 12206 ;;		Nothing
 12207 ;; This function is called by:
 12208 ;;		_I2C_Close
 12209 ;; This function uses a non-reentrant model
 12210 ;;
 12211                           
 12212                           	psect	text87
 12213  00BF5C                     __ptext87:
 12214                           	callstack 0
 12215  00BF5C                     _I2C_MasterClose:
 12216                           	callstack 25
 12217  00BF5C                     
 12218                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 12219  00BF5C  9AC6               	bcf	198,5,c	;volatile
 12220  00BF5E  0012               	return		;funcret
 12221  00BF60                     __end_of_I2C_MasterClose:
 12222                           	callstack 0
 12223                           
 12224 ;; *************** function _I2C_MasterClearIrq *****************
 12225 ;; Defined at:
 12226 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;		None
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;		None
 12231 ;; Return value:  Size  Location     Type
 12232 ;;                  1    wreg      void 
 12233 ;; Registers used:
 12234 ;;		None
 12235 ;; Tracked objects:
 12236 ;;		On entry : 0/0
 12237 ;;		On exit  : 0/0
 12238 ;;		Unchanged: 0/0
 12239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12244 ;;Total ram usage:        0 bytes
 12245 ;; Hardware stack levels used: 1
 12246 ;; This function calls:
 12247 ;;		Nothing
 12248 ;; This function is called by:
 12249 ;;		_I2C_Open
 12250 ;;		_I2C_Close
 12251 ;;		_I2C_MasterFsm
 12252 ;; This function uses a non-reentrant model
 12253 ;;
 12254                           
 12255                           	psect	text88
 12256  00BF58                     __ptext88:
 12257                           	callstack 0
 12258  00BF58                     _I2C_MasterClearIrq:
 12259                           	callstack 25
 12260  00BF58                     
 12261                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 12262  00BF58  969E               	bcf	158,3,c	;volatile
 12263  00BF5A  0012               	return		;funcret
 12264  00BF5C                     __end_of_I2C_MasterClearIrq:
 12265                           	callstack 0
 12266                           
 12267 ;; *************** function _I2C_Master_Init *****************
 12268 ;; Defined at:
 12269 ;;		line 118 in file "INA260.c"
 12270 ;; Parameters:    Size  Location     Type
 12271 ;;  c               4   13[COMRAM] const unsigned long 
 12272 ;; Auto vars:     Size  Location     Type
 12273 ;;		None
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  1    wreg      void 
 12276 ;; Registers used:
 12277 ;;		wreg, status,2, status,0, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12283 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12285 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12286 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12287 ;;Total ram usage:        8 bytes
 12288 ;; Hardware stack levels used: 1
 12289 ;; Hardware stack levels required when called: 1
 12290 ;; This function calls:
 12291 ;;		___lldiv
 12292 ;; This function is called by:
 12293 ;;		_main
 12294 ;; This function uses a non-reentrant model
 12295 ;;
 12296                           
 12297                           	psect	text89
 12298  00C654                     __ptext89:
 12299                           	callstack 0
 12300  00C654                     _I2C_Master_Init:
 12301                           	callstack 29
 12302  00C654                     
 12303                           ;INA260.c: 118: void I2C_Master_Init(const unsigned long c);INA260.c: 119: {;INA260.c: 1
      +                          20:   SSPCON1 = 0b00101000;
 12304  00C654  0E28               	movlw	40
 12305  00C656  6EC6               	movwf	198,c	;volatile
 12306                           
 12307                           ;INA260.c: 121:   SSPCON2 = 0;
 12308  00C658  0E00               	movlw	0
 12309  00C65A  6EC5               	movwf	197,c	;volatile
 12310  00C65C                     
 12311                           ;INA260.c: 122:   SSPADD = (8000000/(4*c))-1;
 12312  00C65C  0E00               	movlw	0
 12313  00C65E  6E01               	movwf	___lldiv@dividend^0,c
 12314  00C660  0E12               	movlw	18
 12315  00C662  6E02               	movwf	(___lldiv@dividend+1)^0,c
 12316  00C664  0E7A               	movlw	122
 12317  00C666  6E03               	movwf	(___lldiv@dividend+2)^0,c
 12318  00C668  0E00               	movlw	0
 12319  00C66A  6E04               	movwf	(___lldiv@dividend+3)^0,c
 12320  00C66C  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 12321  00C670  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 12322  00C674  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 12323  00C678  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 12324  00C67C  0E02               	movlw	2
 12325  00C67E                     u5975:
 12326  00C67E  90D8               	bcf	status,0,c
 12327  00C680  3612               	rlcf	??_I2C_Master_Init^0,f,c
 12328  00C682  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
 12329  00C684  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
 12330  00C686  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
 12331  00C688  2EE8               	decfsz	wreg,f,c
 12332  00C68A  EF3F  F063         	goto	u5975
 12333  00C68E  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
 12334  00C692  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12335  00C696  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12336  00C69A  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12337  00C69E  ECCE  F065         	call	___lldiv	;wreg free
 12338  00C6A2  0401               	decf	?___lldiv^0,w,c
 12339  00C6A4  6EC8               	movwf	200,c	;volatile
 12340  00C6A6                     
 12341                           ;INA260.c: 123:   SSPSTAT = 0;
 12342  00C6A6  0E00               	movlw	0
 12343  00C6A8  6EC7               	movwf	199,c	;volatile
 12344  00C6AA                     
 12345                           ;INA260.c: 124:   TRISC3 = 1;
 12346  00C6AA  8694               	bsf	3988,3,c	;volatile
 12347  00C6AC                     
 12348                           ;INA260.c: 125:   TRISC4 = 1;
 12349  00C6AC  8894               	bsf	3988,4,c	;volatile
 12350  00C6AE  0012               	return		;funcret
 12351  00C6B0                     __end_of_I2C_Master_Init:
 12352                           	callstack 0
 12353                           
 12354 ;; *************** function ___lldiv *****************
 12355 ;; Defined at:
 12356 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 12357 ;; Parameters:    Size  Location     Type
 12358 ;;  dividend        4    0[COMRAM] unsigned long 
 12359 ;;  divisor         4    4[COMRAM] unsigned long 
 12360 ;; Auto vars:     Size  Location     Type
 12361 ;;  quotient        4    8[COMRAM] unsigned long 
 12362 ;;  counter         1   12[COMRAM] unsigned char 
 12363 ;; Return value:  Size  Location     Type
 12364 ;;                  4    0[COMRAM] unsigned long 
 12365 ;; Registers used:
 12366 ;;		wreg, status,2, status,0
 12367 ;; Tracked objects:
 12368 ;;		On entry : 0/0
 12369 ;;		On exit  : 0/0
 12370 ;;		Unchanged: 0/0
 12371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12372 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12373 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12375 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12376 ;;Total ram usage:       13 bytes
 12377 ;; Hardware stack levels used: 1
 12378 ;; This function calls:
 12379 ;;		Nothing
 12380 ;; This function is called by:
 12381 ;;		_I2C_Master_Init
 12382 ;; This function uses a non-reentrant model
 12383 ;;
 12384                           
 12385                           	psect	text90
 12386  00CB9C                     __ptext90:
 12387                           	callstack 0
 12388  00CB9C                     ___lldiv:
 12389                           	callstack 29
 12390  00CB9C  0E00               	movlw	0
 12391  00CB9E  6E09               	movwf	___lldiv@quotient^0,c
 12392  00CBA0  0E00               	movlw	0
 12393  00CBA2  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12394  00CBA4  0E00               	movlw	0
 12395  00CBA6  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12396  00CBA8  0E00               	movlw	0
 12397  00CBAA  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12398  00CBAC  5005               	movf	___lldiv@divisor^0,w,c
 12399  00CBAE  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12400  00CBB0  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12401  00CBB2  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12402  00CBB4  B4D8               	btfsc	status,2,c
 12403  00CBB6  EFDF  F065         	goto	u5791
 12404  00CBBA  EFE1  F065         	goto	u5790
 12405  00CBBE                     u5791:
 12406  00CBBE  EF17  F066         	goto	l888
 12407  00CBC2                     u5790:
 12408  00CBC2  0E01               	movlw	1
 12409  00CBC4  6E0D               	movwf	___lldiv@counter^0,c
 12410  00CBC6  EFEB  F065         	goto	l6117
 12411  00CBCA                     l6115:
 12412  00CBCA  90D8               	bcf	status,0,c
 12413  00CBCC  3605               	rlcf	___lldiv@divisor^0,f,c
 12414  00CBCE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12415  00CBD0  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12416  00CBD2  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12417  00CBD4  2A0D               	incf	___lldiv@counter^0,f,c
 12418  00CBD6                     l6117:
 12419  00CBD6  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12420  00CBD8  EFF0  F065         	goto	u5801
 12421  00CBDC  EFF2  F065         	goto	u5800
 12422  00CBE0                     u5801:
 12423  00CBE0  EFE5  F065         	goto	l6115
 12424  00CBE4                     u5800:
 12425  00CBE4                     l6119:
 12426  00CBE4  90D8               	bcf	status,0,c
 12427  00CBE6  3609               	rlcf	___lldiv@quotient^0,f,c
 12428  00CBE8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12429  00CBEA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12430  00CBEC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12431  00CBEE  5005               	movf	___lldiv@divisor^0,w,c
 12432  00CBF0  5C01               	subwf	___lldiv@dividend^0,w,c
 12433  00CBF2  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12434  00CBF4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12435  00CBF6  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12436  00CBF8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12437  00CBFA  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12438  00CBFC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12439  00CBFE  A0D8               	btfss	status,0,c
 12440  00CC00  EF04  F066         	goto	u5811
 12441  00CC04  EF06  F066         	goto	u5810
 12442  00CC08                     u5811:
 12443  00CC08  EF0F  F066         	goto	l6127
 12444  00CC0C                     u5810:
 12445  00CC0C  5005               	movf	___lldiv@divisor^0,w,c
 12446  00CC0E  5E01               	subwf	___lldiv@dividend^0,f,c
 12447  00CC10  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12448  00CC12  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12449  00CC14  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12450  00CC16  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12451  00CC18  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12452  00CC1A  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12453  00CC1C  8009               	bsf	___lldiv@quotient^0,0,c
 12454  00CC1E                     l6127:
 12455  00CC1E  90D8               	bcf	status,0,c
 12456  00CC20  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12457  00CC22  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12458  00CC24  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12459  00CC26  3205               	rrcf	___lldiv@divisor^0,f,c
 12460  00CC28  2E0D               	decfsz	___lldiv@counter^0,f,c
 12461  00CC2A  EFF2  F065         	goto	l6119
 12462  00CC2E                     l888:
 12463  00CC2E  C009  F001         	movff	___lldiv@quotient,?___lldiv
 12464  00CC32  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 12465  00CC36  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 12466  00CC3A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 12467  00CC3E  0012               	return		;funcret
 12468  00CC40                     __end_of___lldiv:
 12469                           	callstack 0
 12470                           
 12471 ;; *************** function _I2C_Initialize *****************
 12472 ;; Defined at:
 12473 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 12474 ;; Parameters:    Size  Location     Type
 12475 ;;		None
 12476 ;; Auto vars:     Size  Location     Type
 12477 ;;		None
 12478 ;; Return value:  Size  Location     Type
 12479 ;;                  1    wreg      void 
 12480 ;; Registers used:
 12481 ;;		wreg, status,2
 12482 ;; Tracked objects:
 12483 ;;		On entry : 0/0
 12484 ;;		On exit  : 0/0
 12485 ;;		Unchanged: 0/0
 12486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12487 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12489 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12490 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12491 ;;Total ram usage:        0 bytes
 12492 ;; Hardware stack levels used: 1
 12493 ;; This function calls:
 12494 ;;		Nothing
 12495 ;; This function is called by:
 12496 ;;		_main
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500                           	psect	text91
 12501  00C06A                     __ptext91:
 12502                           	callstack 0
 12503  00C06A                     _I2C_Initialize:
 12504                           	callstack 30
 12505  00C06A                     
 12506                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
 12507  00C06A  0E00               	movlw	0
 12508  00C06C  6EC7               	movwf	199,c	;volatile
 12509                           
 12510                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
 12511  00C06E  0E08               	movlw	8
 12512  00C070  6EC6               	movwf	198,c	;volatile
 12513                           
 12514                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
 12515  00C072  0E00               	movlw	0
 12516  00C074  6EC5               	movwf	197,c	;volatile
 12517                           
 12518                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
 12519  00C076  0E13               	movlw	19
 12520  00C078  6EC8               	movwf	200,c	;volatile
 12521  00C07A                     
 12522                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
 12523  00C07A  9AC6               	bcf	198,5,c	;volatile
 12524  00C07C  0012               	return		;funcret
 12525  00C07E                     __end_of_I2C_Initialize:
 12526                           	callstack 0
 12527                           
 12528 ;; *************** function _Current_ReadRegister *****************
 12529 ;; Defined at:
 12530 ;;		line 46 in file "INA260.c"
 12531 ;; Parameters:    Size  Location     Type
 12532 ;;		None
 12533 ;; Auto vars:     Size  Location     Type
 12534 ;;  temp_d          2   51[COMRAM] unsigned int 
 12535 ;;  temp_c          1   53[COMRAM] unsigned char 
 12536 ;; Return value:  Size  Location     Type
 12537 ;;                  4   45[COMRAM] float 
 12538 ;; Registers used:
 12539 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12540 ;; Tracked objects:
 12541 ;;		On entry : 0/0
 12542 ;;		On exit  : 0/0
 12543 ;;		Unchanged: 0/0
 12544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12545 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12546 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12547 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12548 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12549 ;;Total ram usage:        9 bytes
 12550 ;; Hardware stack levels used: 1
 12551 ;; Hardware stack levels required when called: 2
 12552 ;; This function calls:
 12553 ;;		_I2C_Master_Read
 12554 ;;		_I2C_Master_RepeatedStart
 12555 ;;		_I2C_Master_Start
 12556 ;;		_I2C_Master_Stop
 12557 ;;		_I2C_Master_Write
 12558 ;;		___fldiv
 12559 ;;		___flmul
 12560 ;;		___xxtofl
 12561 ;; This function is called by:
 12562 ;;		_main
 12563 ;; This function uses a non-reentrant model
 12564 ;;
 12565                           
 12566                           	psect	text92
 12567  00D424                     __ptext92:
 12568                           	callstack 0
 12569  00D424                     _Current_ReadRegister:
 12570                           	callstack 28
 12571  00D424                     
 12572                           ;INA260.c: 47:     I2C_Master_Start();
 12573  00D424  ECCC  F05F         	call	_I2C_Master_Start	;wreg free
 12574                           
 12575                           ;INA260.c: 48:     I2C_Master_Write(0x80);
 12576  00D428  0E00               	movlw	0
 12577  00D42A  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12578  00D42C  0E80               	movlw	128
 12579  00D42E  6E02               	movwf	I2C_Master_Write@d^0,c
 12580  00D430  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
 12581                           
 12582                           ;INA260.c: 49:     I2C_Master_Write(0x01);
 12583  00D434  0E00               	movlw	0
 12584  00D436  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12585  00D438  0E01               	movlw	1
 12586  00D43A  6E02               	movwf	I2C_Master_Write@d^0,c
 12587  00D43C  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
 12588                           
 12589                           ;INA260.c: 50:     I2C_Master_RepeatedStart();
 12590  00D440  ECC8  F05F         	call	_I2C_Master_RepeatedStart	;wreg free
 12591                           
 12592                           ;INA260.c: 51:     I2C_Master_Write(0x81);
 12593  00D444  0E00               	movlw	0
 12594  00D446  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12595  00D448  0E81               	movlw	129
 12596  00D44A  6E02               	movwf	I2C_Master_Write@d^0,c
 12597  00D44C  ECF8  F05F         	call	_I2C_Master_Write	;wreg free
 12598                           
 12599                           ;INA260.c: 52:     char temp_c = I2C_Master_Read(1);
 12600  00D450  0E00               	movlw	0
 12601  00D452  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
 12602  00D454  0E01               	movlw	1
 12603  00D456  6E02               	movwf	I2C_Master_Read@a^0,c
 12604  00D458  EC9A  F061         	call	_I2C_Master_Read	;wreg free
 12605  00D45C  5002               	movf	?_I2C_Master_Read^0,w,c
 12606  00D45E  6E36               	movwf	Current_ReadRegister@temp_c^0,c
 12607                           
 12608                           ;INA260.c: 53:     unsigned int temp_d = temp_c<<8 | I2C_Master_Read(0);
 12609  00D460  0E00               	movlw	0
 12610  00D462  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
 12611  00D464  0E00               	movlw	0
 12612  00D466  6E02               	movwf	I2C_Master_Read@a^0,c
 12613  00D468  EC9A  F061         	call	_I2C_Master_Read	;wreg free
 12614  00D46C  5036               	movf	Current_ReadRegister@temp_c^0,w,c
 12615  00D46E  6E33               	movwf	(??_Current_ReadRegister+1)^0,c
 12616  00D470  6A32               	clrf	??_Current_ReadRegister^0,c
 12617  00D472  5002               	movf	?_I2C_Master_Read^0,w,c
 12618  00D474  1032               	iorwf	??_Current_ReadRegister^0,w,c
 12619  00D476  6E34               	movwf	Current_ReadRegister@temp_d^0,c
 12620  00D478  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
 12621  00D47A  1033               	iorwf	(??_Current_ReadRegister+1)^0,w,c
 12622  00D47C  6E35               	movwf	(Current_ReadRegister@temp_d+1)^0,c
 12623  00D47E                     
 12624                           ;INA260.c: 54:     current = temp_d *1.25;
 12625  00D47E  C034  F007         	movff	Current_ReadRegister@temp_d,___xxtofl@val
 12626  00D482  C035  F008         	movff	Current_ReadRegister@temp_d+1,___xxtofl@val+1
 12627  00D486  6A09               	clrf	(___xxtofl@val+2)^0,c
 12628  00D488  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12629  00D48A  0E00               	movlw	0
 12630  00D48C  ECE6  F06C         	call	___xxtofl
 12631  00D490  C007  F015         	movff	?___xxtofl,___flmul@b
 12632  00D494  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
 12633  00D498  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
 12634  00D49C  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
 12635  00D4A0  0E00               	movlw	0
 12636  00D4A2  6E19               	movwf	___flmul@a^0,c
 12637  00D4A4  0E00               	movlw	0
 12638  00D4A6  6E1A               	movwf	(___flmul@a+1)^0,c
 12639  00D4A8  0EA0               	movlw	160
 12640  00D4AA  6E1B               	movwf	(___flmul@a+2)^0,c
 12641  00D4AC  0E3F               	movlw	63
 12642  00D4AE  6E1C               	movwf	(___flmul@a+3)^0,c
 12643  00D4B0  ECA6  F071         	call	___flmul	;wreg free
 12644  00D4B4  C015  F0BA         	movff	?___flmul,_current
 12645  00D4B8  C016  F0BB         	movff	?___flmul+1,_current+1
 12646  00D4BC  C017  F0BC         	movff	?___flmul+2,_current+2
 12647  00D4C0  C018  F0BD         	movff	?___flmul+3,_current+3
 12648  00D4C4                     
 12649                           ;INA260.c: 55:     I2C_Master_Stop();
 12650  00D4C4  ECD0  F05F         	call	_I2C_Master_Stop	;wreg free
 12651  00D4C8                     
 12652                           ;INA260.c: 56:     current = current/1000;
 12653  00D4C8  C0BA  F001         	movff	_current,___fldiv@b
 12654  00D4CC  C0BB  F002         	movff	_current+1,___fldiv@b+1
 12655  00D4D0  C0BC  F003         	movff	_current+2,___fldiv@b+2
 12656  00D4D4  C0BD  F004         	movff	_current+3,___fldiv@b+3
 12657  00D4D8  0E00               	movlw	0
 12658  00D4DA  6E05               	movwf	___fldiv@a^0,c
 12659  00D4DC  0E00               	movlw	0
 12660  00D4DE  6E06               	movwf	(___fldiv@a+1)^0,c
 12661  00D4E0  0E7A               	movlw	122
 12662  00D4E2  6E07               	movwf	(___fldiv@a+2)^0,c
 12663  00D4E4  0E44               	movlw	68
 12664  00D4E6  6E08               	movwf	(___fldiv@a+3)^0,c
 12665  00D4E8  ECD9  F06F         	call	___fldiv	;wreg free
 12666  00D4EC  C001  F0BA         	movff	?___fldiv,_current
 12667  00D4F0  C002  F0BB         	movff	?___fldiv+1,_current+1
 12668  00D4F4  C003  F0BC         	movff	?___fldiv+2,_current+2
 12669  00D4F8  C004  F0BD         	movff	?___fldiv+3,_current+3
 12670  00D4FC                     
 12671                           ;INA260.c: 58:     _delay((unsigned long)((600)*(8000000/4000.0)));
 12672  00D4FC  0E07               	movlw	7
 12673  00D4FE  6E33               	movwf	(??_Current_ReadRegister+1)^0,c
 12674  00D500  0E17               	movlw	23
 12675  00D502  6E32               	movwf	??_Current_ReadRegister^0,c
 12676  00D504  0E6A               	movlw	106
 12677  00D506                     u6417:
 12678  00D506  2EE8               	decfsz	wreg,f,c
 12679  00D508  D7FE               	bra	u6417
 12680  00D50A  2E32               	decfsz	??_Current_ReadRegister^0,f,c
 12681  00D50C  D7FC               	bra	u6417
 12682  00D50E  2E33               	decfsz	(??_Current_ReadRegister+1)^0,f,c
 12683  00D510  D7FA               	bra	u6417
 12684  00D512  D000               	nop2	
 12685  00D514                     
 12686                           ;INA260.c: 59:     return current;
 12687  00D514  C0BA  F02E         	movff	_current,?_Current_ReadRegister
 12688  00D518  C0BB  F02F         	movff	_current+1,?_Current_ReadRegister+1
 12689  00D51C  C0BC  F030         	movff	_current+2,?_Current_ReadRegister+2
 12690  00D520  C0BD  F031         	movff	_current+3,?_Current_ReadRegister+3
 12691  00D524  0012               	return		;funcret
 12692  00D526                     __end_of_Current_ReadRegister:
 12693                           	callstack 0
 12694                           
 12695 ;; *************** function ___xxtofl *****************
 12696 ;; Defined at:
 12697 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12698 ;; Parameters:    Size  Location     Type
 12699 ;;  sign            1    wreg     unsigned char 
 12700 ;;  val             4    6[COMRAM] long 
 12701 ;; Auto vars:     Size  Location     Type
 12702 ;;  sign            1   14[COMRAM] unsigned char 
 12703 ;;  arg             4   16[COMRAM] unsigned long 
 12704 ;;  exp             1   15[COMRAM] unsigned char 
 12705 ;; Return value:  Size  Location     Type
 12706 ;;                  4    6[COMRAM] unsigned char 
 12707 ;; Registers used:
 12708 ;;		wreg, status,2, status,0
 12709 ;; Tracked objects:
 12710 ;;		On entry : 0/0
 12711 ;;		On exit  : 0/0
 12712 ;;		Unchanged: 0/0
 12713 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12714 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12715 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12716 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12717 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12718 ;;Total ram usage:       14 bytes
 12719 ;; Hardware stack levels used: 1
 12720 ;; This function calls:
 12721 ;;		Nothing
 12722 ;; This function is called by:
 12723 ;;		_Voltage_ReadRegister
 12724 ;;		_Current_ReadRegister
 12725 ;;		_Power_ReadRegister
 12726 ;; This function uses a non-reentrant model
 12727 ;;
 12728                           
 12729                           	psect	text93
 12730  00D9CC                     __ptext93:
 12731                           	callstack 0
 12732  00D9CC                     ___xxtofl:
 12733                           	callstack 29
 12734                           
 12735                           ;incstack = 0
 12736                           ;___xxtofl@sign stored from wreg
 12737  00D9CC  6E0F               	movwf	___xxtofl@sign^0,c
 12738  00D9CE  500F               	movf	___xxtofl@sign^0,w,c
 12739  00D9D0  B4D8               	btfsc	status,2,c
 12740  00D9D2  EFED  F06C         	goto	u5821
 12741  00D9D6  EFEF  F06C         	goto	u5820
 12742  00D9DA                     u5821:
 12743  00D9DA  EF11  F06D         	goto	l1516
 12744  00D9DE                     u5820:
 12745  00D9DE  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12746  00D9E0  EFF6  F06C         	goto	u5830
 12747  00D9E4  EFF4  F06C         	goto	u5831
 12748  00D9E8                     u5831:
 12749  00D9E8  EF11  F06D         	goto	l1516
 12750  00D9EC                     u5830:
 12751  00D9EC  C007  F00B         	movff	___xxtofl@val,??___xxtofl
 12752  00D9F0  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
 12753  00D9F4  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
 12754  00D9F8  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
 12755  00D9FC  1E0B               	comf	??___xxtofl^0,f,c
 12756  00D9FE  1E0C               	comf	(??___xxtofl+1)^0,f,c
 12757  00DA00  1E0D               	comf	(??___xxtofl+2)^0,f,c
 12758  00DA02  1E0E               	comf	(??___xxtofl+3)^0,f,c
 12759  00DA04  2A0B               	incf	??___xxtofl^0,f,c
 12760  00DA06  0E00               	movlw	0
 12761  00DA08  220C               	addwfc	(??___xxtofl+1)^0,f,c
 12762  00DA0A  220D               	addwfc	(??___xxtofl+2)^0,f,c
 12763  00DA0C  220E               	addwfc	(??___xxtofl+3)^0,f,c
 12764  00DA0E  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
 12765  00DA12  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
 12766  00DA16  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
 12767  00DA1A  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
 12768  00DA1E  EF19  F06D         	goto	l6137
 12769  00DA22                     l1516:
 12770  00DA22  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
 12771  00DA26  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12772  00DA2A  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12773  00DA2E  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12774  00DA32                     l6137:
 12775  00DA32  5007               	movf	___xxtofl@val^0,w,c
 12776  00DA34  1008               	iorwf	(___xxtofl@val+1)^0,w,c
 12777  00DA36  1009               	iorwf	(___xxtofl@val+2)^0,w,c
 12778  00DA38  100A               	iorwf	(___xxtofl@val+3)^0,w,c
 12779  00DA3A  A4D8               	btfss	status,2,c
 12780  00DA3C  EF22  F06D         	goto	u5841
 12781  00DA40  EF24  F06D         	goto	u5840
 12782  00DA44                     u5841:
 12783  00DA44  EF2E  F06D         	goto	l6143
 12784  00DA48                     u5840:
 12785  00DA48  0E00               	movlw	0
 12786  00DA4A  6E07               	movwf	?___xxtofl^0,c
 12787  00DA4C  0E00               	movlw	0
 12788  00DA4E  6E08               	movwf	(?___xxtofl+1)^0,c
 12789  00DA50  0E00               	movlw	0
 12790  00DA52  6E09               	movwf	(?___xxtofl+2)^0,c
 12791  00DA54  0E00               	movlw	0
 12792  00DA56  6E0A               	movwf	(?___xxtofl+3)^0,c
 12793  00DA58  EFBF  F06D         	goto	l1519
 12794  00DA5C                     l6143:
 12795  00DA5C  0E96               	movlw	150
 12796  00DA5E  6E10               	movwf	___xxtofl@exp^0,c
 12797  00DA60  EF38  F06D         	goto	l6147
 12798  00DA64                     l6145:
 12799  00DA64  2A10               	incf	___xxtofl@exp^0,f,c
 12800  00DA66  90D8               	bcf	status,0,c
 12801  00DA68  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12802  00DA6A  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12803  00DA6C  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12804  00DA6E  3211               	rrcf	___xxtofl@arg^0,f,c
 12805  00DA70                     l6147:
 12806  00DA70  0E00               	movlw	0
 12807  00DA72  1411               	andwf	___xxtofl@arg^0,w,c
 12808  00DA74  6E0B               	movwf	??___xxtofl^0,c
 12809  00DA76  0E00               	movlw	0
 12810  00DA78  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12811  00DA7A  6E0C               	movwf	(??___xxtofl+1)^0,c
 12812  00DA7C  0E00               	movlw	0
 12813  00DA7E  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12814  00DA80  6E0D               	movwf	(??___xxtofl+2)^0,c
 12815  00DA82  0EFE               	movlw	254
 12816  00DA84  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12817  00DA86  6E0E               	movwf	(??___xxtofl+3)^0,c
 12818  00DA88  500B               	movf	??___xxtofl^0,w,c
 12819  00DA8A  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12820  00DA8C  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12821  00DA8E  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12822  00DA90  A4D8               	btfss	status,2,c
 12823  00DA92  EF4D  F06D         	goto	u5851
 12824  00DA96  EF4F  F06D         	goto	u5850
 12825  00DA9A                     u5851:
 12826  00DA9A  EF32  F06D         	goto	l6145
 12827  00DA9E                     u5850:
 12828  00DA9E  EF5D  F06D         	goto	l1523
 12829  00DAA2                     l6149:
 12830  00DAA2  2A10               	incf	___xxtofl@exp^0,f,c
 12831  00DAA4  0E01               	movlw	1
 12832  00DAA6  2611               	addwf	___xxtofl@arg^0,f,c
 12833  00DAA8  0E00               	movlw	0
 12834  00DAAA  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
 12835  00DAAC  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
 12836  00DAAE  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
 12837  00DAB0  90D8               	bcf	status,0,c
 12838  00DAB2  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12839  00DAB4  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12840  00DAB6  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12841  00DAB8  3211               	rrcf	___xxtofl@arg^0,f,c
 12842  00DABA                     l1523:
 12843  00DABA  0E00               	movlw	0
 12844  00DABC  1411               	andwf	___xxtofl@arg^0,w,c
 12845  00DABE  6E0B               	movwf	??___xxtofl^0,c
 12846  00DAC0  0E00               	movlw	0
 12847  00DAC2  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12848  00DAC4  6E0C               	movwf	(??___xxtofl+1)^0,c
 12849  00DAC6  0E00               	movlw	0
 12850  00DAC8  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12851  00DACA  6E0D               	movwf	(??___xxtofl+2)^0,c
 12852  00DACC  0EFF               	movlw	255
 12853  00DACE  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12854  00DAD0  6E0E               	movwf	(??___xxtofl+3)^0,c
 12855  00DAD2  500B               	movf	??___xxtofl^0,w,c
 12856  00DAD4  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12857  00DAD6  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12858  00DAD8  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12859  00DADA  A4D8               	btfss	status,2,c
 12860  00DADC  EF72  F06D         	goto	u5861
 12861  00DAE0  EF74  F06D         	goto	u5860
 12862  00DAE4                     u5861:
 12863  00DAE4  EF51  F06D         	goto	l6149
 12864  00DAE8                     u5860:
 12865  00DAE8  EF7C  F06D         	goto	l6157
 12866  00DAEC                     l6155:
 12867  00DAEC  0610               	decf	___xxtofl@exp^0,f,c
 12868  00DAEE  90D8               	bcf	status,0,c
 12869  00DAF0  3611               	rlcf	___xxtofl@arg^0,f,c
 12870  00DAF2  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
 12871  00DAF4  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
 12872  00DAF6  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
 12873  00DAF8                     l6157:
 12874  00DAF8  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
 12875  00DAFA  EF81  F06D         	goto	u5871
 12876  00DAFE  EF83  F06D         	goto	u5870
 12877  00DB02                     u5871:
 12878  00DB02  EF8B  F06D         	goto	l1530
 12879  00DB06                     u5870:
 12880  00DB06  0E02               	movlw	2
 12881  00DB08  6010               	cpfslt	___xxtofl@exp^0,c
 12882  00DB0A  EF89  F06D         	goto	u5881
 12883  00DB0E  EF8B  F06D         	goto	u5880
 12884  00DB12                     u5881:
 12885  00DB12  EF76  F06D         	goto	l6155
 12886  00DB16                     u5880:
 12887  00DB16                     l1530:
 12888  00DB16  B010               	btfsc	___xxtofl@exp^0,0,c
 12889  00DB18  EF90  F06D         	goto	u5891
 12890  00DB1C  EF92  F06D         	goto	u5890
 12891  00DB20                     u5891:
 12892  00DB20  EF93  F06D         	goto	l6163
 12893  00DB24                     u5890:
 12894  00DB24  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
 12895  00DB26                     l6163:
 12896  00DB26  90D8               	bcf	status,0,c
 12897  00DB28  3210               	rrcf	___xxtofl@exp^0,f,c
 12898  00DB2A  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
 12899  00DB2E  6A0C               	clrf	(??___xxtofl+1)^0,c
 12900  00DB30  6A0D               	clrf	(??___xxtofl+2)^0,c
 12901  00DB32  6A0E               	clrf	(??___xxtofl+3)^0,c
 12902  00DB34  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
 12903  00DB38  6A0D               	clrf	(??___xxtofl+2)^0,c
 12904  00DB3A  6A0C               	clrf	(??___xxtofl+1)^0,c
 12905  00DB3C  6A0B               	clrf	??___xxtofl^0,c
 12906  00DB3E  500B               	movf	??___xxtofl^0,w,c
 12907  00DB40  1211               	iorwf	___xxtofl@arg^0,f,c
 12908  00DB42  500C               	movf	(??___xxtofl+1)^0,w,c
 12909  00DB44  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
 12910  00DB46  500D               	movf	(??___xxtofl+2)^0,w,c
 12911  00DB48  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
 12912  00DB4A  500E               	movf	(??___xxtofl+3)^0,w,c
 12913  00DB4C  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
 12914  00DB4E  500F               	movf	___xxtofl@sign^0,w,c
 12915  00DB50  B4D8               	btfsc	status,2,c
 12916  00DB52  EFAD  F06D         	goto	u5901
 12917  00DB56  EFAF  F06D         	goto	u5900
 12918  00DB5A                     u5901:
 12919  00DB5A  EFB7  F06D         	goto	l6173
 12920  00DB5E                     u5900:
 12921  00DB5E  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12922  00DB60  EFB6  F06D         	goto	u5910
 12923  00DB64  EFB4  F06D         	goto	u5911
 12924  00DB68                     u5911:
 12925  00DB68  EFB7  F06D         	goto	l6173
 12926  00DB6C                     u5910:
 12927  00DB6C  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
 12928  00DB6E                     l6173:
 12929  00DB6E  C011  F007         	movff	___xxtofl@arg,?___xxtofl
 12930  00DB72  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
 12931  00DB76  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
 12932  00DB7A  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
 12933  00DB7E                     l1519:
 12934  00DB7E  0012               	return		;funcret
 12935  00DB80                     __end_of___xxtofl:
 12936                           	callstack 0
 12937                           
 12938 ;; *************** function ___flmul *****************
 12939 ;; Defined at:
 12940 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12941 ;; Parameters:    Size  Location     Type
 12942 ;;  b               4   20[COMRAM] unsigned char 
 12943 ;;  a               4   24[COMRAM] unsigned char 
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;  prod            4   39[COMRAM] struct .
 12946 ;;  grs             4   33[COMRAM] unsigned long 
 12947 ;;  temp            2   43[COMRAM] struct .
 12948 ;;  bexp            1   38[COMRAM] unsigned char 
 12949 ;;  aexp            1   37[COMRAM] unsigned char 
 12950 ;;  sign            1   32[COMRAM] unsigned char 
 12951 ;; Return value:  Size  Location     Type
 12952 ;;                  4   20[COMRAM] unsigned char 
 12953 ;; Registers used:
 12954 ;;		wreg, status,2, status,0, prodl, prodh
 12955 ;; Tracked objects:
 12956 ;;		On entry : 0/0
 12957 ;;		On exit  : 0/0
 12958 ;;		Unchanged: 0/0
 12959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12960 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12961 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12962 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12963 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12964 ;;Total ram usage:       25 bytes
 12965 ;; Hardware stack levels used: 1
 12966 ;; This function calls:
 12967 ;;		Nothing
 12968 ;; This function is called by:
 12969 ;;		_Voltage_ReadRegister
 12970 ;;		_Current_ReadRegister
 12971 ;;		_efgtoa
 12972 ;; This function uses a non-reentrant model
 12973 ;;
 12974                           
 12975                           	psect	text94
 12976  00E34C                     __ptext94:
 12977                           	callstack 0
 12978  00E34C                     ___flmul:
 12979                           	callstack 26
 12980  00E34C  5018               	movf	(___flmul@b+3)^0,w,c
 12981  00E34E  0B80               	andlw	128
 12982  00E350  6E21               	movwf	___flmul@sign^0,c
 12983  00E352  5018               	movf	(___flmul@b+3)^0,w,c
 12984  00E354  2418               	addwf	(___flmul@b+3)^0,w,c
 12985  00E356  6E27               	movwf	___flmul@bexp^0,c
 12986  00E358  AE17               	btfss	(___flmul@b+2)^0,7,c
 12987  00E35A  EFB1  F071         	goto	u4151
 12988  00E35E  EFB3  F071         	goto	u4150
 12989  00E362                     u4151:
 12990  00E362  EFB4  F071         	goto	l5167
 12991  00E366                     u4150:
 12992  00E366  8027               	bsf	___flmul@bexp^0,0,c
 12993  00E368                     l5167:
 12994  00E368  5027               	movf	___flmul@bexp^0,w,c
 12995  00E36A  B4D8               	btfsc	status,2,c
 12996  00E36C  EFBA  F071         	goto	u4161
 12997  00E370  EFBC  F071         	goto	u4160
 12998  00E374                     u4161:
 12999  00E374  EFCF  F071         	goto	l5175
 13000  00E378                     u4160:
 13001  00E378  2827               	incf	___flmul@bexp^0,w,c
 13002  00E37A  A4D8               	btfss	status,2,c
 13003  00E37C  EFC2  F071         	goto	u4171
 13004  00E380  EFC4  F071         	goto	u4170
 13005  00E384                     u4171:
 13006  00E384  EFCC  F071         	goto	l5173
 13007  00E388                     u4170:
 13008  00E388  0E00               	movlw	0
 13009  00E38A  6E15               	movwf	___flmul@b^0,c
 13010  00E38C  0E00               	movlw	0
 13011  00E38E  6E16               	movwf	(___flmul@b+1)^0,c
 13012  00E390  0E00               	movlw	0
 13013  00E392  6E17               	movwf	(___flmul@b+2)^0,c
 13014  00E394  0E00               	movlw	0
 13015  00E396  6E18               	movwf	(___flmul@b+3)^0,c
 13016  00E398                     l5173:
 13017  00E398  8E17               	bsf	(___flmul@b+2)^0,7,c
 13018  00E39A  EFD7  F071         	goto	l5177
 13019  00E39E                     l5175:
 13020  00E39E  0E00               	movlw	0
 13021  00E3A0  6E15               	movwf	___flmul@b^0,c
 13022  00E3A2  0E00               	movlw	0
 13023  00E3A4  6E16               	movwf	(___flmul@b+1)^0,c
 13024  00E3A6  0E00               	movlw	0
 13025  00E3A8  6E17               	movwf	(___flmul@b+2)^0,c
 13026  00E3AA  0E00               	movlw	0
 13027  00E3AC  6E18               	movwf	(___flmul@b+3)^0,c
 13028  00E3AE                     l5177:
 13029  00E3AE  501C               	movf	(___flmul@a+3)^0,w,c
 13030  00E3B0  0B80               	andlw	128
 13031  00E3B2  1A21               	xorwf	___flmul@sign^0,f,c
 13032  00E3B4  501C               	movf	(___flmul@a+3)^0,w,c
 13033  00E3B6  241C               	addwf	(___flmul@a+3)^0,w,c
 13034  00E3B8  6E26               	movwf	___flmul@aexp^0,c
 13035  00E3BA  AE1B               	btfss	(___flmul@a+2)^0,7,c
 13036  00E3BC  EFE2  F071         	goto	u4181
 13037  00E3C0  EFE4  F071         	goto	u4180
 13038  00E3C4                     u4181:
 13039  00E3C4  EFE5  F071         	goto	l5185
 13040  00E3C8                     u4180:
 13041  00E3C8  8026               	bsf	___flmul@aexp^0,0,c
 13042  00E3CA                     l5185:
 13043  00E3CA  5026               	movf	___flmul@aexp^0,w,c
 13044  00E3CC  B4D8               	btfsc	status,2,c
 13045  00E3CE  EFEB  F071         	goto	u4191
 13046  00E3D2  EFED  F071         	goto	u4190
 13047  00E3D6                     u4191:
 13048  00E3D6  EF00  F072         	goto	l5193
 13049  00E3DA                     u4190:
 13050  00E3DA  2826               	incf	___flmul@aexp^0,w,c
 13051  00E3DC  A4D8               	btfss	status,2,c
 13052  00E3DE  EFF3  F071         	goto	u4201
 13053  00E3E2  EFF5  F071         	goto	u4200
 13054  00E3E6                     u4201:
 13055  00E3E6  EFFD  F071         	goto	l5191
 13056  00E3EA                     u4200:
 13057  00E3EA  0E00               	movlw	0
 13058  00E3EC  6E19               	movwf	___flmul@a^0,c
 13059  00E3EE  0E00               	movlw	0
 13060  00E3F0  6E1A               	movwf	(___flmul@a+1)^0,c
 13061  00E3F2  0E00               	movlw	0
 13062  00E3F4  6E1B               	movwf	(___flmul@a+2)^0,c
 13063  00E3F6  0E00               	movlw	0
 13064  00E3F8  6E1C               	movwf	(___flmul@a+3)^0,c
 13065  00E3FA                     l5191:
 13066  00E3FA  8E1B               	bsf	(___flmul@a+2)^0,7,c
 13067  00E3FC  EF08  F072         	goto	l1475
 13068  00E400                     l5193:
 13069  00E400  0E00               	movlw	0
 13070  00E402  6E19               	movwf	___flmul@a^0,c
 13071  00E404  0E00               	movlw	0
 13072  00E406  6E1A               	movwf	(___flmul@a+1)^0,c
 13073  00E408  0E00               	movlw	0
 13074  00E40A  6E1B               	movwf	(___flmul@a+2)^0,c
 13075  00E40C  0E00               	movlw	0
 13076  00E40E  6E1C               	movwf	(___flmul@a+3)^0,c
 13077  00E410                     l1475:
 13078  00E410  5026               	movf	___flmul@aexp^0,w,c
 13079  00E412  B4D8               	btfsc	status,2,c
 13080  00E414  EF0E  F072         	goto	u4211
 13081  00E418  EF10  F072         	goto	u4210
 13082  00E41C                     u4211:
 13083  00E41C  EF18  F072         	goto	l5197
 13084  00E420                     u4210:
 13085  00E420  5027               	movf	___flmul@bexp^0,w,c
 13086  00E422  A4D8               	btfss	status,2,c
 13087  00E424  EF16  F072         	goto	u4221
 13088  00E428  EF18  F072         	goto	u4220
 13089  00E42C                     u4221:
 13090  00E42C  EF22  F072         	goto	l5201
 13091  00E430                     u4220:
 13092  00E430                     l5197:
 13093  00E430  0E00               	movlw	0
 13094  00E432  6E15               	movwf	?___flmul^0,c
 13095  00E434  0E00               	movlw	0
 13096  00E436  6E16               	movwf	(?___flmul+1)^0,c
 13097  00E438  0E00               	movlw	0
 13098  00E43A  6E17               	movwf	(?___flmul+2)^0,c
 13099  00E43C  0E00               	movlw	0
 13100  00E43E  6E18               	movwf	(?___flmul+3)^0,c
 13101  00E440  EFBA  F073         	goto	l1479
 13102  00E444                     l5201:
 13103  00E444  501B               	movf	(___flmul@a+2)^0,w,c
 13104  00E446  0215               	mulwf	___flmul@b^0,c
 13105  00E448  CFF3 F02C          	movff	prodl,___flmul@temp
 13106  00E44C  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13107  00E450  502C               	movf	___flmul@temp^0,w,c
 13108  00E452  6E22               	movwf	___flmul@grs^0,c
 13109  00E454  6A23               	clrf	(___flmul@grs+1)^0,c
 13110  00E456  6A24               	clrf	(___flmul@grs+2)^0,c
 13111  00E458  6A25               	clrf	(___flmul@grs+3)^0,c
 13112  00E45A  502D               	movf	(___flmul@temp+1)^0,w,c
 13113  00E45C  6E28               	movwf	___flmul@prod^0,c
 13114  00E45E  6A29               	clrf	(___flmul@prod+1)^0,c
 13115  00E460  6A2A               	clrf	(___flmul@prod+2)^0,c
 13116  00E462  6A2B               	clrf	(___flmul@prod+3)^0,c
 13117  00E464  501A               	movf	(___flmul@a+1)^0,w,c
 13118  00E466  0216               	mulwf	(___flmul@b+1)^0,c
 13119  00E468  CFF3 F02C          	movff	prodl,___flmul@temp
 13120  00E46C  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13121  00E470  502C               	movf	___flmul@temp^0,w,c
 13122  00E472  2622               	addwf	___flmul@grs^0,f,c
 13123  00E474  0E00               	movlw	0
 13124  00E476  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13125  00E478  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13126  00E47A  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13127  00E47C  502D               	movf	(___flmul@temp+1)^0,w,c
 13128  00E47E  2628               	addwf	___flmul@prod^0,f,c
 13129  00E480  0E00               	movlw	0
 13130  00E482  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13131  00E484  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13132  00E486  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13133  00E488  5019               	movf	___flmul@a^0,w,c
 13134  00E48A  0217               	mulwf	(___flmul@b+2)^0,c
 13135  00E48C  CFF3 F02C          	movff	prodl,___flmul@temp
 13136  00E490  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13137  00E494  502C               	movf	___flmul@temp^0,w,c
 13138  00E496  2622               	addwf	___flmul@grs^0,f,c
 13139  00E498  0E00               	movlw	0
 13140  00E49A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13141  00E49C  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13142  00E49E  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13143  00E4A0  502D               	movf	(___flmul@temp+1)^0,w,c
 13144  00E4A2  2628               	addwf	___flmul@prod^0,f,c
 13145  00E4A4  0E00               	movlw	0
 13146  00E4A6  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13147  00E4A8  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13148  00E4AA  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13149  00E4AC  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13150  00E4B0  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13151  00E4B4  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13152  00E4B8  6A22               	clrf	___flmul@grs^0,c
 13153  00E4BA  5019               	movf	___flmul@a^0,w,c
 13154  00E4BC  0216               	mulwf	(___flmul@b+1)^0,c
 13155  00E4BE  CFF3 F02C          	movff	prodl,___flmul@temp
 13156  00E4C2  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13157  00E4C6  502C               	movf	___flmul@temp^0,w,c
 13158  00E4C8  2622               	addwf	___flmul@grs^0,f,c
 13159  00E4CA  502D               	movf	(___flmul@temp+1)^0,w,c
 13160  00E4CC  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13161  00E4CE  0E00               	movlw	0
 13162  00E4D0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13163  00E4D2  0E00               	movlw	0
 13164  00E4D4  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13165  00E4D6  501A               	movf	(___flmul@a+1)^0,w,c
 13166  00E4D8  0215               	mulwf	___flmul@b^0,c
 13167  00E4DA  CFF3 F02C          	movff	prodl,___flmul@temp
 13168  00E4DE  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13169  00E4E2  502C               	movf	___flmul@temp^0,w,c
 13170  00E4E4  2622               	addwf	___flmul@grs^0,f,c
 13171  00E4E6  502D               	movf	(___flmul@temp+1)^0,w,c
 13172  00E4E8  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13173  00E4EA  0E00               	movlw	0
 13174  00E4EC  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13175  00E4EE  0E00               	movlw	0
 13176  00E4F0  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13177  00E4F2  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13178  00E4F6  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13179  00E4FA  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13180  00E4FE  6A22               	clrf	___flmul@grs^0,c
 13181  00E500  5019               	movf	___flmul@a^0,w,c
 13182  00E502  0215               	mulwf	___flmul@b^0,c
 13183  00E504  CFF3 F02C          	movff	prodl,___flmul@temp
 13184  00E508  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13185  00E50C  502C               	movf	___flmul@temp^0,w,c
 13186  00E50E  2622               	addwf	___flmul@grs^0,f,c
 13187  00E510  502D               	movf	(___flmul@temp+1)^0,w,c
 13188  00E512  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13189  00E514  0E00               	movlw	0
 13190  00E516  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13191  00E518  0E00               	movlw	0
 13192  00E51A  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13193  00E51C  501B               	movf	(___flmul@a+2)^0,w,c
 13194  00E51E  0216               	mulwf	(___flmul@b+1)^0,c
 13195  00E520  CFF3 F02C          	movff	prodl,___flmul@temp
 13196  00E524  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13197  00E528  502C               	movf	___flmul@temp^0,w,c
 13198  00E52A  2628               	addwf	___flmul@prod^0,f,c
 13199  00E52C  502D               	movf	(___flmul@temp+1)^0,w,c
 13200  00E52E  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13201  00E530  0E00               	movlw	0
 13202  00E532  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13203  00E534  0E00               	movlw	0
 13204  00E536  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13205  00E538  501A               	movf	(___flmul@a+1)^0,w,c
 13206  00E53A  0217               	mulwf	(___flmul@b+2)^0,c
 13207  00E53C  CFF3 F02C          	movff	prodl,___flmul@temp
 13208  00E540  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13209  00E544  502C               	movf	___flmul@temp^0,w,c
 13210  00E546  2628               	addwf	___flmul@prod^0,f,c
 13211  00E548  502D               	movf	(___flmul@temp+1)^0,w,c
 13212  00E54A  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13213  00E54C  0E00               	movlw	0
 13214  00E54E  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13215  00E550  0E00               	movlw	0
 13216  00E552  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13217  00E554  501B               	movf	(___flmul@a+2)^0,w,c
 13218  00E556  0217               	mulwf	(___flmul@b+2)^0,c
 13219  00E558  CFF3 F02C          	movff	prodl,___flmul@temp
 13220  00E55C  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13221  00E560  502C               	movf	___flmul@temp^0,w,c
 13222  00E562  6E1D               	movwf	??___flmul^0,c
 13223  00E564  502D               	movf	(___flmul@temp+1)^0,w,c
 13224  00E566  6E1E               	movwf	(??___flmul+1)^0,c
 13225  00E568  6A1F               	clrf	(??___flmul+2)^0,c
 13226  00E56A  6A20               	clrf	(??___flmul+3)^0,c
 13227  00E56C  C01F  F020         	movff	??___flmul+2,??___flmul+3
 13228  00E570  C01E  F01F         	movff	??___flmul+1,??___flmul+2
 13229  00E574  C01D  F01E         	movff	??___flmul,??___flmul+1
 13230  00E578  6A1D               	clrf	??___flmul^0,c
 13231  00E57A  501D               	movf	??___flmul^0,w,c
 13232  00E57C  2628               	addwf	___flmul@prod^0,f,c
 13233  00E57E  501E               	movf	(??___flmul+1)^0,w,c
 13234  00E580  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13235  00E582  501F               	movf	(??___flmul+2)^0,w,c
 13236  00E584  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13237  00E586  5020               	movf	(??___flmul+3)^0,w,c
 13238  00E588  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13239  00E58A  C022  F01D         	movff	___flmul@grs,??___flmul
 13240  00E58E  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
 13241  00E592  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
 13242  00E596  C025  F020         	movff	___flmul@grs+3,??___flmul+3
 13243  00E59A  0E19               	movlw	25
 13244  00E59C  EFD5  F072         	goto	u4230
 13245  00E5A0                     u4235:
 13246  00E5A0  90D8               	bcf	status,0,c
 13247  00E5A2  3220               	rrcf	(??___flmul+3)^0,f,c
 13248  00E5A4  321F               	rrcf	(??___flmul+2)^0,f,c
 13249  00E5A6  321E               	rrcf	(??___flmul+1)^0,f,c
 13250  00E5A8  321D               	rrcf	??___flmul^0,f,c
 13251  00E5AA                     u4230:
 13252  00E5AA  2EE8               	decfsz	wreg,f,c
 13253  00E5AC  EFD0  F072         	goto	u4235
 13254  00E5B0  501D               	movf	??___flmul^0,w,c
 13255  00E5B2  2628               	addwf	___flmul@prod^0,f,c
 13256  00E5B4  501E               	movf	(??___flmul+1)^0,w,c
 13257  00E5B6  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13258  00E5B8  501F               	movf	(??___flmul+2)^0,w,c
 13259  00E5BA  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13260  00E5BC  5020               	movf	(??___flmul+3)^0,w,c
 13261  00E5BE  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13262  00E5C0  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13263  00E5C4  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13264  00E5C8  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13265  00E5CC  6A22               	clrf	___flmul@grs^0,c
 13266  00E5CE  5026               	movf	___flmul@aexp^0,w,c
 13267  00E5D0  C027  F01D         	movff	___flmul@bexp,??___flmul
 13268  00E5D4  6A1E               	clrf	(??___flmul+1)^0,c
 13269  00E5D6  261D               	addwf	??___flmul^0,f,c
 13270  00E5D8  0E00               	movlw	0
 13271  00E5DA  221E               	addwfc	(??___flmul+1)^0,f,c
 13272  00E5DC  0E82               	movlw	130
 13273  00E5DE  241D               	addwf	??___flmul^0,w,c
 13274  00E5E0  6E2C               	movwf	___flmul@temp^0,c
 13275  00E5E2  0EFF               	movlw	255
 13276  00E5E4  201E               	addwfc	(??___flmul+1)^0,w,c
 13277  00E5E6  6E2D               	movwf	(___flmul@temp+1)^0,c
 13278  00E5E8  EF0B  F073         	goto	l5249
 13279  00E5EC                     l5243:
 13280  00E5EC  90D8               	bcf	status,0,c
 13281  00E5EE  3628               	rlcf	___flmul@prod^0,f,c
 13282  00E5F0  3629               	rlcf	(___flmul@prod+1)^0,f,c
 13283  00E5F2  362A               	rlcf	(___flmul@prod+2)^0,f,c
 13284  00E5F4  362B               	rlcf	(___flmul@prod+3)^0,f,c
 13285  00E5F6  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13286  00E5F8  EF00  F073         	goto	u4241
 13287  00E5FC  EF02  F073         	goto	u4240
 13288  00E600                     u4241:
 13289  00E600  EF03  F073         	goto	l1482
 13290  00E604                     u4240:
 13291  00E604  8028               	bsf	___flmul@prod^0,0,c
 13292  00E606                     l1482:
 13293  00E606  90D8               	bcf	status,0,c
 13294  00E608  3622               	rlcf	___flmul@grs^0,f,c
 13295  00E60A  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13296  00E60C  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13297  00E60E  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13298  00E610  062C               	decf	___flmul@temp^0,f,c
 13299  00E612  A0D8               	btfss	status,0,c
 13300  00E614  062D               	decf	(___flmul@temp+1)^0,f,c
 13301  00E616                     l5249:
 13302  00E616  AE2A               	btfss	(___flmul@prod+2)^0,7,c
 13303  00E618  EF10  F073         	goto	u4251
 13304  00E61C  EF12  F073         	goto	u4250
 13305  00E620                     u4251:
 13306  00E620  EFF6  F072         	goto	l5243
 13307  00E624                     u4250:
 13308  00E624  0E00               	movlw	0
 13309  00E626  6E26               	movwf	___flmul@aexp^0,c
 13310  00E628  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13311  00E62A  EF19  F073         	goto	u4261
 13312  00E62E  EF1B  F073         	goto	u4260
 13313  00E632                     u4261:
 13314  00E632  EF3F  F073         	goto	l1484
 13315  00E636                     u4260:
 13316  00E636  0EFF               	movlw	255
 13317  00E638  1422               	andwf	___flmul@grs^0,w,c
 13318  00E63A  6E1D               	movwf	??___flmul^0,c
 13319  00E63C  0EFF               	movlw	255
 13320  00E63E  1423               	andwf	(___flmul@grs+1)^0,w,c
 13321  00E640  6E1E               	movwf	(??___flmul+1)^0,c
 13322  00E642  0EFF               	movlw	255
 13323  00E644  1424               	andwf	(___flmul@grs+2)^0,w,c
 13324  00E646  6E1F               	movwf	(??___flmul+2)^0,c
 13325  00E648  0E7F               	movlw	127
 13326  00E64A  1425               	andwf	(___flmul@grs+3)^0,w,c
 13327  00E64C  6E20               	movwf	(??___flmul+3)^0,c
 13328  00E64E  501D               	movf	??___flmul^0,w,c
 13329  00E650  101E               	iorwf	(??___flmul+1)^0,w,c
 13330  00E652  101F               	iorwf	(??___flmul+2)^0,w,c
 13331  00E654  1020               	iorwf	(??___flmul+3)^0,w,c
 13332  00E656  B4D8               	btfsc	status,2,c
 13333  00E658  EF30  F073         	goto	u4271
 13334  00E65C  EF32  F073         	goto	u4270
 13335  00E660                     u4271:
 13336  00E660  EF36  F073         	goto	l1485
 13337  00E664                     u4270:
 13338  00E664                     l5257:
 13339  00E664  0E01               	movlw	1
 13340  00E666  6E26               	movwf	___flmul@aexp^0,c
 13341  00E668  EF3F  F073         	goto	l1484
 13342  00E66C                     l1485:
 13343  00E66C  A028               	btfss	___flmul@prod^0,0,c
 13344  00E66E  EF3B  F073         	goto	u4281
 13345  00E672  EF3D  F073         	goto	u4280
 13346  00E676                     u4281:
 13347  00E676  EF3F  F073         	goto	l1484
 13348  00E67A                     u4280:
 13349  00E67A  EF32  F073         	goto	l5257
 13350  00E67E                     l1484:
 13351  00E67E  5026               	movf	___flmul@aexp^0,w,c
 13352  00E680  B4D8               	btfsc	status,2,c
 13353  00E682  EF45  F073         	goto	u4291
 13354  00E686  EF47  F073         	goto	u4290
 13355  00E68A                     u4291:
 13356  00E68A  EF6B  F073         	goto	l5269
 13357  00E68E                     u4290:
 13358  00E68E  0E01               	movlw	1
 13359  00E690  2628               	addwf	___flmul@prod^0,f,c
 13360  00E692  0E00               	movlw	0
 13361  00E694  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13362  00E696  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13363  00E698  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13364  00E69A  A02B               	btfss	(___flmul@prod+3)^0,0,c
 13365  00E69C  EF52  F073         	goto	u4301
 13366  00E6A0  EF54  F073         	goto	u4300
 13367  00E6A4                     u4301:
 13368  00E6A4  EF6B  F073         	goto	l5269
 13369  00E6A8                     u4300:
 13370  00E6A8  C028  F01D         	movff	___flmul@prod,??___flmul
 13371  00E6AC  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
 13372  00E6B0  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
 13373  00E6B4  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
 13374  00E6B8  3420               	rlcf	(??___flmul+3)^0,w,c
 13375  00E6BA  3220               	rrcf	(??___flmul+3)^0,f,c
 13376  00E6BC  321F               	rrcf	(??___flmul+2)^0,f,c
 13377  00E6BE  321E               	rrcf	(??___flmul+1)^0,f,c
 13378  00E6C0  321D               	rrcf	??___flmul^0,f,c
 13379  00E6C2  C01D  F028         	movff	??___flmul,___flmul@prod
 13380  00E6C6  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
 13381  00E6CA  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
 13382  00E6CE  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
 13383  00E6D2  4A2C               	infsnz	___flmul@temp^0,f,c
 13384  00E6D4  2A2D               	incf	(___flmul@temp+1)^0,f,c
 13385  00E6D6                     l5269:
 13386  00E6D6  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
 13387  00E6D8  EF76  F073         	goto	u4311
 13388  00E6DC  502D               	movf	(___flmul@temp+1)^0,w,c
 13389  00E6DE  E108               	bnz	u4310
 13390  00E6E0  282C               	incf	___flmul@temp^0,w,c
 13391  00E6E2  A0D8               	btfss	status,0,c
 13392  00E6E4  EF76  F073         	goto	u4311
 13393  00E6E8  EF78  F073         	goto	u4310
 13394  00E6EC                     u4311:
 13395  00E6EC  EF82  F073         	goto	l5273
 13396  00E6F0                     u4310:
 13397  00E6F0  0E00               	movlw	0
 13398  00E6F2  6E28               	movwf	___flmul@prod^0,c
 13399  00E6F4  0E00               	movlw	0
 13400  00E6F6  6E29               	movwf	(___flmul@prod+1)^0,c
 13401  00E6F8  0E80               	movlw	128
 13402  00E6FA  6E2A               	movwf	(___flmul@prod+2)^0,c
 13403  00E6FC  0E7F               	movlw	127
 13404  00E6FE  6E2B               	movwf	(___flmul@prod+3)^0,c
 13405  00E700  EFB0  F073         	goto	l5285
 13406  00E704                     l5273:
 13407  00E704  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
 13408  00E706  EF8F  F073         	goto	u4320
 13409  00E70A  502D               	movf	(___flmul@temp+1)^0,w,c
 13410  00E70C  E106               	bnz	u4321
 13411  00E70E  042C               	decf	___flmul@temp^0,w,c
 13412  00E710  B0D8               	btfsc	status,0,c
 13413  00E712  EF8D  F073         	goto	u4321
 13414  00E716  EF8F  F073         	goto	u4320
 13415  00E71A                     u4321:
 13416  00E71A  EF9B  F073         	goto	l1492
 13417  00E71E                     u4320:
 13418  00E71E  0E00               	movlw	0
 13419  00E720  6E28               	movwf	___flmul@prod^0,c
 13420  00E722  0E00               	movlw	0
 13421  00E724  6E29               	movwf	(___flmul@prod+1)^0,c
 13422  00E726  0E00               	movlw	0
 13423  00E728  6E2A               	movwf	(___flmul@prod+2)^0,c
 13424  00E72A  0E00               	movlw	0
 13425  00E72C  6E2B               	movwf	(___flmul@prod+3)^0,c
 13426  00E72E  0E00               	movlw	0
 13427  00E730  6E21               	movwf	___flmul@sign^0,c
 13428  00E732  EFB0  F073         	goto	l5285
 13429  00E736                     l1492:
 13430  00E736  C02C  F027         	movff	___flmul@temp,___flmul@bexp
 13431  00E73A  0EFF               	movlw	255
 13432  00E73C  1628               	andwf	___flmul@prod^0,f,c
 13433  00E73E  0EFF               	movlw	255
 13434  00E740  1629               	andwf	(___flmul@prod+1)^0,f,c
 13435  00E742  0E7F               	movlw	127
 13436  00E744  162A               	andwf	(___flmul@prod+2)^0,f,c
 13437  00E746  0E00               	movlw	0
 13438  00E748  162B               	andwf	(___flmul@prod+3)^0,f,c
 13439  00E74A  A027               	btfss	___flmul@bexp^0,0,c
 13440  00E74C  EFAA  F073         	goto	u4331
 13441  00E750  EFAC  F073         	goto	u4330
 13442  00E754                     u4331:
 13443  00E754  EFAD  F073         	goto	l5283
 13444  00E758                     u4330:
 13445  00E758  8E2A               	bsf	(___flmul@prod+2)^0,7,c
 13446  00E75A                     l5283:
 13447  00E75A  90D8               	bcf	status,0,c
 13448  00E75C  3027               	rrcf	___flmul@bexp^0,w,c
 13449  00E75E  6E2B               	movwf	(___flmul@prod+3)^0,c
 13450  00E760                     l5285:
 13451  00E760  5021               	movf	___flmul@sign^0,w,c
 13452  00E762  122B               	iorwf	(___flmul@prod+3)^0,f,c
 13453  00E764  C028  F015         	movff	___flmul@prod,?___flmul
 13454  00E768  C029  F016         	movff	___flmul@prod+1,?___flmul+1
 13455  00E76C  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
 13456  00E770  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
 13457  00E774                     l1479:
 13458  00E774  0012               	return		;funcret
 13459  00E776                     __end_of___flmul:
 13460                           	callstack 0
 13461                           
 13462 ;; *************** function ___fldiv *****************
 13463 ;; Defined at:
 13464 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 13465 ;; Parameters:    Size  Location     Type
 13466 ;;  b               4    0[COMRAM] unsigned char 
 13467 ;;  a               4    4[COMRAM] unsigned char 
 13468 ;; Auto vars:     Size  Location     Type
 13469 ;;  grs             4   19[COMRAM] unsigned long 
 13470 ;;  rem             4   12[COMRAM] unsigned long 
 13471 ;;  new_exp         2   17[COMRAM] short 
 13472 ;;  aexp            1   24[COMRAM] unsigned char 
 13473 ;;  bexp            1   23[COMRAM] unsigned char 
 13474 ;;  sign            1   16[COMRAM] unsigned char 
 13475 ;; Return value:  Size  Location     Type
 13476 ;;                  4    0[COMRAM] unsigned char 
 13477 ;; Registers used:
 13478 ;;		wreg, status,2, status,0
 13479 ;; Tracked objects:
 13480 ;;		On entry : 0/0
 13481 ;;		On exit  : 0/0
 13482 ;;		Unchanged: 0/0
 13483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13484 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13485 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13487 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13488 ;;Total ram usage:       25 bytes
 13489 ;; Hardware stack levels used: 1
 13490 ;; This function calls:
 13491 ;;		Nothing
 13492 ;; This function is called by:
 13493 ;;		_Voltage_ReadRegister
 13494 ;;		_Current_ReadRegister
 13495 ;;		_Power_ReadRegister
 13496 ;;		_efgtoa
 13497 ;; This function uses a non-reentrant model
 13498 ;;
 13499                           
 13500                           	psect	text95
 13501  00DFB2                     __ptext95:
 13502                           	callstack 0
 13503  00DFB2                     ___fldiv:
 13504                           	callstack 26
 13505  00DFB2  5004               	movf	(___fldiv@b+3)^0,w,c
 13506  00DFB4  0B80               	andlw	128
 13507  00DFB6  6E11               	movwf	___fldiv@sign^0,c
 13508  00DFB8  5004               	movf	(___fldiv@b+3)^0,w,c
 13509  00DFBA  2404               	addwf	(___fldiv@b+3)^0,w,c
 13510  00DFBC  6E18               	movwf	___fldiv@bexp^0,c
 13511  00DFBE  AE03               	btfss	(___fldiv@b+2)^0,7,c
 13512  00DFC0  EFE4  F06F         	goto	u3921
 13513  00DFC4  EFE6  F06F         	goto	u3920
 13514  00DFC8                     u3921:
 13515  00DFC8  EFE7  F06F         	goto	l5029
 13516  00DFCC                     u3920:
 13517  00DFCC  8018               	bsf	___fldiv@bexp^0,0,c
 13518  00DFCE                     l5029:
 13519  00DFCE  5018               	movf	___fldiv@bexp^0,w,c
 13520  00DFD0  B4D8               	btfsc	status,2,c
 13521  00DFD2  EFED  F06F         	goto	u3931
 13522  00DFD6  EFEF  F06F         	goto	u3930
 13523  00DFDA                     u3931:
 13524  00DFDA  EF04  F070         	goto	l5039
 13525  00DFDE                     u3930:
 13526  00DFDE  2818               	incf	___fldiv@bexp^0,w,c
 13527  00DFE0  A4D8               	btfss	status,2,c
 13528  00DFE2  EFF5  F06F         	goto	u3941
 13529  00DFE6  EFF7  F06F         	goto	u3940
 13530  00DFEA                     u3941:
 13531  00DFEA  EFFF  F06F         	goto	l5035
 13532  00DFEE                     u3940:
 13533  00DFEE  0E00               	movlw	0
 13534  00DFF0  6E01               	movwf	___fldiv@b^0,c
 13535  00DFF2  0E00               	movlw	0
 13536  00DFF4  6E02               	movwf	(___fldiv@b+1)^0,c
 13537  00DFF6  0E00               	movlw	0
 13538  00DFF8  6E03               	movwf	(___fldiv@b+2)^0,c
 13539  00DFFA  0E00               	movlw	0
 13540  00DFFC  6E04               	movwf	(___fldiv@b+3)^0,c
 13541  00DFFE                     l5035:
 13542  00DFFE  8E03               	bsf	(___fldiv@b+2)^0,7,c
 13543  00E000  0E00               	movlw	0
 13544  00E002  6E04               	movwf	(___fldiv@b+3)^0,c
 13545  00E004  EF0C  F070         	goto	l5041
 13546  00E008                     l5039:
 13547  00E008  0E00               	movlw	0
 13548  00E00A  6E01               	movwf	___fldiv@b^0,c
 13549  00E00C  0E00               	movlw	0
 13550  00E00E  6E02               	movwf	(___fldiv@b+1)^0,c
 13551  00E010  0E00               	movlw	0
 13552  00E012  6E03               	movwf	(___fldiv@b+2)^0,c
 13553  00E014  0E00               	movlw	0
 13554  00E016  6E04               	movwf	(___fldiv@b+3)^0,c
 13555  00E018                     l5041:
 13556  00E018  5008               	movf	(___fldiv@a+3)^0,w,c
 13557  00E01A  0B80               	andlw	128
 13558  00E01C  1A11               	xorwf	___fldiv@sign^0,f,c
 13559  00E01E  5008               	movf	(___fldiv@a+3)^0,w,c
 13560  00E020  2408               	addwf	(___fldiv@a+3)^0,w,c
 13561  00E022  6E19               	movwf	___fldiv@aexp^0,c
 13562  00E024  AE07               	btfss	(___fldiv@a+2)^0,7,c
 13563  00E026  EF17  F070         	goto	u3951
 13564  00E02A  EF19  F070         	goto	u3950
 13565  00E02E                     u3951:
 13566  00E02E  EF1A  F070         	goto	l5049
 13567  00E032                     u3950:
 13568  00E032  8019               	bsf	___fldiv@aexp^0,0,c
 13569  00E034                     l5049:
 13570  00E034  5019               	movf	___fldiv@aexp^0,w,c
 13571  00E036  B4D8               	btfsc	status,2,c
 13572  00E038  EF20  F070         	goto	u3961
 13573  00E03C  EF22  F070         	goto	u3960
 13574  00E040                     u3961:
 13575  00E040  EF37  F070         	goto	l5059
 13576  00E044                     u3960:
 13577  00E044  2819               	incf	___fldiv@aexp^0,w,c
 13578  00E046  A4D8               	btfss	status,2,c
 13579  00E048  EF28  F070         	goto	u3971
 13580  00E04C  EF2A  F070         	goto	u3970
 13581  00E050                     u3971:
 13582  00E050  EF32  F070         	goto	l5055
 13583  00E054                     u3970:
 13584  00E054  0E00               	movlw	0
 13585  00E056  6E05               	movwf	___fldiv@a^0,c
 13586  00E058  0E00               	movlw	0
 13587  00E05A  6E06               	movwf	(___fldiv@a+1)^0,c
 13588  00E05C  0E00               	movlw	0
 13589  00E05E  6E07               	movwf	(___fldiv@a+2)^0,c
 13590  00E060  0E00               	movlw	0
 13591  00E062  6E08               	movwf	(___fldiv@a+3)^0,c
 13592  00E064                     l5055:
 13593  00E064  8E07               	bsf	(___fldiv@a+2)^0,7,c
 13594  00E066  0E00               	movlw	0
 13595  00E068  6E08               	movwf	(___fldiv@a+3)^0,c
 13596  00E06A  EF3F  F070         	goto	l5061
 13597  00E06E                     l5059:
 13598  00E06E  0E00               	movlw	0
 13599  00E070  6E05               	movwf	___fldiv@a^0,c
 13600  00E072  0E00               	movlw	0
 13601  00E074  6E06               	movwf	(___fldiv@a+1)^0,c
 13602  00E076  0E00               	movlw	0
 13603  00E078  6E07               	movwf	(___fldiv@a+2)^0,c
 13604  00E07A  0E00               	movlw	0
 13605  00E07C  6E08               	movwf	(___fldiv@a+3)^0,c
 13606  00E07E                     l5061:
 13607  00E07E  5005               	movf	___fldiv@a^0,w,c
 13608  00E080  1006               	iorwf	(___fldiv@a+1)^0,w,c
 13609  00E082  1007               	iorwf	(___fldiv@a+2)^0,w,c
 13610  00E084  1008               	iorwf	(___fldiv@a+3)^0,w,c
 13611  00E086  A4D8               	btfss	status,2,c
 13612  00E088  EF48  F070         	goto	u3981
 13613  00E08C  EF4A  F070         	goto	u3980
 13614  00E090                     u3981:
 13615  00E090  EF62  F070         	goto	l5073
 13616  00E094                     u3980:
 13617  00E094  0E00               	movlw	0
 13618  00E096  6E01               	movwf	___fldiv@b^0,c
 13619  00E098  0E00               	movlw	0
 13620  00E09A  6E02               	movwf	(___fldiv@b+1)^0,c
 13621  00E09C  0E00               	movlw	0
 13622  00E09E  6E03               	movwf	(___fldiv@b+2)^0,c
 13623  00E0A0  0E00               	movlw	0
 13624  00E0A2  6E04               	movwf	(___fldiv@b+3)^0,c
 13625  00E0A4  0E80               	movlw	128
 13626  00E0A6  1203               	iorwf	(___fldiv@b+2)^0,f,c
 13627  00E0A8  0E7F               	movlw	127
 13628  00E0AA  1204               	iorwf	(___fldiv@b+3)^0,f,c
 13629  00E0AC                     l5067:
 13630  00E0AC  5011               	movf	___fldiv@sign^0,w,c
 13631  00E0AE  1204               	iorwf	(___fldiv@b+3)^0,f,c
 13632  00E0B0  C001  F001         	movff	___fldiv@b,?___fldiv
 13633  00E0B4  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
 13634  00E0B8  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
 13635  00E0BC  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
 13636  00E0C0  EFA5  F071         	goto	l1443
 13637  00E0C4                     l5073:
 13638  00E0C4  5018               	movf	___fldiv@bexp^0,w,c
 13639  00E0C6  A4D8               	btfss	status,2,c
 13640  00E0C8  EF68  F070         	goto	u3991
 13641  00E0CC  EF6A  F070         	goto	u3990
 13642  00E0D0                     u3991:
 13643  00E0D0  EF74  F070         	goto	l5081
 13644  00E0D4                     u3990:
 13645  00E0D4  0E00               	movlw	0
 13646  00E0D6  6E01               	movwf	?___fldiv^0,c
 13647  00E0D8  0E00               	movlw	0
 13648  00E0DA  6E02               	movwf	(?___fldiv+1)^0,c
 13649  00E0DC  0E00               	movlw	0
 13650  00E0DE  6E03               	movwf	(?___fldiv+2)^0,c
 13651  00E0E0  0E00               	movlw	0
 13652  00E0E2  6E04               	movwf	(?___fldiv+3)^0,c
 13653  00E0E4  EFA5  F071         	goto	l1443
 13654  00E0E8                     l5081:
 13655  00E0E8  5019               	movf	___fldiv@aexp^0,w,c
 13656  00E0EA  C018  F009         	movff	___fldiv@bexp,??___fldiv
 13657  00E0EE  6A0A               	clrf	(??___fldiv+1)^0,c
 13658  00E0F0  5E09               	subwf	??___fldiv^0,f,c
 13659  00E0F2  0E00               	movlw	0
 13660  00E0F4  5A0A               	subwfb	(??___fldiv+1)^0,f,c
 13661  00E0F6  0E7F               	movlw	127
 13662  00E0F8  2409               	addwf	??___fldiv^0,w,c
 13663  00E0FA  6E12               	movwf	___fldiv@new_exp^0,c
 13664  00E0FC  0E00               	movlw	0
 13665  00E0FE  200A               	addwfc	(??___fldiv+1)^0,w,c
 13666  00E100  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13667  00E102  C001  F00D         	movff	___fldiv@b,___fldiv@rem
 13668  00E106  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
 13669  00E10A  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
 13670  00E10E  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
 13671  00E112  0E00               	movlw	0
 13672  00E114  6E01               	movwf	___fldiv@b^0,c
 13673  00E116  0E00               	movlw	0
 13674  00E118  6E02               	movwf	(___fldiv@b+1)^0,c
 13675  00E11A  0E00               	movlw	0
 13676  00E11C  6E03               	movwf	(___fldiv@b+2)^0,c
 13677  00E11E  0E00               	movlw	0
 13678  00E120  6E04               	movwf	(___fldiv@b+3)^0,c
 13679  00E122  0E00               	movlw	0
 13680  00E124  6E14               	movwf	___fldiv@grs^0,c
 13681  00E126  0E00               	movlw	0
 13682  00E128  6E15               	movwf	(___fldiv@grs+1)^0,c
 13683  00E12A  0E00               	movlw	0
 13684  00E12C  6E16               	movwf	(___fldiv@grs+2)^0,c
 13685  00E12E  0E00               	movlw	0
 13686  00E130  6E17               	movwf	(___fldiv@grs+3)^0,c
 13687  00E132  0E00               	movlw	0
 13688  00E134  6E19               	movwf	___fldiv@aexp^0,c
 13689  00E136  EFD5  F070         	goto	l1445
 13690  00E13A                     l5091:
 13691  00E13A  5019               	movf	___fldiv@aexp^0,w,c
 13692  00E13C  B4D8               	btfsc	status,2,c
 13693  00E13E  EFA3  F070         	goto	u4001
 13694  00E142  EFA5  F070         	goto	u4000
 13695  00E146                     u4001:
 13696  00E146  EFBC  F070         	goto	l5099
 13697  00E14A                     u4000:
 13698  00E14A  90D8               	bcf	status,0,c
 13699  00E14C  360D               	rlcf	___fldiv@rem^0,f,c
 13700  00E14E  360E               	rlcf	(___fldiv@rem+1)^0,f,c
 13701  00E150  360F               	rlcf	(___fldiv@rem+2)^0,f,c
 13702  00E152  3610               	rlcf	(___fldiv@rem+3)^0,f,c
 13703  00E154  90D8               	bcf	status,0,c
 13704  00E156  3601               	rlcf	___fldiv@b^0,f,c
 13705  00E158  3602               	rlcf	(___fldiv@b+1)^0,f,c
 13706  00E15A  3603               	rlcf	(___fldiv@b+2)^0,f,c
 13707  00E15C  3604               	rlcf	(___fldiv@b+3)^0,f,c
 13708  00E15E  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13709  00E160  EFB4  F070         	goto	u4011
 13710  00E164  EFB6  F070         	goto	u4010
 13711  00E168                     u4011:
 13712  00E168  EFB7  F070         	goto	l1448
 13713  00E16C                     u4010:
 13714  00E16C  8001               	bsf	___fldiv@b^0,0,c
 13715  00E16E                     l1448:
 13716  00E16E  90D8               	bcf	status,0,c
 13717  00E170  3614               	rlcf	___fldiv@grs^0,f,c
 13718  00E172  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 13719  00E174  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 13720  00E176  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 13721  00E178                     l5099:
 13722  00E178  5005               	movf	___fldiv@a^0,w,c
 13723  00E17A  5C0D               	subwf	___fldiv@rem^0,w,c
 13724  00E17C  5006               	movf	(___fldiv@a+1)^0,w,c
 13725  00E17E  580E               	subwfb	(___fldiv@rem+1)^0,w,c
 13726  00E180  5007               	movf	(___fldiv@a+2)^0,w,c
 13727  00E182  580F               	subwfb	(___fldiv@rem+2)^0,w,c
 13728  00E184  5008               	movf	(___fldiv@a+3)^0,w,c
 13729  00E186  5810               	subwfb	(___fldiv@rem+3)^0,w,c
 13730  00E188  A0D8               	btfss	status,0,c
 13731  00E18A  EFC9  F070         	goto	u4021
 13732  00E18E  EFCB  F070         	goto	u4020
 13733  00E192                     u4021:
 13734  00E192  EFD4  F070         	goto	l5105
 13735  00E196                     u4020:
 13736  00E196  8C17               	bsf	(___fldiv@grs+3)^0,6,c
 13737  00E198  5005               	movf	___fldiv@a^0,w,c
 13738  00E19A  5E0D               	subwf	___fldiv@rem^0,f,c
 13739  00E19C  5006               	movf	(___fldiv@a+1)^0,w,c
 13740  00E19E  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
 13741  00E1A0  5007               	movf	(___fldiv@a+2)^0,w,c
 13742  00E1A2  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
 13743  00E1A4  5008               	movf	(___fldiv@a+3)^0,w,c
 13744  00E1A6  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
 13745  00E1A8                     l5105:
 13746  00E1A8  2A19               	incf	___fldiv@aexp^0,f,c
 13747  00E1AA                     l1445:
 13748  00E1AA  0E19               	movlw	25
 13749  00E1AC  6419               	cpfsgt	___fldiv@aexp^0,c
 13750  00E1AE  EFDB  F070         	goto	u4031
 13751  00E1B2  EFDD  F070         	goto	u4030
 13752  00E1B6                     u4031:
 13753  00E1B6  EF9D  F070         	goto	l5091
 13754  00E1BA                     u4030:
 13755  00E1BA  500D               	movf	___fldiv@rem^0,w,c
 13756  00E1BC  100E               	iorwf	(___fldiv@rem+1)^0,w,c
 13757  00E1BE  100F               	iorwf	(___fldiv@rem+2)^0,w,c
 13758  00E1C0  1010               	iorwf	(___fldiv@rem+3)^0,w,c
 13759  00E1C2  B4D8               	btfsc	status,2,c
 13760  00E1C4  EFE6  F070         	goto	u4041
 13761  00E1C8  EFE8  F070         	goto	u4040
 13762  00E1CC                     u4041:
 13763  00E1CC  EF00  F071         	goto	l5117
 13764  00E1D0                     u4040:
 13765  00E1D0  8014               	bsf	___fldiv@grs^0,0,c
 13766  00E1D2  EF00  F071         	goto	l5117
 13767  00E1D6                     l5111:
 13768  00E1D6  90D8               	bcf	status,0,c
 13769  00E1D8  3601               	rlcf	___fldiv@b^0,f,c
 13770  00E1DA  3602               	rlcf	(___fldiv@b+1)^0,f,c
 13771  00E1DC  3603               	rlcf	(___fldiv@b+2)^0,f,c
 13772  00E1DE  3604               	rlcf	(___fldiv@b+3)^0,f,c
 13773  00E1E0  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13774  00E1E2  EFF5  F070         	goto	u4051
 13775  00E1E6  EFF7  F070         	goto	u4050
 13776  00E1EA                     u4051:
 13777  00E1EA  EFF8  F070         	goto	l1454
 13778  00E1EE                     u4050:
 13779  00E1EE  8001               	bsf	___fldiv@b^0,0,c
 13780  00E1F0                     l1454:
 13781  00E1F0  90D8               	bcf	status,0,c
 13782  00E1F2  3614               	rlcf	___fldiv@grs^0,f,c
 13783  00E1F4  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 13784  00E1F6  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 13785  00E1F8  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 13786  00E1FA  0612               	decf	___fldiv@new_exp^0,f,c
 13787  00E1FC  A0D8               	btfss	status,0,c
 13788  00E1FE  0613               	decf	(___fldiv@new_exp+1)^0,f,c
 13789  00E200                     l5117:
 13790  00E200  AE03               	btfss	(___fldiv@b+2)^0,7,c
 13791  00E202  EF05  F071         	goto	u4061
 13792  00E206  EF07  F071         	goto	u4060
 13793  00E20A                     u4061:
 13794  00E20A  EFEB  F070         	goto	l5111
 13795  00E20E                     u4060:
 13796  00E20E  0E00               	movlw	0
 13797  00E210  6E19               	movwf	___fldiv@aexp^0,c
 13798  00E212  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13799  00E214  EF0E  F071         	goto	u4071
 13800  00E218  EF10  F071         	goto	u4070
 13801  00E21C                     u4071:
 13802  00E21C  EF34  F071         	goto	l1456
 13803  00E220                     u4070:
 13804  00E220  0EFF               	movlw	255
 13805  00E222  1414               	andwf	___fldiv@grs^0,w,c
 13806  00E224  6E09               	movwf	??___fldiv^0,c
 13807  00E226  0EFF               	movlw	255
 13808  00E228  1415               	andwf	(___fldiv@grs+1)^0,w,c
 13809  00E22A  6E0A               	movwf	(??___fldiv+1)^0,c
 13810  00E22C  0EFF               	movlw	255
 13811  00E22E  1416               	andwf	(___fldiv@grs+2)^0,w,c
 13812  00E230  6E0B               	movwf	(??___fldiv+2)^0,c
 13813  00E232  0E7F               	movlw	127
 13814  00E234  1417               	andwf	(___fldiv@grs+3)^0,w,c
 13815  00E236  6E0C               	movwf	(??___fldiv+3)^0,c
 13816  00E238  5009               	movf	??___fldiv^0,w,c
 13817  00E23A  100A               	iorwf	(??___fldiv+1)^0,w,c
 13818  00E23C  100B               	iorwf	(??___fldiv+2)^0,w,c
 13819  00E23E  100C               	iorwf	(??___fldiv+3)^0,w,c
 13820  00E240  B4D8               	btfsc	status,2,c
 13821  00E242  EF25  F071         	goto	u4081
 13822  00E246  EF27  F071         	goto	u4080
 13823  00E24A                     u4081:
 13824  00E24A  EF2B  F071         	goto	l1457
 13825  00E24E                     u4080:
 13826  00E24E                     l5125:
 13827  00E24E  0E01               	movlw	1
 13828  00E250  6E19               	movwf	___fldiv@aexp^0,c
 13829  00E252  EF34  F071         	goto	l1456
 13830  00E256                     l1457:
 13831  00E256  A001               	btfss	___fldiv@b^0,0,c
 13832  00E258  EF30  F071         	goto	u4091
 13833  00E25C  EF32  F071         	goto	u4090
 13834  00E260                     u4091:
 13835  00E260  EF34  F071         	goto	l1456
 13836  00E264                     u4090:
 13837  00E264  EF27  F071         	goto	l5125
 13838  00E268                     l1456:
 13839  00E268  5019               	movf	___fldiv@aexp^0,w,c
 13840  00E26A  B4D8               	btfsc	status,2,c
 13841  00E26C  EF3A  F071         	goto	u4101
 13842  00E270  EF3C  F071         	goto	u4100
 13843  00E274                     u4101:
 13844  00E274  EF60  F071         	goto	l5137
 13845  00E278                     u4100:
 13846  00E278  0E01               	movlw	1
 13847  00E27A  2601               	addwf	___fldiv@b^0,f,c
 13848  00E27C  0E00               	movlw	0
 13849  00E27E  2202               	addwfc	(___fldiv@b+1)^0,f,c
 13850  00E280  2203               	addwfc	(___fldiv@b+2)^0,f,c
 13851  00E282  2204               	addwfc	(___fldiv@b+3)^0,f,c
 13852  00E284  A004               	btfss	(___fldiv@b+3)^0,0,c
 13853  00E286  EF47  F071         	goto	u4111
 13854  00E28A  EF49  F071         	goto	u4110
 13855  00E28E                     u4111:
 13856  00E28E  EF60  F071         	goto	l5137
 13857  00E292                     u4110:
 13858  00E292  C001  F009         	movff	___fldiv@b,??___fldiv
 13859  00E296  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
 13860  00E29A  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
 13861  00E29E  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
 13862  00E2A2  340C               	rlcf	(??___fldiv+3)^0,w,c
 13863  00E2A4  320C               	rrcf	(??___fldiv+3)^0,f,c
 13864  00E2A6  320B               	rrcf	(??___fldiv+2)^0,f,c
 13865  00E2A8  320A               	rrcf	(??___fldiv+1)^0,f,c
 13866  00E2AA  3209               	rrcf	??___fldiv^0,f,c
 13867  00E2AC  C009  F001         	movff	??___fldiv,___fldiv@b
 13868  00E2B0  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
 13869  00E2B4  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
 13870  00E2B8  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
 13871  00E2BC  4A12               	infsnz	___fldiv@new_exp^0,f,c
 13872  00E2BE  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
 13873  00E2C0                     l5137:
 13874  00E2C0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13875  00E2C2  EF6B  F071         	goto	u4121
 13876  00E2C6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 13877  00E2C8  E108               	bnz	u4120
 13878  00E2CA  2812               	incf	___fldiv@new_exp^0,w,c
 13879  00E2CC  A0D8               	btfss	status,0,c
 13880  00E2CE  EF6B  F071         	goto	u4121
 13881  00E2D2  EF6D  F071         	goto	u4120
 13882  00E2D6                     u4121:
 13883  00E2D6  EF78  F071         	goto	l5141
 13884  00E2DA                     u4120:
 13885  00E2DA  0E00               	movlw	0
 13886  00E2DC  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13887  00E2DE  6812               	setf	___fldiv@new_exp^0,c
 13888  00E2E0  0E00               	movlw	0
 13889  00E2E2  6E01               	movwf	___fldiv@b^0,c
 13890  00E2E4  0E00               	movlw	0
 13891  00E2E6  6E02               	movwf	(___fldiv@b+1)^0,c
 13892  00E2E8  0E00               	movlw	0
 13893  00E2EA  6E03               	movwf	(___fldiv@b+2)^0,c
 13894  00E2EC  0E00               	movlw	0
 13895  00E2EE  6E04               	movwf	(___fldiv@b+3)^0,c
 13896  00E2F0                     l5141:
 13897  00E2F0  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13898  00E2F2  EF85  F071         	goto	u4130
 13899  00E2F6  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 13900  00E2F8  E106               	bnz	u4131
 13901  00E2FA  0412               	decf	___fldiv@new_exp^0,w,c
 13902  00E2FC  B0D8               	btfsc	status,0,c
 13903  00E2FE  EF83  F071         	goto	u4131
 13904  00E302  EF85  F071         	goto	u4130
 13905  00E306                     u4131:
 13906  00E306  EF93  F071         	goto	l5145
 13907  00E30A                     u4130:
 13908  00E30A  0E00               	movlw	0
 13909  00E30C  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13910  00E30E  0E00               	movlw	0
 13911  00E310  6E12               	movwf	___fldiv@new_exp^0,c
 13912  00E312  0E00               	movlw	0
 13913  00E314  6E01               	movwf	___fldiv@b^0,c
 13914  00E316  0E00               	movlw	0
 13915  00E318  6E02               	movwf	(___fldiv@b+1)^0,c
 13916  00E31A  0E00               	movlw	0
 13917  00E31C  6E03               	movwf	(___fldiv@b+2)^0,c
 13918  00E31E  0E00               	movlw	0
 13919  00E320  6E04               	movwf	(___fldiv@b+3)^0,c
 13920  00E322  0E00               	movlw	0
 13921  00E324  6E11               	movwf	___fldiv@sign^0,c
 13922  00E326                     l5145:
 13923  00E326  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
 13924  00E32A  A018               	btfss	___fldiv@bexp^0,0,c
 13925  00E32C  EF9A  F071         	goto	u4141
 13926  00E330  EF9C  F071         	goto	u4140
 13927  00E334                     u4141:
 13928  00E334  EF9F  F071         	goto	l5151
 13929  00E338                     u4140:
 13930  00E338  8E03               	bsf	(___fldiv@b+2)^0,7,c
 13931  00E33A  EFA0  F071         	goto	l5153
 13932  00E33E                     l5151:
 13933  00E33E  9E03               	bcf	(___fldiv@b+2)^0,7,c
 13934  00E340                     l5153:
 13935  00E340  90D8               	bcf	status,0,c
 13936  00E342  3018               	rrcf	___fldiv@bexp^0,w,c
 13937  00E344  6E04               	movwf	(___fldiv@b+3)^0,c
 13938  00E346  EF56  F070         	goto	l5067
 13939  00E34A                     l1443:
 13940  00E34A  0012               	return		;funcret
 13941  00E34C                     __end_of___fldiv:
 13942                           	callstack 0
 13943                           
 13944 ;; *************** function _I2C_Master_Write *****************
 13945 ;; Defined at:
 13946 ;;		line 100 in file "INA260.c"
 13947 ;; Parameters:    Size  Location     Type
 13948 ;;  d               2    1[COMRAM] unsigned int 
 13949 ;; Auto vars:     Size  Location     Type
 13950 ;;		None
 13951 ;; Return value:  Size  Location     Type
 13952 ;;                  1    wreg      void 
 13953 ;; Registers used:
 13954 ;;		wreg, status,2, status,0, cstack
 13955 ;; Tracked objects:
 13956 ;;		On entry : 0/0
 13957 ;;		On exit  : 0/0
 13958 ;;		Unchanged: 0/0
 13959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13963 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13964 ;;Total ram usage:        2 bytes
 13965 ;; Hardware stack levels used: 1
 13966 ;; Hardware stack levels required when called: 1
 13967 ;; This function calls:
 13968 ;;		_I2C_Master_Wait
 13969 ;; This function is called by:
 13970 ;;		_Voltage_ReadRegister
 13971 ;;		_Current_ReadRegister
 13972 ;;		_Power_ReadRegister
 13973 ;; This function uses a non-reentrant model
 13974 ;;
 13975                           
 13976                           	psect	text96
 13977  00BFF0                     __ptext96:
 13978                           	callstack 0
 13979  00BFF0                     _I2C_Master_Write:
 13980                           	callstack 28
 13981  00BFF0                     
 13982                           ;INA260.c: 100: void I2C_Master_Write(unsigned d);INA260.c: 101: {;INA260.c: 102:   I2C_
      +                          Master_Wait();
 13983  00BFF0  ECC3  F060         	call	_I2C_Master_Wait	;wreg free
 13984  00BFF4                     
 13985                           ;INA260.c: 103:   SSPBUF = d;
 13986  00BFF4  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 13987  00BFF8  0012               	return		;funcret
 13988  00BFFA                     __end_of_I2C_Master_Write:
 13989                           	callstack 0
 13990                           
 13991 ;; *************** function _I2C_Master_Stop *****************
 13992 ;; Defined at:
 13993 ;;		line 94 in file "INA260.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;		None
 13996 ;; Auto vars:     Size  Location     Type
 13997 ;;		None
 13998 ;; Return value:  Size  Location     Type
 13999 ;;                  1    wreg      void 
 14000 ;; Registers used:
 14001 ;;		wreg, status,2, status,0, cstack
 14002 ;; Tracked objects:
 14003 ;;		On entry : 0/0
 14004 ;;		On exit  : 0/0
 14005 ;;		Unchanged: 0/0
 14006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14007 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14008 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14009 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14010 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14011 ;;Total ram usage:        0 bytes
 14012 ;; Hardware stack levels used: 1
 14013 ;; Hardware stack levels required when called: 1
 14014 ;; This function calls:
 14015 ;;		_I2C_Master_Wait
 14016 ;; This function is called by:
 14017 ;;		_Voltage_ReadRegister
 14018 ;;		_Current_ReadRegister
 14019 ;;		_Power_ReadRegister
 14020 ;; This function uses a non-reentrant model
 14021 ;;
 14022                           
 14023                           	psect	text97
 14024  00BFA0                     __ptext97:
 14025                           	callstack 0
 14026  00BFA0                     _I2C_Master_Stop:
 14027                           	callstack 28
 14028  00BFA0                     
 14029                           ;INA260.c: 96:   I2C_Master_Wait();
 14030  00BFA0  ECC3  F060         	call	_I2C_Master_Wait	;wreg free
 14031  00BFA4                     
 14032                           ;INA260.c: 97:   PEN = 1;
 14033  00BFA4  84C5               	bsf	4037,2,c	;volatile
 14034  00BFA6  0012               	return		;funcret
 14035  00BFA8                     __end_of_I2C_Master_Stop:
 14036                           	callstack 0
 14037                           
 14038 ;; *************** function _I2C_Master_Start *****************
 14039 ;; Defined at:
 14040 ;;		line 82 in file "INA260.c"
 14041 ;; Parameters:    Size  Location     Type
 14042 ;;		None
 14043 ;; Auto vars:     Size  Location     Type
 14044 ;;		None
 14045 ;; Return value:  Size  Location     Type
 14046 ;;                  1    wreg      void 
 14047 ;; Registers used:
 14048 ;;		wreg, status,2, status,0, cstack
 14049 ;; Tracked objects:
 14050 ;;		On entry : 0/0
 14051 ;;		On exit  : 0/0
 14052 ;;		Unchanged: 0/0
 14053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14054 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14055 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14056 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14057 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14058 ;;Total ram usage:        0 bytes
 14059 ;; Hardware stack levels used: 1
 14060 ;; Hardware stack levels required when called: 1
 14061 ;; This function calls:
 14062 ;;		_I2C_Master_Wait
 14063 ;; This function is called by:
 14064 ;;		_Voltage_ReadRegister
 14065 ;;		_Current_ReadRegister
 14066 ;;		_Power_ReadRegister
 14067 ;; This function uses a non-reentrant model
 14068 ;;
 14069                           
 14070                           	psect	text98
 14071  00BF98                     __ptext98:
 14072                           	callstack 0
 14073  00BF98                     _I2C_Master_Start:
 14074                           	callstack 28
 14075  00BF98                     
 14076                           ;INA260.c: 84:   I2C_Master_Wait();
 14077  00BF98  ECC3  F060         	call	_I2C_Master_Wait	;wreg free
 14078  00BF9C                     
 14079                           ;INA260.c: 85:   SEN = 1;
 14080  00BF9C  80C5               	bsf	4037,0,c	;volatile
 14081  00BF9E  0012               	return		;funcret
 14082  00BFA0                     __end_of_I2C_Master_Start:
 14083                           	callstack 0
 14084                           
 14085 ;; *************** function _I2C_Master_RepeatedStart *****************
 14086 ;; Defined at:
 14087 ;;		line 88 in file "INA260.c"
 14088 ;; Parameters:    Size  Location     Type
 14089 ;;		None
 14090 ;; Auto vars:     Size  Location     Type
 14091 ;;		None
 14092 ;; Return value:  Size  Location     Type
 14093 ;;                  1    wreg      void 
 14094 ;; Registers used:
 14095 ;;		wreg, status,2, status,0, cstack
 14096 ;; Tracked objects:
 14097 ;;		On entry : 0/0
 14098 ;;		On exit  : 0/0
 14099 ;;		Unchanged: 0/0
 14100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14101 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14104 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14105 ;;Total ram usage:        0 bytes
 14106 ;; Hardware stack levels used: 1
 14107 ;; Hardware stack levels required when called: 1
 14108 ;; This function calls:
 14109 ;;		_I2C_Master_Wait
 14110 ;; This function is called by:
 14111 ;;		_Voltage_ReadRegister
 14112 ;;		_Current_ReadRegister
 14113 ;;		_Power_ReadRegister
 14114 ;; This function uses a non-reentrant model
 14115 ;;
 14116                           
 14117                           	psect	text99
 14118  00BF90                     __ptext99:
 14119                           	callstack 0
 14120  00BF90                     _I2C_Master_RepeatedStart:
 14121                           	callstack 28
 14122  00BF90                     
 14123                           ;INA260.c: 90:   I2C_Master_Wait();
 14124  00BF90  ECC3  F060         	call	_I2C_Master_Wait	;wreg free
 14125  00BF94                     
 14126                           ;INA260.c: 91:   RSEN = 1;
 14127  00BF94  82C5               	bsf	4037,1,c	;volatile
 14128  00BF96  0012               	return		;funcret
 14129  00BF98                     __end_of_I2C_Master_RepeatedStart:
 14130                           	callstack 0
 14131                           
 14132 ;; *************** function _I2C_Master_Read *****************
 14133 ;; Defined at:
 14134 ;;		line 106 in file "INA260.c"
 14135 ;; Parameters:    Size  Location     Type
 14136 ;;  a               2    1[COMRAM] unsigned short 
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;  temp            2    3[COMRAM] unsigned short 
 14139 ;; Return value:  Size  Location     Type
 14140 ;;                  2    1[COMRAM] unsigned short 
 14141 ;; Registers used:
 14142 ;;		wreg, status,2, status,0, cstack
 14143 ;; Tracked objects:
 14144 ;;		On entry : 0/0
 14145 ;;		On exit  : 0/0
 14146 ;;		Unchanged: 0/0
 14147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14148 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14149 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14151 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14152 ;;Total ram usage:        4 bytes
 14153 ;; Hardware stack levels used: 1
 14154 ;; Hardware stack levels required when called: 1
 14155 ;; This function calls:
 14156 ;;		_I2C_Master_Wait
 14157 ;; This function is called by:
 14158 ;;		_Voltage_ReadRegister
 14159 ;;		_Current_ReadRegister
 14160 ;;		_Power_ReadRegister
 14161 ;; This function uses a non-reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text100
 14165  00C334                     __ptext100:
 14166                           	callstack 0
 14167  00C334                     _I2C_Master_Read:
 14168                           	callstack 28
 14169  00C334                     
 14170                           ;INA260.c: 106: unsigned short I2C_Master_Read(unsigned short a);INA260.c: 107: {;INA260
      +                          .c: 108:   unsigned short temp;;INA260.c: 109:   I2C_Master_Wait();
 14171  00C334  ECC3  F060         	call	_I2C_Master_Wait	;wreg free
 14172  00C338                     
 14173                           ;INA260.c: 110:   RCEN = 1;
 14174  00C338  86C5               	bsf	4037,3,c	;volatile
 14175                           
 14176                           ;INA260.c: 111:   I2C_Master_Wait();
 14177  00C33A  ECC3  F060         	call	_I2C_Master_Wait	;wreg free
 14178  00C33E                     
 14179                           ;INA260.c: 112:   temp = SSPBUF;
 14180  00C33E  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
 14181  00C342  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
 14182                           
 14183                           ;INA260.c: 113:   I2C_Master_Wait();
 14184  00C344  ECC3  F060         	call	_I2C_Master_Wait	;wreg free
 14185  00C348                     
 14186                           ;INA260.c: 114:   ACKDT = (a)?0:1;
 14187  00C348  5002               	movf	I2C_Master_Read@a^0,w,c
 14188  00C34A  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
 14189  00C34C  B4D8               	btfsc	status,2,c
 14190  00C34E  EFAB  F061         	goto	u5771
 14191  00C352  EFAE  F061         	goto	u5770
 14192  00C356                     u5771:
 14193  00C356  8AC5               	bsf	4037,5,c	;volatile
 14194  00C358  EFAF  F061         	goto	u5785
 14195  00C35C                     u5770:
 14196  00C35C  9AC5               	bcf	4037,5,c	;volatile
 14197  00C35E                     u5785:
 14198  00C35E                     
 14199                           ;INA260.c: 115:   ACKEN = 1;
 14200  00C35E  88C5               	bsf	4037,4,c	;volatile
 14201  00C360                     
 14202                           ;INA260.c: 116:   return temp;
 14203  00C360  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
 14204  00C364  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
 14205  00C368  0012               	return		;funcret
 14206  00C36A                     __end_of_I2C_Master_Read:
 14207                           	callstack 0
 14208                           
 14209 ;; *************** function _I2C_Master_Wait *****************
 14210 ;; Defined at:
 14211 ;;		line 77 in file "INA260.c"
 14212 ;; Parameters:    Size  Location     Type
 14213 ;;		None
 14214 ;; Auto vars:     Size  Location     Type
 14215 ;;		None
 14216 ;; Return value:  Size  Location     Type
 14217 ;;                  1    wreg      void 
 14218 ;; Registers used:
 14219 ;;		wreg, status,2, status,0
 14220 ;; Tracked objects:
 14221 ;;		On entry : 0/0
 14222 ;;		On exit  : 0/0
 14223 ;;		Unchanged: 0/0
 14224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14227 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14228 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14229 ;;Total ram usage:        1 bytes
 14230 ;; Hardware stack levels used: 1
 14231 ;; This function calls:
 14232 ;;		Nothing
 14233 ;; This function is called by:
 14234 ;;		_I2C_Master_Start
 14235 ;;		_I2C_Master_RepeatedStart
 14236 ;;		_I2C_Master_Stop
 14237 ;;		_I2C_Master_Write
 14238 ;;		_I2C_Master_Read
 14239 ;; This function uses a non-reentrant model
 14240 ;;
 14241                           
 14242                           	psect	text101
 14243  00C186                     __ptext101:
 14244                           	callstack 0
 14245  00C186                     _I2C_Master_Wait:
 14246                           	callstack 28
 14247  00C186                     l837:
 14248  00C186  B4C7               	btfsc	199,2,c	;volatile
 14249  00C188  EFC8  F060         	goto	u5601
 14250  00C18C  EFCA  F060         	goto	u5600
 14251  00C190                     u5601:
 14252  00C190  EFC3  F060         	goto	l837
 14253  00C194                     u5600:
 14254  00C194  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
 14255  00C198  0E1F               	movlw	31
 14256  00C19A  1601               	andwf	??_I2C_Master_Wait^0,f,c
 14257  00C19C  A4D8               	btfss	status,2,c
 14258  00C19E  EFD3  F060         	goto	u5611
 14259  00C1A2  EFD5  F060         	goto	u5610
 14260  00C1A6                     u5611:
 14261  00C1A6  EFC3  F060         	goto	l837
 14262  00C1AA                     u5610:
 14263  00C1AA  0012               	return		;funcret
 14264  00C1AC                     __end_of_I2C_Master_Wait:
 14265                           	callstack 0
 14266                           
 14267                           	psect	text102
 14268  000000                     __ptext102:
 14269                           	callstack 0
 14270  000000                     
 14271                           	psect	rparam
 14272  0000                     
 14273                           	psect	idloc
 14274                           
 14275                           ;Config register IDLOC0 @ 0x200000
 14276                           ;	unspecified, using default values
 14277  200000                     	org	2097152
 14278  200000  FF                 	db	255
 14279                           
 14280                           ;Config register IDLOC1 @ 0x200001
 14281                           ;	unspecified, using default values
 14282  200001                     	org	2097153
 14283  200001  FF                 	db	255
 14284                           
 14285                           ;Config register IDLOC2 @ 0x200002
 14286                           ;	unspecified, using default values
 14287  200002                     	org	2097154
 14288  200002  FF                 	db	255
 14289                           
 14290                           ;Config register IDLOC3 @ 0x200003
 14291                           ;	unspecified, using default values
 14292  200003                     	org	2097155
 14293  200003  FF                 	db	255
 14294                           
 14295                           ;Config register IDLOC4 @ 0x200004
 14296                           ;	unspecified, using default values
 14297  200004                     	org	2097156
 14298  200004  FF                 	db	255
 14299                           
 14300                           ;Config register IDLOC5 @ 0x200005
 14301                           ;	unspecified, using default values
 14302  200005                     	org	2097157
 14303  200005  FF                 	db	255
 14304                           
 14305                           ;Config register IDLOC6 @ 0x200006
 14306                           ;	unspecified, using default values
 14307  200006                     	org	2097158
 14308  200006  FF                 	db	255
 14309                           
 14310                           ;Config register IDLOC7 @ 0x200007
 14311                           ;	unspecified, using default values
 14312  200007                     	org	2097159
 14313  200007  FF                 	db	255
 14314                           
 14315                           	psect	config
 14316                           
 14317                           ;Config register CONFIG1L @ 0x300000
 14318                           ;	VREG Sleep Enable bit
 14319                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 14320                           ;	LF-INTOSC Low-power Enable bit
 14321                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 14322                           ;	SOSC Power Selection and mode Configuration bits
 14323                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 14324                           ;	Extended Instruction Set
 14325                           ;	XINST = OFF, Disabled
 14326  300000                     	org	3145728
 14327  300000  15                 	db	21
 14328                           
 14329                           ;Config register CONFIG1H @ 0x300001
 14330                           ;	Oscillator
 14331                           ;	FOSC = INTIO2, Internal RC oscillator
 14332                           ;	PLL x4 Enable bit
 14333                           ;	PLLCFG = OFF, Disabled
 14334                           ;	Fail-Safe Clock Monitor
 14335                           ;	FCMEN = OFF, Disabled
 14336                           ;	Internal External Oscillator Switch Over Mode
 14337                           ;	IESO = OFF, Disabled
 14338  300001                     	org	3145729
 14339  300001  08                 	db	8
 14340                           
 14341                           ;Config register CONFIG2L @ 0x300002
 14342                           ;	Power Up Timer
 14343                           ;	PWRTEN = OFF, Disabled
 14344                           ;	Brown Out Detect
 14345                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 14346                           ;	Brown-out Reset Voltage bits
 14347                           ;	BORV = 3, 1.8V
 14348                           ;	BORMV Power level
 14349                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 14350  300002                     	org	3145730
 14351  300002  7F                 	db	127
 14352                           
 14353                           ;Config register CONFIG2H @ 0x300003
 14354                           ;	Watchdog Timer
 14355                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 14356                           ;	Watchdog Postscaler
 14357                           ;	WDTPS = 1048576, 1:1048576
 14358  300003                     	org	3145731
 14359  300003  7C                 	db	124
 14360                           
 14361                           ; Padding undefined space
 14362  300004                     	org	3145732
 14363  300004  FF                 	db	255
 14364                           
 14365                           ;Config register CONFIG3H @ 0x300005
 14366                           ;	ECAN Mux bit
 14367                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 14368                           ;	MSSP address masking
 14369                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 14370                           ;	Master Clear Enable
 14371                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 14372  300005                     	org	3145733
 14373  300005  89                 	db	137
 14374                           
 14375                           ;Config register CONFIG4L @ 0x300006
 14376                           ;	Stack Overflow Reset
 14377                           ;	STVREN = ON, Enabled
 14378                           ;	Boot Block Size
 14379                           ;	BBSIZ = BB2K, 2K word Boot Block size
 14380  300006                     	org	3145734
 14381  300006  91                 	db	145
 14382                           
 14383                           ; Padding undefined space
 14384  300007                     	org	3145735
 14385  300007  FF                 	db	255
 14386                           
 14387                           ;Config register CONFIG5L @ 0x300008
 14388                           ;	Code Protect 00800-03FFF
 14389                           ;	CP0 = OFF, Disabled
 14390                           ;	Code Protect 04000-07FFF
 14391                           ;	CP1 = OFF, Disabled
 14392                           ;	Code Protect 08000-0BFFF
 14393                           ;	CP2 = OFF, Disabled
 14394                           ;	Code Protect 0C000-0FFFF
 14395                           ;	CP3 = OFF, Disabled
 14396  300008                     	org	3145736
 14397  300008  0F                 	db	15
 14398                           
 14399                           ;Config register CONFIG5H @ 0x300009
 14400                           ;	Code Protect Boot
 14401                           ;	CPB = OFF, Disabled
 14402                           ;	Data EE Read Protect
 14403                           ;	CPD = OFF, Disabled
 14404  300009                     	org	3145737
 14405  300009  C0                 	db	192
 14406                           
 14407                           ;Config register CONFIG6L @ 0x30000A
 14408                           ;	Table Write Protect 00800-03FFF
 14409                           ;	WRT0 = OFF, Disabled
 14410                           ;	Table Write Protect 04000-07FFF
 14411                           ;	WRT1 = OFF, Disabled
 14412                           ;	Table Write Protect 08000-0BFFF
 14413                           ;	WRT2 = OFF, Disabled
 14414                           ;	Table Write Protect 0C000-0FFFF
 14415                           ;	WRT3 = OFF, Disabled
 14416  30000A                     	org	3145738
 14417  30000A  0F                 	db	15
 14418                           
 14419                           ;Config register CONFIG6H @ 0x30000B
 14420                           ;	Config. Write Protect
 14421                           ;	WRTC = OFF, Disabled
 14422                           ;	Table Write Protect Boot
 14423                           ;	WRTB = OFF, Disabled
 14424                           ;	Data EE Write Protect
 14425                           ;	WRTD = OFF, Disabled
 14426  30000B                     	org	3145739
 14427  30000B  E0                 	db	224
 14428                           
 14429                           ;Config register CONFIG7L @ 0x30000C
 14430                           ;	Table Read Protect 00800-03FFF
 14431                           ;	EBTR0 = OFF, Disabled
 14432                           ;	Table Read Protect 04000-07FFF
 14433                           ;	EBTR1 = OFF, Disabled
 14434                           ;	Table Read Protect 08000-0BFFF
 14435                           ;	EBTR2 = OFF, Disabled
 14436                           ;	Table Read Protect 0C000-0FFFF
 14437                           ;	EBTR3 = OFF, Disabled
 14438  30000C                     	org	3145740
 14439  30000C  0F                 	db	15
 14440                           
 14441                           ;Config register CONFIG7H @ 0x30000D
 14442                           ;	Table Read Protect Boot
 14443                           ;	EBTRB = OFF, Disabled
 14444  30000D                     	org	3145741
 14445  30000D  40                 	db	64
 14446                           tosu	equ	0xFFF
 14447                           tosh	equ	0xFFE
 14448                           tosl	equ	0xFFD
 14449                           stkptr	equ	0xFFC
 14450                           pclatu	equ	0xFFB
 14451                           pclath	equ	0xFFA
 14452                           pcl	equ	0xFF9
 14453                           tblptru	equ	0xFF8
 14454                           tblptrh	equ	0xFF7
 14455                           tblptrl	equ	0xFF6
 14456                           tablat	equ	0xFF5
 14457                           prodh	equ	0xFF4
 14458                           prodl	equ	0xFF3
 14459                           indf0	equ	0xFEF
 14460                           postinc0	equ	0xFEE
 14461                           postdec0	equ	0xFED
 14462                           preinc0	equ	0xFEC
 14463                           plusw0	equ	0xFEB
 14464                           fsr0h	equ	0xFEA
 14465                           fsr0l	equ	0xFE9
 14466                           wreg	equ	0xFE8
 14467                           indf1	equ	0xFE7
 14468                           postinc1	equ	0xFE6
 14469                           postdec1	equ	0xFE5
 14470                           preinc1	equ	0xFE4
 14471                           plusw1	equ	0xFE3
 14472                           fsr1h	equ	0xFE2
 14473                           fsr1l	equ	0xFE1
 14474                           bsr	equ	0xFE0
 14475                           indf2	equ	0xFDF
 14476                           postinc2	equ	0xFDE
 14477                           postdec2	equ	0xFDD
 14478                           preinc2	equ	0xFDC
 14479                           plusw2	equ	0xFDB
 14480                           fsr2h	equ	0xFDA
 14481                           fsr2l	equ	0xFD9
 14482                           status	equ	0xFD8

Data Sizes:
    Strings     119
    Constant    640
    Data        0
    BSS         2309
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     78     143
    BANK1           256      0     196
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2662$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2668$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2674$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2680$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2679	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2674	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2673	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2668	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2667	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2662	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2661	const PTR FTN()enum E12577 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_23(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_18(CODE[4]), STR_17(CODE[4]), STR_14(CODE[4]), STR_13(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2058_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    Oled_WriteString@characters	PTR unsigned char  size(2) Largest target is 21
		 -> STR_12(CODE[3]), STR_11(CODE[11]), STR_10(CODE[3]), STR_9(CODE[11]), 
		 -> STR_8(CODE[3]), STR_7(CODE[9]), STR_6(CODE[18]), power_str(BANK0[6]), 
		 -> current_str(BANK0[6]), voltage_str(BANK0[6]), STR_2(CODE[21]), STR_1(CODE[16]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E12577[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 2
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _Voltage_ReadRegister->___flmul
    _Power_ReadRegister->___fldiv
    _Oled_WriteString->_Oled_WriteCharacter
    _Oled_WriteCharacter->_Oled_Data
    _Oled_SelectPage->_Oled_Command
    _Oled_Init->_Oled_Command
    _Oled_Command->_I2C_WriteNBytes
    _Oled_Clear->_Oled_Data
    _Oled_Data->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_Master_Init->___lldiv
    _Current_ReadRegister->___flmul
    ___xxtofl->___wmul
    ___flmul->___xxtofl
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  425979
                                             93 COMRAM     2     2      0
               _Current_ReadRegister
                     _I2C_Initialize
                    _I2C_Master_Init
                         _Oled_Clear
                          _Oled_Init
                    _Oled_SelectPage
                   _Oled_WriteString
                 _Power_ReadRegister
                  _SYSTEM_Initialize
               _Voltage_ReadRegister
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   31892
                                             62 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   31231
                                             91 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   30859
                                             69 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23608
                                             57 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             45 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3104
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Voltage_ReadRegister                                 9     5      4    7226
                                             45 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_ReadRegister                                   9     5      4    6529
                                             25 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2263
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Oled_WriteString                                     2     0      2   93917
                                             32 COMRAM     2     0      2
                _Oled_WriteCharacter
 ---------------------------------------------------------------------------------
 (2) _Oled_WriteCharacter                                  7     7      0   92960
                                             25 COMRAM     7     7      0
                          _Oled_Data
 ---------------------------------------------------------------------------------
 (1) _Oled_SelectPage                                      2     2      0   92915
                                             25 COMRAM     2     2      0
                       _Oled_Command
 ---------------------------------------------------------------------------------
 (1) _Oled_Init                                            0     0      0   92870
                       _Oled_Command
 ---------------------------------------------------------------------------------
 (2) _Oled_Command                                         3     3      0   92870
                                             22 COMRAM     3     3      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (1) _Oled_Clear                                           2     2      0   92916
                                             25 COMRAM     2     2      0
                          _Oled_Data
 ---------------------------------------------------------------------------------
 (3) _Oled_Data                                            3     3      0   92870
                                             22 COMRAM     3     3      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      5     1      4   92798
                                             17 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              5 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0      46
                                              0 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0   88620
                                             15 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterFsm                                        2     2      0   88574
                                             13 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX                                            2     2      0   22149
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX                                            2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2    4390
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              5 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      5     1      4     914
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        4     0      4    1868
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     488
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Current_ReadRegister                                 9     5      4    7226
                                             45 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     706
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2     501
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Current_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
   _I2C_Initialize
   _I2C_Master_Init
     ___lldiv
   _Oled_Clear
     _Oled_Data
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                 _I2C_DO_RX_NACK_STOP *
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                   _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
   _Oled_Init
     _Oled_Command
       _I2C_WriteNBytes
   _Oled_SelectPage
     _Oled_Command
   _Oled_WriteString
     _Oled_WriteCharacter
       _Oled_Data
   _Power_ReadRegister
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___fldiv
     ___wmul
     ___xxtofl
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Voltage_ReadRegister
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___fldiv
     ___flmul
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     800      35       56.1%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C4       8       76.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      8F       5       89.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2       6        0.0%
DATA                 0      0     9B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 11 23:16:03 2021

             __end_of_Oled_SelectPage C0DE                ??_I2C_DO_SEND_ADR_READ 0001  
         __size_of_I2C_MasterSendNack 0006                    __size_of_I2C_Close 002C  
                        ___fldiv@aexp 0019                          ___fldiv@bexp 0018  
          Current_ReadRegister@temp_c 0036            Current_ReadRegister@temp_d 0034  
                        ___fldiv@sign 0011               ??_I2C_DO_SEND_ADR_WRITE 0002  
                         _SSPSTATbits 000FC7                                    l90 C27C  
                                  l93 C2A8                                    l69 C652  
                                  l96 C2D4                                    l99 C250  
                        ___awdiv@sign 0006                                    _oi 0100  
                 ___wmul@multiplicand 0003                   __size_of_I2C_Poller 001E  
               ??_I2C_DO_SEND_RESTART 0001          __size_of_I2C_MasterOperation 0044  
                                 l102 C486                                   l120 C068  
                                 l117 C002                                   l302 C9F2  
                                 l312 C908         __size_of_I2C_MasterSendTxData 0008  
                                 l321 C046                                   l145 C1F8  
                                 l411 BF72                                   l315 C00E  
                                 l403 C898                                   l324 CECA  
                                 l340 CC76                                   l308 C0FA  
                                 l341 CCE4                                   l414 BF76  
                                 l430 BF7E                                   l318 C036  
                                 l255 C07C                                   l263 C224  
                                 l327 CF02                                   l352 C01A  
                                 l424 C11C                                   l433 BFAE  
                                 l282 C184                                   l442 BF7A  
                                 l427 BF5E                                   l451 C090  
                                 l275 BFEE                                   l259 CAFC  
                                 l291 C0C0                                   l436 BF6A  
                                 l445 BF66                                   l285 C0A8  
                                 l269 C4CA                                   l454 BF8E  
                                 l358 CA6E                                   l382 BFC6  
                                 l710 C13E                                   l391 BFDE  
                                 l472 BF62                                   l448 BF6E  
                                 l376 BFB6                                   l457 BF88  
                                 l385 BFCE                                   l481 C048  
                                 l713 CB9A                                   l394 BFE6  
                                 l475 BF5A                                   l379 BFBE  
                                 l707 C160                                   l388 BFD6  
                                 l732 C300                                   l740 C0DC  
                                 l724 C978                                   l397 C026  
                                 l485 C056                                   l478 BF82  
                                 l831 D524                                   l719 C7CE  
                                 l840 C1AA                                   l834 D324  
                                 l843 BF9E                                   l852 BFF8  
                                 l828 D626                                   l837 C186  
                                 l861 C1D0                                   l846 BF96  
                                 l855 C368                                   l849 BFA6  
                                 l858 C6AE                                   l895 CC3E  
                                 l888 CC2E                                   _IPL FD07  
                                 _PEN 007E2A                                   _SEN 007E28  
                                 _pad CFC8                fp__I2C_DO_RX_NACK_STOP 0000  
              _I2C_MasterWaitForEvent C048                          ___awmod@sign 0006  
                                 prod 000FF3                                   tosl 000FFD  
                                 wreg 000FE8                            _TXSTA1bits 000FAC  
                        ___flmul@aexp 0026                          ___flmul@bexp 0027  
         __end_of_Oled_WriteCharacter C97A          ??_I2C_SetAddressNackCallback 000A  
                        ___flmul@sign 0021                          ___flmul@temp 002C  
                        ___flmul@prod 0028              ??_I2C_CallbackReturnStop 000C  
                        _I2C_DO_RESET C01C                          ___fltol@exp1 000A  
                                l1120 CD8E                                  l1105 CE3E  
                                l1131 D72A               ??_rd2RegCompleteHandler 000C  
                                l1126 D6E4                                  l1135 C40E  
                                l1092 CFC6                                  l1406 EEF6  
                                l1158 D830                                  l1415 EFC6  
                                l1431 C554                                  l1416 EFB4  
                                l1530 DB16                                  l1443 E34A  
                                l1523 DABA                                  l1603 FD04  
                                l1516 DA22                                  l1445 E1AA  
                                l1621 F49A                                  l1454 E1F0  
                                l1390 EDCA                                  l1702 EB32  
                                l1519 DB7E                                  l1391 ED90  
                                l1456 E268                                  l1448 E16E  
                                l1457 E256                                  l1482 E606  
                                l1475 E410                                  l5011 C21E  
                                l5003 C1FA                                  l1539 C5F8  
                                l1492 E736                                  l1484 E67E  
                                l1804 C50E                                  l1580 D00E  
                                l1708 C82A                                  l5101 E196  
                                l1485 E66C                                  l5013 C222  
                                l5005 C1FE                                  l1389 EDDC  
                                l1813 C70C                                  l1709 C832  
                                l1398 F0AC                                  l5111 E1D6  
                                l5103 E198                                  l5031 DFDE  
                                l5023 DFB2                                  l1479 E774  
                                l5007 C20E                                  l1751 D9CA  
                                l1719 D422                                  l1807 BF56  
                                l1583 D050                                  l1823 D232  
                                l1760 DCD4                                  l5121 E212  
                                l5113 E1E0                                  l5105 E1A8  
                                l5041 E018                                  l5033 DFEE  
                                l5025 DFBE                                  l5201 E444  
                                l5009 C212                                  l4401 C27E  
                                l5017 C1AC                                  l1585 D08C  
                                l1833 C764                                  l1649 F8DA  
                                l6001 E99C                                  l5131 E284  
                                l5123 E220                                  l5115 E1EE  
                                l5107 E1BA                                  l5051 E044  
                                l5043 E01E                                  l5035 DFFE  
                                l5027 DFCC                                  l5211 E494  
                                l5203 E450                                  l4403 C292  
                                l4411 C2BE                                  l5019 C1C8  
                                l1819 C39E                                  l6003 E9B4  
                                l6011 EA1E                                  l1748 D9C2  
                                l6101 C360                                  l5141 E2F0  
                                l5133 E292                                  l5125 E24E  
                                l5109 E1D0                                  l5117 E200  
                                l5061 E07E                                  l5053 E054  
                                l5045 E024                                  l5037 E000  
                                l5029 DFCE                                  l5221 E4D6  
                                l5213 E4A0                                  l5205 E45A  
                                l4421 C24E                                  l4405 C2A6  
                                l4413 C2D2                                  l5301 CF16  
                                l1757 DD90                                  l1781 C446  
                                l6021 EB02                                  l6013 EA4C  
                                l6005 E9C2                                  l1838 C76C  
                                l5151 E33E                                  l5143 E30A  
                                l5135 E2BC                                  l5119 E20E  
                                l5063 E094                                  l5055 E064  
                                l5047 E032                                  l5039 E008  
                                l5231 E538                                  l5223 E4E2  
                                l5215 E4AC                                  l5207 E470  
                                l6111 CBAC                                  l4503 C028  
                                l4511 C038                                  l1767 C3D6  
                                l1775 C5A6                                  l5311 CF3C  
                                l5303 CF1E                                  l6031 EB7A  
                                l1695 EBEC                                  l6007 E9F2  
                                l6105 BFA0                                  l5153 E340  
                                l5145 E326                                  l5129 E278  
                                l5137 E2C0                                  l5081 E0E8  
                                l5065 E0A4                                  l5073 E0C4  
                                l5057 E066                                  l5049 E034  
                                l5241 E5CE                                  l5233 E544  
                                l5225 E4F2                                  l5217 E4BA  
                                l5209 E47C                                  l5161 E34C  
                                l6121 CBEE                                  l6113 CBC2  
                                l4417 C226                                  l4409 C2AA  
                                l4425 C448                                  l4433 C07E  
                                l4601 CA08                                  l4505 C02C  
                                l4513 C03C                                  l4441 BFB4  
                                l6201 C2E4                                  l5321 CF74  
                                l5313 CF44                                  l5305 CF22  
                                l5401 D6A4                                  l6033 EB8E  
                                l6017 EABC                                  l6107 BFA4  
                                l5147 E32A                                  l5139 E2DA  
                                l5091 E13A                                  l5083 E102  
                                l5075 E0D4                                  l5067 E0AC  
                                l5059 E06E                                  l5251 E624  
                                l5243 E5EC                                  l5235 E560  
                                l5227 E50C                                  l5219 E4C6  
                                l5171 E388                                  l5163 E358  
                                l6131 D9CE                                  l6123 CC0C  
                                l6115 CBCA                                  l4371 C97C  
                                l4419 C23A                                  l4427 C470  
                                l4611 CA16                                  l4507 C034  
                                l4515 C044                                  l4531 CE68  
                                l4523 CE58                                  l4451 BFC8  
                                l6203 C2E8                                  l6211 C0D6  
                                l6051 C1D2                                  l5331 CFA0  
                                l5323 CF7A                                  l5315 CF56  
                                l5307 CF30                                  l5411 D728  
                                l5403 D6B2                                  l6019 EACE  
                                l6027 EB46                                  l6043 EBB4  
                                l1796 D156                                  l5149 E338  
                                l5093 E14A                                  l5085 E112  
                                l5077 E0D4                                  l5069 E0B0  
                                l5261 E68E                                  l5253 E628  
                                l5245 E5F6                                  l5237 E58A  
                                l5229 E51C                                  l5181 E3BA  
                                l5173 E398                                  l5165 E366  
                                l6133 D9DE                                  l6125 CC1C  
                                l6117 CBD6                                  l6109 CB9C  
                                l6221 C654                                  l4701 BF5C  
                                l4381 C172                                  l4373 C98E  
                                l4429 C484                                  l4461 BF8A  
                                l4437 BFAA                                  l4605 CA0E  
                                l4541 CEE0                                  l4445 BFB8  
                                l4453 BFCC                                  l4621 BFD4  
                                l6061 C146                                  l6205 C0C4  
                                l6213 C76E                                  l6053 C1E2  
                                l5325 CF90                                  l5317 CF5E  
                                l5333 CFA6                                  l5309 CF38  
                                l5341 CD90                                  l5405 D6C4  
                                l5501 D3C4                                  l6045 EBDA  
                                l6029 EB6C                                  l6037 EB9A  
                                ?_pad 0011                                  l5095 E15E  
                                l5087 E122                                  l5271 E6F0  
                                l5263 E69A                                  l5255 E636  
                                l5247 E604                                  l5239 E5C0  
                                l5191 E3FA                                  l5183 E3C8  
                                l5175 E39E                                  l5167 E368  
                                l6151 DAA4                                  l6143 DA5C  
                                l6135 D9EC                                  l6127 CC1E  
                                l6119 CBE4                                  l6223 C65C  
                                l4383 C17A                                  l4375 C9C2  
                                l4391 BF84                                  l4543 CEFA  
                                l4527 CE60                                  l4519 CE40  
                                l4439 BFB0                                  l4447 BFBC  
                                l4471 BFDC                                  l4463 BFE0  
                                l4711 C4A4                                  l4703 C48A  
                                l6063 C14A                                  l6207 C0CA  
                                l6071 C914                                  l6215 C772  
                                l6055 C1F6                                  l6231 D526  
                                l5335 CFB6                                  l5327 CF98  
                                l5319 CF66                                  l5351 CDBC  
                                l5343 CD94                                  l5407 D6D2  
                                l5415 C3D8                                  l5431 D780  
                                l5423 D72C                                  l5503 D3D6  
                                l5511 C6B0                                  l6039 EBA8  
                                l6081 BF9C                                  l5097 E16C  
                                l5089 E132                                  l5281 E758  
                                l5273 E704                                  l5265 E6A8  
                                l5257 E664                                  l5249 E616  
                                l5193 E400                                  l5185 E3CA  
                                l5177 E3AE                                  l5169 E378  
                                l6161 DB24                                  l6153 DAB0  
                                l6145 DA64                                  l6137 DA32  
                                l6129 CC28                                  l6225 C6A6  
                                l4385 C182                                  l4377 C092  
                                l4393 C252                                  l4457 BF7C  
                                l4545 CF00                                  l4537 CE70  
                                l4561 CC70                                  l4553 CC40  
                                l4465 BFE4                                  l4625 C01C  
                                l4641 C848                                  l4633 C834  
                                l4713 C4B4                                  l4721 C4C8  
                                l4705 C48E                                  l6209 C0D0  
                                l6073 C952                                  l6065 C90C  
                                l6217 C798                                  l6057 C058  
                                l6241 D616                                  l6233 D580  
                                l5337 CFBE                                  l5329 CF9A  
                                l5361 CDF4                                  l5353 CDC4  
                                l5345 CDA2                                  l5409 D722  
                                l5417 C3EE                                  l4801 ED2A  
                                l5433 D782                                  l5425 D742  
                                l5513 C6C0                                  l5521 C756  
                                l5601 F146                                  l6091 C334  
                                l6083 BFF0                                  l5099 E178  
                                l5283 E75A                                  l5275 E71E  
                                l5267 E6D2                                  l5195 E420  
                                l5187 E3DA                                  l5179 E3B4  
                                l6171 DB6C                                  l6163 DB26  
                                l6155 DAEC                                  l6147 DA70  
                                l6139 DA48                                  l6251 D4C8  
                                l6227 C6AA                                  l4387 BF68  
                                l4379 C162                                  l4395 C266  
                                l4475 BF78                                  l4483 BF80  
                                l4539 CECE                                  l4571 CC84  
                                l4555 CC4E                                  l4619 BFD0  
                                l4627 C020                                  l4635 C838  
                                l4715 C4BC                                  l4707 C49E  
                                l6059 C142                                  l6075 C956  
                                l6219 C79C                                  l6235 D5C6  
                                l5371 CE2E                                  l5363 CE0A  
                                l5355 CDD6                                  l5347 CDAA  
                                l5419 C3FE                                  l4811 ED88  
                                l4803 ED2E                                  l4731 EC0A  
                                l5291 C510                                  l5435 D792  
                                l5507 D41A                                  l5531 DC0A  
                                l5515 C70E                                  l5603 F152  
                                l5611 F168                                  l6093 C338  
                                l6085 BFF4                                  l5277 E73A  
                                l5285 E760                                  l5269 E6D6  
                                l5197 E430                                  l5189 E3EA  
                                l6173 DB6E                                  l6165 DB2A  
                                l6157 DAF8                                  l6149 DAA2  
                                l6253 D4FC                                  l6245 D424  
                                l6229 C6AC                                  l4493 BF58  
                                l4389 BF6C                                  l4397 C27A  
                                l4485 BF70                                  l4557 CC54  
                                l4477 BFC0                                  l4469 BFD8  
                                l4629 C024                                  l4637 C840  
                                l4661 C8AE                                  l4717 C4C0  
                                l4709 C4A0                                  l6077 C972  
                                l6261 D28E                                  l6237 D5CA  
                                l5373 CE36                                  l5365 CE12  
                                l5357 CDDE                                  l5349 CDAE  
                                l5381 CD24                                  l4901 F02A  
                                l4821 EDBE                                  l4813 ED9E  
                                l4805 ED32                                  l4733 EC1A  
                                l4741 EC44                                  l4725 EBEE  
                                l5293 C520                                  l5461 D810  
                                l5445 D7BC                                  l5437 D796  
                                l5429 D756                                  l5533 DC18  
                                l5541 DCF8                                  l5525 DB80  
                                l5701 F554                                  l5621 F1F2  
                                l5613 F18E                                  l5605 F15A  
                                l6181 C7E6                                  l6501 DE4A  
                                l6095 C33E                                  l6087 BF90  
                                l6079 BF98                                  l5287 E764  
                                l5279 E74A                                  l6167 DB4E  
                                l6159 DB06                                  l6255 D514  
                                l6247 D47E                                  l4495 C004  
                                l4567 CC7C                                  l4559 CC6C  
                                l4479 BFC4                                  l4647 C850  
                                l4663 C8C2                                  l4671 C0E2  
                                l4719 C4C4                                  l6191 CAFE  
                                l6263 D2C4                                  l6239 D5FE  
                                l5367 CE18                                  l5359 CDE6  
                                l5383 CD52                                  l4911 F070  
                                l4903 F02C                                  l4831 EE0E  
                                l4823 EDC8                                  l4815 EDAA  
                                l4807 ED5C                                  l4751 EC74  
                                l4743 EC54                                  l4735 EC2A  
                                l4727 EBFA                                  l5463 D820  
                                l5455 D7E4                                  l5447 D7C6  
                                l5439 D7A4                                  l5543 DD34  
                                l5527 DBA0                                  l5471 CFEC  
                                l5519 C744                                  l5711 F59E  
                                l5703 F562                                  l5631 F262  
                                l5623 F20A                                  l5607 F15E  
                                l6183 C80C                                  l6511 DECE  
                                l6503 DE70                                  l6097 C348  
                                l6089 BF94                                  l6169 DB5E  
                                l6249 D4C4                                  l4489 BF74  
                                l4593 C9F4                                  l4497 C008  
                                l4577 CC8C                                  l4585 C010  
                                l4665 C8C8                                  l4657 C89A  
                                l4673 C0E6                                  l6193 C2D6  
                                l6265 D2C8                                  l6185 BFFA  
                                l5553 C3A0                                  l5561 C56E  
                                l5297 CF04                                  l5369 CE1E  
                                l5385 CD62                                  l5377 CCE6  
                                l5393 D628                                  l4921 F09A  
                                l4913 F07E                                  l4905 F03C  
                                l4841 EE4A                                  l4833 EE1E  
                                l4825 EDEA                                  l4817 EDAE  
                                l4809 ED78                                  l4761 ECB4  
                                l4753 EC82                                  l4745 EC5A  
                                l4737 EC3A                                  l4729 EC08  
                                l5457 D7F0                                  l5449 D7D0  
                                l5545 DD48                                  l5537 DC88  
                                l5529 DBF6                                  l4681 D0B2  
                                l5481 D032                                  l5473 CFFA  
                                l5801 FA32                                  l5721 F5E4  
                                l5713 F5B0                                  l5705 F566  
                                l5625 F214                                  l5617 F1C4  
                                l5609 F162                                  l6177 C7D0  
                                l6281 C5E6                                  l6273 C5A8  
                                l6521 DF10                                  l6513 DEE6  
                                l6505 DE96                                  l6099 C35E  
                                l6187 C06A                                  l4667 BF64  
                                l4595 C9FC                                  l4499 C00C  
                                l4587 C014                                  l4659 C89E  
                                l4675 C0EA                                  l4691 C0FC  
                                l5571 C5FC                                  l6267 D2FC  
                                l6259 D234                                  l5563 C59C  
                                l5299 CF08                                  l5387 CD86  
                                l5379 CD14                                  l5395 D656  
                                l4923 F09C                                  l4915 F084  
                                l4907 F04C                                  l4851 EE90  
                                l4843 EE58                                  l4835 EE2C  
                                l4827 EDFA                                  l4819 EDBC  
                                l4771 ECEE                                  l4763 ECB6  
                                l4755 EC84                                  l4747 EC6C  
                                l4739 EC3C                                  l5459 D800  
                                l5491 D346                                  l5547 DD70  
                                l5539 DCC4                                  l4683 D0BC  
                                l4931 C4EA                                  l5483 D060  
                                l5475 D006                                  l5467 CFC8  
                                l5803 FA38                                  l5811 FAD0  
                                l5731 F6F8                                  l5723 F648  
                                l5707 F578                                  l5715 F5B8  
                                l5635 F298                                  l5619 F1D6  
                                l6179 C7D8                                  l6275 C5BA  
                                l6531 DF52                                  l6523 DF28  
                                l6515 DEEC                                  l6507 DEBC  
                                l6189 C07A                                  l4589 C018  
                                l4669 C0DE                                  l4693 C10A  
                                l5573 C612                                  l6269 D314  
                                l5565 C5A0                                  l5557 C556  
                                l5901 D8A8                                  l5389 CD8C  
                                l5397 D666                                  l4917 F086  
                                l4909 F06C                                  l4861 EF0C  
                                l4853 EEC4                                  l4845 EE5A  
                                l4837 EE3A                                  l4781 ED02  
                                l4773 ECF2                                  l4757 EC94  
                                l4765 ECBE                                  l4749 EC6E  
                                l5493 D384                                  l5549 DD80  
                                l4685 D0DA                                  l4677 D08E  
                                l4933 C4EE                                  l4941 C392  
                                l5485 D074                                  l5477 D01A  
                                l5469 CFD8                                  l5821 FB3A  
                                l5813 FAEE                                  l5805 FA90  
                                l5741 F7B6                                  l5733 F72C  
                                l5725 F6A0                                  l5717 F5C0  
                                l5709 F586                                  l5661 F3FA  
                                l5653 F332                                  l5637 F2AA  
                                l5629 F23C                                  l5581 F0AE  
                                l6277 C5C2                                  l6541 DF94  
                                l6533 DF6A                                  l6525 DF2E  
                                l6517 DEF8                                  l6509 DEC2  
                                l4599 CA04                                  l4695 C11A  
                                l4951 CA76                                  l5575 C626  
                                l6199 C2DE                                  l5559 C55A  
                                l5911 D8D4                                  l5399 D694  
                                l4919 F08C                                  l4871 EF48  
                                l4863 EF1C                                  l4855 EEC6  
                                l4847 EE64                                  l4839 EE46  
                                l4791 ED16                                  l4783 ED06  
                                l4775 ECF6                                  l4767 ECCE  
                                l4759 ECA4                                  l5495 D3AC  
                                l4687 D110                                  l4679 D0A0  
                                l4927 C4CC                                  l4935 C36A  
                                l5479 D02E                                  l5831 FB78  
                                l5823 FB3E                                  l5815 FB0A  
                                l5807 FAC4                                  l5751 F88A  
                                l5743 F7C6                                  l5735 F75E  
                                l5727 F6D4                                  l5719 F5D0  
                                l5671 F45A                                  l5663 F402  
                                l5655 F366                                  l5639 F2C6  
                                l5647 F2E2                                  l5591 F102  
                                l5583 F0B8                                  l6279 C5CA  
                                l6535 DF70                                  l6527 DF3A  
                                l6519 DF04                                  l4961 CA90  
                                l4953 CA86                                  l5577 C63A  
                                l5569 C5FC                                  l5921 D982  
                                l5913 D90A                                  l5905 D8AE  
                                l4881 EF74                                  l4873 EF4A  
                                l4857 EED6                                  l4849 EE6A  
                                l4793 ED1A                                  l4785 ED0A  
                                l4777 ECFA                                  l4769 ECE0  
                                l5497 D3B8                                  l5489 D326  
                                l4929 C4D8                                  l4937 C376  
                                l4945 C410                                  l5841 FBAA  
                                l5833 FB80                                  l5825 FB4E  
                                l5817 FB1C                                  l5809 FACC  
                                l5761 F8D2                                  l5753 F89E  
                                l5745 F7FA                                  l5737 F774  
                                l5729 F6DA                                  l5673 F46C  
                                l5657 F36C                                  l5665 F434  
                                l5649 F2FC                                  l5593 F10C  
                                l5585 F0C8                                  l6537 DF7C  
                                l6529 DF46                                  l6481 DDA8  
                                l6473 DD92                                  l4699 BF60  
                                l4971 CAAE                                  l4963 CA94  
                                l4955 CA8A                                  l5579 C63E  
                                l5923 D994                                  l5907 D8C4  
                                l4891 EFAC                                  l4875 EF58  
                                l4867 EF30                                  l4883 EF76  
                                l4859 EEE6                                  l4795 ED1E  
                                l4787 ED0E                                  l4779 ECFE  
                                l4939 C37A                                  l5843 FBB0  
                                l5851 FC00                                  l5835 FB8E  
                                l5827 FB60                                  l5819 FB2A  
                                l5771 F98E                                  l5763 F8F6  
                                l5747 F850                                  l5755 F8A2  
                                l5739 F7A6                                  l5691 F51C  
                                l5675 F474                                  l5667 F444  
                                l5659 F3C6                                  l5595 F114  
                                l5587 F0D6                                  l5931 D158  
                                l6539 DF88                                  l6491 DDF6  
                                l6483 DDB4                                  l6475 DD9A  
                                l6741 C882                                  l4981 CAD6  
                                l4973 CAB6                                  l4965 CA9C  
                                l4957 CA8C                                  l4949 CA72  
                                l5925 D9A6                                  l5917 D942  
                                l5909 D8CC                                  l4877 EF60  
                                l4869 EF3A                                  l4885 EF84  
                                l4797 ED22                                  l4789 ED12  
                                l5861 FC50                                  l5853 FC12  
                                l5845 FBD6                                  l5837 FB96  
                                l5829 FB68                                  l5781 F9D4  
                                l5773 F99C                                  l5765 F95A  
                                l5757 F8B2                                  l5749 F856  
                                l5693 F524                                  l5685 F4B8  
                                l5677 F48E                                  l5669 F448  
                                l5597 F126                                  l5589 F0DE  
                                l5941 D1B4                                  l5933 D182  
                                l6493 DDFA                                  l6485 DDCC  
                                l6477 DD9E                                  l6743 CCBE  
                                l4991 CAF6                                  l4983 CADE  
                                l4975 CABE                                  l4967 CA9E  
                                l4959 CA8E                                  l5951 C120  
                                l4895 EFD6                                  l4887 EF88  
                                l4879 EF64                                  l4799 ED26  
                                l5863 FC58                                  l5855 FC2C  
                                l5847 FBF2                                  l5839 FB9E  
                                l5791 F9FE                                  l5783 F9D8  
                                l5767 F96A                                  l5775 F9A4  
                                l5759 F8C6                                  l5687 F4CA  
                                l5695 F528                                  l5679 F4A6  
                                l5599 F134                                  l5943 D1D2  
                                l6495 DE0E                                  l6487 DDD2  
                                l6479 DDA2                                  l6745 CEA4  
                                l4985 CAE6                                  l4977 CAC6  
                                l4969 CAA6                                  l4993 CAFA  
                                l5953 C124                                  l4897 EFE2  
                                l4889 EF96                                  l5881 FCDE  
                                l5873 FCA8                                  l5865 FC68  
                                l5857 FC32                                  l5849 FBFA  
                                l5793 FA04                                  l5785 F9DE  
                                l5777 F9B6                                  l5769 F97C  
                                l5697 F530                                  l5689 F4E6  
                                l5945 D1E4                                  l5937 D18E  
                                l5961 E776                                  l6497 DE22  
                                l6489 DDDE                                  l6747 CA48  
                                l4987 CAEE                                  l4979 CACE  
                                l5955 C128                                  l6739 D8F4  
                                l5891 D846                                  l4899 EFF0  
                                l5883 FCE4                                  l5875 FCBA  
                                l5867 FC6E                                  l5859 FC44  
                                l5787 F9EA                                  l5779 F9C4  
                                l5795 FA0A                                  l5699 F542  
                                l5947 D20E                                  l5939 D19C  
                                l5971 E7E6                                  l5963 E79C  
                                l6499 DE36                                  l5957 C186  
                                l4989 CAF2                                  l4997 C0AA  
                                l5893 D84A                                  l5877 FCC6  
                                l5869 FC74                                  l5797 FA1C  
                                l5789 F9FA                                  l5981 E87C  
                                l5973 E7EE                                  l5965 E7AA  
                                l5959 C194                                  l4999 BFE8  
                                l5895 D84E                                  l5879 FCCE  
                                l5799 FA2E                                  l5991 E906  
                                l5983 E88A                                  l5975 E7FC  
                                l5967 E7BC                                  l5897 D86C  
                                l5889 D832                                  l5993 E916  
                                l5977 E822                                  l5969 E7C0  
                                l5899 D8A4                                  l5995 E948  
                                l5987 E8D2                                  l5979 E85C  
                                l5997 E958                                  l5989 E8E4  
                                l5999 E98A                                  STR_1 FFAE  
                                STR_2 FF87                                  STR_3 FFDD  
                                STR_4 FFDD                                  STR_5 FFDD  
                                STR_6 FF9C                                  STR_7 FFD4  
                                STR_8 FFF8                                  STR_9 FFC9  
                                _LATA 000F89                                  _LATB 000F8A  
                                _LATC 000F8B                                  u4000 E14A  
                                u4001 E146                                  u4010 E16C  
                                u4011 E168                                  u4100 E278  
                                u4020 E196                                  u3300 CEFA  
                                u4101 E274                                  u4021 E192  
                                u3301 CEF6                                  u4110 E292  
                                u4030 E1BA                                  u3310 CC6C  
                                u4111 E28E                                  u4031 E1B6  
                                u3311 CC68                                  u4120 E2DA  
                                u4040 E1D0                                  u4200 E3EA  
                                u3400 D0A0                                  u5000 F1BE  
                                u4121 E2D6                                  u4041 E1CC  
                                u4201 E3E6                                  u3401 D09C  
                                u4130 E30A                                  u4050 E1EE  
                                u4210 E420                                  u3250 C98E  
                                u3410 D0B2                                  u5010 F1D6  
                                u4131 E306                                  u4051 E1EA  
                                u4211 E41C                                  u3251 C98A  
                                u3411 D0AE                                  u5011 F1D2  
                                u4140 E338                                  u4060 E20E  
                                u4300 E6A8                                  u4220 E430  
                                u3260 C172                                  u3500 EC6C  
                                u3420 D0DA                                  u5100 F46C  
                                u5020 F262                                  u4141 E334  
                                u4061 E20A                                  u4301 E6A4  
                                u4221 E42C                                  u3261 C16E  
                                u3501 EC68                                  u3421 D0D6  
                                u5101 F468                                  u5021 F25E  
                                u4070 E220                                  u4310 E6F0  
                                u4230 E5AA                                  u4150 E366  
                                u3270 C08E                                  u3350 C056  
                                u3510 EC82                                  u3430 D110  
                                u5110 F48E                                  u5030 F290  
                                u4071 E21C                                  u4311 E6EC  
                                u4151 E362                                  u3271 C088  
                                u3351 C052                                  u3511 EC7E  
                                u3431 D10C                                  u5111 F48A  
                                u5031 F28A                                  u4080 E24E  
                                u4320 E71E                                  u4240 E604  
                                u4160 E378                                  u3280 CE54  
                                u3328 CC9A                                  u3360 C8AE  
                                u3440 C10A                                  u4400 CDA2  
                                u3600 EDBC                                  u3520 EC94  
                                u5200 F586                                  u5120 F4B4  
                                u5040 F292                                  u4081 E24A  
                                u4321 E71A                                  u4241 E600  
                                u4161 E374                                  u3281 CE50  
                                u3329 CCAC                                  u3361 C8AA  
                                u3441 C106                                  u4401 CD9E  
                                u3601 EDB8                                  u3521 EC90  
                                u5201 F582                                  u5121 F4B0  
                                u4090 E264                                  u4330 E758  
                                u4250 E624                                  u4170 E388  
                                u3338 CA24                                  u3370 C8C2  
                                u3450 C49E                                  u4410 CDBC  
                                u3610 EDDC                                  u3530 ECA4  
                                u5210 F5B0                                  u5130 F4CA  
                                u5050 F2AA                                  u4091 E260  
                                u4331 E754                                  u4251 E620  
                                u4235 E5A0                                  u4171 E384  
                                u3339 CA36                                  u3371 C8BE  
                                u3451 C49A                                  u4411 CDB8  
                                u3611 EDD8                                  u3531 ECA0  
                                u5211 F5AC                                  u5131 F4C6  
                                u5051 F2A6                                  u4260 E636  
                                u4180 E3C8                                  u3276 C090  
                                u3348 C85E                                  u3460 C4B4  
                                u4340 CF16                                  u4420 CDD6  
                                u4500 D694                                  u3700 EF1C  
                                u3620 EDEA                                  u3540 ECE0  
                                u5300 F97C                                  u5220 F6F8  
                                u5140 F4E6                                  u5060 F32E  
                                u4261 E632                                  u4181 E3C4  
                                u3349 C870                                  u3461 C4B0  
                                u4341 CF12                                  u4421 CDD2  
                                u4501 D690                                  u3701 EF18  
                                u3621 EDE6                                  u3541 ECDC  
                                u5301 F978                                  u5221 F6F4  
                                u5141 F4E2                                  u5061 F32A  
                                u4270 E664                                  u4190 E3DA  
                                u3390 C0FA                                  u4350 CF30  
                                u4430 CDF4                                  u4510 D6B2  
                                u3710 EF48                                  u3630 EDFA  
                                u3550 ECEE                                  u3470 EC08  
                                u5310 F98E                                  u5230 F75E  
                                u5150 F51C                                  u5070 F3C2  
                                u4271 E660                                  u4191 E3D6  
                                u3391 C0F6                                  u4351 CF2C  
                                u4431 CDF0                                  u4511 D6AE  
                                u3711 EF44                                  u3631 EDF6  
                                u3551 ECEA                                  u3471 EC04  
                                u5311 F98A                                  u5231 F75A  
                                u5151 F518                                  u5071 F3BE  
                                u4280 E67A                                  u4360 CF56  
                                u4440 CE0A                                  u4520 D6D2  
                                u3800 F02A                                  u3720 EF58  
                                u3640 EE2C                                  u3560 ED5C  
                                u3480 EC1A                                  u4600 D800  
                                u5400 FB60                                  u5320 F99C  
                                u5240 F7A6                                  u5160 F542  
                                u5080 F434                                  u4281 E676  
                                u4361 CF52                                  u4441 CE06  
                                u4521 D6CE                                  u3801 F026  
                                u3721 EF54                                  u3641 EE28  
                                u3561 ED58                                  u3481 EC16  
                                u4601 D7FC                                  u5401 FB5C  
                                u5321 F998                                  u5241 F7A2  
                                u5161 F53E                                  u5081 F430  
                                u4290 E68E                                  u3298 CE7E  
                                u4370 CF74                                  u4450 CE2E  
                                u4530 D722                                  u3810 F03C  
                                u3730 EF74                                  u3650 EE3A  
                                u3570 ED74                                  u3490 EC2A  
                                u4610 D810                                  u5410 FB8E  
                                u5330 F9B6                                  u5250 F7B6  
                                u5170 F554                                  u5090 F45A  
                                u4291 E68A                                  u3299 CE92  
                                u4371 CF70                                  u4451 CE2A  
                                u4531 D71E                                  u3811 F038  
                                u3731 EF70                                  u3651 EE36  
                                u3571 ED6E                                  u3491 EC26  
                                u4611 D80C                                  u5411 FB8A  
                                u5331 F9B2                                  u5251 F7B2  
                                u5171 F550                                  u5091 F456  
                                u3388 C8F2                                  u3900 CA86  
                                u5500 D8C0                                  u4380 CF90  
                                u4460 CD14                                  u4540 C3EE  
                                u3820 F04C                                  u3740 EF84  
                                u3660 EE58                                  u3580 ED76  
                                u4620 CFD8                                  u5420 FC12  
                                u5340 F9C4                                  u5260 F850  
                                u5180 F562                                  u3389 C904  
                                u3901 CA82                                  u5501 D8BC  
                                u4381 CF8C                                  u4461 CD10  
                                u4541 C3EA                                  u3821 F048  
                                u3741 EF80                                  u3661 EE54  
                                u4621 CFD4                                  u5421 FC0E  
                                u5341 F9C0                                  u5261 F84C  
                                u5181 F55E                                  u3910 C20E  
                                u5510 D97C                                  u4390 CFB6  
                                u4470 CD52                                  u3830 F06C  
                                u3750 EF96                                  u3670 EE90  
                                u3590 ED9E                                  u4550 D742  
                                u4710 D410                                  u4630 CFFA  
                                u5430 FC2C                                  u5350 FA1C  
                                u5270 F89E                                  u5190 F578  
                                u3911 C20A                                  u5511 D976  
                                u4391 CFB2                                  u4471 CD4E  
                                u3831 F068                                  u3751 EF92  
                                u3671 EE8C                                  u3591 ED9A  
                                u4551 D73E                                  u4711 D40A  
                                u4631 CFF6                                  u5431 FC28  
                                u5351 FA18                                  u5271 F89A  
                                u5191 F574                                  u5600 C194  
                                u3920 DFCC                                  u5520 D97E  
                                u4480 CD86                                  u3840 F07E  
                                u3760 EFAC                                  u3680 EED6  
                                u4560 D776                                  u4720 D412  
                                u4800 DC18                                  u4640 D050  
                                u5440 FC44                                  u5360 FAEE  
                                u5280 F8C6                                  u5601 C190  
                                u3921 DFC8                                  u4481 CD82  
                                u3841 F07A                                  u3761 EFA8  
                                u3681 EED2                                  u4705 D3E8  
                                u4801 DC14                                  u4641 D04C  
                                u5441 FC40                                  u5361 FAEA  
                                u5281 F8C2                                  u5610 C1AA  
                                u3930 DFDE                                  u5530 D994  
                                u4490 D656                                  u3850 F09A  
                                u3770 EFC2                                  u3690 EF0C  
                                u4570 D7A4                                  u4650 D060  
                                u4730 C6FA                                  u5450 FCA2  
                                u5370 FB0A                                  u5290 F96A  
                                u5611 C1A6                                  u3931 DFDA  
                                u5531 D990                                  u4491 D652  
                                u3851 F096                                  u3771 EFBE  
                                u3691 EF08                                  u4571 D7A0  
                                u4651 D05C                                  u5451 FC9C  
                                u5371 FB06                                  u5291 F966  
                                u3940 DFEE                                  u4900 C56E  
                                u5540 D9A6                                  u3780 EFD6  
                                u4580 D7B8                                  u4660 D366  
                                u4820 DC84                                  u3860 C50E  
                                u4740 C70C                                  u5460 FCA4  
                                u5380 FB1C                                  u5700 E99C  
                                u5620 E79C                                  _RCEN 007E2B  
                                u3941 DFEA                                  u4901 C56A  
                                u5541 D9A2                                  u3781 EFD2  
                                u4581 D7B4                                  u4565 D76C  
                                u4821 DC80                                  u3861 C50A  
                                u4741 C708                                  u5381 FB18  
                                u5701 E998                                  u5621 E798  
                                u3950 E032                                  u4910 C59C  
                                u3790 EFF0                                  u4590 D7E0  
                                u4670 D384                                  u4830 DCA8  
                                u3870 C392                                  u4750 C73E  
                                u5470 FCBA                                  u5390 FB2A  
                                u5550 D182                                  u5710 EA4C  
                                u5630 E7E6                                  u3951 E02E  
                                u6407 D306                                  u4911 C598  
                                u3791 EFEC                                  u4591 D7DC  
                                u4671 D380                                  u4815 DC2C  
                                u3871 C38E                                  u4751 C738  
                                u5471 FCB6                                  u5391 FB26  
                                u5551 D17E                                  u5711 EA48  
                                u5631 E7E2                                  u3960 E044  
                                u5800 CBE4                                  u4920 C612  
                                u5480 D86C                                  u4680 D3AC  
                                u4840 DCC4                                  u4816 DC36  
                                u3880 C440                                  u4760 C740  
                                u5560 D1B4                                  u5720 EAB6  
                                u5640 E822                                  u3961 E040  
                                u6417 D506                                  u5801 CBE0  
                                u4921 C60E                                  u5481 D868  
                                u4681 D3A8                                  u4665 D35C  
                                u4841 DCC0                                  u4817 DC46  
                                u4737 C6F0                                  u3881 C43A  
                                u5561 D1B0                                  u5721 EAB0  
                                u5641 E81E                                  u6337 DDBE  
                                u3970 E054                                  u5810 CC0C  
                                u4930 C652                                  u5490 D8A4  
                                u4690 D3D6                                  u4850 DD18  
                                u3890 C442                                  u4770 C756  
                                u5570 D1D2                                  u5730 EAB8  
                                u5650 E8CC                                  u3971 E050  
                                u5811 CC08                                  u4931 C64E  
                                u5491 D8A0                                  u4691 D3D2  
                                u4835 DC9E                                  u4771 C752  
                                u5571 D1CE                                  u5651 E8C6  
                                u6347 DDE8                                  u3980 E094  
                                u5900 DB5E                                  u5820 D9DE  
                                u4860 DD34                                  u4780 DBC8  
                                u4940 F0D6                                  u5580 D1E4  
                                u5740 EACE                                  u5660 E8CE  
                                u3981 E090                                  u5901 DB5A  
                                u5821 D9DA                                  u4861 DD30  
                                u4941 F0D2                                  u5581 D1E0  
                                u5741 EACA                                  u6357 DED8  
                                u3990 E0D4                                  u5910 DB6C  
                                u5830 D9EC                                  u4870 DD70  
                                u4790 DBF6                                  u4950 F126  
                                u5590 D20E                                  u5750 EB6C  
                                u5670 E8E4                                  u3991 E0D0  
                                u5911 DB68                                  u5831 D9E8  
                                u4871 DD6C                                  u4855 DD0E  
                                u4791 DBF2                                  u4951 F122  
                                u5591 D20A                                  u5751 EB68  
                                u5671 E8E0                                  u6367 DF1A  
                                u5840 DA48                                  u5760 C972  
                                u4880 C3D0                                  u4960 F134  
                                u5680 E916                                  u5920 C82A  
                                u5841 DA44                                  u5761 C96E  
                                u4881 C3CA                                  u4785 DBBE  
                                u4961 F130                                  u5681 E912  
                                u5921 C826                                  u6377 DF5C  
                                u5770 C35C                                  u5850 DA9E  
                                u5930 C300                                  u4890 C3D2  
                                u4970 F146                                  u5690 E958  
                                u5771 C356                                  u5851 DA9A  
                                u5931 C2FC                                  u4971 F142  
                                u5691 E954                                  u6387 DF9E  
                                u5860 DAE8                                  u5940 C794  
                                u4980 F18E                                  u5861 DAE4  
                                u6397 D608                                  u4981 F18A  
                                u5870 DB06                                  u5790 CBC2  
                                u5950 C7BE                                  u4990 F1BC  
                                u5871 DB02                                  u5791 CBBE  
                                u4991 F1B6                                  u5880 DB16  
                                u5960 C7CE                                  u5785 C35E  
                                u5881 DB12                                  u5961 C7CA  
                                u5890 DB24                                  u5891 DB20  
                                u5947 C78A                                  u5957 C7B4  
                                u5975 C67E                  Oled_WriteCharacter@i 001F  
                                _RSEN 007E29                                  _WPUB 000F5B  
             ??_wr2RegCompleteHandler 000C                                  _dbuf 0174  
    __end_of_I2C_Master_RepeatedStart BF98                                  _atoi D832  
                                _main DD92              ?_I2C_CallbackReturnReset 000A  
                                _prec 00D2                                  _nout 00CE  
                                pad@i 0018                                  pad@p 0015  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                indf0 000FEF                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                      __end_of_I2C_Open CAFE  
                       ___fpclassifyf D326                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                     ___fldiv@new_exp 0012          fp__I2C_DO_SEND_RESTART_WRITE 0000  
                        _tolower$2341 000D                           _voltage_str 00E9  
                        ___param_bank 000000      __size_of_rdBlkRegCompleteHandler 0040  
                               ??_pad 0017                      ?_I2C_MasterClose 0001  
                  _Power_ReadRegister D234                       _I2C_WriteNBytes C5FA  
                    ?_I2C_Master_Init 000E                      ?_I2C_Master_Read 0002  
                    ?_I2C_Master_Wait 0001   __size_of_I2C_SetAddressNackCallback 0018  
                    ?_I2C_Master_Stop 0001        __size_of_OSCILLATOR_Initialize 0012  
                    ?_I2C_MasterStart 0001                         _I2C_DO_RX_ACK BFD0  
                    ?_I2C_MasterWrite 0001         __end_of_OSCILLATOR_Initialize C06A  
                       ___fltol@sign1 0009                                 ?_atoi 0008  
                     __end_of___fladd F0AE                                 ?_main 0001  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___fldiv E34C                       __end_of___awdiv CFC8  
                     __end_of___flneg C410                                 _EEADR 000F74  
                               STR_10 FFF5                                 STR_11 FFBE  
                               STR_12 FFFB                                 STR_21 FFF2  
                               STR_13 FFE2                                 STR_14 FFEA  
                               STR_23 FFF2                                 STR_17 FFE6  
                               STR_18 FFEE                       __end_of___awmod CE40  
                     __end_of___flmul E776                       __end_of___flsub C556  
                     __end_of___fltol D832                                 _ASCII FDA7  
                     __end_of___lldiv CC40                       ___awdiv@divisor 0003  
                     ___awdiv@counter 0005          __size_of_I2C_DO_RX_NACK_STOP 0008  
                        vfpfcnvrt@fmt 0048                     ??_I2C_DO_TX_EMPTY 000C  
                               _TRISA 000F92                                 _TRISB 000F93  
                               _TRISC 000F94                   ?_Power_ReadRegister 001A  
                               _Power 00C2                     __end_of_I2C_DO_RX CCE6  
                   __end_of_I2C_DO_TX CF04                                 _flags 00D4  
                               _fputc D08E                     __end_of_I2C_Close C226  
                               _fputs C4CC                       __end_of_isdigit C3D8  
              __size_of_I2C_MasterFsm 0070        I2C_MasterOperation@returnValue 0011  
                               atoi@n 0015                                 pad@fp 0011  
                               atoi@s 0008                                 _power 00B6  
                               _width 00D0                                 _putch BF56  
             _I2C_MasterEnableRestart BF68                       __end_of_isspace C5A8  
                     __end_of_isupper C448                                 pclath 000FFA  
                               tablat 000FF5                      ?_I2C_SetCallback 0001  
        I2C_SetAddressNackCallback@cb 0006                                 status 000FD8  
                     __end_of_sprintf C5FA                        ?___fpclassifyf 0001  
                     __end_of_tolower C76E                     ?_I2C_DO_SEND_STOP 0001  
              __size_of_I2C_SetBuffer 0024                       __end_of_strncmp D234  
  _EUSART1_DefaultFramingErrorHandler 000000                  ??_Power_ReadRegister 001E  
                  ??_I2C_DO_SEND_STOP 0001                         ?_Oled_Command 0001  
            fp__rd1RegCompleteHandler 0000                       __initialization C302  
                        __end_of_atoi D9CC                          __end_of_main DFB2  
                    ?_Oled_SelectPage 0001              fp__wr1RegCompleteHandler 0000  
   __size_of_I2C_DO_SEND_RESTART_READ 0008             ?_I2C_DO_SEND_RESTART_READ 0001  
                      ?_I2C_DO_RX_ACK 0001                            _Oled_Clear C2D6  
                              ??_atoi 000A                                ??_main 005E  
             Oled_SelectPage@page_num 001A                     ?_I2C_MasterIsNack 0001  
                       __activetblptr 000003              Power_ReadRegister@temp_e 0022  
            Power_ReadRegister@temp_f 0020                     ?_I2C_MasterSetIrq 0001  
                  ??_I2C_MasterIsNack 0001                           Oled_Clear@i 001A  
                   ?_I2C_Master_Start 0001                     ?_I2C_Master_Write 0002  
                  ??_I2C_MasterSetIrq 0001                    ??_I2C_Master_Start 0002  
                  ??_I2C_Master_Write 0004       __end_of_I2C_CallbackReturnReset BF78  
                              ?_fputc 0001                                ?_fputs 000A  
                              _EEADRH 000F75                                _EEDATA 000F73  
                              _EECON2 000F7E                                _ANCON0 000F5D  
                              _ANCON1 000F5C       __size_of_I2C_CallbackReturnStop 0004  
                    ___awdiv@dividend 0001         I2C_SetDataCompleteCallback@cb 0006  
                              ?_putch 0001                          ??_I2C_Poller 0010  
                              _TABLAT 000FF5                                _RCREG1 000FAE  
                              _RCSTA1 000FAB                                _OSCCON 000FD3  
                              _SPBRG1 000FAF                                _SSPADD 000FC8  
                              _TRISC3 007CA3                                _TRISC4 007CA4  
                              _SSPBUF 000FC9                                _TXREG1 000FAD  
                    __end_of___xxtofl DB80                                _TXSTA1 000FAC  
                  __size_of_Oled_Data 0022                    __size_of_Oled_Init 009E  
                      ??_Oled_Command 0017                   _I2C_MasterGetRxData BF7C  
             __end_of_I2C_WriteNBytes C654              _I2C_Master_RepeatedStart BF90  
            __end_of_Oled_WriteString C7D0                     Oled_Data@data_I2C 0018  
                        vfprintf@cfmt 005C                                ___flge D628  
                              ___fleq CCE6                             ??___fladd 0009  
                              ___wmul C1AC                             ??___fldiv 0009  
                       _I2C_MasterFsm C89A                             ??___awdiv 0005  
                           ??___flneg 0005                             ??___awmod 0005  
                           ??___flmul 001D                             ??___flsub 0036  
                           ??___fltol 0005                             ??___lldiv 0009  
                              _efgtoa F0AE                                _buffer 01C4  
                              _floorf DB80                                clear_0 C30A  
                              clear_1 C31C                                clear_2 C328  
                   I2C_SetCallback@cb 0001                      ___awdiv@quotient 0007  
             fp__I2C_DO_SEND_ADR_READ 0000                       ___awmod@divisor 0003  
             __size_of_I2C_MasterOpen 0022                                isa$std 000001  
             __size_of_I2C_MasterStop 0004                       ___awmod@counter 0005  
             __size_of_I2C_Initialize 0014                                pad@buf 0013  
                       _I2C_SetBuffer C162                    __end_of_I2C_Poller C0FC  
                              _strcpy C6B0                                _strlen C36A  
        __end_of_I2C_MasterDisableIrq BF64         __size_of_Current_ReadRegister 0102  
                              fputc@c 0001                                fputs@c 000E  
                 _I2C_DO_ADDRESS_NACK C834                                fputs@i 000F  
                              fputs@s 000A                             ??_isdigit 0003  
                ?_I2C_MasterGetRxData 0001                             ?_I2C_Open 0001  
  __end_of_I2C_SetAddressNackCallback C0C2            _I2C_SetAddressNackCallback C0AA  
                     ___fpclassifyf@e 0009                       ___fpclassifyf@u 000B  
                     ___fpclassifyf@x 0001                          __mediumconst FD06  
                           ??_isspace 0003                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8             ??_I2C_MasterEnableRestart 0001  
                              putch@c 0001                      __end_of_vfprintf C834  
                           ??_sprintf 005E                             ??_tolower 0009  
                           ??_strncmp 0007                            ___flge@ff1 002E  
                          ___flge@ff2 0032                       ??___fpclassifyf 0005  
                        ___xxtofl@arg 0011                          ___xxtofl@exp 0010  
                   _SYSTEM_Initialize BFFA                          ___xxtofl@val 0007  
                          ___fleq@ff1 0001                            ___fleq@ff2 0005  
                          __accesstop 0060               __end_of__initialization C32E  
                          ___flneg@f1 0001                   _I2C_MasterOperation C488  
                  ?_SYSTEM_Initialize 0001                         __end_of_ASCII FF87  
                       ___rparam_used 000001                  ?_I2C_DO_ADDRESS_NACK 0001  
                          ___fltol@f1 0001          __end_of_Voltage_ReadRegister D628  
             _rdBlkRegCompleteHandler C448            fp__rdBlkRegCompleteHandler 0000  
                      __pcstackCOMRAM 0001                        ?_I2C_MasterFsm 0001  
                     ??_I2C_DO_RX_ACK 0001                _I2C_CallbackReturnStop BF70  
                 ??_SYSTEM_Initialize 0001                         __end_of_fputc D158  
                       __end_of_fputs C510                         __end_of_putch BF58  
                      Oled_Data@value 0017                           ?_Oled_Clear 0001  
                      ?_I2C_SetBuffer 0001               ?_I2C_MasterWaitForEvent 0001  
      __size_of_I2C_DO_SEND_ADR_WRITE 0010    __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
       __end_of_I2C_DO_SEND_ADR_WRITE C048            ?_I2C_DO_SEND_RESTART_WRITE 0001  
                ?_I2C_MasterOperation 0001                 ??_I2C_MasterGetRxData 0001  
                          ??_I2C_Open 0001                     __end_of_Oled_Data C140  
                   __end_of_Oled_Init CB9C            __end_of_I2C_MasterClearIrq BF5C  
                             ??_fputc 0005             __end_of_SYSTEM_Initialize C004  
                             ??_fputs 000E                               ??_putch 0001  
                   _I2C_MasterSendAck BF8A                            __pbssBANK0 00AE  
                          __pbssBANK1 0100                         ??_I2C_DO_IDLE 0001  
      __size_of_rd2RegCompleteHandler 002C                         ??_I2C_DO_RCEN 0001  
       __end_of_rd2RegCompleteHandler C2AA          __end_of_I2C_MasterSendTxData BFB0  
                  ?_I2C_MasterSendAck 0001                     _I2C_MasterStartRx BF78  
      __size_of_wr2RegCompleteHandler 002C                 ??_I2C_DO_ADDRESS_NACK 000C  
       __end_of_wr2RegCompleteHandler C252                   _I2C_DO_RX_NACK_STOP BFD8  
               _rd1RegCompleteHandler C252                    ?_I2C_MasterStartRx 0001  
          __end_of_I2C_MasterSendNack BF8A          Oled_WriteCharacter@character 001E  
                    ?_I2C_WriteNBytes 0012                I2C_WriteNBytes@address 0016  
               _wr1RegCompleteHandler C2AA                   ??_I2C_MasterSendAck 0001  
            rd1RegCompleteHandler@ptr 000A                               ?___flge 002E  
                             ?___fleq 0001           __end_of_I2C_DO_SEND_RESTART BFC8  
                     _I2C_DO_TX_EMPTY C9F4                   I2C_SetBuffer@buffer 0001  
                             ?___wmul 0001                               ?_efgtoa 003A  
      __end_of_I2C_MasterWaitForEvent C058                   ??_I2C_MasterStartRx 0001  
       __size_of_I2C_DO_SEND_ADR_READ 0010                               ?_floorf 001A  
    __size_of_I2C_CallbackReturnReset 0004                 ??_I2C_MasterOperation 0010  
      I2C_SetDataCompleteCallback@ptr 0008                               ?_strcpy 0001  
                             ?_strlen 0001              ??_I2C_DO_RX_NACK_RESTART 0001  
   __end_of_I2C_DO_SEND_RESTART_WRITE BFC0                  ?_I2C_DO_RX_NACK_STOP 0001  
                           ?___xxtofl 0007                               _REFOCON 000F9A  
                __end_of_Oled_Command C162                               _OSCCON2 000FD2  
                  __size_of_vfpfcnvrt 0478                               _TBLPTRH 000FF7  
                             _TBLPTRL 000FF6                               _TBLPTRU 000FF8  
           __end_of_I2C_MasterSendAck BF90                               _OSCTUNE 000F9B  
                             _SPBRGH1 000F7D                               _SSPCON1 000FC6  
                             _SSPCON2 000FC5                               _SSPSTAT 000FC7  
           __end_of_I2C_MasterStartRx BF7C                  I2C_Close@returnValue 0001  
        ?_I2C_SetDataCompleteCallback 0006                             _I2C_DO_RX CC40  
                           _I2C_DO_TX CE40      __end_of_I2C_DO_SEND_RESTART_READ BFB8  
        __size_of_Oled_WriteCharacter 0070                             _I2C_Close C1FA  
                 __size_of_Oled_Clear 002C             ??_rdBlkRegCompleteHandler 000C  
                             _Current 00C6                  _I2C_MasterDisableIrq BF60  
                     ??_I2C_MasterFsm 000E                               __Hparam 0000  
                             __Lparam 0000                   __end_of_I2C_DO_IDLE C010  
                 __end_of_I2C_DO_RCEN C01C                       __size_of___flge 0104  
                     __size_of___fleq 00AA                               ___fladd EBEE  
                             ___fldiv DFB2                               ___awdiv CF04  
                             ___flneg C3D8                               ___awmod CD90  
                             ___flmul E34C                               _Voltage 00CA  
                             ___flsub C510                               ___fltol D72C  
                             ___lldiv CB9C                       ??_I2C_SetBuffer 0005  
                     __size_of___wmul 0026                             ?_vfprintf 0098  
             I2C_SetBuffer@bufferSize 0003                       __size_of_efgtoa 0C58  
                      _I2C_MasterOpen C0FC                       __size_of_floorf 0212  
                             __pcinit C302                        _I2C_MasterStop BF6C  
                      _I2C_Initialize C06A                               __ramtop 0F00  
           __size_of_I2C_DO_SEND_STOP 0008                               __ptext0 DD92  
                             __ptext1 C5A8                               __ptext2 C7D0  
                             __ptext3 E776                               __ptext4 D158  
                             __ptext5 F0AE                               __ptext6 C70E  
                             __ptext7 C410                               __ptext8 C6B0  
                             __ptext9 CFC8                 ??_I2C_DO_RX_NACK_STOP 0001  
                     __size_of_strcpy 005E                       __size_of_strlen 0036  
               _OSCILLATOR_Initialize C058                               _current 00BA  
                        __size_of_pad 00C6                               _isdigit C3A0  
                          ??___xxtofl 000B                      ___awmod@dividend 0001  
                  I2C_SetCallback@idx 0005              __size_of_I2C_MasterClose 0004  
            ??_PIN_MANAGER_Initialize 0001         I2C_CallbackReturnReset@funPtr 000A  
                             _isspace C556                    I2C_SetCallback@ptr 0003  
            wr1RegCompleteHandler@ptr 000A                               _isupper C410  
            __size_of_I2C_Master_Init 005C              __size_of_I2C_Master_Read 0036  
                             efgtoa@c 0040                               efgtoa@d 0078  
                             efgtoa@e 0090                               efgtoa@f 003C  
                             efgtoa@g 008C                               efgtoa@h 0082  
                             efgtoa@i 008A                  _Voltage_ReadRegister D526  
                             efgtoa@l 0086                               efgtoa@m 0072  
                             efgtoa@n 0092                               efgtoa@p 007C  
                             efgtoa@t 006C                               efgtoa@u 0094  
                             efgtoa@w 007E              __size_of_I2C_Master_Wait 0026  
            fp__I2C_DO_SEND_ADR_WRITE 0000              __size_of_I2C_Master_Stop 0008  
            __size_of_I2C_MasterStart 0004              __size_of_I2C_MasterWrite 0008  
                             atoi@neg 000E            __size_of_SYSTEM_Initialize 000A  
                             _sprintf C5A8                               _tolower C70E  
                             _voltage 00BE                               _strncmp D158  
                end_of_initialization C32E                               floorf@e 0028  
                             floorf@m 0024                               floorf@u 002A  
                             floorf@x 001A            ??_I2C_Master_RepeatedStart 0002  
                          ?_I2C_DO_RX 0001                            ?_I2C_DO_TX 0001  
           __size_of_I2C_MasterIsNack 0014                               fputc@fp 0003  
                          ?_I2C_Close 0001           _EUSART1_OverrunErrorHandler 00D8  
                             fputs@fp 000C                ?_rd1RegCompleteHandler 000A  
             __end_of_I2C_DO_TX_EMPTY CA70             __size_of_I2C_MasterSetIrq 0004  
               ?_I2C_MasterDisableIrq 0001                ?_wr1RegCompleteHandler 000A  
           __size_of_I2C_Master_Start 0008             __size_of_I2C_Master_Write 000A  
                     ___lldiv@divisor 0005           __size_of_Power_ReadRegister 00F2  
                     ___lldiv@counter 000D              fp__rd2RegCompleteHandler 0000  
            __size_of_I2C_SetCallback 007A                     __end_of_vfpfcnvrt EBEE  
                          efgtoa@mode 0081                            efgtoa@sign 007A  
                   ?_Oled_WriteString 0021                      I2C_Master_Init@c 000E  
                    I2C_Master_Read@a 0002                               postdec1 000FE5  
                             postdec2 000FDD                __end_of_I2C_MasterOpen C11E  
            fp__wr2RegCompleteHandler 0000                               postinc0 000FEE  
                             postinc1 000FE6                               postinc2 000FDE  
              __end_of_I2C_MasterStop BF70                __end_of_I2C_Initialize C07E  
                          ??_vfprintf 005C             fp__I2C_CallbackReturnStop 0000  
                  ??_Oled_WriteString 0023                               strcpy@d 0009  
                             strlen@a 0003                               strcpy@s 0007  
                             strlen@s 0001       __end_of_rdBlkRegCompleteHandler C488  
                _I2C_MasterSendTxData BFA8                       fp__I2C_DO_RESET 0000  
            __size_of_Oled_SelectPage 001C       __size_of_I2C_DO_RX_NACK_RESTART 0008  
                         ___fladd@grs 0010                 ?_Voltage_ReadRegister 002E  
                       ___xxtofl@sign 000F           ?_I2C_SetAddressNackCallback 0006  
          __size_of_I2C_MasterSendAck 0006                           ___fldiv@grs 0014  
                         ___fldiv@rem 000D                     __size_of_I2C_Open 008E  
          __size_of_I2C_MasterStartRx 0004                           ___flmul@grs 0022  
                         _I2C_DO_IDLE C004            Oled_WriteString@characters 0021  
                         _I2C_DO_RCEN C010          __end_of_Current_ReadRegister D526  
          rdBlkRegCompleteHandler@ptr 000A                 Oled_SelectPage@Result 001B  
             ?_I2C_CallbackReturnStop 000A              _I2C_DO_SEND_RESTART_READ BFB0  
         fp__I2C_DO_SEND_RESTART_READ 0000          I2C_CallbackReturnStop@funPtr 000A  
                     ?_I2C_MasterOpen 0001                       ?_I2C_MasterStop 0001  
                     ?_I2C_Initialize 0001               _I2C_CallbackReturnReset BF74  
          fp__I2C_CallbackReturnReset 0000                        __end_of___flge D72C  
                      __end_of___fleq CD90                           vfpfcnvrt@ap 004A  
                         vfpfcnvrt@ct 0058                           vfpfcnvrt@fp 0046  
                      __end_of___wmul C1D2  __size_of_I2C_SetDataCompleteCallback 0018  
                        ??_Oled_Clear 001A                        __end_of_efgtoa FD06  
               __size_of_Oled_Command 0022                        __end_of_floorf DD92  
               ?_I2C_MasterSendTxData 0001                ?_OSCILLATOR_Initialize 0001  
                          floorf@F527 00AE           ??_I2C_DO_SEND_RESTART_WRITE 0001  
                      __end_of_strcpy C70E                        __end_of_strlen C3A0  
                 start_initialization C302                           __end_of_IPL FD87  
     __size_of_PIN_MANAGER_Initialize 0028                           __end_of_pad D08E  
                       ?_I2C_DO_RESET 0001                             _Oled_Data C11E  
                           _Oled_Init CAFE                           ??_I2C_DO_RX 000C  
                         ??_I2C_DO_TX 000C                     ??_I2C_MasterClose 0001  
                   ??_I2C_Master_Init 0012                     ??_I2C_Master_Read 0004  
                   ??_I2C_Master_Wait 0001                ??_I2C_MasterDisableIrq 0001  
                         ??_I2C_Close 0001                     ??_I2C_Master_Stop 0002  
                   ??_I2C_MasterStart 0001                 __end_of___fpclassifyf D424  
                   ??_I2C_MasterWrite 0012        __end_of_I2C_CallbackReturnStop BF74  
              _I2C_DO_RX_NACK_RESTART BFE0                      ?_I2C_DO_TX_EMPTY 0001  
                  __end_of_Oled_Clear C302                    _I2C_MasterClearIrq BF58  
                        _Oled_Command C140                           vfprintf@fmt 009A  
                            ??___flge 0036                              ??___fleq 0009  
                            ??___wmul 0005                   ?_I2C_MasterClearIrq 0001  
                            ??_efgtoa 0041           __end_of_I2C_MasterGetRxData BF80  
                            ??_floorf 001E                 __end_of_I2C_DO_RX_ACK BFD8  
                    _I2C_DO_SEND_STOP BFC8                     ??_I2C_SetCallback 0005  
                 _Oled_WriteCharacter C90A                   I2C_Open@returnValue 0002  
                            ??_strcpy 0005                    _I2C_MasterSendNack BF84  
                            ??_strlen 0003              ?_I2C_MasterEnableRestart 0001  
                           ___fladd@a 0005                             ___fladd@b 0001  
                   _i2c_fsmStateTable FD87                fp__I2C_DO_SEND_RESTART 0000  
              ??_Voltage_ReadRegister 0032                             ___fldiv@a 0005  
                           ___fldiv@b 0001                           __pbssBIGRAM 01C4  
               _I2C_DO_SEND_ADR_WRITE C038                             ___flmul@a 0019  
                           ___flmul@b 0015                             ___flsub@a 0032  
                           ___flsub@b 002E                         __pcstackBANK0 0060  
                      ??_I2C_DO_RESET 0001                   ?_I2C_MasterSendNack 0001  
                   __size_of___xxtofl 01B4          __end_of_I2C_DO_SEND_ADR_READ C038  
                ??_I2C_MasterClearIrq 0001                            ?_Oled_Data 0001  
         __end_of_I2C_DO_ADDRESS_NACK C89A                     ??_Oled_SelectPage 001A  
                          ?_Oled_Init 0001                      _I2C_MasterIsNack C07E  
                ?_Oled_WriteCharacter 0001             _I2C_DO_SEND_RESTART_WRITE BFB8  
                    _I2C_MasterSetIrq BF80                             _atoi$2247 0010  
                           _atoi$2248 0014                             _atoi$2249 0012  
                    _I2C_Master_Start BF98                 _rd2RegCompleteHandler C27E  
                    _I2C_Master_Write BFF0                           _efgtoa$2183 0060  
                         _efgtoa$2184 0062                           _efgtoa$2193 0066  
                         _efgtoa$2194 0068                           _efgtoa$2195 006A  
                         _efgtoa$2189 0064                        _SSD1306_Buffer 05C4  
              _PIN_MANAGER_Initialize C1D2                 _wr2RegCompleteHandler C226  
           ??_I2C_CallbackReturnReset 000C           __end_of_I2C_MasterOperation C4CC  
                ??_I2C_MasterSendNack 0001              rd2RegCompleteHandler@ptr 000A  
                       __pmediumconst FD06                              ?___fladd 0001  
                            ?___fldiv 0001                              ?___awdiv 0001  
                           __ptext100 C334                             __ptext101 C186  
                           __ptext102 0000                              ?___flneg 0001  
                            ?___awmod 0001                              ?___flmul 0015  
                            ?___flsub 002E                              ?___fltol 0001  
                            ?___lldiv 0001                ??_I2C_MasterSendTxData 0001  
           __end_of_i2c_fsmStateTable FDA7              __size_of_I2C_WriteNBytes 005A  
                   __size_of_vfprintf 0064                          fp__I2C_DO_RX 0000  
                        fp__I2C_DO_TX 0000          __size_of_I2C_DO_SEND_RESTART 0008  
                _Current_ReadRegister D424                              _BAUDCON1 000FA7  
  _EUSART1_DefaultOverrunErrorHandler 000000                              ?_isdigit 0001  
             I2C_MasterOperation@read 0010                              _I2C_Open CA70  
                _EUSART1_ErrorHandler 00D6                              ?_isspace 0001  
                            ?_isupper 0001                              ?_sprintf 009E  
                            ?_tolower 0007                        __size_of_fputc 00CA  
                      __size_of_fputs 0044               ??_rd1RegCompleteHandler 000C  
                            ?_strncmp 0001                        __size_of_putch 0002  
               ??_Oled_WriteCharacter 001A               ??_wr1RegCompleteHandler 000C  
          Voltage_ReadRegister@temp_a 0036            Voltage_ReadRegister@temp_b 0034  
                      ___wmul@product 0005                              _PIE1bits 000F9D  
                            _PIR1bits 000F9E                              _PIR2bits 000FA1  
                            _PIR4bits 000FB7                 __end_of_I2C_MasterFsm C90A  
         __end_of_I2C_DO_RX_NACK_STOP BFE0       __end_of_I2C_MasterEnableRestart BF6C  
                      fp__I2C_DO_IDLE 0000                        fp__I2C_DO_RCEN 0000  
                           _vfpfcnvrt E776                 __end_of_I2C_SetBuffer C186  
                           _power_str 00DD                     ___wmul@multiplier 0001  
               ?_Current_ReadRegister 002E                ?_I2C_DO_SEND_ADR_WRITE 0001  
            I2C_MasterSendTxData@data 0001             __size_of_Oled_WriteString 0062  
            wr2RegCompleteHandler@ptr 000A                          _isspace$2278 0007  
                          vfpfcnvrt@c 005B                            vfpfcnvrt@f 0054  
                 I2C_Master_Read@temp 0004                           ??_Oled_Data 0017  
                         _INTCON2bits 000FF1                           ??_Oled_Init 001A  
          ??_I2C_DO_SEND_RESTART_READ 0001              ?_rdBlkRegCompleteHandler 000A  
                          _I2C_Poller C0DE                            _I2C_Status 0150  
                        ?_I2C_DO_IDLE 0001                          ?_I2C_DO_RCEN 0001  
          __end_of_Power_ReadRegister D326                ?_rd2RegCompleteHandler 000A  
                          _EECON1bits 000F7F                   I2C_WriteNBytes@data 0012  
                    ??_I2C_MasterOpen 0001                ?_wr2RegCompleteHandler 000A  
                    ??_I2C_MasterStop 0001              ??_I2C_MasterWaitForEvent 0001  
                    ??_I2C_Initialize 0001             fp__I2C_DO_RX_NACK_RESTART 0000  
                            __Hrparam 0000                            vfprintf@ap 009C  
                            __Lrparam 0000                            vfprintf@fp 0098  
                __end_of_I2C_DO_RESET C028               ??_OSCILLATOR_Initialize 0001  
   __size_of_I2C_Master_RepeatedStart 0008                      __size_of___fladd 04C0  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                _I2C_DO_SEND_ADR_READ C028                      __size_of___flneg 0038  
                    __size_of___awmod 00B0                      __size_of___flmul 042A  
           ?_I2C_Master_RepeatedStart 0001                      __size_of___flsub 0046  
                    __size_of___fltol 0106                      __size_of___lldiv 00A4  
                          ?_vfpfcnvrt 0046                    ___fpclassifyf@F465 00B2  
                     _I2C_MasterClose BF5C           _EUSART1_DefaultErrorHandler 000000  
       I2C_SetAddressNackCallback@ptr 0008                            sprintf@fmt 00A0  
                     I2C_Open@address 0001                       _I2C_Master_Init C654  
                     _I2C_Master_Read C334                              ___xxtofl D9CC  
                     _I2C_Master_Wait C186                           _current_str 00E3  
                 fp__I2C_DO_SEND_STOP 0000                       _I2C_Master_Stop BFA0  
                     _I2C_MasterStart BF64                       _I2C_MasterWrite BFE8  
                    __size_of_isdigit 0038                     ??_I2C_WriteNBytes 0016  
                    __size_of_isspace 0052                              __ptext10 C36A  
                            __ptext11 C4CC                              __ptext20 D628  
                            __ptext12 D08E                              __ptext21 CCE6  
                            __ptext13 BF56                              __ptext30 C058  
                            __ptext22 CD90                              __ptext14 DB80  
                            __ptext31 D234                              __ptext23 CF04  
                            __ptext15 D326                              __ptext40 C5FA  
                            __ptext32 C1AC                              __ptext24 D832  
                            __ptext16 D72C                              __ptext41 C0AA  
                            __ptext33 C76E                              __ptext25 C556  
                            __ptext17 C510                              __ptext50 C01C  
                            __ptext42 CA70                              __ptext34 C90A  
                            __ptext26 C3A0                              __ptext18 EBEE  
                            __ptext51 BFE0                              __ptext43 C0FC  
                            __ptext35 C0C2                              __ptext27 D526  
                            __ptext19 C3D8                              __ptext60 CE40  
                            __ptext52 BFD8                              __ptext44 BFE8  
                            __ptext36 CAFE                              __ptext28 BFFA  
                            __ptext61 C038                              __ptext53 BFD0  
                            __ptext45 C488                              __ptext37 C140  
                            __ptext29 C1D2                              __ptext70 BF84  
                            __ptext62 C028                              __ptext54 BFC8  
                            __ptext46 C0DE                              __ptext38 C2D6  
                            __ptext71 BF78                              __ptext63 C004  
                            __ptext55 BFC0                              __ptext47 C048  
                            __ptext39 C11E                              __ptext80 C97A  
                            __ptext72 BF74                              __ptext64 C9F4  
                            __ptext56 BFB8                              __ptext48 C89A  
                            __ptext81 C162                              __ptext73 BF70  
                            __ptext65 BF80                              __ptext57 BFB0  
                            __ptext49 C834                              __ptext90 CB9C  
                            __ptext82 BF6C                              __ptext74 C448  
                            __ptext66 C07E                              __ptext58 C010  
                            __ptext91 C06A                              __ptext83 BF68  
                            __ptext75 C2AA                              __ptext67 BFA8  
                            __ptext59 CC40                              __ptext92 D424  
                            __ptext84 BF64                              __ptext76 C27E  
                            __ptext68 BF8A                              __ptext93 D9CC  
                            __ptext85 C1FA                              __ptext77 C252  
                            __ptext69 BF7C                              __ptext94 E34C  
                            __ptext86 BF60                              __ptext78 C226  
                            __ptext95 DFB2                              __ptext87 BF5C  
                            __ptext79 C092                              __ptext96 BFF0  
                            __ptext88 BF58                              __ptext97 BFA0  
                            __ptext89 C654                              __ptext98 BF98  
                            __ptext99 BF90                      __size_of_isupper 0038  
 __end_of_I2C_SetDataCompleteCallback C0AA           _I2C_SetDataCompleteCallback C092  
             ?_I2C_DO_RX_NACK_RESTART 0001                      __size_of_sprintf 0052  
                    __size_of_tolower 0060                            strcpy@dest 0001  
                    __size_of_strncmp 00DC              __end_of_I2C_DO_SEND_STOP BFD0  
                       __size_of_atoi 019A                         __size_of_main 0220  
                Oled_Command@data_I2C 0018                       _I2C_SetCallback C97A  
       ??_I2C_SetDataCompleteCallback 000A                              efgtoa@fp 003A  
                            efgtoa@ne 0070                              efgtoa@pp 006E  
                            efgtoa@ou 0074                              isa$xinst 000000  
               ?_I2C_DO_SEND_ADR_READ 0001                              _vfprintf C7D0  
              ??_Current_ReadRegister 0032           _EUSART1_FramingErrorHandler 00DA  
            __end_of_I2C_MasterIsNack C092                       _Oled_SelectPage C0C2  
            __end_of_I2C_MasterSetIrq BF84                        _vfpfcnvrt$2213 0052  
            __end_of_I2C_Master_Start BFA0                        _vfpfcnvrt$2209 0050  
            __end_of_I2C_Master_Write BFFA                            _INTCONbits 000FF2  
                  I2C_WriteNBytes@len 0014                              isdigit@c 0001  
      __end_of_I2C_DO_RX_NACK_RESTART BFE8                           ?_I2C_Poller 0001  
                           sprintf@ap 00A6      __size_of_I2C_MasterEnableRestart 0004  
                            isspace@c 0001                      ___lldiv@dividend 0001  
             ?_PIN_MANAGER_Initialize 0001                   _I2C_DO_SEND_RESTART BFC0  
                           strcpy@src 0003                            _RCSTA1bits 000FAB  
       __size_of_I2C_MasterDisableIrq 0004                              isupper@c 0001  
              fp__I2C_DO_ADDRESS_NACK 0000                             strncmp@_l 0001  
                           strncmp@_r 0003       __size_of_I2C_MasterWaitForEvent 0010  
                 Oled_Command@command 0017                           efgtoa@nmode 0080  
             __end_of_I2C_MasterClose BF60              __size_of_I2C_DO_TX_EMPTY 007C  
                  fp__I2C_DO_TX_EMPTY 0000               __end_of_I2C_Master_Init C6B0  
             __end_of_I2C_Master_Read C36A               __end_of_I2C_Master_Wait C1AC  
             __end_of_I2C_Master_Stop BFA8                           ??_vfpfcnvrt 004C  
             __end_of_I2C_MasterStart BF68               __end_of_I2C_MasterWrite BFF0  
                  _eusart1RxLastError 00DC                  ?_I2C_DO_SEND_RESTART 0001  
                            sprintf@f 00A8                              tolower@c 0007  
                            sprintf@s 009E                __size_of___fpclassifyf 00FE  
                    ___lldiv@quotient 0009                     I2C_Master_Write@d 0002  
        __size_of_I2C_MasterGetRxData 0004                              strncmp@l 0008  
                            strncmp@n 0005                              strncmp@r 000A  
                    _Oled_WriteString C76E         __size_of_Voltage_ReadRegister 0102  
                         _SSPCON1bits 000FC6                           _SSPCON2bits 000FC5  
                       ___fladd@signs 000D           __size_of_I2C_MasterClearIrq 0004  
             __end_of_I2C_SetCallback C9F4        __end_of_PIN_MANAGER_Initialize C1FA  
      __size_of_rd1RegCompleteHandler 002C         __end_of_rd1RegCompleteHandler C27E  
              __size_of_I2C_DO_RX_ACK 0008                      fp__I2C_DO_RX_ACK 0000  
                        ___fladd@aexp 000E                          ___fladd@bexp 000F  
      __size_of_wr1RegCompleteHandler 002C                 __size_of_I2C_DO_RESET 000C  
       __end_of_wr1RegCompleteHandler C2D6          __size_of_I2C_DO_ADDRESS_NACK 0066  
                __size_of_I2C_DO_IDLE 000C                  __size_of_I2C_DO_RCEN 000C  
                  __size_of_I2C_DO_RX 00A6                    __size_of_I2C_DO_TX 00C4  
