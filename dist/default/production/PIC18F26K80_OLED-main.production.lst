

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Aug 11 23:08:50 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text27,global,reloc=2,class=CODE,delta=1
    40                           	psect	text28,global,reloc=2,class=CODE,delta=1
    41                           	psect	text29,global,reloc=2,class=CODE,delta=1
    42                           	psect	text30,global,reloc=2,class=CODE,delta=1
    43                           	psect	text31,global,reloc=2,class=CODE,delta=1
    44                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text33,global,reloc=2,class=CODE,delta=1
    46                           	psect	text34,global,reloc=2,class=CODE,delta=1
    47                           	psect	text35,global,reloc=2,class=CODE,delta=1
    48                           	psect	text36,global,reloc=2,class=CODE,delta=1
    49                           	psect	text37,global,reloc=2,class=CODE,delta=1
    50                           	psect	text38,global,reloc=2,class=CODE,delta=1
    51                           	psect	text39,global,reloc=2,class=CODE,delta=1
    52                           	psect	text40,global,reloc=2,class=CODE,delta=1
    53                           	psect	text41,global,reloc=2,class=CODE,delta=1
    54                           	psect	text42,global,reloc=2,class=CODE,delta=1
    55                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    56                           	psect	text44,global,reloc=2,class=CODE,delta=1
    57                           	psect	text45,global,reloc=2,class=CODE,delta=1
    58                           	psect	text46,global,reloc=2,class=CODE,delta=1
    59                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    61                           	psect	text49,global,reloc=2,class=CODE,delta=1
    62                           	psect	text50,global,reloc=2,class=CODE,delta=1
    63                           	psect	text51,global,reloc=2,class=CODE,delta=1
    64                           	psect	text52,global,reloc=2,class=CODE,delta=1
    65                           	psect	text53,global,reloc=2,class=CODE,delta=1
    66                           	psect	text54,global,reloc=2,class=CODE,delta=1
    67                           	psect	text55,global,reloc=2,class=CODE,delta=1
    68                           	psect	text56,global,reloc=2,class=CODE,delta=1
    69                           	psect	text57,global,reloc=2,class=CODE,delta=1
    70                           	psect	text58,global,reloc=2,class=CODE,delta=1
    71                           	psect	text59,global,reloc=2,class=CODE,delta=1
    72                           	psect	text60,global,reloc=2,class=CODE,delta=1
    73                           	psect	text61,global,reloc=2,class=CODE,delta=1
    74                           	psect	text62,global,reloc=2,class=CODE,delta=1
    75                           	psect	text63,global,reloc=2,class=CODE,delta=1
    76                           	psect	text64,global,reloc=2,class=CODE,delta=1
    77                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    84                           	psect	text72,global,reloc=2,class=CODE,delta=1
    85                           	psect	text73,global,reloc=2,class=CODE,delta=1
    86                           	psect	text74,global,reloc=2,class=CODE,delta=1
    87                           	psect	text75,global,reloc=2,class=CODE,delta=1
    88                           	psect	text76,global,reloc=2,class=CODE,delta=1
    89                           	psect	text77,global,reloc=2,class=CODE,delta=1
    90                           	psect	text78,global,reloc=2,class=CODE,delta=1
    91                           	psect	text79,global,reloc=2,class=CODE,delta=1
    92                           	psect	text80,global,reloc=2,class=CODE,delta=1
    93                           	psect	text81,global,reloc=2,class=CODE,delta=1
    94                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
    97                           	psect	text85,global,reloc=2,class=CODE,delta=1
    98                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   101                           	psect	text89,global,reloc=2,class=CODE,delta=1
   102                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   103                           	psect	text91,global,reloc=2,class=CODE,delta=1
   104                           	psect	text92,global,reloc=2,class=CODE,delta=1
   105                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   108                           	psect	text96,global,reloc=2,class=CODE,delta=1
   109                           	psect	text97,global,reloc=2,class=CODE,delta=1
   110                           	psect	text98,global,reloc=2,class=CODE,delta=1
   111                           	psect	text99,global,reloc=2,class=CODE,delta=1
   112                           	psect	text100,global,reloc=2,class=CODE,delta=1
   113                           	psect	text101,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   115                           	psect	text102,global,reloc=2,class=CODE,delta=1
   116                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   117                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   118                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   119  0000                     
   120                           ; Version 2.20
   121                           ; Generated 05/05/2020 GMT
   122                           ; 
   123                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   124                           ; All rights reserved.
   125                           ; 
   126                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   127                           ; 
   128                           ; Redistribution and use in source and binary forms, with or without modification, are
   129                           ; permitted provided that the following conditions are met:
   130                           ; 
   131                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   132                           ;        conditions and the following disclaimer.
   133                           ; 
   134                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   135                           ;        of conditions and the following disclaimer in the documentation and/or other
   136                           ;        materials provided with the distribution.
   137                           ; 
   138                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   139                           ;        software without specific prior written permission.
   140                           ; 
   141                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   142                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   143                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   144                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   145                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   146                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   147                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   148                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   149                           ; 
   150                           ; 
   151                           ; Code-generator required, PIC18F26K80 Definitions
   152                           ; 
   153                           ; SFR Addresses
   154  0000                     
   155 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   156  0000                     
   157 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   158  0000                     
   159 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   160  0000                     
   161                           	psect	mediumconst
   162  00FD2E                     __pmediumconst:
   163                           	callstack 0
   164  00FD2E  00                 	db	0
   165  00FD2F  00                 	db	0
   166  00FD30  00                 	db	0
   167  00FD31  00                 	db	0
   168  00FD32  00                 	db	0
   169  00FD33  00                 	db	0
   170  00FD34  00                 	db	0
   171  00FD35  00                 	db	0
   172  00FD36  00                 	db	0
   173  00FD37  00                 	db	0
   174  00FD38  00                 	db	0
   175  00FD39  00                 	db	0
   176  00FD3A  00                 	db	0
   177  00FD3B  00                 	db	0
   178  00FD3C  00                 	db	0
   179  00FD3D  00                 	db	0
   180  00FD3E  00                 	db	0
   181  00FD3F  03                 	db	3
   182  00FD40  FF                 	db	255
   183  00FD41  FF                 	db	255
   184  00FD42  C0                 	db	192
   185  00FD43  03                 	db	3
   186  00FD44  FF                 	db	255
   187  00FD45  FF                 	db	255
   188  00FD46  C0                 	db	192
   189  00FD47  03                 	db	3
   190  00FD48  FC                 	db	252
   191  00FD49  3F                 	db	63
   192  00FD4A  C0                 	db	192
   193  00FD4B  03                 	db	3
   194  00FD4C  F3                 	db	243
   195  00FD4D  CF                 	db	207
   196  00FD4E  C0                 	db	192
   197  00FD4F  03                 	db	3
   198  00FD50  EF                 	db	239
   199  00FD51  F3                 	db	243
   200  00FD52  C0                 	db	192
   201  00FD53  03                 	db	3
   202  00FD54  DF                 	db	223
   203  00FD55  FB                 	db	251
   204  00FD56  C0                 	db	192
   205  00FD57  03                 	db	3
   206  00FD58  DB                 	db	219
   207  00FD59  FB                 	db	251
   208  00FD5A  C0                 	db	192
   209  00FD5B  03                 	db	3
   210  00FD5C  CF                 	db	207
   211  00FD5D  F3                 	db	243
   212  00FD5E  C0                 	db	192
   213  00FD5F  03                 	db	3
   214  00FD60  E7                 	db	231
   215  00FD61  E7                 	db	231
   216  00FD62  C0                 	db	192
   217  00FD63  03                 	db	3
   218  00FD64  F8                 	db	248
   219  00FD65  1F                 	db	31
   220  00FD66  C0                 	db	192
   221  00FD67  03                 	db	3
   222  00FD68  FF                 	db	255
   223  00FD69  FF                 	db	255
   224  00FD6A  C0                 	db	192
   225  00FD6B  03                 	db	3
   226  00FD6C  FF                 	db	255
   227  00FD6D  FF                 	db	255
   228  00FD6E  C0                 	db	192
   229  00FD6F  03                 	db	3
   230  00FD70  FF                 	db	255
   231  00FD71  FF                 	db	255
   232  00FD72  C0                 	db	192
   233  00FD73  00                 	db	0
   234  00FD74  01                 	db	1
   235  00FD75  00                 	db	0
   236  00FD76  00                 	db	0
   237  00FD77  03                 	db	3
   238  00FD78  EF                 	db	239
   239  00FD79  FF                 	db	255
   240  00FD7A  C0                 	db	192
   241  00FD7B  02                 	db	2
   242  00FD7C  FF                 	db	255
   243  00FD7D  FF                 	db	255
   244  00FD7E  C0                 	db	192
   245  00FD7F  00                 	db	0
   246  00FD80  3F                 	db	63
   247  00FD81  E0                 	db	224
   248  00FD82  00                 	db	0
   249  00FD83  03                 	db	3
   250  00FD84  BF                 	db	191
   251  00FD85  E0                 	db	224
   252  00FD86  00                 	db	0
   253  00FD87  00                 	db	0
   254  00FD88  00                 	db	0
   255  00FD89  00                 	db	0
   256  00FD8A  00                 	db	0
   257  00FD8B  03                 	db	3
   258  00FD8C  E3                 	db	227
   259  00FD8D  FC                 	db	252
   260  00FD8E  00                 	db	0
   261  00FD8F  03                 	db	3
   262  00FD90  FF                 	db	255
   263  00FD91  7C                 	db	124
   264  00FD92  00                 	db	0
   265  00FD93  02                 	db	2
   266  00FD94  FF                 	db	255
   267  00FD95  E0                 	db	224
   268  00FD96  00                 	db	0
   269  00FD97  00                 	db	0
   270  00FD98  08                 	db	8
   271  00FD99  00                 	db	0
   272  00FD9A  00                 	db	0
   273  00FD9B  03                 	db	3
   274  00FD9C  FC                 	db	252
   275  00FD9D  00                 	db	0
   276  00FD9E  00                 	db	0
   277  00FD9F  00                 	db	0
   278  00FDA0  00                 	db	0
   279  00FDA1  00                 	db	0
   280  00FDA2  00                 	db	0
   281  00FDA3  00                 	db	0
   282  00FDA4  00                 	db	0
   283  00FDA5  00                 	db	0
   284  00FDA6  00                 	db	0
   285  00FDA7  00                 	db	0
   286  00FDA8  00                 	db	0
   287  00FDA9  00                 	db	0
   288  00FDAA  00                 	db	0
   289  00FDAB  00                 	db	0
   290  00FDAC  00                 	db	0
   291  00FDAD  00                 	db	0
   292  00FDAE  00                 	db	0
   293  00FDAF                     __end_of_IPL:
   294                           	callstack 0
   295  00FDAF                     _i2c_fsmStateTable:
   296                           	callstack 0
   297  00FDAF  7C                 	db	low _I2C_DO_IDLE
   298  00FDB0  C0                 	db	high _I2C_DO_IDLE
   299  00FDB1  A0                 	db	low _I2C_DO_SEND_ADR_READ
   300  00FDB2  C0                 	db	high _I2C_DO_SEND_ADR_READ
   301  00FDB3  B0                 	db	low _I2C_DO_SEND_ADR_WRITE
   302  00FDB4  C0                 	db	high _I2C_DO_SEND_ADR_WRITE
   303  00FDB5  B8                 	db	low _I2C_DO_TX
   304  00FDB6  CE                 	db	high _I2C_DO_TX
   305  00FDB7  B8                 	db	low _I2C_DO_RX
   306  00FDB8  CC                 	db	high _I2C_DO_RX
   307  00FDB9  88                 	db	low _I2C_DO_RCEN
   308  00FDBA  C0                 	db	high _I2C_DO_RCEN
   309  00FDBB  6C                 	db	low _I2C_DO_TX_EMPTY
   310  00FDBC  CA                 	db	high _I2C_DO_TX_EMPTY
   311  00FDBD  28                 	db	low _I2C_DO_SEND_RESTART_READ
   312  00FDBE  C0                 	db	high _I2C_DO_SEND_RESTART_READ
   313  00FDBF  30                 	db	low _I2C_DO_SEND_RESTART_WRITE
   314  00FDC0  C0                 	db	high _I2C_DO_SEND_RESTART_WRITE
   315  00FDC1  38                 	db	low _I2C_DO_SEND_RESTART
   316  00FDC2  C0                 	db	high _I2C_DO_SEND_RESTART
   317  00FDC3  40                 	db	low _I2C_DO_SEND_STOP
   318  00FDC4  C0                 	db	high _I2C_DO_SEND_STOP
   319  00FDC5  48                 	db	low _I2C_DO_RX_ACK
   320  00FDC6  C0                 	db	high _I2C_DO_RX_ACK
   321  00FDC7  50                 	db	low _I2C_DO_RX_NACK_STOP
   322  00FDC8  C0                 	db	high _I2C_DO_RX_NACK_STOP
   323  00FDC9  58                 	db	low _I2C_DO_RX_NACK_RESTART
   324  00FDCA  C0                 	db	high _I2C_DO_RX_NACK_RESTART
   325  00FDCB  94                 	db	low _I2C_DO_RESET
   326  00FDCC  C0                 	db	high _I2C_DO_RESET
   327  00FDCD  AC                 	db	low _I2C_DO_ADDRESS_NACK
   328  00FDCE  C8                 	db	high _I2C_DO_ADDRESS_NACK
   329  00FDCF                     __end_of_i2c_fsmStateTable:
   330                           	callstack 0
   331  00FDCF                     _ASCII:
   332                           	callstack 0
   333  00FDCF  00                 	db	0
   334  00FDD0  00                 	db	0
   335  00FDD1  00                 	db	0
   336  00FDD2  00                 	db	0
   337  00FDD3  00                 	db	0
   338  00FDD4  00                 	db	0
   339  00FDD5  00                 	db	0
   340  00FDD6  5F                 	db	95
   341  00FDD7  00                 	db	0
   342  00FDD8  00                 	db	0
   343  00FDD9  00                 	db	0
   344  00FDDA  07                 	db	7
   345  00FDDB  00                 	db	0
   346  00FDDC  07                 	db	7
   347  00FDDD  00                 	db	0
   348  00FDDE  14                 	db	20
   349  00FDDF  7F                 	db	127
   350  00FDE0  14                 	db	20
   351  00FDE1  7F                 	db	127
   352  00FDE2  14                 	db	20
   353  00FDE3  24                 	db	36
   354  00FDE4  2A                 	db	42
   355  00FDE5  7F                 	db	127
   356  00FDE6  2A                 	db	42
   357  00FDE7  12                 	db	18
   358  00FDE8  23                 	db	35
   359  00FDE9  13                 	db	19
   360  00FDEA  08                 	db	8
   361  00FDEB  64                 	db	100
   362  00FDEC  62                 	db	98
   363  00FDED  36                 	db	54
   364  00FDEE  49                 	db	73
   365  00FDEF  55                 	db	85
   366  00FDF0  22                 	db	34
   367  00FDF1  50                 	db	80
   368  00FDF2  00                 	db	0
   369  00FDF3  05                 	db	5
   370  00FDF4  03                 	db	3
   371  00FDF5  00                 	db	0
   372  00FDF6  00                 	db	0
   373  00FDF7  00                 	db	0
   374  00FDF8  1C                 	db	28
   375  00FDF9  22                 	db	34
   376  00FDFA  41                 	db	65
   377  00FDFB  00                 	db	0
   378  00FDFC  00                 	db	0
   379  00FDFD  41                 	db	65
   380  00FDFE  22                 	db	34
   381  00FDFF  1C                 	db	28
   382  00FE00  00                 	db	0
   383  00FE01  14                 	db	20
   384  00FE02  08                 	db	8
   385  00FE03  3E                 	db	62
   386  00FE04  08                 	db	8
   387  00FE05  14                 	db	20
   388  00FE06  08                 	db	8
   389  00FE07  08                 	db	8
   390  00FE08  3E                 	db	62
   391  00FE09  08                 	db	8
   392  00FE0A  08                 	db	8
   393  00FE0B  00                 	db	0
   394  00FE0C  50                 	db	80
   395  00FE0D  30                 	db	48
   396  00FE0E  00                 	db	0
   397  00FE0F  00                 	db	0
   398  00FE10  08                 	db	8
   399  00FE11  08                 	db	8
   400  00FE12  08                 	db	8
   401  00FE13  08                 	db	8
   402  00FE14  08                 	db	8
   403  00FE15  00                 	db	0
   404  00FE16  60                 	db	96
   405  00FE17  60                 	db	96
   406  00FE18  00                 	db	0
   407  00FE19  00                 	db	0
   408  00FE1A  20                 	db	32
   409  00FE1B  10                 	db	16
   410  00FE1C  08                 	db	8
   411  00FE1D  04                 	db	4
   412  00FE1E  02                 	db	2
   413  00FE1F  3E                 	db	62
   414  00FE20  51                 	db	81
   415  00FE21  49                 	db	73
   416  00FE22  45                 	db	69
   417  00FE23  3E                 	db	62
   418  00FE24  00                 	db	0
   419  00FE25  42                 	db	66
   420  00FE26  7F                 	db	127
   421  00FE27  40                 	db	64
   422  00FE28  00                 	db	0
   423  00FE29  42                 	db	66
   424  00FE2A  61                 	db	97
   425  00FE2B  51                 	db	81
   426  00FE2C  49                 	db	73
   427  00FE2D  46                 	db	70
   428  00FE2E  21                 	db	33
   429  00FE2F  41                 	db	65
   430  00FE30  45                 	db	69
   431  00FE31  4B                 	db	75
   432  00FE32  31                 	db	49
   433  00FE33  18                 	db	24
   434  00FE34  14                 	db	20
   435  00FE35  12                 	db	18
   436  00FE36  7F                 	db	127
   437  00FE37  10                 	db	16
   438  00FE38  27                 	db	39
   439  00FE39  45                 	db	69
   440  00FE3A  45                 	db	69
   441  00FE3B  45                 	db	69
   442  00FE3C  39                 	db	57
   443  00FE3D  3C                 	db	60
   444  00FE3E  4A                 	db	74
   445  00FE3F  49                 	db	73
   446  00FE40  49                 	db	73
   447  00FE41  30                 	db	48
   448  00FE42  01                 	db	1
   449  00FE43  71                 	db	113
   450  00FE44  09                 	db	9
   451  00FE45  05                 	db	5
   452  00FE46  03                 	db	3
   453  00FE47  36                 	db	54
   454  00FE48  49                 	db	73
   455  00FE49  49                 	db	73
   456  00FE4A  49                 	db	73
   457  00FE4B  36                 	db	54
   458  00FE4C  06                 	db	6
   459  00FE4D  49                 	db	73
   460  00FE4E  49                 	db	73
   461  00FE4F  29                 	db	41
   462  00FE50  1E                 	db	30
   463  00FE51  00                 	db	0
   464  00FE52  36                 	db	54
   465  00FE53  36                 	db	54
   466  00FE54  00                 	db	0
   467  00FE55  00                 	db	0
   468  00FE56  00                 	db	0
   469  00FE57  56                 	db	86
   470  00FE58  36                 	db	54
   471  00FE59  00                 	db	0
   472  00FE5A  00                 	db	0
   473  00FE5B  08                 	db	8
   474  00FE5C  14                 	db	20
   475  00FE5D  22                 	db	34
   476  00FE5E  41                 	db	65
   477  00FE5F  00                 	db	0
   478  00FE60  14                 	db	20
   479  00FE61  14                 	db	20
   480  00FE62  14                 	db	20
   481  00FE63  14                 	db	20
   482  00FE64  14                 	db	20
   483  00FE65  00                 	db	0
   484  00FE66  41                 	db	65
   485  00FE67  22                 	db	34
   486  00FE68  14                 	db	20
   487  00FE69  08                 	db	8
   488  00FE6A  02                 	db	2
   489  00FE6B  01                 	db	1
   490  00FE6C  51                 	db	81
   491  00FE6D  09                 	db	9
   492  00FE6E  06                 	db	6
   493  00FE6F  32                 	db	50
   494  00FE70  49                 	db	73
   495  00FE71  79                 	db	121
   496  00FE72  41                 	db	65
   497  00FE73  3E                 	db	62
   498  00FE74  7E                 	db	126
   499  00FE75  11                 	db	17
   500  00FE76  11                 	db	17
   501  00FE77  11                 	db	17
   502  00FE78  7E                 	db	126
   503  00FE79  7F                 	db	127
   504  00FE7A  49                 	db	73
   505  00FE7B  49                 	db	73
   506  00FE7C  49                 	db	73
   507  00FE7D  36                 	db	54
   508  00FE7E  3E                 	db	62
   509  00FE7F  41                 	db	65
   510  00FE80  41                 	db	65
   511  00FE81  41                 	db	65
   512  00FE82  22                 	db	34
   513  00FE83  7F                 	db	127
   514  00FE84  41                 	db	65
   515  00FE85  41                 	db	65
   516  00FE86  22                 	db	34
   517  00FE87  1C                 	db	28
   518  00FE88  7F                 	db	127
   519  00FE89  49                 	db	73
   520  00FE8A  49                 	db	73
   521  00FE8B  49                 	db	73
   522  00FE8C  41                 	db	65
   523  00FE8D  7F                 	db	127
   524  00FE8E  09                 	db	9
   525  00FE8F  09                 	db	9
   526  00FE90  09                 	db	9
   527  00FE91  01                 	db	1
   528  00FE92  3E                 	db	62
   529  00FE93  41                 	db	65
   530  00FE94  49                 	db	73
   531  00FE95  49                 	db	73
   532  00FE96  7A                 	db	122
   533  00FE97  7F                 	db	127
   534  00FE98  08                 	db	8
   535  00FE99  08                 	db	8
   536  00FE9A  08                 	db	8
   537  00FE9B  7F                 	db	127
   538  00FE9C  00                 	db	0
   539  00FE9D  41                 	db	65
   540  00FE9E  7F                 	db	127
   541  00FE9F  41                 	db	65
   542  00FEA0  00                 	db	0
   543  00FEA1  20                 	db	32
   544  00FEA2  40                 	db	64
   545  00FEA3  41                 	db	65
   546  00FEA4  3F                 	db	63
   547  00FEA5  01                 	db	1
   548  00FEA6  7F                 	db	127
   549  00FEA7  08                 	db	8
   550  00FEA8  14                 	db	20
   551  00FEA9  22                 	db	34
   552  00FEAA  41                 	db	65
   553  00FEAB  7F                 	db	127
   554  00FEAC  40                 	db	64
   555  00FEAD  40                 	db	64
   556  00FEAE  40                 	db	64
   557  00FEAF  40                 	db	64
   558  00FEB0  7F                 	db	127
   559  00FEB1  02                 	db	2
   560  00FEB2  0C                 	db	12
   561  00FEB3  02                 	db	2
   562  00FEB4  7F                 	db	127
   563  00FEB5  7F                 	db	127
   564  00FEB6  04                 	db	4
   565  00FEB7  08                 	db	8
   566  00FEB8  10                 	db	16
   567  00FEB9  7F                 	db	127
   568  00FEBA  3E                 	db	62
   569  00FEBB  41                 	db	65
   570  00FEBC  41                 	db	65
   571  00FEBD  41                 	db	65
   572  00FEBE  3E                 	db	62
   573  00FEBF  7F                 	db	127
   574  00FEC0  09                 	db	9
   575  00FEC1  09                 	db	9
   576  00FEC2  09                 	db	9
   577  00FEC3  06                 	db	6
   578  00FEC4  3E                 	db	62
   579  00FEC5  41                 	db	65
   580  00FEC6  51                 	db	81
   581  00FEC7  21                 	db	33
   582  00FEC8  5E                 	db	94
   583  00FEC9  7F                 	db	127
   584  00FECA  09                 	db	9
   585  00FECB  19                 	db	25
   586  00FECC  29                 	db	41
   587  00FECD  46                 	db	70
   588  00FECE  46                 	db	70
   589  00FECF  49                 	db	73
   590  00FED0  49                 	db	73
   591  00FED1  49                 	db	73
   592  00FED2  31                 	db	49
   593  00FED3  01                 	db	1
   594  00FED4  01                 	db	1
   595  00FED5  7F                 	db	127
   596  00FED6  01                 	db	1
   597  00FED7  01                 	db	1
   598  00FED8  3F                 	db	63
   599  00FED9  40                 	db	64
   600  00FEDA  40                 	db	64
   601  00FEDB  40                 	db	64
   602  00FEDC  3F                 	db	63
   603  00FEDD  1F                 	db	31
   604  00FEDE  20                 	db	32
   605  00FEDF  40                 	db	64
   606  00FEE0  20                 	db	32
   607  00FEE1  1F                 	db	31
   608  00FEE2  3F                 	db	63
   609  00FEE3  40                 	db	64
   610  00FEE4  38                 	db	56
   611  00FEE5  40                 	db	64
   612  00FEE6  3F                 	db	63
   613  00FEE7  63                 	db	99
   614  00FEE8  14                 	db	20
   615  00FEE9  08                 	db	8
   616  00FEEA  14                 	db	20
   617  00FEEB  63                 	db	99
   618  00FEEC  07                 	db	7
   619  00FEED  08                 	db	8
   620  00FEEE  70                 	db	112
   621  00FEEF  08                 	db	8
   622  00FEF0  07                 	db	7
   623  00FEF1  61                 	db	97
   624  00FEF2  51                 	db	81
   625  00FEF3  49                 	db	73
   626  00FEF4  45                 	db	69
   627  00FEF5  43                 	db	67
   628  00FEF6  00                 	db	0
   629  00FEF7  7F                 	db	127
   630  00FEF8  41                 	db	65
   631  00FEF9  41                 	db	65
   632  00FEFA  00                 	db	0
   633  00FEFB  02                 	db	2
   634  00FEFC  04                 	db	4
   635  00FEFD  08                 	db	8
   636  00FEFE  10                 	db	16
   637  00FEFF  20                 	db	32
   638  00FF00  00                 	db	0
   639  00FF01  41                 	db	65
   640  00FF02  41                 	db	65
   641  00FF03  7F                 	db	127
   642  00FF04  00                 	db	0
   643  00FF05  04                 	db	4
   644  00FF06  02                 	db	2
   645  00FF07  01                 	db	1
   646  00FF08  02                 	db	2
   647  00FF09  04                 	db	4
   648  00FF0A  40                 	db	64
   649  00FF0B  40                 	db	64
   650  00FF0C  40                 	db	64
   651  00FF0D  40                 	db	64
   652  00FF0E  40                 	db	64
   653  00FF0F  00                 	db	0
   654  00FF10  01                 	db	1
   655  00FF11  02                 	db	2
   656  00FF12  04                 	db	4
   657  00FF13  00                 	db	0
   658  00FF14  20                 	db	32
   659  00FF15  54                 	db	84
   660  00FF16  54                 	db	84
   661  00FF17  54                 	db	84
   662  00FF18  78                 	db	120
   663  00FF19  7F                 	db	127
   664  00FF1A  48                 	db	72
   665  00FF1B  44                 	db	68
   666  00FF1C  44                 	db	68
   667  00FF1D  38                 	db	56
   668  00FF1E  38                 	db	56
   669  00FF1F  44                 	db	68
   670  00FF20  44                 	db	68
   671  00FF21  44                 	db	68
   672  00FF22  20                 	db	32
   673  00FF23  38                 	db	56
   674  00FF24  44                 	db	68
   675  00FF25  44                 	db	68
   676  00FF26  48                 	db	72
   677  00FF27  7F                 	db	127
   678  00FF28  38                 	db	56
   679  00FF29  54                 	db	84
   680  00FF2A  54                 	db	84
   681  00FF2B  54                 	db	84
   682  00FF2C  18                 	db	24
   683  00FF2D  08                 	db	8
   684  00FF2E  7E                 	db	126
   685  00FF2F  09                 	db	9
   686  00FF30  01                 	db	1
   687  00FF31  02                 	db	2
   688  00FF32  0C                 	db	12
   689  00FF33  52                 	db	82
   690  00FF34  52                 	db	82
   691  00FF35  52                 	db	82
   692  00FF36  3E                 	db	62
   693  00FF37  7F                 	db	127
   694  00FF38  08                 	db	8
   695  00FF39  04                 	db	4
   696  00FF3A  04                 	db	4
   697  00FF3B  78                 	db	120
   698  00FF3C  00                 	db	0
   699  00FF3D  44                 	db	68
   700  00FF3E  7D                 	db	125
   701  00FF3F  40                 	db	64
   702  00FF40  00                 	db	0
   703  00FF41  20                 	db	32
   704  00FF42  40                 	db	64
   705  00FF43  44                 	db	68
   706  00FF44  3D                 	db	61
   707  00FF45  00                 	db	0
   708  00FF46  7F                 	db	127
   709  00FF47  10                 	db	16
   710  00FF48  28                 	db	40
   711  00FF49  44                 	db	68
   712  00FF4A  00                 	db	0
   713  00FF4B  00                 	db	0
   714  00FF4C  41                 	db	65
   715  00FF4D  7F                 	db	127
   716  00FF4E  40                 	db	64
   717  00FF4F  00                 	db	0
   718  00FF50  7C                 	db	124
   719  00FF51  04                 	db	4
   720  00FF52  18                 	db	24
   721  00FF53  04                 	db	4
   722  00FF54  78                 	db	120
   723  00FF55  7C                 	db	124
   724  00FF56  08                 	db	8
   725  00FF57  04                 	db	4
   726  00FF58  04                 	db	4
   727  00FF59  78                 	db	120
   728  00FF5A  38                 	db	56
   729  00FF5B  44                 	db	68
   730  00FF5C  44                 	db	68
   731  00FF5D  44                 	db	68
   732  00FF5E  38                 	db	56
   733  00FF5F  7C                 	db	124
   734  00FF60  14                 	db	20
   735  00FF61  14                 	db	20
   736  00FF62  14                 	db	20
   737  00FF63  08                 	db	8
   738  00FF64  08                 	db	8
   739  00FF65  14                 	db	20
   740  00FF66  14                 	db	20
   741  00FF67  18                 	db	24
   742  00FF68  7C                 	db	124
   743  00FF69  7C                 	db	124
   744  00FF6A  08                 	db	8
   745  00FF6B  04                 	db	4
   746  00FF6C  04                 	db	4
   747  00FF6D  08                 	db	8
   748  00FF6E  48                 	db	72
   749  00FF6F  54                 	db	84
   750  00FF70  54                 	db	84
   751  00FF71  54                 	db	84
   752  00FF72  20                 	db	32
   753  00FF73  04                 	db	4
   754  00FF74  3F                 	db	63
   755  00FF75  44                 	db	68
   756  00FF76  40                 	db	64
   757  00FF77  20                 	db	32
   758  00FF78  3C                 	db	60
   759  00FF79  40                 	db	64
   760  00FF7A  40                 	db	64
   761  00FF7B  20                 	db	32
   762  00FF7C  7C                 	db	124
   763  00FF7D  1C                 	db	28
   764  00FF7E  20                 	db	32
   765  00FF7F  40                 	db	64
   766  00FF80  20                 	db	32
   767  00FF81  1C                 	db	28
   768  00FF82  3C                 	db	60
   769  00FF83  40                 	db	64
   770  00FF84  30                 	db	48
   771  00FF85  40                 	db	64
   772  00FF86  3C                 	db	60
   773  00FF87  44                 	db	68
   774  00FF88  28                 	db	40
   775  00FF89  10                 	db	16
   776  00FF8A  28                 	db	40
   777  00FF8B  44                 	db	68
   778  00FF8C  0C                 	db	12
   779  00FF8D  50                 	db	80
   780  00FF8E  50                 	db	80
   781  00FF8F  50                 	db	80
   782  00FF90  3C                 	db	60
   783  00FF91  44                 	db	68
   784  00FF92  64                 	db	100
   785  00FF93  54                 	db	84
   786  00FF94  4C                 	db	76
   787  00FF95  44                 	db	68
   788  00FF96  00                 	db	0
   789  00FF97  08                 	db	8
   790  00FF98  36                 	db	54
   791  00FF99  41                 	db	65
   792  00FF9A  00                 	db	0
   793  00FF9B  00                 	db	0
   794  00FF9C  00                 	db	0
   795  00FF9D  7F                 	db	127
   796  00FF9E  00                 	db	0
   797  00FF9F  00                 	db	0
   798  00FFA0  00                 	db	0
   799  00FFA1  41                 	db	65
   800  00FFA2  36                 	db	54
   801  00FFA3  08                 	db	8
   802  00FFA4  00                 	db	0
   803  00FFA5  10                 	db	16
   804  00FFA6  08                 	db	8
   805  00FFA7  08                 	db	8
   806  00FFA8  10                 	db	16
   807  00FFA9  08                 	db	8
   808  00FFAA  78                 	db	120
   809  00FFAB  46                 	db	70
   810  00FFAC  41                 	db	65
   811  00FFAD  46                 	db	70
   812  00FFAE  78                 	db	120
   813  00FFAF                     __end_of_ASCII:
   814                           	callstack 0
   815  0000                     _WPUB	set	3931
   816  0000                     _ANCON1	set	3932
   817  0000                     _ANCON0	set	3933
   818  0000                     _TXREG1	set	4013
   819  0000                     _RCREG1	set	4014
   820  0000                     _RCSTA1bits	set	4011
   821  0000                     _TXSTA1bits	set	4012
   822  0000                     _SPBRGH1	set	3965
   823  0000                     _SPBRG1	set	4015
   824  0000                     _TXSTA1	set	4012
   825  0000                     _RCSTA1	set	4011
   826  0000                     _BAUDCON1	set	4007
   827  0000                     _PIR4bits	set	4023
   828  0000                     _EEDATA	set	3955
   829  0000                     _EEADR	set	3956
   830  0000                     _EEADRH	set	3957
   831  0000                     _EECON2	set	3966
   832  0000                     _EECON1bits	set	3967
   833  0000                     _TABLAT	set	4085
   834  0000                     _TBLPTRL	set	4086
   835  0000                     _TBLPTRH	set	4087
   836  0000                     _TBLPTRU	set	4088
   837  0000                     _PIR1bits	set	3998
   838  0000                     _PIE1bits	set	3997
   839  0000                     _SSPSTATbits	set	4039
   840  0000                     _PIR2bits	set	4001
   841  0000                     _SSPCON2bits	set	4037
   842  0000                     _SSPBUF	set	4041
   843  0000                     _SSPCON1bits	set	4038
   844  0000                     _SSPADD	set	4040
   845  0000                     _SSPCON2	set	4037
   846  0000                     _SSPCON1	set	4038
   847  0000                     _SSPSTAT	set	4039
   848  0000                     _INTCONbits	set	4082
   849  0000                     _INTCON2bits	set	4081
   850  0000                     _TRISC	set	3988
   851  0000                     _TRISB	set	3987
   852  0000                     _TRISA	set	3986
   853  0000                     _LATC	set	3979
   854  0000                     _LATB	set	3978
   855  0000                     _LATA	set	3977
   856  0000                     _REFOCON	set	3994
   857  0000                     _OSCTUNE	set	3995
   858  0000                     _OSCCON2	set	4050
   859  0000                     _OSCCON	set	4051
   860  0000                     _TRISC4	set	31908
   861  0000                     _TRISC3	set	31907
   862  0000                     _ACKEN	set	32300
   863  0000                     _ACKDT	set	32301
   864  0000                     _RCEN	set	32299
   865  0000                     _PEN	set	32298
   866  0000                     _RSEN	set	32297
   867  0000                     _SEN	set	32296
   868  00FFAF                     STR_6:
   869  00FFAF  20                 	db	32
   870  00FFB0  20                 	db	32
   871  00FFB1  20                 	db	32
   872  00FFB2  20                 	db	32
   873  00FFB3  42                 	db	66	;'B'
   874  00FFB4  61                 	db	97	;'a'
   875  00FFB5  74                 	db	116	;'t'
   876  00FFB6  65                 	db	101	;'e'
   877  00FFB7  72                 	db	114	;'r'
   878  00FFB8  69                 	db	105	;'i'
   879  00FFB9  61                 	db	97	;'a'
   880  00FFBA  20                 	db	32
   881  00FFBB  37                 	db	55	;'7'
   882  00FFBC  2E                 	db	46
   883  00FFBD  34                 	db	52	;'4'
   884  00FFBE  56                 	db	86	;'V'
   885  00FFBF  20                 	db	32
   886  00FFC0  00                 	db	0
   887  00FFC1                     STR_9:
   888  00FFC1  50                 	db	80	;'P'
   889  00FFC2  6F                 	db	111	;'o'
   890  00FFC3  74                 	db	116	;'t'
   891  00FFC4  65                 	db	101	;'e'
   892  00FFC5  6E                 	db	110	;'n'
   893  00FFC6  63                 	db	99	;'c'
   894  00FFC7  69                 	db	105	;'i'
   895  00FFC8  61                 	db	97	;'a'
   896  00FFC9  3A                 	db	58	;':'
   897  00FFCA  20                 	db	32
   898  00FFCB  00                 	db	0
   899  00FFCC                     STR_8:
   900  00FFCC  43                 	db	67	;'C'
   901  00FFCD  6F                 	db	111	;'o'
   902  00FFCE  72                 	db	114	;'r'
   903  00FFCF  72                 	db	114	;'r'
   904  00FFD0  65                 	db	101	;'e'
   905  00FFD1  6E                 	db	110	;'n'
   906  00FFD2  74                 	db	116	;'t'
   907  00FFD3  65                 	db	101	;'e'
   908  00FFD4  3A                 	db	58	;':'
   909  00FFD5  20                 	db	32
   910  00FFD6  00                 	db	0
   911  00FFD7                     STR_7:
   912  00FFD7  54                 	db	84	;'T'
   913  00FFD8  65                 	db	101	;'e'
   914  00FFD9  6E                 	db	110	;'n'
   915  00FFDA  73                 	db	115	;'s'
   916  00FFDB  61                 	db	97	;'a'
   917  00FFDC  6F                 	db	111	;'o'
   918  00FFDD  3A                 	db	58	;':'
   919  00FFDE  20                 	db	32
   920  00FFDF  00                 	db	0
   921  00FFE0                     STR_3:
   922  00FFE0  25                 	db	37
   923  00FFE1  2E                 	db	46
   924  00FFE2  32                 	db	50	;'2'
   925  00FFE3  66                 	db	102	;'f'
   926  00FFE4  00                 	db	0
   927  00FFE5                     STR_10:
   928  00FFE5  49                 	db	73	;'I'
   929  00FFE6  4E                 	db	78	;'N'
   930  00FFE7  46                 	db	70	;'F'
   931  00FFE8  00                 	db	0
   932  00FFE9                     STR_14:
   933  00FFE9  4E                 	db	78	;'N'
   934  00FFEA  41                 	db	65	;'A'
   935  00FFEB  4E                 	db	78	;'N'
   936  00FFEC  00                 	db	0
   937  00FFED                     STR_11:
   938  00FFED  69                 	db	105	;'i'
   939  00FFEE  6E                 	db	110	;'n'
   940  00FFEF  66                 	db	102	;'f'
   941  00FFF0  00                 	db	0
   942  00FFF1                     STR_15:
   943  00FFF1  6E                 	db	110	;'n'
   944  00FFF2  61                 	db	97	;'a'
   945  00FFF3  6E                 	db	110	;'n'
   946  00FFF4  00                 	db	0
   947  00FFF5                     STR_2:
   948  00FFF5  4F                 	db	79	;'O'
   949  00FFF6  4C                 	db	76	;'L'
   950  00FFF7  41                 	db	65	;'A'
   951  00FFF8  00                 	db	0
   952  00FFF9                     STR_18:
   953  00FFF9  6C                 	db	108	;'l'
   954  00FFFA  66                 	db	102	;'f'
   955  00FFFB  00                 	db	0
   956  00FFFC                     STR_1:
   957  00FFFC  4F                 	db	79	;'O'
   958  00FFFD  49                 	db	73	;'I'
   959  00FFFE  00                 	db	0
   960  00FFFF  00                 	db	0	; dummy byte at the end
   961  0000                     
   962                           ; #config settings
   963                           
   964                           	psect	cinit
   965  00C37A                     __pcinit:
   966                           	callstack 0
   967  00C37A                     start_initialization:
   968                           	callstack 0
   969  00C37A                     __initialization:
   970                           	callstack 0
   971                           
   972                           ; Clear objects allocated to BIGRAM (2048 bytes)
   973  00C37A  EE01  F0C4         	lfsr	0,__pbssBIGRAM
   974  00C37E  EE18 F000          	lfsr	1,2048
   975  00C382                     clear_0:
   976  00C382  6AEE               	clrf	postinc0,c
   977  00C384  50E5               	movf	postdec1,w,c
   978  00C386  50E1               	movf	fsr1l,w,c
   979  00C388  E1FC               	bnz	clear_0
   980  00C38A  50E2               	movf	fsr1h,w,c
   981  00C38C  E1FA               	bnz	clear_0
   982                           
   983                           ; Clear objects allocated to BANK1 (196 bytes)
   984  00C38E  EE01  F000         	lfsr	0,__pbssBANK1
   985  00C392  0EC4               	movlw	196
   986  00C394                     clear_1:
   987  00C394  6AEE               	clrf	postinc0,c
   988  00C396  06E8               	decf	wreg,f,c
   989  00C398  E1FD               	bnz	clear_1
   990                           
   991                           ; Clear objects allocated to BANK0 (65 bytes)
   992  00C39A  EE00  F0AE         	lfsr	0,__pbssBANK0
   993  00C39E  0E41               	movlw	65
   994  00C3A0                     clear_2:
   995  00C3A0  6AEE               	clrf	postinc0,c
   996  00C3A2  06E8               	decf	wreg,f,c
   997  00C3A4  E1FD               	bnz	clear_2
   998  00C3A6                     end_of_initialization:
   999                           	callstack 0
  1000  00C3A6                     __end_of__initialization:
  1001                           	callstack 0
  1002  00C3A6  0100               	movlb	0
  1003  00C3A8  EFFC  F06D         	goto	_main	;jump to C main() function
  1004                           
  1005                           	psect	bssBANK0
  1006  0000AE                     __pbssBANK0:
  1007                           	callstack 0
  1008  0000AE                     floorf@F527:
  1009                           	callstack 0
  1010  0000AE                     	ds	4
  1011  0000B2                     ___fpclassifyf@F465:
  1012                           	callstack 0
  1013  0000B2                     	ds	4
  1014  0000B6                     _power:
  1015                           	callstack 0
  1016  0000B6                     	ds	4
  1017  0000BA                     _current:
  1018                           	callstack 0
  1019  0000BA                     	ds	4
  1020  0000BE                     _voltage:
  1021                           	callstack 0
  1022  0000BE                     	ds	4
  1023  0000C2                     _Power:
  1024                           	callstack 0
  1025  0000C2                     	ds	4
  1026  0000C6                     _Current:
  1027                           	callstack 0
  1028  0000C6                     	ds	4
  1029  0000CA                     _Voltage:
  1030                           	callstack 0
  1031  0000CA                     	ds	4
  1032  0000CE                     _nout:
  1033                           	callstack 0
  1034  0000CE                     	ds	2
  1035  0000D0                     _width:
  1036                           	callstack 0
  1037  0000D0                     	ds	2
  1038  0000D2                     _prec:
  1039                           	callstack 0
  1040  0000D2                     	ds	2
  1041  0000D4                     _flags:
  1042                           	callstack 0
  1043  0000D4                     	ds	2
  1044  0000D6                     _EUSART1_ErrorHandler:
  1045                           	callstack 0
  1046  0000D6                     	ds	2
  1047  0000D8                     _EUSART1_OverrunErrorHandler:
  1048                           	callstack 0
  1049  0000D8                     	ds	2
  1050  0000DA                     _EUSART1_FramingErrorHandler:
  1051                           	callstack 0
  1052  0000DA                     	ds	2
  1053  0000DC                     _eusart1RxLastError:
  1054                           	callstack 0
  1055  0000DC                     	ds	1
  1056  0000DD                     _power_str:
  1057                           	callstack 0
  1058  0000DD                     	ds	6
  1059  0000E3                     _current_str:
  1060                           	callstack 0
  1061  0000E3                     	ds	6
  1062  0000E9                     _voltage_str:
  1063                           	callstack 0
  1064  0000E9                     	ds	6
  1065                           
  1066                           	psect	bssBANK1
  1067  000100                     __pbssBANK1:
  1068                           	callstack 0
  1069  000100                     _oi:
  1070                           	callstack 0
  1071  000100                     	ds	80
  1072  000150                     _I2C_Status:
  1073                           	callstack 0
  1074  000150                     	ds	36
  1075  000174                     _dbuf:
  1076                           	callstack 0
  1077  000174                     	ds	80
  1078                           
  1079                           	psect	bssBIGRAM
  1080  0001C4                     __pbssBIGRAM:
  1081                           	callstack 0
  1082  0001C4                     _buffer:
  1083                           	callstack 0
  1084  0001C4                     	ds	1024
  1085  0005C4                     _SSD1306_Buffer:
  1086                           	callstack 0
  1087  0005C4                     	ds	1024
  1088                           
  1089                           	psect	cstackBANK0
  1090  000060                     __pcstackBANK0:
  1091                           	callstack 0
  1092  000060                     _efgtoa$2180:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x0
  1096  000060                     	ds	2
  1097  000062                     _efgtoa$2181:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x2
  1101  000062                     	ds	2
  1102  000064                     _efgtoa$2186:
  1103                           	callstack 0
  1104                           
  1105                           ; 2 bytes @ 0x4
  1106  000064                     	ds	2
  1107  000066                     _efgtoa$2190:
  1108                           	callstack 0
  1109                           
  1110                           ; 2 bytes @ 0x6
  1111  000066                     	ds	2
  1112  000068                     _efgtoa$2191:
  1113                           	callstack 0
  1114                           
  1115                           ; 2 bytes @ 0x8
  1116  000068                     	ds	2
  1117  00006A                     _efgtoa$2192:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0xA
  1121  00006A                     	ds	2
  1122  00006C                     efgtoa@t:
  1123                           	callstack 0
  1124                           
  1125                           ; 2 bytes @ 0xC
  1126  00006C                     	ds	2
  1127  00006E                     efgtoa@pp:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xE
  1131  00006E                     	ds	2
  1132  000070                     efgtoa@ne:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0x10
  1136  000070                     	ds	2
  1137  000072                     efgtoa@m:
  1138                           	callstack 0
  1139                           
  1140                           ; 2 bytes @ 0x12
  1141  000072                     	ds	2
  1142  000074                     efgtoa@ou:
  1143                           	callstack 0
  1144                           
  1145                           ; 4 bytes @ 0x14
  1146  000074                     	ds	4
  1147  000078                     efgtoa@d:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x18
  1151  000078                     	ds	2
  1152  00007A                     efgtoa@sign:
  1153                           	callstack 0
  1154                           
  1155                           ; 2 bytes @ 0x1A
  1156  00007A                     	ds	2
  1157  00007C                     efgtoa@p:
  1158                           	callstack 0
  1159                           
  1160                           ; 2 bytes @ 0x1C
  1161  00007C                     	ds	2
  1162  00007E                     efgtoa@w:
  1163                           	callstack 0
  1164                           
  1165                           ; 2 bytes @ 0x1E
  1166  00007E                     	ds	2
  1167  000080                     efgtoa@nmode:
  1168                           	callstack 0
  1169                           
  1170                           ; 1 bytes @ 0x20
  1171  000080                     	ds	1
  1172  000081                     efgtoa@mode:
  1173                           	callstack 0
  1174                           
  1175                           ; 1 bytes @ 0x21
  1176  000081                     	ds	1
  1177  000082                     efgtoa@h:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0x22
  1181  000082                     	ds	4
  1182  000086                     efgtoa@l:
  1183                           	callstack 0
  1184                           
  1185                           ; 4 bytes @ 0x26
  1186  000086                     	ds	4
  1187  00008A                     efgtoa@i:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x2A
  1191  00008A                     	ds	2
  1192  00008C                     efgtoa@g:
  1193                           	callstack 0
  1194                           
  1195                           ; 4 bytes @ 0x2C
  1196  00008C                     	ds	4
  1197  000090                     efgtoa@e:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x30
  1201  000090                     	ds	2
  1202  000092                     efgtoa@n:
  1203                           	callstack 0
  1204                           
  1205                           ; 2 bytes @ 0x32
  1206  000092                     	ds	2
  1207  000094                     efgtoa@u:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x34
  1211  000094                     	ds	4
  1212  000098                     ?_vfprintf:
  1213                           	callstack 0
  1214  000098                     vfprintf@fp:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x38
  1218  000098                     	ds	2
  1219  00009A                     vfprintf@fmt:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x3A
  1223  00009A                     	ds	2
  1224  00009C                     vfprintf@ap:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x3C
  1228  00009C                     	ds	2
  1229  00009E                     ?_sprintf:
  1230                           	callstack 0
  1231  00009E                     sprintf@s:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x3E
  1235  00009E                     	ds	2
  1236  0000A0                     sprintf@fmt:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x40
  1240  0000A0                     	ds	6
  1241  0000A6                     sprintf@ap:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x46
  1245  0000A6                     	ds	2
  1246  0000A8                     sprintf@f:
  1247                           	callstack 0
  1248                           
  1249                           ; 6 bytes @ 0x48
  1250  0000A8                     	ds	6
  1251                           
  1252                           	psect	cstackCOMRAM
  1253  000001                     __pcstackCOMRAM:
  1254                           	callstack 0
  1255  000001                     ??_I2C_Master_Wait:
  1256  000001                     ?_strlen:
  1257                           	callstack 0
  1258  000001                     ?___fpclassifyf:
  1259                           	callstack 0
  1260  000001                     ?_isupper:
  1261                           	callstack 0
  1262  000001                     ?_isdigit:
  1263                           	callstack 0
  1264  000001                     ?_strncmp:
  1265                           	callstack 0
  1266  000001                     ?_isspace:
  1267                           	callstack 0
  1268  000001                     ?___wmul:
  1269                           	callstack 0
  1270  000001                     ?___awdiv:
  1271                           	callstack 0
  1272  000001                     ?___awmod:
  1273                           	callstack 0
  1274  000001                     ?___fladd:
  1275                           	callstack 0
  1276  000001                     ?___fldiv:
  1277                           	callstack 0
  1278  000001                     ?___lldiv:
  1279                           	callstack 0
  1280  000001                     ?___flneg:
  1281                           	callstack 0
  1282  000001                     ?___fltol:
  1283                           	callstack 0
  1284  000001                     I2C_Open@address:
  1285                           	callstack 0
  1286  000001                     I2C_Close@returnValue:
  1287                           	callstack 0
  1288  000001                     I2C_MasterSendTxData@data:
  1289                           	callstack 0
  1290  000001                     I2C_SetBuffer@buffer:
  1291                           	callstack 0
  1292  000001                     I2C_SetCallback@cb:
  1293                           	callstack 0
  1294  000001                     ___wmul@multiplier:
  1295                           	callstack 0
  1296  000001                     ___awdiv@dividend:
  1297                           	callstack 0
  1298  000001                     ___awmod@dividend:
  1299                           	callstack 0
  1300  000001                     isdigit@c:
  1301                           	callstack 0
  1302  000001                     isspace@c:
  1303                           	callstack 0
  1304  000001                     isupper@c:
  1305                           	callstack 0
  1306  000001                     fputc@c:
  1307                           	callstack 0
  1308  000001                     strcpy@dest:
  1309                           	callstack 0
  1310  000001                     strlen@s:
  1311                           	callstack 0
  1312  000001                     strncmp@_l:
  1313                           	callstack 0
  1314  000001                     ___lldiv@dividend:
  1315                           	callstack 0
  1316  000001                     ___fleq@ff1:
  1317                           	callstack 0
  1318  000001                     ___flneg@f1:
  1319                           	callstack 0
  1320  000001                     ___fltol@f1:
  1321                           	callstack 0
  1322  000001                     ___fladd@b:
  1323                           	callstack 0
  1324  000001                     ___fldiv@b:
  1325                           	callstack 0
  1326  000001                     ___fpclassifyf@x:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x0
  1330  000001                     	ds	1
  1331  000002                     ?_I2C_Master_Read:
  1332                           	callstack 0
  1333  000002                     I2C_Open@returnValue:
  1334                           	callstack 0
  1335  000002                     I2C_Master_Write@d:
  1336                           	callstack 0
  1337  000002                     I2C_Master_Read@a:
  1338                           	callstack 0
  1339                           
  1340                           ; 2 bytes @ 0x1
  1341  000002                     	ds	1
  1342  000003                     ??_isupper:
  1343  000003                     ??_isdigit:
  1344  000003                     ??_isspace:
  1345  000003                     I2C_SetBuffer@bufferSize:
  1346                           	callstack 0
  1347  000003                     I2C_SetCallback@ptr:
  1348                           	callstack 0
  1349  000003                     ___wmul@multiplicand:
  1350                           	callstack 0
  1351  000003                     ___awdiv@divisor:
  1352                           	callstack 0
  1353  000003                     ___awmod@divisor:
  1354                           	callstack 0
  1355  000003                     fputc@fp:
  1356                           	callstack 0
  1357  000003                     strcpy@src:
  1358                           	callstack 0
  1359  000003                     strlen@a:
  1360                           	callstack 0
  1361  000003                     strncmp@_r:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x2
  1365  000003                     	ds	1
  1366  000004                     I2C_Master_Read@temp:
  1367                           	callstack 0
  1368                           
  1369                           ; 2 bytes @ 0x3
  1370  000004                     	ds	1
  1371  000005                     ??_fputc:
  1372  000005                     ??___fpclassifyf:
  1373  000005                     ??_strcpy:
  1374  000005                     ??___fltol:
  1375  000005                     I2C_SetCallback@idx:
  1376                           	callstack 0
  1377  000005                     ___awdiv@counter:
  1378                           	callstack 0
  1379  000005                     ___awmod@counter:
  1380                           	callstack 0
  1381  000005                     ___wmul@product:
  1382                           	callstack 0
  1383  000005                     strncmp@n:
  1384                           	callstack 0
  1385  000005                     ___lldiv@divisor:
  1386                           	callstack 0
  1387  000005                     ___fleq@ff2:
  1388                           	callstack 0
  1389  000005                     ___fladd@a:
  1390                           	callstack 0
  1391  000005                     ___fldiv@a:
  1392                           	callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x4
  1395  000005                     	ds	1
  1396  000006                     ___awdiv@sign:
  1397                           	callstack 0
  1398  000006                     ___awmod@sign:
  1399                           	callstack 0
  1400  000006                     I2C_SetDataCompleteCallback@cb:
  1401                           	callstack 0
  1402  000006                     I2C_SetAddressNackCallback@cb:
  1403                           	callstack 0
  1404                           
  1405                           ; 2 bytes @ 0x5
  1406  000006                     	ds	1
  1407  000007                     ??_strncmp:
  1408  000007                     ?_tolower:
  1409                           	callstack 0
  1410  000007                     ?___xxtofl:
  1411                           	callstack 0
  1412  000007                     _isspace$2275:
  1413                           	callstack 0
  1414  000007                     ___awdiv@quotient:
  1415                           	callstack 0
  1416  000007                     strcpy@s:
  1417                           	callstack 0
  1418  000007                     tolower@c:
  1419                           	callstack 0
  1420  000007                     ___xxtofl@val:
  1421                           	callstack 0
  1422                           
  1423                           ; 4 bytes @ 0x6
  1424  000007                     	ds	1
  1425  000008                     ?_atoi:
  1426                           	callstack 0
  1427  000008                     I2C_SetDataCompleteCallback@ptr:
  1428                           	callstack 0
  1429  000008                     I2C_SetAddressNackCallback@ptr:
  1430                           	callstack 0
  1431  000008                     atoi@s:
  1432                           	callstack 0
  1433  000008                     strncmp@l:
  1434                           	callstack 0
  1435                           
  1436                           ; 2 bytes @ 0x7
  1437  000008                     	ds	1
  1438  000009                     ??___fladd:
  1439  000009                     ??___fldiv:
  1440  000009                     ??_tolower:
  1441  000009                     ??___fleq:
  1442  000009                     ___fltol@sign1:
  1443                           	callstack 0
  1444  000009                     ___fpclassifyf@e:
  1445                           	callstack 0
  1446  000009                     strcpy@d:
  1447                           	callstack 0
  1448  000009                     ___lldiv@quotient:
  1449                           	callstack 0
  1450                           
  1451                           ; 4 bytes @ 0x8
  1452  000009                     	ds	1
  1453  00000A                     ??_atoi:
  1454  00000A                     ___fltol@exp1:
  1455                           	callstack 0
  1456  00000A                     rd1RegCompleteHandler@ptr:
  1457                           	callstack 0
  1458  00000A                     rd2RegCompleteHandler@ptr:
  1459                           	callstack 0
  1460  00000A                     wr1RegCompleteHandler@ptr:
  1461                           	callstack 0
  1462  00000A                     wr2RegCompleteHandler@ptr:
  1463                           	callstack 0
  1464  00000A                     rdBlkRegCompleteHandler@ptr:
  1465                           	callstack 0
  1466  00000A                     I2C_CallbackReturnReset@funPtr:
  1467                           	callstack 0
  1468  00000A                     fputs@s:
  1469                           	callstack 0
  1470  00000A                     strncmp@r:
  1471                           	callstack 0
  1472                           
  1473                           ; 2 bytes @ 0x9
  1474  00000A                     	ds	1
  1475  00000B                     ??___xxtofl:
  1476  00000B                     ___fpclassifyf@u:
  1477                           	callstack 0
  1478                           
  1479                           ; 4 bytes @ 0xA
  1480  00000B                     	ds	1
  1481  00000C                     ??_I2C_DO_TX:
  1482  00000C                     ??_I2C_DO_RX:
  1483  00000C                     ??_I2C_DO_TX_EMPTY:
  1484  00000C                     ??_I2C_DO_ADDRESS_NACK:
  1485  00000C                     fputs@fp:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0xB
  1489  00000C                     	ds	1
  1490  00000D                     ___lldiv@counter:
  1491                           	callstack 0
  1492  00000D                     ___fladd@signs:
  1493                           	callstack 0
  1494  00000D                     _tolower$2338:
  1495                           	callstack 0
  1496  00000D                     ___fldiv@rem:
  1497                           	callstack 0
  1498                           
  1499                           ; 4 bytes @ 0xC
  1500  00000D                     	ds	1
  1501  00000E                     ??_I2C_MasterFsm:
  1502  00000E                     ___fladd@aexp:
  1503                           	callstack 0
  1504  00000E                     fputs@c:
  1505                           	callstack 0
  1506  00000E                     atoi@neg:
  1507                           	callstack 0
  1508  00000E                     I2C_Master_Init@c:
  1509                           	callstack 0
  1510                           
  1511                           ; 4 bytes @ 0xD
  1512  00000E                     	ds	1
  1513  00000F                     ___fladd@bexp:
  1514                           	callstack 0
  1515  00000F                     ___xxtofl@sign:
  1516                           	callstack 0
  1517  00000F                     fputs@i:
  1518                           	callstack 0
  1519                           
  1520                           ; 2 bytes @ 0xE
  1521  00000F                     	ds	1
  1522  000010                     I2C_MasterOperation@read:
  1523                           	callstack 0
  1524  000010                     ___fladd@grs:
  1525                           	callstack 0
  1526  000010                     ___xxtofl@exp:
  1527                           	callstack 0
  1528  000010                     _atoi$2244:
  1529                           	callstack 0
  1530                           
  1531                           ; 2 bytes @ 0xF
  1532  000010                     	ds	1
  1533  000011                     ?_pad:
  1534                           	callstack 0
  1535  000011                     I2C_MasterOperation@returnValue:
  1536                           	callstack 0
  1537  000011                     ___fldiv@sign:
  1538                           	callstack 0
  1539  000011                     pad@fp:
  1540                           	callstack 0
  1541  000011                     ___xxtofl@arg:
  1542                           	callstack 0
  1543                           
  1544                           ; 4 bytes @ 0x10
  1545  000011                     	ds	1
  1546  000012                     ??_I2C_Master_Init:
  1547  000012                     I2C_WriteNBytes@data:
  1548                           	callstack 0
  1549  000012                     ___fldiv@new_exp:
  1550                           	callstack 0
  1551  000012                     _atoi$2246:
  1552                           	callstack 0
  1553                           
  1554                           ; 2 bytes @ 0x11
  1555  000012                     	ds	1
  1556  000013                     pad@buf:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x12
  1560  000013                     	ds	1
  1561  000014                     _atoi$2245:
  1562                           	callstack 0
  1563  000014                     I2C_WriteNBytes@len:
  1564                           	callstack 0
  1565  000014                     ___fldiv@grs:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x13
  1569  000014                     	ds	1
  1570  000015                     ?___flmul:
  1571                           	callstack 0
  1572  000015                     pad@p:
  1573                           	callstack 0
  1574  000015                     atoi@n:
  1575                           	callstack 0
  1576  000015                     ___flmul@b:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x14
  1580  000015                     	ds	1
  1581  000016                     I2C_WriteNBytes@address:
  1582                           	callstack 0
  1583                           
  1584                           ; 1 bytes @ 0x15
  1585  000016                     	ds	1
  1586  000017                     ??_pad:
  1587  000017                     Oled_Command@command:
  1588                           	callstack 0
  1589  000017                     Oled_Data@value:
  1590                           	callstack 0
  1591                           
  1592                           ; 1 bytes @ 0x16
  1593  000017                     	ds	1
  1594  000018                     ___fldiv@bexp:
  1595                           	callstack 0
  1596  000018                     Oled_Command@data_I2C:
  1597                           	callstack 0
  1598  000018                     Oled_Data@data_I2C:
  1599                           	callstack 0
  1600  000018                     pad@i:
  1601                           	callstack 0
  1602                           
  1603                           ; 2 bytes @ 0x17
  1604  000018                     	ds	1
  1605  000019                     ___fldiv@aexp:
  1606                           	callstack 0
  1607  000019                     ___flmul@a:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x18
  1611  000019                     	ds	1
  1612  00001A                     ??_Oled_WriteCharacter:
  1613  00001A                     ?_Power_ReadRegister:
  1614                           	callstack 0
  1615  00001A                     ?_floorf:
  1616                           	callstack 0
  1617  00001A                     Oled_SelectPage@page_num:
  1618                           	callstack 0
  1619  00001A                     Oled_Clear@i:
  1620                           	callstack 0
  1621  00001A                     pad@w:
  1622                           	callstack 0
  1623  00001A                     floorf@x:
  1624                           	callstack 0
  1625                           
  1626                           ; 4 bytes @ 0x19
  1627  00001A                     	ds	1
  1628  00001B                     Oled_SelectPage@Result:
  1629                           	callstack 0
  1630                           
  1631                           ; 1 bytes @ 0x1A
  1632  00001B                     	ds	2
  1633  00001D                     ??___flmul:
  1634                           
  1635                           ; 1 bytes @ 0x1C
  1636  00001D                     	ds	1
  1637  00001E                     ??_Power_ReadRegister:
  1638  00001E                     ??_floorf:
  1639  00001E                     Oled_WriteCharacter@character:
  1640                           	callstack 0
  1641                           
  1642                           ; 1 bytes @ 0x1D
  1643  00001E                     	ds	1
  1644  00001F                     Oled_WriteCharacter@i:
  1645                           	callstack 0
  1646                           
  1647                           ; 2 bytes @ 0x1E
  1648  00001F                     	ds	1
  1649  000020                     Power_ReadRegister@temp_f:
  1650                           	callstack 0
  1651                           
  1652                           ; 2 bytes @ 0x1F
  1653  000020                     	ds	1
  1654  000021                     ___flmul@sign:
  1655                           	callstack 0
  1656  000021                     Oled_WriteString@characters:
  1657                           	callstack 0
  1658                           
  1659                           ; 2 bytes @ 0x20
  1660  000021                     	ds	1
  1661  000022                     Power_ReadRegister@temp_e:
  1662                           	callstack 0
  1663  000022                     ___flmul@grs:
  1664                           	callstack 0
  1665                           
  1666                           ; 4 bytes @ 0x21
  1667  000022                     	ds	1
  1668  000023                     
  1669                           ; 1 bytes @ 0x22
  1670  000023                     	ds	1
  1671  000024                     floorf@m:
  1672                           	callstack 0
  1673                           
  1674                           ; 4 bytes @ 0x23
  1675  000024                     	ds	2
  1676  000026                     ___flmul@aexp:
  1677                           	callstack 0
  1678                           
  1679                           ; 1 bytes @ 0x25
  1680  000026                     	ds	1
  1681  000027                     ___flmul@bexp:
  1682                           	callstack 0
  1683                           
  1684                           ; 1 bytes @ 0x26
  1685  000027                     	ds	1
  1686  000028                     floorf@e:
  1687                           	callstack 0
  1688  000028                     ___flmul@prod:
  1689                           	callstack 0
  1690                           
  1691                           ; 4 bytes @ 0x27
  1692  000028                     	ds	2
  1693  00002A                     floorf@u:
  1694                           	callstack 0
  1695                           
  1696                           ; 4 bytes @ 0x29
  1697  00002A                     	ds	2
  1698  00002C                     ___flmul@temp:
  1699                           	callstack 0
  1700                           
  1701                           ; 2 bytes @ 0x2B
  1702  00002C                     	ds	2
  1703  00002E                     ?_Voltage_ReadRegister:
  1704                           	callstack 0
  1705  00002E                     ?_Current_ReadRegister:
  1706                           	callstack 0
  1707  00002E                     ?___flsub:
  1708                           	callstack 0
  1709  00002E                     ___flge@ff1:
  1710                           	callstack 0
  1711  00002E                     ___flsub@b:
  1712                           	callstack 0
  1713                           
  1714                           ; 4 bytes @ 0x2D
  1715  00002E                     	ds	4
  1716  000032                     ??_Voltage_ReadRegister:
  1717  000032                     ??_Current_ReadRegister:
  1718  000032                     ___flge@ff2:
  1719                           	callstack 0
  1720  000032                     ___flsub@a:
  1721                           	callstack 0
  1722                           
  1723                           ; 4 bytes @ 0x31
  1724  000032                     	ds	2
  1725  000034                     Voltage_ReadRegister@temp_b:
  1726                           	callstack 0
  1727  000034                     Current_ReadRegister@temp_d:
  1728                           	callstack 0
  1729                           
  1730                           ; 2 bytes @ 0x33
  1731  000034                     	ds	2
  1732  000036                     ??___flge:
  1733  000036                     Voltage_ReadRegister@temp_a:
  1734                           	callstack 0
  1735  000036                     Current_ReadRegister@temp_c:
  1736                           	callstack 0
  1737                           
  1738                           ; 1 bytes @ 0x35
  1739  000036                     	ds	4
  1740  00003A                     ?_efgtoa:
  1741                           	callstack 0
  1742  00003A                     efgtoa@fp:
  1743                           	callstack 0
  1744                           
  1745                           ; 2 bytes @ 0x39
  1746  00003A                     	ds	2
  1747  00003C                     efgtoa@f:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x3B
  1751  00003C                     	ds	4
  1752  000040                     efgtoa@c:
  1753                           	callstack 0
  1754                           
  1755                           ; 1 bytes @ 0x3F
  1756  000040                     	ds	1
  1757  000041                     ??_efgtoa:
  1758                           
  1759                           ; 1 bytes @ 0x40
  1760  000041                     	ds	5
  1761  000046                     ?_vfpfcnvrt:
  1762                           	callstack 0
  1763  000046                     vfpfcnvrt@fp:
  1764                           	callstack 0
  1765                           
  1766                           ; 2 bytes @ 0x45
  1767  000046                     	ds	2
  1768  000048                     vfpfcnvrt@fmt:
  1769                           	callstack 0
  1770                           
  1771                           ; 2 bytes @ 0x47
  1772  000048                     	ds	2
  1773  00004A                     vfpfcnvrt@ap:
  1774                           	callstack 0
  1775                           
  1776                           ; 2 bytes @ 0x49
  1777  00004A                     	ds	2
  1778  00004C                     ??_vfpfcnvrt:
  1779                           
  1780                           ; 1 bytes @ 0x4B
  1781  00004C                     	ds	4
  1782  000050                     _vfpfcnvrt$2206:
  1783                           	callstack 0
  1784                           
  1785                           ; 2 bytes @ 0x4F
  1786  000050                     	ds	2
  1787  000052                     _vfpfcnvrt$2210:
  1788                           	callstack 0
  1789                           
  1790                           ; 2 bytes @ 0x51
  1791  000052                     	ds	2
  1792  000054                     vfpfcnvrt@f:
  1793                           	callstack 0
  1794                           
  1795                           ; 4 bytes @ 0x53
  1796  000054                     	ds	4
  1797  000058                     vfpfcnvrt@ct:
  1798                           	callstack 0
  1799                           
  1800                           ; 3 bytes @ 0x57
  1801  000058                     	ds	3
  1802  00005B                     vfpfcnvrt@c:
  1803                           	callstack 0
  1804                           
  1805                           ; 1 bytes @ 0x5A
  1806  00005B                     	ds	1
  1807  00005C                     vfprintf@cfmt:
  1808                           	callstack 0
  1809                           
  1810                           ; 2 bytes @ 0x5B
  1811  00005C                     	ds	2
  1812  00005E                     ??_main:
  1813                           
  1814                           ; 1 bytes @ 0x5D
  1815  00005E                     	ds	2
  1816                           
  1817 ;;
  1818 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1819 ;;
  1820 ;; *************** function _main *****************
  1821 ;; Defined at:
  1822 ;;		line 70 in file "main.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;		None
  1825 ;; Auto vars:     Size  Location     Type
  1826 ;;		None
  1827 ;; Return value:  Size  Location     Type
  1828 ;;                  1    wreg      void 
  1829 ;; Registers used:
  1830 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1831 ;; Tracked objects:
  1832 ;;		On entry : 0/0
  1833 ;;		On exit  : 0/0
  1834 ;;		Unchanged: 0/0
  1835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1837 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1838 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1839 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1840 ;;Total ram usage:        2 bytes
  1841 ;; Hardware stack levels required when called: 12
  1842 ;; This function calls:
  1843 ;;		_Current_ReadRegister
  1844 ;;		_I2C_Initialize
  1845 ;;		_I2C_Master_Init
  1846 ;;		_Oled_Clear
  1847 ;;		_Oled_Init
  1848 ;;		_Oled_SelectPage
  1849 ;;		_Oled_WriteString
  1850 ;;		_Power_ReadRegister
  1851 ;;		_SYSTEM_Initialize
  1852 ;;		_Voltage_ReadRegister
  1853 ;;		_sprintf
  1854 ;; This function is called by:
  1855 ;;		Startup code after reset
  1856 ;; This function uses a non-reentrant model
  1857 ;;
  1858                           
  1859                           	psect	text0
  1860  00DBF8                     __ptext0:
  1861                           	callstack 0
  1862  00DBF8                     _main:
  1863                           	callstack 19
  1864  00DBF8                     
  1865                           ;main.c: 73:     SYSTEM_Initialize();
  1866  00DBF8  EC39  F060         	call	_SYSTEM_Initialize	;wreg free
  1867                           
  1868                           ;main.c: 90:     I2C_Initialize();
  1869  00DBFC  EC71  F060         	call	_I2C_Initialize	;wreg free
  1870  00DC00                     
  1871                           ;main.c: 92:     Oled_Init();
  1872  00DC00  ECBB  F065         	call	_Oled_Init	;wreg free
  1873  00DC04                     
  1874                           ;main.c: 93:     Oled_Clear();
  1875  00DC04  ECA7  F061         	call	_Oled_Clear	;wreg free
  1876  00DC08                     
  1877                           ;main.c: 94:     Oled_SelectPage(0);
  1878  00DC08  0E00               	movlw	0
  1879  00DC0A  EC9D  F060         	call	_Oled_SelectPage
  1880  00DC0E                     
  1881                           ;main.c: 95:     Oled_WriteString("OI");
  1882  00DC0E  0EFC               	movlw	low STR_1
  1883  00DC10  6E21               	movwf	Oled_WriteString@characters^0,c
  1884  00DC12  0EFF               	movlw	high STR_1
  1885  00DC14  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1886  00DC16  ECF3  F063         	call	_Oled_WriteString	;wreg free
  1887  00DC1A                     
  1888                           ;main.c: 96:     Oled_Clear();
  1889  00DC1A  ECA7  F061         	call	_Oled_Clear	;wreg free
  1890  00DC1E                     
  1891                           ;main.c: 97:     Oled_SelectPage(1);
  1892  00DC1E  0E01               	movlw	1
  1893  00DC20  EC9D  F060         	call	_Oled_SelectPage
  1894  00DC24                     
  1895                           ;main.c: 98:     Oled_WriteString("OLA");
  1896  00DC24  0EF5               	movlw	low STR_2
  1897  00DC26  6E21               	movwf	Oled_WriteString@characters^0,c
  1898  00DC28  0EFF               	movlw	high STR_2
  1899  00DC2A  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1900  00DC2C  ECF3  F063         	call	_Oled_WriteString	;wreg free
  1901  00DC30                     l6481:
  1902                           
  1903                           ;main.c: 99:     Oled_Clear();
  1904  00DC30  ECA7  F061         	call	_Oled_Clear	;wreg free
  1905  00DC34                     
  1906                           ;main.c: 103:     I2C_Master_Init(400000);
  1907  00DC34  0E80               	movlw	128
  1908  00DC36  6E0E               	movwf	I2C_Master_Init@c^0,c
  1909  00DC38  0E1A               	movlw	26
  1910  00DC3A  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  1911  00DC3C  0E06               	movlw	6
  1912  00DC3E  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  1913  00DC40  0E00               	movlw	0
  1914  00DC42  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  1915  00DC44  EC66  F063         	call	_I2C_Master_Init	;wreg free
  1916  00DC48                     
  1917                           ;main.c: 105:     {;main.c: 106:        Voltage = Voltage_ReadRegister();
  1918  00DC48  ECCF  F06A         	call	_Voltage_ReadRegister	;wreg free
  1919  00DC4C  C02E  F0CA         	movff	?_Voltage_ReadRegister,_Voltage
  1920  00DC50  C02F  F0CB         	movff	?_Voltage_ReadRegister+1,_Voltage+1
  1921  00DC54  C030  F0CC         	movff	?_Voltage_ReadRegister+2,_Voltage+2
  1922  00DC58  C031  F0CD         	movff	?_Voltage_ReadRegister+3,_Voltage+3
  1923  00DC5C                     
  1924                           ;main.c: 107:        Current = Current_ReadRegister();
  1925  00DC5C  EC4E  F06A         	call	_Current_ReadRegister	;wreg free
  1926  00DC60  C02E  F0C6         	movff	?_Current_ReadRegister,_Current
  1927  00DC64  C02F  F0C7         	movff	?_Current_ReadRegister+1,_Current+1
  1928  00DC68  C030  F0C8         	movff	?_Current_ReadRegister+2,_Current+2
  1929  00DC6C  C031  F0C9         	movff	?_Current_ReadRegister+3,_Current+3
  1930  00DC70                     
  1931                           ;main.c: 108:        Power = Power_ReadRegister();
  1932  00DC70  EC56  F069         	call	_Power_ReadRegister	;wreg free
  1933  00DC74  C01A  F0C2         	movff	?_Power_ReadRegister,_Power
  1934  00DC78  C01B  F0C3         	movff	?_Power_ReadRegister+1,_Power+1
  1935  00DC7C  C01C  F0C4         	movff	?_Power_ReadRegister+2,_Power+2
  1936  00DC80  C01D  F0C5         	movff	?_Power_ReadRegister+3,_Power+3
  1937  00DC84                     
  1938                           ;main.c: 109:        sprintf(voltage_str, "%.2f",Voltage);
  1939  00DC84  0EE9               	movlw	low _voltage_str
  1940  00DC86  0100               	movlb	0	; () banked
  1941  00DC88  6F9E               	movwf	sprintf@s& (0+255),b
  1942  00DC8A  0E00               	movlw	high _voltage_str
  1943  00DC8C  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1944  00DC8E  0EE0               	movlw	low STR_3
  1945  00DC90  6FA0               	movwf	sprintf@fmt& (0+255),b
  1946  00DC92  0EFF               	movlw	high STR_3
  1947  00DC94  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1948  00DC96  C0CA  F0A2         	movff	_Voltage,?_sprintf+4
  1949  00DC9A  C0CB  F0A3         	movff	_Voltage+1,?_sprintf+5
  1950  00DC9E  C0CC  F0A4         	movff	_Voltage+2,?_sprintf+6
  1951  00DCA2  C0CD  F0A5         	movff	_Voltage+3,?_sprintf+7
  1952  00DCA6  EC10  F063         	call	_sprintf	;wreg free
  1953  00DCAA                     
  1954                           ;main.c: 110:        sprintf(current_str, "%.2f",Current);
  1955  00DCAA  0EE3               	movlw	low _current_str
  1956  00DCAC  0100               	movlb	0	; () banked
  1957  00DCAE  6F9E               	movwf	sprintf@s& (0+255),b
  1958  00DCB0  0E00               	movlw	high _current_str
  1959  00DCB2  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1960  00DCB4  0EE0               	movlw	low STR_3
  1961  00DCB6  6FA0               	movwf	sprintf@fmt& (0+255),b
  1962  00DCB8  0EFF               	movlw	high STR_3
  1963  00DCBA  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1964  00DCBC  C0C6  F0A2         	movff	_Current,?_sprintf+4
  1965  00DCC0  C0C7  F0A3         	movff	_Current+1,?_sprintf+5
  1966  00DCC4  C0C8  F0A4         	movff	_Current+2,?_sprintf+6
  1967  00DCC8  C0C9  F0A5         	movff	_Current+3,?_sprintf+7
  1968  00DCCC  EC10  F063         	call	_sprintf	;wreg free
  1969  00DCD0                     
  1970                           ;main.c: 111:        sprintf(power_str, "%.2f",Power);
  1971  00DCD0  0EDD               	movlw	low _power_str
  1972  00DCD2  0100               	movlb	0	; () banked
  1973  00DCD4  6F9E               	movwf	sprintf@s& (0+255),b
  1974  00DCD6  0E00               	movlw	high _power_str
  1975  00DCD8  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1976  00DCDA  0EE0               	movlw	low STR_3
  1977  00DCDC  6FA0               	movwf	sprintf@fmt& (0+255),b
  1978  00DCDE  0EFF               	movlw	high STR_3
  1979  00DCE0  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1980  00DCE2  C0C2  F0A2         	movff	_Power,?_sprintf+4
  1981  00DCE6  C0C3  F0A3         	movff	_Power+1,?_sprintf+5
  1982  00DCEA  C0C4  F0A4         	movff	_Power+2,?_sprintf+6
  1983  00DCEE  C0C5  F0A5         	movff	_Power+3,?_sprintf+7
  1984  00DCF2  EC10  F063         	call	_sprintf	;wreg free
  1985  00DCF6                     
  1986                           ;main.c: 113:        Oled_SelectPage(0);
  1987  00DCF6  0E00               	movlw	0
  1988  00DCF8  EC9D  F060         	call	_Oled_SelectPage
  1989  00DCFC                     
  1990                           ;main.c: 114:        Oled_WriteString("    Bateria 7.4V ");
  1991  00DCFC  0EAF               	movlw	low STR_6
  1992  00DCFE  6E21               	movwf	Oled_WriteString@characters^0,c
  1993  00DD00  0EFF               	movlw	high STR_6
  1994  00DD02  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1995  00DD04  ECF3  F063         	call	_Oled_WriteString	;wreg free
  1996  00DD08                     
  1997                           ;main.c: 115:        _delay((unsigned long)((600)*(8000000/4000.0)));
  1998  00DD08  0E07               	movlw	7
  1999  00DD0A  6E5F               	movwf	(??_main+1)^0,c
  2000  00DD0C  0E17               	movlw	23
  2001  00DD0E  6E5E               	movwf	??_main^0,c
  2002  00DD10  0E6A               	movlw	106
  2003  00DD12                     u6337:
  2004  00DD12  2EE8               	decfsz	wreg,f,c
  2005  00DD14  D7FE               	bra	u6337
  2006  00DD16  2E5E               	decfsz	??_main^0,f,c
  2007  00DD18  D7FC               	bra	u6337
  2008  00DD1A  2E5F               	decfsz	(??_main+1)^0,f,c
  2009  00DD1C  D7FA               	bra	u6337
  2010  00DD1E  D000               	nop2	
  2011  00DD20                     
  2012                           ;main.c: 116:        Oled_SelectPage(1);
  2013  00DD20  0E01               	movlw	1
  2014  00DD22  EC9D  F060         	call	_Oled_SelectPage
  2015  00DD26                     
  2016                           ;main.c: 117:        Oled_WriteString("Tensao: ");
  2017  00DD26  0ED7               	movlw	low STR_7
  2018  00DD28  6E21               	movwf	Oled_WriteString@characters^0,c
  2019  00DD2A  0EFF               	movlw	high STR_7
  2020  00DD2C  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2021  00DD2E  ECF3  F063         	call	_Oled_WriteString	;wreg free
  2022  00DD32                     
  2023                           ;main.c: 118:        Oled_WriteString(voltage_str);
  2024  00DD32  0EE9               	movlw	low _voltage_str
  2025  00DD34  6E21               	movwf	Oled_WriteString@characters^0,c
  2026  00DD36  0E00               	movlw	high _voltage_str
  2027  00DD38  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2028  00DD3A  ECF3  F063         	call	_Oled_WriteString	;wreg free
  2029  00DD3E                     
  2030                           ;main.c: 119:        _delay((unsigned long)((600)*(8000000/4000.0)));
  2031  00DD3E  0E07               	movlw	7
  2032  00DD40  6E5F               	movwf	(??_main+1)^0,c
  2033  00DD42  0E17               	movlw	23
  2034  00DD44  6E5E               	movwf	??_main^0,c
  2035  00DD46  0E6A               	movlw	106
  2036  00DD48                     u6347:
  2037  00DD48  2EE8               	decfsz	wreg,f,c
  2038  00DD4A  D7FE               	bra	u6347
  2039  00DD4C  2E5E               	decfsz	??_main^0,f,c
  2040  00DD4E  D7FC               	bra	u6347
  2041  00DD50  2E5F               	decfsz	(??_main+1)^0,f,c
  2042  00DD52  D7FA               	bra	u6347
  2043  00DD54  D000               	nop2	
  2044  00DD56                     
  2045                           ;main.c: 120:        Oled_SelectPage(2);
  2046  00DD56  0E02               	movlw	2
  2047  00DD58  EC9D  F060         	call	_Oled_SelectPage
  2048  00DD5C                     
  2049                           ;main.c: 121:        Oled_WriteString("Corrente: ");
  2050  00DD5C  0ECC               	movlw	low STR_8
  2051  00DD5E  6E21               	movwf	Oled_WriteString@characters^0,c
  2052  00DD60  0EFF               	movlw	high STR_8
  2053  00DD62  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2054  00DD64  ECF3  F063         	call	_Oled_WriteString	;wreg free
  2055  00DD68                     
  2056                           ;main.c: 122:        Oled_WriteString(current_str);
  2057  00DD68  0EE3               	movlw	low _current_str
  2058  00DD6A  6E21               	movwf	Oled_WriteString@characters^0,c
  2059  00DD6C  0E00               	movlw	high _current_str
  2060  00DD6E  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2061  00DD70  ECF3  F063         	call	_Oled_WriteString	;wreg free
  2062  00DD74                     
  2063                           ;main.c: 123:        _delay((unsigned long)((600)*(8000000/4000.0)));
  2064  00DD74  0E07               	movlw	7
  2065  00DD76  6E5F               	movwf	(??_main+1)^0,c
  2066  00DD78  0E17               	movlw	23
  2067  00DD7A  6E5E               	movwf	??_main^0,c
  2068  00DD7C  0E6A               	movlw	106
  2069  00DD7E                     u6357:
  2070  00DD7E  2EE8               	decfsz	wreg,f,c
  2071  00DD80  D7FE               	bra	u6357
  2072  00DD82  2E5E               	decfsz	??_main^0,f,c
  2073  00DD84  D7FC               	bra	u6357
  2074  00DD86  2E5F               	decfsz	(??_main+1)^0,f,c
  2075  00DD88  D7FA               	bra	u6357
  2076  00DD8A  D000               	nop2	
  2077  00DD8C                     
  2078                           ;main.c: 124:        Oled_SelectPage(3);
  2079  00DD8C  0E03               	movlw	3
  2080  00DD8E  EC9D  F060         	call	_Oled_SelectPage
  2081  00DD92                     
  2082                           ;main.c: 125:        Oled_WriteString("Potencia: ");
  2083  00DD92  0EC1               	movlw	low STR_9
  2084  00DD94  6E21               	movwf	Oled_WriteString@characters^0,c
  2085  00DD96  0EFF               	movlw	high STR_9
  2086  00DD98  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2087  00DD9A  ECF3  F063         	call	_Oled_WriteString	;wreg free
  2088  00DD9E                     
  2089                           ;main.c: 126:        Oled_WriteString(power_str);
  2090  00DD9E  0EDD               	movlw	low _power_str
  2091  00DDA0  6E21               	movwf	Oled_WriteString@characters^0,c
  2092  00DDA2  0E00               	movlw	high _power_str
  2093  00DDA4  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  2094  00DDA6  ECF3  F063         	call	_Oled_WriteString	;wreg free
  2095  00DDAA                     
  2096                           ;main.c: 127:        _delay((unsigned long)((5000)*(8000000/4000.0)));
  2097  00DDAA  0E33               	movlw	51
  2098  00DDAC  6E5F               	movwf	(??_main+1)^0,c
  2099  00DDAE  0EBB               	movlw	187
  2100  00DDB0  6E5E               	movwf	??_main^0,c
  2101  00DDB2  0EE0               	movlw	224
  2102  00DDB4                     u6367:
  2103  00DDB4  2EE8               	decfsz	wreg,f,c
  2104  00DDB6  D7FE               	bra	u6367
  2105  00DDB8  2E5E               	decfsz	??_main^0,f,c
  2106  00DDBA  D7FC               	bra	u6367
  2107  00DDBC  2E5F               	decfsz	(??_main+1)^0,f,c
  2108  00DDBE  D7FA               	bra	u6367
  2109  00DDC0  EF18  F06E         	goto	l6481
  2110  00DDC4  EF00  F000         	goto	start
  2111  00DDC8                     __end_of_main:
  2112                           	callstack 0
  2113                           
  2114 ;; *************** function _sprintf *****************
  2115 ;; Defined at:
  2116 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_sprintf.c"
  2117 ;; Parameters:    Size  Location     Type
  2118 ;;  s               2   62[BANK0 ] PTR unsigned char 
  2119 ;;		 -> power_str(6), current_str(6), voltage_str(6), 
  2120 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  2121 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2122 ;; Auto vars:     Size  Location     Type
  2123 ;;  f               6   72[BANK0 ] struct _IO_FILE
  2124 ;;  ap              2   70[BANK0 ] PTR void [1]
  2125 ;;		 -> ?_sprintf(2), 
  2126 ;;  ret             2    0        int 
  2127 ;; Return value:  Size  Location     Type
  2128 ;;                  2   62[BANK0 ] int 
  2129 ;; Registers used:
  2130 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2131 ;; Tracked objects:
  2132 ;;		On entry : 0/0
  2133 ;;		On exit  : 0/0
  2134 ;;		Unchanged: 0/0
  2135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2136 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2137 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2138 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;Total ram usage:       16 bytes
  2141 ;; Hardware stack levels used: 1
  2142 ;; Hardware stack levels required when called: 7
  2143 ;; This function calls:
  2144 ;;		_vfprintf
  2145 ;; This function is called by:
  2146 ;;		_main
  2147 ;; This function uses a non-reentrant model
  2148 ;;
  2149                           
  2150                           	psect	text1
  2151  00C620                     __ptext1:
  2152                           	callstack 0
  2153  00C620                     _sprintf:
  2154                           	callstack 23
  2155  00C620  0EA2               	movlw	low (?_sprintf+4)
  2156  00C622  0100               	movlb	0	; () banked
  2157  00C624  6FA6               	movwf	sprintf@ap& (0+255),b
  2158  00C626  0E00               	movlw	high (?_sprintf+4)
  2159  00C628  6FA7               	movwf	(sprintf@ap+1)& (0+255),b
  2160  00C62A  C09E  F0A8         	movff	sprintf@s,sprintf@f
  2161  00C62E  C09F  F0A9         	movff	sprintf@s+1,sprintf@f+1
  2162  00C632                     
  2163                           ; BSR set to: 0
  2164  00C632  0E00               	movlw	0
  2165  00C634  6FAB               	movwf	(sprintf@f+3)& (0+255),b
  2166  00C636  0E00               	movlw	0
  2167  00C638  6FAA               	movwf	(sprintf@f+2)& (0+255),b
  2168  00C63A                     
  2169                           ; BSR set to: 0
  2170  00C63A  0E00               	movlw	0
  2171  00C63C  6FAD               	movwf	(sprintf@f+5)& (0+255),b
  2172  00C63E  0E00               	movlw	0
  2173  00C640  6FAC               	movwf	(sprintf@f+4)& (0+255),b
  2174  00C642                     
  2175                           ; BSR set to: 0
  2176  00C642  0EA8               	movlw	low sprintf@f
  2177  00C644  6F98               	movwf	vfprintf@fp& (0+255),b
  2178  00C646  0E00               	movlw	high sprintf@f
  2179  00C648  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  2180  00C64A  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  2181  00C64E  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2182  00C652  0EA6               	movlw	low sprintf@ap
  2183  00C654  6F9C               	movwf	vfprintf@ap& (0+255),b
  2184  00C656  0E00               	movlw	high sprintf@ap
  2185  00C658  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  2186  00C65A  EC24  F064         	call	_vfprintf	;wreg free
  2187  00C65E  0100               	movlb	0	; () banked
  2188  00C660  51AA               	movf	(sprintf@f+2)& (0+255),w,b
  2189  00C662  259E               	addwf	sprintf@s& (0+255),w,b
  2190  00C664  6ED9               	movwf	fsr2l,c
  2191  00C666  51AB               	movf	(sprintf@f+3)& (0+255),w,b
  2192  00C668  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  2193  00C66A  6EDA               	movwf	fsr2h,c
  2194  00C66C  0E00               	movlw	0
  2195  00C66E  6EDF               	movwf	indf2,c
  2196  00C670                     
  2197                           ; BSR set to: 0
  2198  00C670  0012               	return		;funcret
  2199  00C672                     __end_of_sprintf:
  2200                           	callstack 0
  2201                           
  2202 ;; *************** function _vfprintf *****************
  2203 ;; Defined at:
  2204 ;;		line 1390 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2205 ;; Parameters:    Size  Location     Type
  2206 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2207 ;;		 -> sprintf@f(6), 
  2208 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  2209 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2210 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2211 ;;		 -> sprintf@ap(2), 
  2212 ;; Auto vars:     Size  Location     Type
  2213 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  2214 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2   56[BANK0 ] int 
  2217 ;; Registers used:
  2218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2224 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2225 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2226 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2227 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2228 ;;Total ram usage:        8 bytes
  2229 ;; Hardware stack levels used: 1
  2230 ;; Hardware stack levels required when called: 6
  2231 ;; This function calls:
  2232 ;;		_vfpfcnvrt
  2233 ;; This function is called by:
  2234 ;;		_sprintf
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           	psect	text2
  2239  00C848                     __ptext2:
  2240                           	callstack 0
  2241  00C848                     _vfprintf:
  2242                           	callstack 23
  2243  00C848                     
  2244                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1390: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\source
      +                          s\c99\common\doprnt.c: 1391: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\comm
      +                          on\doprnt.c: 1393:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\
      +                          common\doprnt.c: 1395:     cfmt = (char *)fmt;
  2245  00C848  C09A  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  2246  00C84C  C09B  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2247  00C850                     
  2248                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1396:     nout = 
      +                          0;
  2249  00C850  0E00               	movlw	0
  2250  00C852  0100               	movlb	0	; () banked
  2251  00C854  6FCF               	movwf	(_nout+1)& (0+255),b
  2252  00C856  0E00               	movlw	0
  2253  00C858  6FCE               	movwf	_nout& (0+255),b
  2254                           
  2255                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2256  00C85A  EF42  F064         	goto	l6175
  2257  00C85E                     l6173:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1398:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2261  00C85E  C098  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  2262  00C862  C099  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2263  00C866  0E5C               	movlw	low vfprintf@cfmt
  2264  00C868  6E48               	movwf	vfpfcnvrt@fmt^0,c
  2265  00C86A  0E00               	movlw	high vfprintf@cfmt
  2266  00C86C  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2267  00C86E  C09C  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  2268  00C872  C09D  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2269  00C876  ECCF  F073         	call	_vfpfcnvrt	;wreg free
  2270  00C87A  5046               	movf	?_vfpfcnvrt^0,w,c
  2271  00C87C  0100               	movlb	0	; () banked
  2272  00C87E  27CE               	addwf	_nout& (0+255),f,b
  2273  00C880  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  2274  00C882  23CF               	addwfc	(_nout+1)& (0+255),f,b
  2275  00C884                     l6175:
  2276                           
  2277                           ; BSR set to: 0
  2278                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1397:     while (
      +                          *cfmt) {
  2279  00C884  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2280  00C888  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2281  00C88C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2282  00C88C  6AF8               	clrf	tblptru,c
  2283  00C88E                     	endif
  2284  00C88E                     	if	0	;tblptru may be non-zero
  2285  00C88E                     	endif
  2286  00C88E  0008               	tblrd		*
  2287  00C890  50F5               	movf	tablat,w,c
  2288  00C892  0900               	iorlw	0
  2289  00C894  A4D8               	btfss	status,2,c
  2290  00C896  EF4F  F064         	goto	u5921
  2291  00C89A  EF51  F064         	goto	u5920
  2292  00C89E                     u5921:
  2293  00C89E  EF2F  F064         	goto	l6173
  2294  00C8A2                     u5920:
  2295  00C8A2                     
  2296                           ; BSR set to: 0
  2297                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1400:     return 
      +                          nout;
  2298  00C8A2  C0CE  F098         	movff	_nout,?_vfprintf
  2299  00C8A6  C0CF  F099         	movff	_nout+1,?_vfprintf+1
  2300  00C8AA                     
  2301                           ; BSR set to: 0
  2302  00C8AA  0012               	return		;funcret
  2303  00C8AC                     __end_of_vfprintf:
  2304                           	callstack 0
  2305                           
  2306 ;; *************** function _vfpfcnvrt *****************
  2307 ;; Defined at:
  2308 ;;		line 692 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  2309 ;; Parameters:    Size  Location     Type
  2310 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  2311 ;;		 -> sprintf@f(6), 
  2312 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  2313 ;;		 -> vfprintf@cfmt(2), 
  2314 ;;  ap              2   73[COMRAM] PTR PTR void 
  2315 ;;		 -> sprintf@ap(2), 
  2316 ;; Auto vars:     Size  Location     Type
  2317 ;;  llu             8    0        unsigned long long 
  2318 ;;  ll              8    0        long long 
  2319 ;;  f               4   83[COMRAM] long long 
  2320 ;;  ct              3   87[COMRAM] unsigned char [3]
  2321 ;;  vp              3    0        PTR void 
  2322 ;;  cp              3    0        PTR unsigned char 
  2323 ;;  i               2    0        int 
  2324 ;;  done            2    0        int 
  2325 ;;  c               1   90[COMRAM] unsigned char 
  2326 ;; Return value:  Size  Location     Type
  2327 ;;                  2   69[COMRAM] int 
  2328 ;; Registers used:
  2329 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2330 ;; Tracked objects:
  2331 ;;		On entry : 0/0
  2332 ;;		On exit  : 0/0
  2333 ;;		Unchanged: 0/0
  2334 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2335 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2337 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2338 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2339 ;;Total ram usage:       22 bytes
  2340 ;; Hardware stack levels used: 1
  2341 ;; Hardware stack levels required when called: 5
  2342 ;; This function calls:
  2343 ;;		_atoi
  2344 ;;		_efgtoa
  2345 ;;		_fputc
  2346 ;;		_isdigit
  2347 ;;		_isupper
  2348 ;;		_strncmp
  2349 ;;		_tolower
  2350 ;; This function is called by:
  2351 ;;		_vfprintf
  2352 ;; This function uses a non-reentrant model
  2353 ;;
  2354                           
  2355                           	psect	text3
  2356  00E79E                     __ptext3:
  2357                           	callstack 0
  2358  00E79E                     _vfpfcnvrt:
  2359                           	callstack 23
  2360  00E79E                     
  2361                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 692: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 693: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\co
      +                          mmon\doprnt.c: 694:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.32\pic\sou
      +                          rces\c99\common\doprnt.c: 695:     int done, i;;C:\Program Files\Microchip\xc8\v2.32\pic
      +                          \sources\c99\common\doprnt.c: 696:     long long ll;;C:\Program Files\Microchip\xc8\v2.3
      +                          2\pic\sources\c99\common\doprnt.c: 697:     unsigned long long llu;
  2362  00E79E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2363  00E7A2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2364  00E7A6  CFDE FFF6          	movff	postinc2,tblptrl
  2365  00E7AA  CFDD FFF7          	movff	postdec2,tblptrh
  2366  00E7AE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2367  00E7AE  6AF8               	clrf	tblptru,c
  2368  00E7B0                     	endif
  2369  00E7B0                     	if	0	;tblptru may be non-zero
  2370  00E7B0                     	endif
  2371  00E7B0  0008               	tblrd		*
  2372  00E7B2  50F5               	movf	tablat,w,c
  2373  00E7B4  0A25               	xorlw	37
  2374  00E7B6  A4D8               	btfss	status,2,c
  2375  00E7B8  EFE0  F073         	goto	u5621
  2376  00E7BC  EFE2  F073         	goto	u5620
  2377  00E7C0                     u5621:
  2378  00E7C0  EFEE  F075         	goto	l6035
  2379  00E7C4                     u5620:
  2380  00E7C4                     
  2381                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 703:         ++*f
      +                          mt;
  2382  00E7C4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2383  00E7C8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2384  00E7CC  2ADE               	incf	postinc2,f,c
  2385  00E7CE  0E00               	movlw	0
  2386  00E7D0  22DD               	addwfc	postdec2,f,c
  2387  00E7D2                     
  2388                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 705:         flag
      +                          s = width = 0;
  2389  00E7D2  0E00               	movlw	0
  2390  00E7D4  0100               	movlb	0	; () banked
  2391  00E7D6  6FD1               	movwf	(_width+1)& (0+255),b
  2392  00E7D8  0E00               	movlw	0
  2393  00E7DA  6FD0               	movwf	_width& (0+255),b
  2394  00E7DC  C0D0  F0D4         	movff	_width,_flags
  2395  00E7E0  C0D1  F0D5         	movff	_width+1,_flags+1
  2396  00E7E4                     
  2397                           ; BSR set to: 0
  2398                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 706:         prec
      +                           = -1;
  2399  00E7E4  69D2               	setf	_prec& (0+255),b
  2400  00E7E6  69D3               	setf	(_prec+1)& (0+255),b
  2401  00E7E8                     
  2402                           ; BSR set to: 0
  2403                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 762:         if (
      +                          (*fmt)[0] == '.') {
  2404  00E7E8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2405  00E7EC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2406  00E7F0  CFDE FFF6          	movff	postinc2,tblptrl
  2407  00E7F4  CFDD FFF7          	movff	postdec2,tblptrh
  2408  00E7F8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2409  00E7F8  6AF8               	clrf	tblptru,c
  2410  00E7FA                     	endif
  2411  00E7FA                     	if	0	;tblptru may be non-zero
  2412  00E7FA                     	endif
  2413  00E7FA  0008               	tblrd		*
  2414  00E7FC  50F5               	movf	tablat,w,c
  2415  00E7FE  0A2E               	xorlw	46
  2416  00E800  A4D8               	btfss	status,2,c
  2417  00E802  EF05  F074         	goto	u5631
  2418  00E806  EF07  F074         	goto	u5630
  2419  00E80A                     u5631:
  2420  00E80A  EF86  F074         	goto	l5981
  2421  00E80E                     u5630:
  2422  00E80E                     
  2423                           ; BSR set to: 0
  2424                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 763:             
      +                          prec = 0;
  2425  00E80E  0E00               	movlw	0
  2426  00E810  6FD3               	movwf	(_prec+1)& (0+255),b
  2427  00E812  0E00               	movlw	0
  2428  00E814  6FD2               	movwf	_prec& (0+255),b
  2429  00E816                     
  2430                           ; BSR set to: 0
  2431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 764:             
      +                          ++*fmt;
  2432  00E816  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2433  00E81A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2434  00E81E  2ADE               	incf	postinc2,f,c
  2435  00E820  0E00               	movlw	0
  2436  00E822  22DD               	addwfc	postdec2,f,c
  2437  00E824                     
  2438                           ; BSR set to: 0
  2439                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 765:             
      +                          if ((*fmt)[0] == '*') {
  2440  00E824  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2441  00E828  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2442  00E82C  CFDE FFF6          	movff	postinc2,tblptrl
  2443  00E830  CFDD FFF7          	movff	postdec2,tblptrh
  2444  00E834                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2445  00E834  6AF8               	clrf	tblptru,c
  2446  00E836                     	endif
  2447  00E836                     	if	0	;tblptru may be non-zero
  2448  00E836                     	endif
  2449  00E836  0008               	tblrd		*
  2450  00E838  50F5               	movf	tablat,w,c
  2451  00E83A  0A2A               	xorlw	42
  2452  00E83C  A4D8               	btfss	status,2,c
  2453  00E83E  EF23  F074         	goto	u5641
  2454  00E842  EF25  F074         	goto	u5640
  2455  00E846                     u5641:
  2456  00E846  EF42  F074         	goto	l5971
  2457  00E84A                     u5640:
  2458  00E84A                     
  2459                           ; BSR set to: 0
  2460                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 766:             
      +                              ++*fmt;
  2461  00E84A  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2462  00E84E  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2463  00E852  2ADE               	incf	postinc2,f,c
  2464  00E854  0E00               	movlw	0
  2465  00E856  22DD               	addwfc	postdec2,f,c
  2466                           
  2467                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 767:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2468  00E858  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2469  00E85C  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2470  00E860  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2471  00E864  0E02               	movlw	2
  2472  00E866  26DE               	addwf	postinc2,f,c
  2473  00E868  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2474  00E86C  0E00               	movlw	0
  2475  00E86E  22DD               	addwfc	postdec2,f,c
  2476  00E870  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2477  00E874  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2478  00E878  CFDE F0D2          	movff	postinc2,_prec
  2479  00E87C  CFDD F0D3          	movff	postdec2,_prec+1
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 768:             
      +                          } else {
  2482  00E880  EF86  F074         	goto	l5981
  2483  00E884                     l5971:
  2484                           
  2485                           ; BSR set to: 0
  2486                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 769:             
      +                              prec = atoi(*fmt);
  2487  00E884  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2488  00E888  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2489  00E88C  CFDE F008          	movff	postinc2,atoi@s
  2490  00E890  CFDD F009          	movff	postdec2,atoi@s+1
  2491  00E894  EC55  F06C         	call	_atoi	;wreg free
  2492  00E898  C008  F0D2         	movff	?_atoi,_prec
  2493  00E89C  C009  F0D3         	movff	?_atoi+1,_prec+1
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 770:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2496  00E8A0  EF59  F074         	goto	l5975
  2497  00E8A4                     l5973:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 771:             
      +                                  ++*fmt;
  2500  00E8A4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2501  00E8A8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2502  00E8AC  2ADE               	incf	postinc2,f,c
  2503  00E8AE  0E00               	movlw	0
  2504  00E8B0  22DD               	addwfc	postdec2,f,c
  2505  00E8B2                     l5975:
  2506  00E8B2  0ED0               	movlw	208
  2507  00E8B4  6E4C               	movwf	??_vfpfcnvrt^0,c
  2508  00E8B6  0EFF               	movlw	255
  2509  00E8B8  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  2510  00E8BA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2511  00E8BE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2512  00E8C2  CFDE FFF6          	movff	postinc2,tblptrl
  2513  00E8C6  CFDD FFF7          	movff	postdec2,tblptrh
  2514  00E8CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2515  00E8CA  6AF8               	clrf	tblptru,c
  2516  00E8CC                     	endif
  2517  00E8CC                     	if	0	;tblptru may be non-zero
  2518  00E8CC                     	endif
  2519  00E8CC  0008               	tblrd		*
  2520  00E8CE  50F5               	movf	tablat,w,c
  2521  00E8D0  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  2522  00E8D2  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  2523  00E8D4  504C               	movf	??_vfpfcnvrt^0,w,c
  2524  00E8D6  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2525  00E8D8  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2526  00E8DA  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2527  00E8DC  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2528  00E8DE  E10A               	bnz	u5650
  2529  00E8E0  0E0A               	movlw	10
  2530  00E8E2  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2531  00E8E4  A0D8               	btfss	status,0,c
  2532  00E8E6  EF77  F074         	goto	u5651
  2533  00E8EA  EF7A  F074         	goto	u5650
  2534  00E8EE                     u5651:
  2535  00E8EE  0E01               	movlw	1
  2536  00E8F0  EF7B  F074         	goto	u5660
  2537  00E8F4                     u5650:
  2538  00E8F4  0E00               	movlw	0
  2539  00E8F6                     u5660:
  2540  00E8F6  6E50               	movwf	_vfpfcnvrt$2206^0,c
  2541  00E8F8  6A51               	clrf	(_vfpfcnvrt$2206+1)^0,c
  2542  00E8FA  5050               	movf	_vfpfcnvrt$2206^0,w,c
  2543  00E8FC  1051               	iorwf	(_vfpfcnvrt$2206+1)^0,w,c
  2544  00E8FE  A4D8               	btfss	status,2,c
  2545  00E900  EF84  F074         	goto	u5671
  2546  00E904  EF86  F074         	goto	u5670
  2547  00E908                     u5671:
  2548  00E908  EF52  F074         	goto	l5973
  2549  00E90C                     u5670:
  2550  00E90C                     l5981:
  2551                           
  2552                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 779:         ct[0
      +                          ] = (char)tolower((int)(*fmt)[0]);
  2553  00E90C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2554  00E910  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2555  00E914  CFDE FFF6          	movff	postinc2,tblptrl
  2556  00E918  CFDD FFF7          	movff	postdec2,tblptrh
  2557  00E91C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2558  00E91C  6AF8               	clrf	tblptru,c
  2559  00E91E                     	endif
  2560  00E91E                     	if	0	;tblptru may be non-zero
  2561  00E91E                     	endif
  2562  00E91E  0008               	tblrd		*
  2563  00E920  50F5               	movf	tablat,w,c
  2564  00E922  6E07               	movwf	tolower@c^0,c
  2565  00E924  6A08               	clrf	(tolower@c+1)^0,c
  2566  00E926  ECC3  F063         	call	_tolower	;wreg free
  2567  00E92A  5007               	movf	?_tolower^0,w,c
  2568  00E92C  6E58               	movwf	vfpfcnvrt@ct^0,c
  2569  00E92E                     
  2570                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 780:         if (
      +                          ct[0]) {
  2571  00E92E  5058               	movf	vfpfcnvrt@ct^0,w,c
  2572  00E930  B4D8               	btfsc	status,2,c
  2573  00E932  EF9D  F074         	goto	u5681
  2574  00E936  EF9F  F074         	goto	u5680
  2575  00E93A                     u5681:
  2576  00E93A  EFD9  F074         	goto	l5991
  2577  00E93E                     u5680:
  2578  00E93E                     
  2579                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 781:             
      +                          ct[1] = (char)tolower((int)(*fmt)[1]);
  2580  00E93E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2581  00E942  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2582  00E946  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2583  00E94A  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2584  00E94E  0E01               	movlw	1
  2585  00E950  264C               	addwf	??_vfpfcnvrt^0,f,c
  2586  00E952  0E00               	movlw	0
  2587  00E954  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2588  00E956  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2589  00E95A  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2590  00E95E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2591  00E95E  6AF8               	clrf	tblptru,c
  2592  00E960                     	endif
  2593  00E960                     	if	0	;tblptru may be non-zero
  2594  00E960                     	endif
  2595  00E960  0008               	tblrd		*
  2596  00E962  50F5               	movf	tablat,w,c
  2597  00E964  6E07               	movwf	tolower@c^0,c
  2598  00E966  6A08               	clrf	(tolower@c+1)^0,c
  2599  00E968  ECC3  F063         	call	_tolower	;wreg free
  2600  00E96C  5007               	movf	?_tolower^0,w,c
  2601  00E96E  6E59               	movwf	(vfpfcnvrt@ct+1)^0,c
  2602  00E970                     
  2603                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 782:             
      +                          if (ct[1]) {
  2604  00E970  5059               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2605  00E972  B4D8               	btfsc	status,2,c
  2606  00E974  EFBE  F074         	goto	u5691
  2607  00E978  EFC0  F074         	goto	u5690
  2608  00E97C                     u5691:
  2609  00E97C  EFD9  F074         	goto	l5991
  2610  00E980                     u5690:
  2611  00E980                     
  2612                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 783:             
      +                              ct[2] = (char)tolower((int)(*fmt)[2]);
  2613  00E980  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2614  00E984  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2615  00E988  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2616  00E98C  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2617  00E990  0E02               	movlw	2
  2618  00E992  264C               	addwf	??_vfpfcnvrt^0,f,c
  2619  00E994  0E00               	movlw	0
  2620  00E996  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2621  00E998  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2622  00E99C  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2623  00E9A0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2624  00E9A0  6AF8               	clrf	tblptru,c
  2625  00E9A2                     	endif
  2626  00E9A2                     	if	0	;tblptru may be non-zero
  2627  00E9A2                     	endif
  2628  00E9A2  0008               	tblrd		*
  2629  00E9A4  50F5               	movf	tablat,w,c
  2630  00E9A6  6E07               	movwf	tolower@c^0,c
  2631  00E9A8  6A08               	clrf	(tolower@c+1)^0,c
  2632  00E9AA  ECC3  F063         	call	_tolower	;wreg free
  2633  00E9AE  5007               	movf	?_tolower^0,w,c
  2634  00E9B0  6E5A               	movwf	(vfpfcnvrt@ct+2)^0,c
  2635  00E9B2                     l5991:
  2636                           
  2637                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 942:         if (
      +                          ct[0] == 'f') {
  2638  00E9B2  0E66               	movlw	102
  2639  00E9B4  1858               	xorwf	vfpfcnvrt@ct^0,w,c
  2640  00E9B6  A4D8               	btfss	status,2,c
  2641  00E9B8  EFE0  F074         	goto	u5701
  2642  00E9BC  EFE2  F074         	goto	u5700
  2643  00E9C0                     u5701:
  2644  00E9C0  EF23  F075         	goto	l6003
  2645  00E9C4                     u5700:
  2646  00E9C4                     
  2647                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 944:             
      +                          c = (*fmt)[0];
  2648  00E9C4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2649  00E9C8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2650  00E9CC  CFDE FFF6          	movff	postinc2,tblptrl
  2651  00E9D0  CFDD FFF7          	movff	postdec2,tblptrh
  2652  00E9D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2653  00E9D4  6AF8               	clrf	tblptru,c
  2654  00E9D6                     	endif
  2655  00E9D6                     	if	0	;tblptru may be non-zero
  2656  00E9D6                     	endif
  2657  00E9D6  0008               	tblrd		*
  2658  00E9D8  CFF5 F05B          	movff	tablat,vfpfcnvrt@c
  2659  00E9DC                     
  2660                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 945:             
      +                          ++*fmt;
  2661  00E9DC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2662  00E9E0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2663  00E9E4  2ADE               	incf	postinc2,f,c
  2664  00E9E6  0E00               	movlw	0
  2665  00E9E8  22DD               	addwfc	postdec2,f,c
  2666  00E9EA                     
  2667                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 946:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2668  00E9EA  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2669  00E9EE  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2670  00E9F2  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2671  00E9F6  0E04               	movlw	4
  2672  00E9F8  26DE               	addwf	postinc2,f,c
  2673  00E9FA  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2674  00E9FE  0E00               	movlw	0
  2675  00EA00  22DD               	addwfc	postdec2,f,c
  2676  00EA02  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2677  00EA06  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2678  00EA0A  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2679  00EA0E  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2680  00EA12  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2681  00EA16  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2682  00EA1A                     l5999:
  2683                           
  2684                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 948:             
      +                          return efgtoa(fp, f, c);
  2685  00EA1A  C046  F03A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2686  00EA1E  C047  F03B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2687  00EA22  C054  F03C         	movff	vfpfcnvrt@f,efgtoa@f
  2688  00EA26  C055  F03D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2689  00EA2A  C056  F03E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2690  00EA2E  C057  F03F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2691  00EA32  C05B  F040         	movff	vfpfcnvrt@c,efgtoa@c
  2692  00EA36  EC6B  F078         	call	_efgtoa	;wreg free
  2693  00EA3A  C03A  F046         	movff	?_efgtoa,?_vfpfcnvrt
  2694  00EA3E  C03B  F047         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2695  00EA42  EF0A  F076         	goto	l1695
  2696  00EA46                     l6003:
  2697                           
  2698                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 950:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2699  00EA46  0E58               	movlw	low vfpfcnvrt@ct
  2700  00EA48  6E01               	movwf	strncmp@_l^0,c
  2701  00EA4A  0E00               	movlw	high vfpfcnvrt@ct
  2702  00EA4C  6E02               	movwf	(strncmp@_l+1)^0,c
  2703  00EA4E  0EF9               	movlw	low STR_18
  2704  00EA50  6E03               	movwf	strncmp@_r^0,c
  2705  00EA52  0EFF               	movlw	high STR_18
  2706  00EA54  6E04               	movwf	(strncmp@_r+1)^0,c
  2707  00EA56  0E00               	movlw	0
  2708  00EA58  6E06               	movwf	(strncmp@n+1)^0,c
  2709  00EA5A  0E02               	movlw	2
  2710  00EA5C  6E05               	movwf	strncmp@n^0,c
  2711  00EA5E  ECE8  F068         	call	_strncmp	;wreg free
  2712  00EA62  5001               	movf	?_strncmp^0,w,c
  2713  00EA64  1002               	iorwf	(?_strncmp+1)^0,w,c
  2714  00EA66  A4D8               	btfss	status,2,c
  2715  00EA68  EF38  F075         	goto	u5711
  2716  00EA6C  EF3A  F075         	goto	u5710
  2717  00EA70                     u5711:
  2718  00EA70  EFB7  F075         	goto	l6019
  2719  00EA74                     u5710:
  2720  00EA74                     
  2721                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 953:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2722  00EA74  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2723  00EA78  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2724  00EA7C  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2725  00EA80  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2726  00EA84  0E01               	movlw	1
  2727  00EA86  264C               	addwf	??_vfpfcnvrt^0,f,c
  2728  00EA88  0E00               	movlw	0
  2729  00EA8A  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2730  00EA8C  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2731  00EA90  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2732  00EA94                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2733  00EA94  6AF8               	clrf	tblptru,c
  2734  00EA96                     	endif
  2735  00EA96                     	if	0	;tblptru may be non-zero
  2736  00EA96                     	endif
  2737  00EA96  0008               	tblrd		*
  2738  00EA98  CFF5 F05B          	movff	tablat,vfpfcnvrt@c
  2739  00EA9C  0EBF               	movlw	191
  2740  00EA9E  6E4C               	movwf	??_vfpfcnvrt^0,c
  2741  00EAA0  0EFF               	movlw	255
  2742  00EAA2  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  2743  00EAA4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2744  00EAA8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2745  00EAAC  CFDE FFF6          	movff	postinc2,tblptrl
  2746  00EAB0  CFDD FFF7          	movff	postdec2,tblptrh
  2747  00EAB4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2748  00EAB4  6AF8               	clrf	tblptru,c
  2749  00EAB6                     	endif
  2750  00EAB6                     	if	0	;tblptru may be non-zero
  2751  00EAB6                     	endif
  2752  00EAB6  0008               	tblrd		*
  2753  00EAB8  50F5               	movf	tablat,w,c
  2754  00EABA  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  2755  00EABC  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  2756  00EABE  504C               	movf	??_vfpfcnvrt^0,w,c
  2757  00EAC0  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2758  00EAC2  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2759  00EAC4  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2760  00EAC6  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2761  00EAC8  E10A               	bnz	u5720
  2762  00EACA  0E1A               	movlw	26
  2763  00EACC  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2764  00EACE  A0D8               	btfss	status,0,c
  2765  00EAD0  EF6C  F075         	goto	u5721
  2766  00EAD4  EF6F  F075         	goto	u5720
  2767  00EAD8                     u5721:
  2768  00EAD8  0E01               	movlw	1
  2769  00EADA  EF70  F075         	goto	u5730
  2770  00EADE                     u5720:
  2771  00EADE  0E00               	movlw	0
  2772  00EAE0                     u5730:
  2773  00EAE0  6E52               	movwf	_vfpfcnvrt$2210^0,c
  2774  00EAE2  6A53               	clrf	(_vfpfcnvrt$2210+1)^0,c
  2775  00EAE4  5052               	movf	_vfpfcnvrt$2210^0,w,c
  2776  00EAE6  1053               	iorwf	(_vfpfcnvrt$2210+1)^0,w,c
  2777  00EAE8  B4D8               	btfsc	status,2,c
  2778  00EAEA  EF79  F075         	goto	u5741
  2779  00EAEE  EF7B  F075         	goto	u5740
  2780  00EAF2                     u5741:
  2781  00EAF2  EF95  F075         	goto	l6013
  2782  00EAF6                     u5740:
  2783  00EAF6                     
  2784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 954:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2785  00EAF6  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2786  00EAFA  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2787  00EAFE  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2788  00EB02  0E04               	movlw	4
  2789  00EB04  26DE               	addwf	postinc2,f,c
  2790  00EB06  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2791  00EB0A  0E00               	movlw	0
  2792  00EB0C  22DD               	addwfc	postdec2,f,c
  2793  00EB0E  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2794  00EB12  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2795  00EB16  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2796  00EB1A  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2797  00EB1E  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2798  00EB22  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2799                           
  2800                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 955:             
      +                          } else {
  2801  00EB26  EFAD  F075         	goto	l1702
  2802  00EB2A                     l6013:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 956:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2805  00EB2A  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2806  00EB2E  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2807  00EB32  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2808  00EB36  0E04               	movlw	4
  2809  00EB38  26DE               	addwf	postinc2,f,c
  2810  00EB3A  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2811  00EB3E  0E00               	movlw	0
  2812  00EB40  22DD               	addwfc	postdec2,f,c
  2813  00EB42  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2814  00EB46  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2815  00EB4A  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2816  00EB4E  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2817  00EB52  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2818  00EB56  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2819  00EB5A                     l1702:
  2820                           
  2821                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 958:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2822  00EB5A  0E02               	movlw	2
  2823  00EB5C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2824  00EB60  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2825  00EB64  26DE               	addwf	postinc2,f,c
  2826  00EB66  0E00               	movlw	0
  2827  00EB68  22DD               	addwfc	postdec2,f,c
  2828  00EB6A  EF0D  F075         	goto	l5999
  2829  00EB6E                     l6019:
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1372:         if 
      +                          ((*fmt)[0] == '%') {
  2832  00EB6E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2833  00EB72  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2834  00EB76  CFDE FFF6          	movff	postinc2,tblptrl
  2835  00EB7A  CFDD FFF7          	movff	postdec2,tblptrh
  2836  00EB7E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2837  00EB7E  6AF8               	clrf	tblptru,c
  2838  00EB80                     	endif
  2839  00EB80                     	if	0	;tblptru may be non-zero
  2840  00EB80                     	endif
  2841  00EB80  0008               	tblrd		*
  2842  00EB82  50F5               	movf	tablat,w,c
  2843  00EB84  0A25               	xorlw	37
  2844  00EB86  A4D8               	btfss	status,2,c
  2845  00EB88  EFC8  F075         	goto	u5751
  2846  00EB8C  EFCA  F075         	goto	u5750
  2847  00EB90                     u5751:
  2848  00EB90  EFE1  F075         	goto	l6029
  2849  00EB94                     u5750:
  2850  00EB94                     
  2851                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1373:            
      +                           ++*fmt;
  2852  00EB94  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2853  00EB98  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2854  00EB9C  2ADE               	incf	postinc2,f,c
  2855  00EB9E  0E00               	movlw	0
  2856  00EBA0  22DD               	addwfc	postdec2,f,c
  2857  00EBA2                     
  2858                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1374:            
      +                           fputc((int)'%', fp);
  2859  00EBA2  0E00               	movlw	0
  2860  00EBA4  6E02               	movwf	(fputc@c+1)^0,c
  2861  00EBA6  0E25               	movlw	37
  2862  00EBA8  6E01               	movwf	fputc@c^0,c
  2863  00EBAA  C046  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2864  00EBAE  C047  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2865  00EBB2  EC83  F068         	call	_fputc	;wreg free
  2866  00EBB6                     l6025:
  2867                           
  2868                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1375:            
      +                           return 1;
  2869  00EBB6  0E00               	movlw	0
  2870  00EBB8  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  2871  00EBBA  0E01               	movlw	1
  2872  00EBBC  6E46               	movwf	?_vfpfcnvrt^0,c
  2873  00EBBE  EF0A  F076         	goto	l1695
  2874  00EBC2                     l6029:
  2875                           
  2876                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1379:         ++*
      +                          fmt;
  2877  00EBC2  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2878  00EBC6  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2879  00EBCA  2ADE               	incf	postinc2,f,c
  2880  00EBCC  0E00               	movlw	0
  2881  00EBCE  22DD               	addwfc	postdec2,f,c
  2882  00EBD0                     
  2883                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1380:         ret
      +                          urn 0;
  2884  00EBD0  0E00               	movlw	0
  2885  00EBD2  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  2886  00EBD4  0E00               	movlw	0
  2887  00EBD6  6E46               	movwf	?_vfpfcnvrt^0,c
  2888  00EBD8  EF0A  F076         	goto	l1695
  2889  00EBDC                     l6035:
  2890                           
  2891                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1384:     fputc((
      +                          int)(*fmt)[0], fp);
  2892  00EBDC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2893  00EBE0  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2894  00EBE4  CFDE FFF6          	movff	postinc2,tblptrl
  2895  00EBE8  CFDD FFF7          	movff	postdec2,tblptrh
  2896  00EBEC                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2897  00EBEC  6AF8               	clrf	tblptru,c
  2898  00EBEE                     	endif
  2899  00EBEE                     	if	0	;tblptru may be non-zero
  2900  00EBEE                     	endif
  2901  00EBEE  0008               	tblrd		*
  2902  00EBF0  50F5               	movf	tablat,w,c
  2903  00EBF2  6E01               	movwf	fputc@c^0,c
  2904  00EBF4  6A02               	clrf	(fputc@c+1)^0,c
  2905  00EBF6  C046  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2906  00EBFA  C047  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2907  00EBFE  EC83  F068         	call	_fputc	;wreg free
  2908  00EC02                     
  2909                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 1385:     ++*fmt;
  2910  00EC02  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2911  00EC06  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2912  00EC0A  2ADE               	incf	postinc2,f,c
  2913  00EC0C  0E00               	movlw	0
  2914  00EC0E  22DD               	addwfc	postdec2,f,c
  2915  00EC10  EFDB  F075         	goto	l6025
  2916  00EC14                     l1695:
  2917  00EC14  0012               	return		;funcret
  2918  00EC16                     __end_of_vfpfcnvrt:
  2919                           	callstack 0
  2920                           
  2921 ;; *************** function _strncmp *****************
  2922 ;; Defined at:
  2923 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strncmp.c"
  2924 ;; Parameters:    Size  Location     Type
  2925 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2926 ;;		 -> vfpfcnvrt@ct(3), 
  2927 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2928 ;;		 -> STR_20(3), 
  2929 ;;  n               2    4[COMRAM] unsigned int 
  2930 ;; Auto vars:     Size  Location     Type
  2931 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2932 ;;		 -> STR_20(3), 
  2933 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2934 ;;		 -> vfpfcnvrt@ct(3), 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  2    0[COMRAM] int 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2944 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2946 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2947 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2948 ;;Total ram usage:       11 bytes
  2949 ;; Hardware stack levels used: 1
  2950 ;; This function calls:
  2951 ;;		Nothing
  2952 ;; This function is called by:
  2953 ;;		_vfpfcnvrt
  2954 ;; This function uses a non-reentrant model
  2955 ;;
  2956                           
  2957                           	psect	text4
  2958  00D1D0                     __ptext4:
  2959                           	callstack 0
  2960  00D1D0                     _strncmp:
  2961                           	callstack 27
  2962  00D1D0  C001  F008         	movff	strncmp@_l,strncmp@l
  2963  00D1D4  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2964  00D1D8  C003  F00A         	movff	strncmp@_r,strncmp@r
  2965  00D1DC  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2966  00D1E0  0605               	decf	strncmp@n^0,f,c
  2967  00D1E2  A0D8               	btfss	status,0,c
  2968  00D1E4  0606               	decf	(strncmp@n+1)^0,f,c
  2969  00D1E6  2805               	incf	strncmp@n^0,w,c
  2970  00D1E8  E106               	bnz	u5551
  2971  00D1EA  2806               	incf	(strncmp@n+1)^0,w,c
  2972  00D1EC  A4D8               	btfss	status,2,c
  2973  00D1EE  EFFB  F068         	goto	u5551
  2974  00D1F2  EFFD  F068         	goto	u5550
  2975  00D1F6                     u5551:
  2976  00D1F6  EF0A  F069         	goto	l5931
  2977  00D1FA                     u5550:
  2978  00D1FA  0E00               	movlw	0
  2979  00D1FC  6E02               	movwf	(?_strncmp+1)^0,c
  2980  00D1FE  0E00               	movlw	0
  2981  00D200  6E01               	movwf	?_strncmp^0,c
  2982  00D202  EF55  F069         	goto	l1823
  2983  00D206                     l5929:
  2984  00D206  4A08               	infsnz	strncmp@l^0,f,c
  2985  00D208  2A09               	incf	(strncmp@l+1)^0,f,c
  2986  00D20A  4A0A               	infsnz	strncmp@r^0,f,c
  2987  00D20C  2A0B               	incf	(strncmp@r+1)^0,f,c
  2988  00D20E  0605               	decf	strncmp@n^0,f,c
  2989  00D210  A0D8               	btfss	status,0,c
  2990  00D212  0606               	decf	(strncmp@n+1)^0,f,c
  2991  00D214                     l5931:
  2992  00D214  C008  FFD9         	movff	strncmp@l,fsr2l
  2993  00D218  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2994  00D21C  50DF               	movf	indf2,w,c
  2995  00D21E  B4D8               	btfsc	status,2,c
  2996  00D220  EF14  F069         	goto	u5561
  2997  00D224  EF16  F069         	goto	u5560
  2998  00D228                     u5561:
  2999  00D228  EF43  F069         	goto	l5939
  3000  00D22C                     u5560:
  3001  00D22C  C00A  FFF6         	movff	strncmp@r,tblptrl
  3002  00D230  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3003  00D234                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3004  00D234  6AF8               	clrf	tblptru,c
  3005  00D236                     	endif
  3006  00D236                     	if	0	;tblptru may be non-zero
  3007  00D236                     	endif
  3008  00D236  0008               	tblrd		*
  3009  00D238  50F5               	movf	tablat,w,c
  3010  00D23A  0900               	iorlw	0
  3011  00D23C  B4D8               	btfsc	status,2,c
  3012  00D23E  EF23  F069         	goto	u5571
  3013  00D242  EF25  F069         	goto	u5570
  3014  00D246                     u5571:
  3015  00D246  EF43  F069         	goto	l5939
  3016  00D24A                     u5570:
  3017  00D24A  5005               	movf	strncmp@n^0,w,c
  3018  00D24C  1006               	iorwf	(strncmp@n+1)^0,w,c
  3019  00D24E  B4D8               	btfsc	status,2,c
  3020  00D250  EF2C  F069         	goto	u5581
  3021  00D254  EF2E  F069         	goto	u5580
  3022  00D258                     u5581:
  3023  00D258  EF43  F069         	goto	l5939
  3024  00D25C                     u5580:
  3025  00D25C  C008  FFD9         	movff	strncmp@l,fsr2l
  3026  00D260  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3027  00D264  50DF               	movf	indf2,w,c
  3028  00D266  6E07               	movwf	??_strncmp^0,c
  3029  00D268  C00A  FFF6         	movff	strncmp@r,tblptrl
  3030  00D26C  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3031  00D270                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3032  00D270  6AF8               	clrf	tblptru,c
  3033  00D272                     	endif
  3034  00D272                     	if	0	;tblptru may be non-zero
  3035  00D272                     	endif
  3036  00D272  0008               	tblrd		*
  3037  00D274  50F5               	movf	tablat,w,c
  3038  00D276  1807               	xorwf	??_strncmp^0,w,c
  3039  00D278  B4D8               	btfsc	status,2,c
  3040  00D27A  EF41  F069         	goto	u5591
  3041  00D27E  EF43  F069         	goto	u5590
  3042  00D282                     u5591:
  3043  00D282  EF03  F069         	goto	l5929
  3044  00D286                     u5590:
  3045  00D286                     l5939:
  3046  00D286  C008  FFD9         	movff	strncmp@l,fsr2l
  3047  00D28A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  3048  00D28E  50DF               	movf	indf2,w,c
  3049  00D290  6E07               	movwf	??_strncmp^0,c
  3050  00D292  C00A  FFF6         	movff	strncmp@r,tblptrl
  3051  00D296  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  3052  00D29A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3053  00D29A  6AF8               	clrf	tblptru,c
  3054  00D29C                     	endif
  3055  00D29C                     	if	0	;tblptru may be non-zero
  3056  00D29C                     	endif
  3057  00D29C  0008               	tblrd		*
  3058  00D29E  50F5               	movf	tablat,w,c
  3059  00D2A0  5C07               	subwf	??_strncmp^0,w,c
  3060  00D2A2  6E01               	movwf	?_strncmp^0,c
  3061  00D2A4  6A02               	clrf	(?_strncmp+1)^0,c
  3062  00D2A6  A0D8               	btfss	status,0,c
  3063  00D2A8  0602               	decf	(?_strncmp+1)^0,f,c
  3064  00D2AA                     l1823:
  3065  00D2AA  0012               	return		;funcret
  3066  00D2AC                     __end_of_strncmp:
  3067                           	callstack 0
  3068                           
  3069 ;; *************** function _efgtoa *****************
  3070 ;; Defined at:
  3071 ;;		line 332 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  3072 ;; Parameters:    Size  Location     Type
  3073 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  3074 ;;		 -> sprintf@f(6), 
  3075 ;;  f               4   59[COMRAM] PTR struct _IO_FILE
  3076 ;;  c               1   63[COMRAM] unsigned char 
  3077 ;; Auto vars:     Size  Location     Type
  3078 ;;  u               4   52[BANK0 ] unsigned char 
  3079 ;;  g               4   44[BANK0 ] unsigned char 
  3080 ;;  l               4   38[BANK0 ] unsigned char 
  3081 ;;  h               4   34[BANK0 ] unsigned char 
  3082 ;;  ou              4   20[BANK0 ] unsigned char 
  3083 ;;  n               2   50[BANK0 ] int 
  3084 ;;  e               2   48[BANK0 ] int 
  3085 ;;  i               2   42[BANK0 ] int 
  3086 ;;  w               2   30[BANK0 ] int 
  3087 ;;  p               2   28[BANK0 ] int 
  3088 ;;  sign            2   26[BANK0 ] int 
  3089 ;;  d               2   24[BANK0 ] int 
  3090 ;;  m               2   18[BANK0 ] int 
  3091 ;;  ne              2   16[BANK0 ] int 
  3092 ;;  pp              2   14[BANK0 ] int 
  3093 ;;  t               2   12[BANK0 ] int 
  3094 ;;  mode            1   33[BANK0 ] unsigned char 
  3095 ;;  nmode           1   32[BANK0 ] unsigned char 
  3096 ;; Return value:  Size  Location     Type
  3097 ;;                  2   57[COMRAM] int 
  3098 ;; Registers used:
  3099 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3100 ;; Tracked objects:
  3101 ;;		On entry : 0/0
  3102 ;;		On exit  : 0/0
  3103 ;;		Unchanged: 0/0
  3104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3105 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3106 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3107 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3108 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3109 ;;Total ram usage:       68 bytes
  3110 ;; Hardware stack levels used: 1
  3111 ;; Hardware stack levels required when called: 4
  3112 ;; This function calls:
  3113 ;;		___awdiv
  3114 ;;		___awmod
  3115 ;;		___fladd
  3116 ;;		___fldiv
  3117 ;;		___fleq
  3118 ;;		___flge
  3119 ;;		___flmul
  3120 ;;		___flneg
  3121 ;;		___flsub
  3122 ;;		___fltol
  3123 ;;		___fpclassifyf
  3124 ;;		_floorf
  3125 ;;		_isupper
  3126 ;;		_pad
  3127 ;;		_strcpy
  3128 ;;		_tolower
  3129 ;; This function is called by:
  3130 ;;		_vfpfcnvrt
  3131 ;; This function uses a non-reentrant model
  3132 ;;
  3133                           
  3134                           	psect	text5
  3135  00F0D6                     __ptext5:
  3136                           	callstack 0
  3137  00F0D6                     _efgtoa:
  3138                           	callstack 23
  3139  00F0D6                     
  3140                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 332: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.32\pic\sources\
      +                          c99\common\doprnt.c: 333: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\
      +                          doprnt.c: 334:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c9
      +                          9\common\doprnt.c: 335:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 336:     long double g, h, l, ou, u;
  3141  00F0D6  0E00               	movlw	0
  3142  00F0D8  0100               	movlb	0	; () banked
  3143  00F0DA  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3144  00F0DC  0E00               	movlw	0
  3145  00F0DE  6F7A               	movwf	efgtoa@sign& (0+255),b
  3146  00F0E0                     
  3147                           ; BSR set to: 0
  3148                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 340:     g = f;
  3149  00F0E0  C03C  F08C         	movff	efgtoa@f,efgtoa@g
  3150  00F0E4  C03D  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  3151  00F0E8  C03E  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  3152  00F0EC  C03F  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  3153  00F0F0                     
  3154                           ; BSR set to: 0
  3155                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 341:     if (g < 
      +                          0.0) {
  3156  00F0F0  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3157  00F0F2  EF7F  F078         	goto	u4940
  3158  00F0F6  EF7D  F078         	goto	u4941
  3159  00F0FA                     u4941:
  3160  00F0FA  EF95  F078         	goto	l5583
  3161  00F0FE                     u4940:
  3162  00F0FE                     
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 342:         sign
      +                           = 1;
  3165  00F0FE  0E00               	movlw	0
  3166  00F100  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3167  00F102  0E01               	movlw	1
  3168  00F104  6F7A               	movwf	efgtoa@sign& (0+255),b
  3169  00F106                     
  3170                           ; BSR set to: 0
  3171                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 343:         g = 
      +                          -g;
  3172  00F106  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3173  00F10A  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3174  00F10E  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3175  00F112  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3176  00F116  EC28  F062         	call	___flneg	;wreg free
  3177  00F11A  C001  F08C         	movff	?___flneg,efgtoa@g
  3178  00F11E  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3179  00F122  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3180  00F126  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3181  00F12A                     l5583:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 347:     n = 0;
  3184  00F12A  0E00               	movlw	0
  3185  00F12C  0100               	movlb	0	; () banked
  3186  00F12E  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3187  00F130  0E00               	movlw	0
  3188  00F132  6F92               	movwf	efgtoa@n& (0+255),b
  3189  00F134                     
  3190                           ; BSR set to: 0
  3191                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 348:     w = widt
      +                          h;
  3192  00F134  C0D0  F07E         	movff	_width,efgtoa@w
  3193  00F138  C0D1  F07F         	movff	_width+1,efgtoa@w+1
  3194  00F13C                     
  3195                           ; BSR set to: 0
  3196                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 349:     if (sign
      +                           || (flags & (1 << 2))) {
  3197  00F13C  517A               	movf	efgtoa@sign& (0+255),w,b
  3198  00F13E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3199  00F140  A4D8               	btfss	status,2,c
  3200  00F142  EFA5  F078         	goto	u4951
  3201  00F146  EFA7  F078         	goto	u4950
  3202  00F14A                     u4951:
  3203  00F14A  EFAE  F078         	goto	l5591
  3204  00F14E                     u4950:
  3205  00F14E                     
  3206                           ; BSR set to: 0
  3207  00F14E  A5D4               	btfss	_flags& (0+255),2,b
  3208  00F150  EFAC  F078         	goto	u4961
  3209  00F154  EFAE  F078         	goto	u4960
  3210  00F158                     u4961:
  3211  00F158  EFC8  F078         	goto	l5603
  3212  00F15C                     u4960:
  3213  00F15C                     l5591:
  3214                           
  3215                           ; BSR set to: 0
  3216                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 350:         dbuf
      +                          [n] = sign ? '-' : '+';
  3217  00F15C  517A               	movf	efgtoa@sign& (0+255),w,b
  3218  00F15E  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3219  00F160  A4D8               	btfss	status,2,c
  3220  00F162  EFB5  F078         	goto	u4971
  3221  00F166  EFB7  F078         	goto	u4970
  3222  00F16A                     u4971:
  3223  00F16A  EFBD  F078         	goto	l5595
  3224  00F16E                     u4970:
  3225  00F16E                     
  3226                           ; BSR set to: 0
  3227  00F16E  0E00               	movlw	0
  3228  00F170  6F61               	movwf	(_efgtoa$2180+1)& (0+255),b
  3229  00F172  0E2B               	movlw	43
  3230  00F174  6F60               	movwf	_efgtoa$2180& (0+255),b
  3231  00F176  EFC1  F078         	goto	l5597
  3232  00F17A                     l5595:
  3233                           
  3234                           ; BSR set to: 0
  3235  00F17A  0E00               	movlw	0
  3236  00F17C  6F61               	movwf	(_efgtoa$2180+1)& (0+255),b
  3237  00F17E  0E2D               	movlw	45
  3238  00F180  6F60               	movwf	_efgtoa$2180& (0+255),b
  3239  00F182                     l5597:
  3240                           
  3241                           ; BSR set to: 0
  3242  00F182  C060  F174         	movff	_efgtoa$2180,_dbuf
  3243  00F186                     
  3244                           ; BSR set to: 0
  3245                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 351:         ++n;
  3246  00F186  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3247  00F188  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3248  00F18A                     
  3249                           ; BSR set to: 0
  3250                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 352:         --w;
  3251  00F18A  077E               	decf	efgtoa@w& (0+255),f,b
  3252  00F18C  A0D8               	btfss	status,0,c
  3253  00F18E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  3254  00F190                     l5603:
  3255                           
  3256                           ; BSR set to: 0
  3257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 357:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3258  00F190  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3259  00F194  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3260  00F198  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3261  00F19C  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3262  00F1A0  ECCF  F069         	call	___fpclassifyf	;wreg free
  3263  00F1A4  0401               	decf	?___fpclassifyf^0,w,c
  3264  00F1A6  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3265  00F1A8  A4D8               	btfss	status,2,c
  3266  00F1AA  EFD9  F078         	goto	u4981
  3267  00F1AE  EFDB  F078         	goto	u4980
  3268  00F1B2                     u4981:
  3269  00F1B2  EF32  F079         	goto	l5621
  3270  00F1B6                     u4980:
  3271  00F1B6  0EBF               	movlw	191
  3272  00F1B8  6E41               	movwf	??_efgtoa^0,c
  3273  00F1BA  0EFF               	movlw	255
  3274  00F1BC  6E42               	movwf	(??_efgtoa+1)^0,c
  3275  00F1BE  5040               	movf	efgtoa@c^0,w,c
  3276  00F1C0  6E43               	movwf	(??_efgtoa+2)^0,c
  3277  00F1C2  6A44               	clrf	(??_efgtoa+3)^0,c
  3278  00F1C4  5041               	movf	??_efgtoa^0,w,c
  3279  00F1C6  2643               	addwf	(??_efgtoa+2)^0,f,c
  3280  00F1C8  5042               	movf	(??_efgtoa+1)^0,w,c
  3281  00F1CA  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3282  00F1CC  5044               	movf	(??_efgtoa+3)^0,w,c
  3283  00F1CE  E10A               	bnz	u4990
  3284  00F1D0  0E1A               	movlw	26
  3285  00F1D2  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3286  00F1D4  A0D8               	btfss	status,0,c
  3287  00F1D6  EFEF  F078         	goto	u4991
  3288  00F1DA  EFF2  F078         	goto	u4990
  3289  00F1DE                     u4991:
  3290  00F1DE  0E01               	movlw	1
  3291  00F1E0  EFF3  F078         	goto	u5000
  3292  00F1E4                     u4990:
  3293  00F1E4  0E00               	movlw	0
  3294  00F1E6                     u5000:
  3295  00F1E6  0100               	movlb	0	; () banked
  3296  00F1E8  6F62               	movwf	_efgtoa$2181& (0+255),b
  3297  00F1EA  6B63               	clrf	(_efgtoa$2181+1)& (0+255),b
  3298  00F1EC                     
  3299                           ; BSR set to: 0
  3300  00F1EC  5162               	movf	_efgtoa$2181& (0+255),w,b
  3301  00F1EE  1163               	iorwf	(_efgtoa$2181+1)& (0+255),w,b
  3302  00F1F0  B4D8               	btfsc	status,2,c
  3303  00F1F2  EFFD  F078         	goto	u5011
  3304  00F1F6  EFFF  F078         	goto	u5010
  3305  00F1FA                     u5011:
  3306  00F1FA  EF0D  F079         	goto	l5613
  3307  00F1FE                     u5010:
  3308  00F1FE                     
  3309                           ; BSR set to: 0
  3310                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 358:             
      +                          strcpy(&dbuf[n], "INF");
  3311  00F1FE  0E74               	movlw	low _dbuf
  3312  00F200  2592               	addwf	efgtoa@n& (0+255),w,b
  3313  00F202  6E01               	movwf	strcpy@dest^0,c
  3314  00F204  0E01               	movlw	high _dbuf
  3315  00F206  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3316  00F208  6E02               	movwf	(strcpy@dest+1)^0,c
  3317  00F20A  0EE5               	movlw	low STR_10
  3318  00F20C  6E03               	movwf	strcpy@src^0,c
  3319  00F20E  0EFF               	movlw	high STR_10
  3320  00F210  6E04               	movwf	(strcpy@src+1)^0,c
  3321  00F212  EC94  F063         	call	_strcpy	;wreg free
  3322                           
  3323                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 359:         } el
      +                          se {
  3324  00F216  EF19  F079         	goto	l5615
  3325  00F21A                     l5613:
  3326                           
  3327                           ; BSR set to: 0
  3328                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 360:             
      +                          strcpy(&dbuf[n], "inf");
  3329  00F21A  0E74               	movlw	low _dbuf
  3330  00F21C  2592               	addwf	efgtoa@n& (0+255),w,b
  3331  00F21E  6E01               	movwf	strcpy@dest^0,c
  3332  00F220  0E01               	movlw	high _dbuf
  3333  00F222  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3334  00F224  6E02               	movwf	(strcpy@dest+1)^0,c
  3335  00F226  0EED               	movlw	low STR_11
  3336  00F228  6E03               	movwf	strcpy@src^0,c
  3337  00F22A  0EFF               	movlw	high STR_11
  3338  00F22C  6E04               	movwf	(strcpy@src+1)^0,c
  3339  00F22E  EC94  F063         	call	_strcpy	;wreg free
  3340  00F232                     l5615:
  3341                           
  3342                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 362:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3343  00F232  0100               	movlb	0	; () banked
  3344  00F234  0EFD               	movlw	253
  3345  00F236  277E               	addwf	efgtoa@w& (0+255),f,b
  3346  00F238  0EFF               	movlw	255
  3347  00F23A  237F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3348  00F23C                     l5617:
  3349                           
  3350                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 363:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3351  00F23C  C03A  F011         	movff	efgtoa@fp,pad@fp
  3352  00F240  C03B  F012         	movff	efgtoa@fp+1,pad@fp+1
  3353  00F244  0E74               	movlw	low _dbuf
  3354  00F246  6E13               	movwf	pad@buf^0,c
  3355  00F248  0E01               	movlw	high _dbuf
  3356  00F24A  6E14               	movwf	(pad@buf+1)^0,c
  3357  00F24C  C07E  F015         	movff	efgtoa@w,pad@p
  3358  00F250  C07F  F016         	movff	efgtoa@w+1,pad@p+1
  3359  00F254  EC20  F068         	call	_pad	;wreg free
  3360  00F258  C011  F03A         	movff	?_pad,?_efgtoa
  3361  00F25C  C012  F03B         	movff	?_pad+1,?_efgtoa+1
  3362  00F260  EF96  F07E         	goto	l1603
  3363  00F264                     l5621:
  3364                           
  3365                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 366:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3366  00F264  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3367  00F268  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3368  00F26C  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3369  00F270  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3370  00F274  ECCF  F069         	call	___fpclassifyf	;wreg free
  3371  00F278  5001               	movf	?___fpclassifyf^0,w,c
  3372  00F27A  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3373  00F27C  A4D8               	btfss	status,2,c
  3374  00F27E  EF43  F079         	goto	u5021
  3375  00F282  EF45  F079         	goto	u5020
  3376  00F286                     u5021:
  3377  00F286  EF85  F079         	goto	l5639
  3378  00F28A                     u5020:
  3379  00F28A  0EBF               	movlw	191
  3380  00F28C  6E41               	movwf	??_efgtoa^0,c
  3381  00F28E  0EFF               	movlw	255
  3382  00F290  6E42               	movwf	(??_efgtoa+1)^0,c
  3383  00F292  5040               	movf	efgtoa@c^0,w,c
  3384  00F294  6E43               	movwf	(??_efgtoa+2)^0,c
  3385  00F296  6A44               	clrf	(??_efgtoa+3)^0,c
  3386  00F298  5041               	movf	??_efgtoa^0,w,c
  3387  00F29A  2643               	addwf	(??_efgtoa+2)^0,f,c
  3388  00F29C  5042               	movf	(??_efgtoa+1)^0,w,c
  3389  00F29E  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3390  00F2A0  5044               	movf	(??_efgtoa+3)^0,w,c
  3391  00F2A2  E10A               	bnz	u5030
  3392  00F2A4  0E1A               	movlw	26
  3393  00F2A6  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3394  00F2A8  A0D8               	btfss	status,0,c
  3395  00F2AA  EF59  F079         	goto	u5031
  3396  00F2AE  EF5C  F079         	goto	u5030
  3397  00F2B2                     u5031:
  3398  00F2B2  0E01               	movlw	1
  3399  00F2B4  EF5D  F079         	goto	u5040
  3400  00F2B8                     u5030:
  3401  00F2B8  0E00               	movlw	0
  3402  00F2BA                     u5040:
  3403  00F2BA  0100               	movlb	0	; () banked
  3404  00F2BC  6F64               	movwf	_efgtoa$2186& (0+255),b
  3405  00F2BE  6B65               	clrf	(_efgtoa$2186+1)& (0+255),b
  3406  00F2C0                     
  3407                           ; BSR set to: 0
  3408  00F2C0  5164               	movf	_efgtoa$2186& (0+255),w,b
  3409  00F2C2  1165               	iorwf	(_efgtoa$2186+1)& (0+255),w,b
  3410  00F2C4  B4D8               	btfsc	status,2,c
  3411  00F2C6  EF67  F079         	goto	u5051
  3412  00F2CA  EF69  F079         	goto	u5050
  3413  00F2CE                     u5051:
  3414  00F2CE  EF77  F079         	goto	l5631
  3415  00F2D2                     u5050:
  3416  00F2D2                     
  3417                           ; BSR set to: 0
  3418                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 367:             
      +                          strcpy(&dbuf[n], "NAN");
  3419  00F2D2  0E74               	movlw	low _dbuf
  3420  00F2D4  2592               	addwf	efgtoa@n& (0+255),w,b
  3421  00F2D6  6E01               	movwf	strcpy@dest^0,c
  3422  00F2D8  0E01               	movlw	high _dbuf
  3423  00F2DA  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3424  00F2DC  6E02               	movwf	(strcpy@dest+1)^0,c
  3425  00F2DE  0EE9               	movlw	low STR_14
  3426  00F2E0  6E03               	movwf	strcpy@src^0,c
  3427  00F2E2  0EFF               	movlw	high STR_14
  3428  00F2E4  6E04               	movwf	(strcpy@src+1)^0,c
  3429  00F2E6  EC94  F063         	call	_strcpy	;wreg free
  3430                           
  3431                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 368:         } el
      +                          se {
  3432  00F2EA  EF19  F079         	goto	l5615
  3433  00F2EE                     l5631:
  3434                           
  3435                           ; BSR set to: 0
  3436                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 369:             
      +                          strcpy(&dbuf[n], "nan");
  3437  00F2EE  0E74               	movlw	low _dbuf
  3438  00F2F0  2592               	addwf	efgtoa@n& (0+255),w,b
  3439  00F2F2  6E01               	movwf	strcpy@dest^0,c
  3440  00F2F4  0E01               	movlw	high _dbuf
  3441  00F2F6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3442  00F2F8  6E02               	movwf	(strcpy@dest+1)^0,c
  3443  00F2FA  0EF1               	movlw	low STR_15
  3444  00F2FC  6E03               	movwf	strcpy@src^0,c
  3445  00F2FE  0EFF               	movlw	high STR_15
  3446  00F300  6E04               	movwf	(strcpy@src+1)^0,c
  3447  00F302  EC94  F063         	call	_strcpy	;wreg free
  3448  00F306  EF19  F079         	goto	l5615
  3449  00F30A                     l5639:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 376:     u = 1.0;
  3452  00F30A  0E00               	movlw	0
  3453  00F30C  0100               	movlb	0	; () banked
  3454  00F30E  6F94               	movwf	efgtoa@u& (0+255),b
  3455  00F310  0E00               	movlw	0
  3456  00F312  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3457  00F314  0E80               	movlw	128
  3458  00F316  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3459  00F318  0E3F               	movlw	63
  3460  00F31A  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3461                           
  3462                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 377:     e = 0;
  3463  00F31C  0E00               	movlw	0
  3464  00F31E  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3465  00F320  0E00               	movlw	0
  3466  00F322  6F90               	movwf	efgtoa@e& (0+255),b
  3467  00F324                     
  3468                           ; BSR set to: 0
  3469                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 378:     if (!(g 
      +                          == 0.0)) {
  3470  00F324  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3471  00F328  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3472  00F32C  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3473  00F330  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3474  00F334  0E00               	movlw	0
  3475  00F336  6E05               	movwf	___fleq@ff2^0,c
  3476  00F338  0E00               	movlw	0
  3477  00F33A  6E06               	movwf	(___fleq@ff2+1)^0,c
  3478  00F33C  0E00               	movlw	0
  3479  00F33E  6E07               	movwf	(___fleq@ff2+2)^0,c
  3480  00F340  0E00               	movlw	0
  3481  00F342  6E08               	movwf	(___fleq@ff2+3)^0,c
  3482  00F344  ECAF  F066         	call	___fleq	;wreg free
  3483  00F348  B0D8               	btfsc	status,0,c
  3484  00F34A  EFA9  F079         	goto	u5061
  3485  00F34E  EFAB  F079         	goto	u5060
  3486  00F352                     u5061:
  3487  00F352  EF2E  F07A         	goto	l5657
  3488  00F356                     u5060:
  3489  00F356  EFCA  F079         	goto	l5649
  3490  00F35A                     l5645:
  3491                           
  3492                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 380:             
      +                          u = u*10.0;
  3493  00F35A  C094  F015         	movff	efgtoa@u,___flmul@b
  3494  00F35E  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3495  00F362  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3496  00F366  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3497  00F36A  0E00               	movlw	0
  3498  00F36C  6E19               	movwf	___flmul@a^0,c
  3499  00F36E  0E00               	movlw	0
  3500  00F370  6E1A               	movwf	(___flmul@a+1)^0,c
  3501  00F372  0E20               	movlw	32
  3502  00F374  6E1B               	movwf	(___flmul@a+2)^0,c
  3503  00F376  0E41               	movlw	65
  3504  00F378  6E1C               	movwf	(___flmul@a+3)^0,c
  3505  00F37A  ECBA  F071         	call	___flmul	;wreg free
  3506  00F37E  C015  F094         	movff	?___flmul,efgtoa@u
  3507  00F382  C016  F095         	movff	?___flmul+1,efgtoa@u+1
  3508  00F386  C017  F096         	movff	?___flmul+2,efgtoa@u+2
  3509  00F38A  C018  F097         	movff	?___flmul+3,efgtoa@u+3
  3510  00F38E                     
  3511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 381:             
      +                          ++e;
  3512  00F38E  0100               	movlb	0	; () banked
  3513  00F390  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3514  00F392  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3515  00F394                     l5649:
  3516                           
  3517                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 379:         whil
      +                          e (!(g < (u*10.0))) {
  3518  00F394  C08C  F02E         	movff	efgtoa@g,___flge@ff1
  3519  00F398  C08D  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3520  00F39C  C08E  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3521  00F3A0  C08F  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3522  00F3A4  0E00               	movlw	0
  3523  00F3A6  6E19               	movwf	___flmul@a^0,c
  3524  00F3A8  0E00               	movlw	0
  3525  00F3AA  6E1A               	movwf	(___flmul@a+1)^0,c
  3526  00F3AC  0E20               	movlw	32
  3527  00F3AE  6E1B               	movwf	(___flmul@a+2)^0,c
  3528  00F3B0  0E41               	movlw	65
  3529  00F3B2  6E1C               	movwf	(___flmul@a+3)^0,c
  3530  00F3B4  C094  F015         	movff	efgtoa@u,___flmul@b
  3531  00F3B8  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3532  00F3BC  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3533  00F3C0  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3534  00F3C4  ECBA  F071         	call	___flmul	;wreg free
  3535  00F3C8  C015  F032         	movff	?___flmul,___flge@ff2
  3536  00F3CC  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  3537  00F3D0  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  3538  00F3D4  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  3539  00F3D8  EC50  F06B         	call	___flge	;wreg free
  3540  00F3DC  B0D8               	btfsc	status,0,c
  3541  00F3DE  EFF3  F079         	goto	u5071
  3542  00F3E2  EFF5  F079         	goto	u5070
  3543  00F3E6                     u5071:
  3544  00F3E6  EFAD  F079         	goto	l5645
  3545  00F3EA                     u5070:
  3546  00F3EA  EF15  F07A         	goto	l5655
  3547  00F3EE                     l5651:
  3548                           
  3549                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 384:             
      +                          u = u/10.0;
  3550  00F3EE  C094  F001         	movff	efgtoa@u,___fldiv@b
  3551  00F3F2  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3552  00F3F6  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3553  00F3FA  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3554  00F3FE  0E00               	movlw	0
  3555  00F400  6E05               	movwf	___fldiv@a^0,c
  3556  00F402  0E00               	movlw	0
  3557  00F404  6E06               	movwf	(___fldiv@a+1)^0,c
  3558  00F406  0E20               	movlw	32
  3559  00F408  6E07               	movwf	(___fldiv@a+2)^0,c
  3560  00F40A  0E41               	movlw	65
  3561  00F40C  6E08               	movwf	(___fldiv@a+3)^0,c
  3562  00F40E  ECED  F06F         	call	___fldiv	;wreg free
  3563  00F412  C001  F094         	movff	?___fldiv,efgtoa@u
  3564  00F416  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3565  00F41A  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3566  00F41E  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3567  00F422                     
  3568                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 385:             
      +                          --e;
  3569  00F422  0100               	movlb	0	; () banked
  3570  00F424  0790               	decf	efgtoa@e& (0+255),f,b
  3571  00F426  A0D8               	btfss	status,0,c
  3572  00F428  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3573  00F42A                     l5655:
  3574                           
  3575                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 383:         whil
      +                          e (g < u) {
  3576  00F42A  C08C  F02E         	movff	efgtoa@g,___flge@ff1
  3577  00F42E  C08D  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3578  00F432  C08E  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3579  00F436  C08F  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3580  00F43A  C094  F032         	movff	efgtoa@u,___flge@ff2
  3581  00F43E  C095  F033         	movff	efgtoa@u+1,___flge@ff2+1
  3582  00F442  C096  F034         	movff	efgtoa@u+2,___flge@ff2+2
  3583  00F446  C097  F035         	movff	efgtoa@u+3,___flge@ff2+3
  3584  00F44A  EC50  F06B         	call	___flge	;wreg free
  3585  00F44E  A0D8               	btfss	status,0,c
  3586  00F450  EF2C  F07A         	goto	u5081
  3587  00F454  EF2E  F07A         	goto	u5080
  3588  00F458                     u5081:
  3589  00F458  EFF7  F079         	goto	l5651
  3590  00F45C                     u5080:
  3591  00F45C                     l5657:
  3592                           
  3593                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 390:     mode = (
      +                          char)tolower((int)c);
  3594  00F45C  C040  F007         	movff	efgtoa@c,tolower@c
  3595  00F460  6A08               	clrf	(tolower@c+1)^0,c
  3596  00F462  ECC3  F063         	call	_tolower	;wreg free
  3597  00F466  5007               	movf	?_tolower^0,w,c
  3598  00F468  0100               	movlb	0	; () banked
  3599  00F46A  6F81               	movwf	efgtoa@mode& (0+255),b
  3600  00F46C                     
  3601                           ; BSR set to: 0
  3602                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 391:     nmode = 
      +                          mode;
  3603  00F46C  C081  F080         	movff	efgtoa@mode,efgtoa@nmode
  3604  00F470                     
  3605                           ; BSR set to: 0
  3606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 392:     if (mode
      +                           == 'g') {
  3607  00F470  0E67               	movlw	103
  3608  00F472  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3609  00F474  A4D8               	btfss	status,2,c
  3610  00F476  EF3F  F07A         	goto	u5091
  3611  00F47A  EF41  F07A         	goto	u5090
  3612  00F47E                     u5091:
  3613  00F47E  EF67  F07A         	goto	l5671
  3614  00F482                     u5090:
  3615  00F482                     
  3616                           ; BSR set to: 0
  3617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 393:   if (prec =
      +                          = 0) {
  3618  00F482  51D2               	movf	_prec& (0+255),w,b
  3619  00F484  11D3               	iorwf	(_prec+1)& (0+255),w,b
  3620  00F486  A4D8               	btfss	status,2,c
  3621  00F488  EF48  F07A         	goto	u5101
  3622  00F48C  EF4A  F07A         	goto	u5100
  3623  00F490                     u5101:
  3624  00F490  EF4E  F07A         	goto	l5667
  3625  00F494                     u5100:
  3626  00F494                     
  3627                           ; BSR set to: 0
  3628                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 394:    prec = 1;
  3629  00F494  0E00               	movlw	0
  3630  00F496  6FD3               	movwf	(_prec+1)& (0+255),b
  3631  00F498  0E01               	movlw	1
  3632  00F49A  6FD2               	movwf	_prec& (0+255),b
  3633  00F49C                     l5667:
  3634                           
  3635                           ; BSR set to: 0
  3636                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 396:         p = 
      +                          (0 < prec) ? prec : 6;
  3637  00F49C  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  3638  00F49E  EF5B  F07A         	goto	u5110
  3639  00F4A2  51D3               	movf	(_prec+1)& (0+255),w,b
  3640  00F4A4  E106               	bnz	u5111
  3641  00F4A6  05D2               	decf	_prec& (0+255),w,b
  3642  00F4A8  B0D8               	btfsc	status,0,c
  3643  00F4AA  EF59  F07A         	goto	u5111
  3644  00F4AE  EF5B  F07A         	goto	u5110
  3645  00F4B2                     u5111:
  3646  00F4B2  EF61  F07A         	goto	l1621
  3647  00F4B6                     u5110:
  3648  00F4B6                     l5669:
  3649                           
  3650                           ; BSR set to: 0
  3651  00F4B6  0E00               	movlw	0
  3652  00F4B8  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3653  00F4BA  0E06               	movlw	6
  3654  00F4BC  6F7C               	movwf	efgtoa@p& (0+255),b
  3655  00F4BE  EF70  F07A         	goto	l5677
  3656  00F4C2                     l1621:
  3657                           
  3658                           ; BSR set to: 0
  3659  00F4C2  C0D2  F07C         	movff	_prec,efgtoa@p
  3660  00F4C6  C0D3  F07D         	movff	_prec+1,efgtoa@p+1
  3661  00F4CA  EF70  F07A         	goto	l5677
  3662  00F4CE                     l5671:
  3663                           
  3664                           ; BSR set to: 0
  3665                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 398:         p = 
      +                          (prec < 0) ? 6 : prec;
  3666  00F4CE  BFD3               	btfsc	(_prec+1)& (0+255),7,b
  3667  00F4D0  EF6C  F07A         	goto	u5121
  3668  00F4D4  EF6E  F07A         	goto	u5120
  3669  00F4D8                     u5121:
  3670  00F4D8  EF5B  F07A         	goto	l5669
  3671  00F4DC                     u5120:
  3672  00F4DC  EF61  F07A         	goto	l1621
  3673  00F4E0                     l5677:
  3674                           
  3675                           ; BSR set to: 0
  3676                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 402:     if (mode
      +                           == 'g') {
  3677  00F4E0  0E67               	movlw	103
  3678  00F4E2  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3679  00F4E4  A4D8               	btfss	status,2,c
  3680  00F4E6  EF77  F07A         	goto	u5131
  3681  00F4EA  EF79  F07A         	goto	u5130
  3682  00F4EE                     u5131:
  3683  00F4EE  EFA8  F07A         	goto	l5687
  3684  00F4F2                     u5130:
  3685  00F4F2                     
  3686                           ; BSR set to: 0
  3687                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 403:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3688  00F4F2  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3689  00F4F4  EF87  F07A         	goto	u5140
  3690  00F4F8  0EFC               	movlw	252
  3691  00F4FA  5D90               	subwf	efgtoa@e& (0+255),w,b
  3692  00F4FC  0EFF               	movlw	255
  3693  00F4FE  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3694  00F500  A0D8               	btfss	status,0,c
  3695  00F502  EF85  F07A         	goto	u5141
  3696  00F506  EF87  F07A         	goto	u5140
  3697  00F50A                     u5141:
  3698  00F50A  EFA6  F07A         	goto	l5685
  3699  00F50E                     u5140:
  3700  00F50E                     
  3701                           ; BSR set to: 0
  3702  00F50E  0EFF               	movlw	255
  3703  00F510  6E41               	movwf	??_efgtoa^0,c
  3704  00F512  0EFF               	movlw	255
  3705  00F514  6E42               	movwf	(??_efgtoa+1)^0,c
  3706  00F516  C07C  F043         	movff	efgtoa@p,??_efgtoa+2
  3707  00F51A  C07D  F044         	movff	efgtoa@p+1,??_efgtoa+3
  3708  00F51E  5041               	movf	??_efgtoa^0,w,c
  3709  00F520  2643               	addwf	(??_efgtoa+2)^0,f,c
  3710  00F522  5042               	movf	(??_efgtoa+1)^0,w,c
  3711  00F524  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3712  00F526  5190               	movf	efgtoa@e& (0+255),w,b
  3713  00F528  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3714  00F52A  5044               	movf	(??_efgtoa+3)^0,w,c
  3715  00F52C  0A80               	xorlw	128
  3716  00F52E  6E45               	movwf	(??_efgtoa+4)^0,c
  3717  00F530  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3718  00F532  0A80               	xorlw	128
  3719  00F534  5845               	subwfb	(??_efgtoa+4)^0,w,c
  3720  00F536  A0D8               	btfss	status,0,c
  3721  00F538  EFA0  F07A         	goto	u5151
  3722  00F53C  EFA2  F07A         	goto	u5150
  3723  00F540                     u5151:
  3724  00F540  EFA6  F07A         	goto	l5685
  3725  00F544                     u5150:
  3726  00F544                     
  3727                           ; BSR set to: 0
  3728                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 404:             
      +                          nmode = 'f';
  3729  00F544  0E66               	movlw	102
  3730  00F546  6F80               	movwf	efgtoa@nmode& (0+255),b
  3731                           
  3732                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 405:         } el
      +                          se {
  3733  00F548  EFA8  F07A         	goto	l5687
  3734  00F54C                     l5685:
  3735                           
  3736                           ; BSR set to: 0
  3737                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 406:             
      +                          nmode = 'e';
  3738  00F54C  0E65               	movlw	101
  3739  00F54E  6F80               	movwf	efgtoa@nmode& (0+255),b
  3740  00F550                     l5687:
  3741                           
  3742                           ; BSR set to: 0
  3743                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 411:     m = p;
  3744  00F550  C07C  F072         	movff	efgtoa@p,efgtoa@m
  3745  00F554  C07D  F073         	movff	efgtoa@p+1,efgtoa@m+1
  3746  00F558                     
  3747                           ; BSR set to: 0
  3748                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 412:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3749  00F558  0E67               	movlw	103
  3750  00F55A  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3751  00F55C  A4D8               	btfss	status,2,c
  3752  00F55E  EFB3  F07A         	goto	u5161
  3753  00F562  EFB5  F07A         	goto	u5160
  3754  00F566                     u5161:
  3755  00F566  EFC5  F07A         	goto	l5695
  3756  00F56A                     u5160:
  3757  00F56A                     
  3758                           ; BSR set to: 0
  3759  00F56A  0E66               	movlw	102
  3760  00F56C  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3761  00F56E  A4D8               	btfss	status,2,c
  3762  00F570  EFBC  F07A         	goto	u5171
  3763  00F574  EFBE  F07A         	goto	u5170
  3764  00F578                     u5171:
  3765  00F578  EFC7  F07A         	goto	l5697
  3766  00F57C                     u5170:
  3767  00F57C                     
  3768                           ; BSR set to: 0
  3769  00F57C  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3770  00F57E  EFC5  F07A         	goto	u5180
  3771  00F582  EFC3  F07A         	goto	u5181
  3772  00F586                     u5181:
  3773  00F586  EFC7  F07A         	goto	l5697
  3774  00F58A                     u5180:
  3775  00F58A                     l5695:
  3776                           
  3777                           ; BSR set to: 0
  3778                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 413:         ++m;
  3779  00F58A  4B72               	infsnz	efgtoa@m& (0+255),f,b
  3780  00F58C  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  3781  00F58E                     l5697:
  3782                           
  3783                           ; BSR set to: 0
  3784                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 417:     if (nmod
      +                          e == 'f') {
  3785  00F58E  0E66               	movlw	102
  3786  00F590  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  3787  00F592  A4D8               	btfss	status,2,c
  3788  00F594  EFCE  F07A         	goto	u5191
  3789  00F598  EFD0  F07A         	goto	u5190
  3790  00F59C                     u5191:
  3791  00F59C  EFF0  F07A         	goto	l5707
  3792  00F5A0                     u5190:
  3793  00F5A0                     
  3794                           ; BSR set to: 0
  3795                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 418:         if (
      +                          e < 0) {
  3796  00F5A0  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3797  00F5A2  EFD7  F07A         	goto	u5200
  3798  00F5A6  EFD5  F07A         	goto	u5201
  3799  00F5AA                     u5201:
  3800  00F5AA  EFE3  F07A         	goto	l5703
  3801  00F5AE                     u5200:
  3802  00F5AE                     
  3803                           ; BSR set to: 0
  3804                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 419:             
      +                          u = 1.0;
  3805  00F5AE  0E00               	movlw	0
  3806  00F5B0  6F94               	movwf	efgtoa@u& (0+255),b
  3807  00F5B2  0E00               	movlw	0
  3808  00F5B4  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3809  00F5B6  0E80               	movlw	128
  3810  00F5B8  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3811  00F5BA  0E3F               	movlw	63
  3812  00F5BC  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 420:             
      +                          e = 0;
  3815  00F5BE  0E00               	movlw	0
  3816  00F5C0  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3817  00F5C2  0E00               	movlw	0
  3818  00F5C4  6F90               	movwf	efgtoa@e& (0+255),b
  3819  00F5C6                     l5703:
  3820                           
  3821                           ; BSR set to: 0
  3822                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 422:         if (
      +                          !(mode == 'g')) {
  3823  00F5C6  0E67               	movlw	103
  3824  00F5C8  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3825  00F5CA  B4D8               	btfsc	status,2,c
  3826  00F5CC  EFEA  F07A         	goto	u5211
  3827  00F5D0  EFEC  F07A         	goto	u5210
  3828  00F5D4                     u5211:
  3829  00F5D4  EFF0  F07A         	goto	l5707
  3830  00F5D8                     u5210:
  3831  00F5D8                     
  3832                           ; BSR set to: 0
  3833                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 423:             
      +                          m += e;
  3834  00F5D8  5190               	movf	efgtoa@e& (0+255),w,b
  3835  00F5DA  2772               	addwf	efgtoa@m& (0+255),f,b
  3836  00F5DC  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3837  00F5DE  2373               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3838  00F5E0                     l5707:
  3839                           
  3840                           ; BSR set to: 0
  3841                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 428:     i = 0;
  3842  00F5E0  0E00               	movlw	0
  3843  00F5E2  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3844  00F5E4  0E00               	movlw	0
  3845  00F5E6  6F8A               	movwf	efgtoa@i& (0+255),b
  3846  00F5E8                     
  3847                           ; BSR set to: 0
  3848                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 429:     h = g;
  3849  00F5E8  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3850  00F5EC  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3851  00F5F0  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3852  00F5F4  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3853  00F5F8                     
  3854                           ; BSR set to: 0
  3855                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 430:     ou = u;
  3856  00F5F8  C094  F074         	movff	efgtoa@u,efgtoa@ou
  3857  00F5FC  C095  F075         	movff	efgtoa@u+1,efgtoa@ou+1
  3858  00F600  C096  F076         	movff	efgtoa@u+2,efgtoa@ou+2
  3859  00F604  C097  F077         	movff	efgtoa@u+3,efgtoa@ou+3
  3860                           
  3861                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3862  00F608  EF81  F07B         	goto	l5721
  3863  00F60C                     l5713:
  3864                           
  3865                           ; BSR set to: 0
  3866                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 432:         l = 
      +                          floorf(h/u);
  3867  00F60C  C082  F001         	movff	efgtoa@h,___fldiv@b
  3868  00F610  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3869  00F614  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3870  00F618  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3871  00F61C  C094  F005         	movff	efgtoa@u,___fldiv@a
  3872  00F620  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3873  00F624  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3874  00F628  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3875  00F62C  ECED  F06F         	call	___fldiv	;wreg free
  3876  00F630  C001  F01A         	movff	?___fldiv,floorf@x
  3877  00F634  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3878  00F638  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3879  00F63C  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3880  00F640  ECE4  F06E         	call	_floorf	;wreg free
  3881  00F644  C01A  F086         	movff	?_floorf,efgtoa@l
  3882  00F648  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3883  00F64C  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3884  00F650  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3885                           
  3886                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 433:         d = 
      +                          (int)l;
  3887  00F654  C086  F001         	movff	efgtoa@l,___fltol@f1
  3888  00F658  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3889  00F65C  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3890  00F660  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3891  00F664  ECD2  F06B         	call	___fltol	;wreg free
  3892  00F668  C001  F078         	movff	?___fltol,efgtoa@d
  3893  00F66C  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3894  00F670                     
  3895                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 434:         h -=
      +                           l*u;
  3896  00F670  C082  F02E         	movff	efgtoa@h,___flsub@b
  3897  00F674  C083  F02F         	movff	efgtoa@h+1,___flsub@b+1
  3898  00F678  C084  F030         	movff	efgtoa@h+2,___flsub@b+2
  3899  00F67C  C085  F031         	movff	efgtoa@h+3,___flsub@b+3
  3900  00F680  C094  F019         	movff	efgtoa@u,___flmul@a
  3901  00F684  C095  F01A         	movff	efgtoa@u+1,___flmul@a+1
  3902  00F688  C096  F01B         	movff	efgtoa@u+2,___flmul@a+2
  3903  00F68C  C097  F01C         	movff	efgtoa@u+3,___flmul@a+3
  3904  00F690  C086  F015         	movff	efgtoa@l,___flmul@b
  3905  00F694  C087  F016         	movff	efgtoa@l+1,___flmul@b+1
  3906  00F698  C088  F017         	movff	efgtoa@l+2,___flmul@b+2
  3907  00F69C  C089  F018         	movff	efgtoa@l+3,___flmul@b+3
  3908  00F6A0  ECBA  F071         	call	___flmul	;wreg free
  3909  00F6A4  C015  F032         	movff	?___flmul,___flsub@a
  3910  00F6A8  C016  F033         	movff	?___flmul+1,___flsub@a+1
  3911  00F6AC  C017  F034         	movff	?___flmul+2,___flsub@a+2
  3912  00F6B0  C018  F035         	movff	?___flmul+3,___flsub@a+3
  3913  00F6B4  ECC4  F062         	call	___flsub	;wreg free
  3914  00F6B8  C02E  F082         	movff	?___flsub,efgtoa@h
  3915  00F6BC  C02F  F083         	movff	?___flsub+1,efgtoa@h+1
  3916  00F6C0  C030  F084         	movff	?___flsub+2,efgtoa@h+2
  3917  00F6C4  C031  F085         	movff	?___flsub+3,efgtoa@h+3
  3918  00F6C8                     
  3919                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 435:         u = 
      +                          u/10.0;
  3920  00F6C8  C094  F001         	movff	efgtoa@u,___fldiv@b
  3921  00F6CC  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3922  00F6D0  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3923  00F6D4  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3924  00F6D8  0E00               	movlw	0
  3925  00F6DA  6E05               	movwf	___fldiv@a^0,c
  3926  00F6DC  0E00               	movlw	0
  3927  00F6DE  6E06               	movwf	(___fldiv@a+1)^0,c
  3928  00F6E0  0E20               	movlw	32
  3929  00F6E2  6E07               	movwf	(___fldiv@a+2)^0,c
  3930  00F6E4  0E41               	movlw	65
  3931  00F6E6  6E08               	movwf	(___fldiv@a+3)^0,c
  3932  00F6E8  ECED  F06F         	call	___fldiv	;wreg free
  3933  00F6EC  C001  F094         	movff	?___fldiv,efgtoa@u
  3934  00F6F0  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3935  00F6F4  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3936  00F6F8  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3937  00F6FC                     
  3938                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 436:         ++i;
  3939  00F6FC  0100               	movlb	0	; () banked
  3940  00F6FE  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3941  00F700  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3942  00F702                     l5721:
  3943                           
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 431:     while (i
      +                           < m) {
  3946  00F702  5172               	movf	efgtoa@m& (0+255),w,b
  3947  00F704  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3948  00F706  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3949  00F708  0A80               	xorlw	128
  3950  00F70A  6E41               	movwf	??_efgtoa^0,c
  3951  00F70C  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  3952  00F70E  0A80               	xorlw	128
  3953  00F710  5841               	subwfb	??_efgtoa^0,w,c
  3954  00F712  A0D8               	btfss	status,0,c
  3955  00F714  EF8E  F07B         	goto	u5221
  3956  00F718  EF90  F07B         	goto	u5220
  3957  00F71C                     u5221:
  3958  00F71C  EF06  F07B         	goto	l5713
  3959  00F720                     u5220:
  3960  00F720                     
  3961                           ; BSR set to: 0
  3962                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 440:     l = u*5.
      +                          0;
  3963  00F720  C094  F015         	movff	efgtoa@u,___flmul@b
  3964  00F724  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3965  00F728  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3966  00F72C  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3967  00F730  0E00               	movlw	0
  3968  00F732  6E19               	movwf	___flmul@a^0,c
  3969  00F734  0E00               	movlw	0
  3970  00F736  6E1A               	movwf	(___flmul@a+1)^0,c
  3971  00F738  0EA0               	movlw	160
  3972  00F73A  6E1B               	movwf	(___flmul@a+2)^0,c
  3973  00F73C  0E40               	movlw	64
  3974  00F73E  6E1C               	movwf	(___flmul@a+3)^0,c
  3975  00F740  ECBA  F071         	call	___flmul	;wreg free
  3976  00F744  C015  F086         	movff	?___flmul,efgtoa@l
  3977  00F748  C016  F087         	movff	?___flmul+1,efgtoa@l+1
  3978  00F74C  C017  F088         	movff	?___flmul+2,efgtoa@l+2
  3979  00F750  C018  F089         	movff	?___flmul+3,efgtoa@l+3
  3980  00F754                     
  3981                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 441:     if (h < 
      +                          l) {
  3982  00F754  C082  F02E         	movff	efgtoa@h,___flge@ff1
  3983  00F758  C083  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  3984  00F75C  C084  F030         	movff	efgtoa@h+2,___flge@ff1+2
  3985  00F760  C085  F031         	movff	efgtoa@h+3,___flge@ff1+3
  3986  00F764  C086  F032         	movff	efgtoa@l,___flge@ff2
  3987  00F768  C087  F033         	movff	efgtoa@l+1,___flge@ff2+1
  3988  00F76C  C088  F034         	movff	efgtoa@l+2,___flge@ff2+2
  3989  00F770  C089  F035         	movff	efgtoa@l+3,___flge@ff2+3
  3990  00F774  EC50  F06B         	call	___flge	;wreg free
  3991  00F778  B0D8               	btfsc	status,0,c
  3992  00F77A  EFC1  F07B         	goto	u5231
  3993  00F77E  EFC3  F07B         	goto	u5230
  3994  00F782                     u5231:
  3995  00F782  EFCE  F07B         	goto	l5729
  3996  00F786                     u5230:
  3997  00F786                     
  3998                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 442:         l = 
      +                          0.0;
  3999  00F786  0E00               	movlw	0
  4000  00F788  0100               	movlb	0	; () banked
  4001  00F78A  6F86               	movwf	efgtoa@l& (0+255),b
  4002  00F78C  0E00               	movlw	0
  4003  00F78E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4004  00F790  0E00               	movlw	0
  4005  00F792  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4006  00F794  0E00               	movlw	0
  4007  00F796  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4008                           
  4009                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 443:     } else {
  4010  00F798  EFF7  F07B         	goto	l5735
  4011  00F79C                     l5729:
  4012                           
  4013                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 445:         if (
      +                          (h == l) && !(d % 2)) {
  4014  00F79C  C082  F001         	movff	efgtoa@h,___fleq@ff1
  4015  00F7A0  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4016  00F7A4  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4017  00F7A8  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4018  00F7AC  C086  F005         	movff	efgtoa@l,___fleq@ff2
  4019  00F7B0  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4020  00F7B4  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4021  00F7B8  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4022  00F7BC  ECAF  F066         	call	___fleq	;wreg free
  4023  00F7C0  A0D8               	btfss	status,0,c
  4024  00F7C2  EFE5  F07B         	goto	u5241
  4025  00F7C6  EFE7  F07B         	goto	u5240
  4026  00F7CA                     u5241:
  4027  00F7CA  EFF7  F07B         	goto	l5735
  4028  00F7CE                     u5240:
  4029  00F7CE  0100               	movlb	0	; () banked
  4030  00F7D0  B178               	btfsc	efgtoa@d& (0+255),0,b
  4031  00F7D2  EFED  F07B         	goto	u5251
  4032  00F7D6  EFEF  F07B         	goto	u5250
  4033  00F7DA                     u5251:
  4034  00F7DA  EFF7  F07B         	goto	l5735
  4035  00F7DE                     u5250:
  4036  00F7DE                     
  4037                           ; BSR set to: 0
  4038                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 446:             
      +                          l = 0.0;
  4039  00F7DE  0E00               	movlw	0
  4040  00F7E0  6F86               	movwf	efgtoa@l& (0+255),b
  4041  00F7E2  0E00               	movlw	0
  4042  00F7E4  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  4043  00F7E6  0E00               	movlw	0
  4044  00F7E8  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  4045  00F7EA  0E00               	movlw	0
  4046  00F7EC  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  4047  00F7EE                     l5735:
  4048                           
  4049                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 451:     h = g + 
      +                          l;
  4050  00F7EE  C08C  F001         	movff	efgtoa@g,___fladd@b
  4051  00F7F2  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  4052  00F7F6  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  4053  00F7FA  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  4054  00F7FE  C086  F005         	movff	efgtoa@l,___fladd@a
  4055  00F802  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  4056  00F806  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  4057  00F80A  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  4058  00F80E  EC0B  F076         	call	___fladd	;wreg free
  4059  00F812  C001  F082         	movff	?___fladd,efgtoa@h
  4060  00F816  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  4061  00F81A  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  4062  00F81E  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  4063  00F822                     
  4064                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 453:  if (h >= (o
      +                          u*10.0)) {
  4065  00F822  C082  F02E         	movff	efgtoa@h,___flge@ff1
  4066  00F826  C083  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  4067  00F82A  C084  F030         	movff	efgtoa@h+2,___flge@ff1+2
  4068  00F82E  C085  F031         	movff	efgtoa@h+3,___flge@ff1+3
  4069  00F832  0E00               	movlw	0
  4070  00F834  6E19               	movwf	___flmul@a^0,c
  4071  00F836  0E00               	movlw	0
  4072  00F838  6E1A               	movwf	(___flmul@a+1)^0,c
  4073  00F83A  0E20               	movlw	32
  4074  00F83C  6E1B               	movwf	(___flmul@a+2)^0,c
  4075  00F83E  0E41               	movlw	65
  4076  00F840  6E1C               	movwf	(___flmul@a+3)^0,c
  4077  00F842  C074  F015         	movff	efgtoa@ou,___flmul@b
  4078  00F846  C075  F016         	movff	efgtoa@ou+1,___flmul@b+1
  4079  00F84A  C076  F017         	movff	efgtoa@ou+2,___flmul@b+2
  4080  00F84E  C077  F018         	movff	efgtoa@ou+3,___flmul@b+3
  4081  00F852  ECBA  F071         	call	___flmul	;wreg free
  4082  00F856  C015  F032         	movff	?___flmul,___flge@ff2
  4083  00F85A  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  4084  00F85E  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  4085  00F862  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  4086  00F866  EC50  F06B         	call	___flge	;wreg free
  4087  00F86A  A0D8               	btfss	status,0,c
  4088  00F86C  EF3A  F07C         	goto	u5261
  4089  00F870  EF3C  F07C         	goto	u5260
  4090  00F874                     u5261:
  4091  00F874  EF65  F07C         	goto	l5747
  4092  00F878                     u5260:
  4093  00F878                     
  4094                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 454:   e++;
  4095  00F878  0100               	movlb	0	; () banked
  4096  00F87A  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4097  00F87C  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4098  00F87E                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 455:   ou *= 10.0
      +                          ;
  4101  00F87E  C074  F015         	movff	efgtoa@ou,___flmul@b
  4102  00F882  C075  F016         	movff	efgtoa@ou+1,___flmul@b+1
  4103  00F886  C076  F017         	movff	efgtoa@ou+2,___flmul@b+2
  4104  00F88A  C077  F018         	movff	efgtoa@ou+3,___flmul@b+3
  4105  00F88E  0E00               	movlw	0
  4106  00F890  6E19               	movwf	___flmul@a^0,c
  4107  00F892  0E00               	movlw	0
  4108  00F894  6E1A               	movwf	(___flmul@a+1)^0,c
  4109  00F896  0E20               	movlw	32
  4110  00F898  6E1B               	movwf	(___flmul@a+2)^0,c
  4111  00F89A  0E41               	movlw	65
  4112  00F89C  6E1C               	movwf	(___flmul@a+3)^0,c
  4113  00F89E  ECBA  F071         	call	___flmul	;wreg free
  4114  00F8A2  C015  F074         	movff	?___flmul,efgtoa@ou
  4115  00F8A6  C016  F075         	movff	?___flmul+1,efgtoa@ou+1
  4116  00F8AA  C017  F076         	movff	?___flmul+2,efgtoa@ou+2
  4117  00F8AE  C018  F077         	movff	?___flmul+3,efgtoa@ou+3
  4118  00F8B2                     
  4119                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 456:   if (nmode 
      +                          == 'f') {
  4120  00F8B2  0E66               	movlw	102
  4121  00F8B4  0100               	movlb	0	; () banked
  4122  00F8B6  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4123  00F8B8  A4D8               	btfss	status,2,c
  4124  00F8BA  EF61  F07C         	goto	u5271
  4125  00F8BE  EF63  F07C         	goto	u5270
  4126  00F8C2                     u5271:
  4127  00F8C2  EF65  F07C         	goto	l5747
  4128  00F8C6                     u5270:
  4129  00F8C6                     
  4130                           ; BSR set to: 0
  4131                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 458:    m++;
  4132  00F8C6  4B72               	infsnz	efgtoa@m& (0+255),f,b
  4133  00F8C8  2B73               	incf	(efgtoa@m+1)& (0+255),f,b
  4134  00F8CA                     l5747:
  4135                           
  4136                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 463:     u = ou;
  4137  00F8CA  C074  F094         	movff	efgtoa@ou,efgtoa@u
  4138  00F8CE  C075  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  4139  00F8D2  C076  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  4140  00F8D6  C077  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  4141  00F8DA                     
  4142                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 464:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  4143  00F8DA  0E65               	movlw	101
  4144  00F8DC  0100               	movlb	0	; () banked
  4145  00F8DE  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4146  00F8E0  B4D8               	btfsc	status,2,c
  4147  00F8E2  EF75  F07C         	goto	u5281
  4148  00F8E6  EF77  F07C         	goto	u5280
  4149  00F8EA                     u5281:
  4150  00F8EA  EF7D  F07C         	goto	l5753
  4151  00F8EE                     u5280:
  4152  00F8EE                     
  4153                           ; BSR set to: 0
  4154  00F8EE  C090  F070         	movff	efgtoa@e,efgtoa@ne
  4155  00F8F2  C091  F071         	movff	efgtoa@e+1,efgtoa@ne+1
  4156  00F8F6  EF81  F07C         	goto	l1649
  4157  00F8FA                     l5753:
  4158                           
  4159                           ; BSR set to: 0
  4160  00F8FA  0E00               	movlw	0
  4161  00F8FC  6F71               	movwf	(efgtoa@ne+1)& (0+255),b
  4162  00F8FE  0E00               	movlw	0
  4163  00F900  6F70               	movwf	efgtoa@ne& (0+255),b
  4164  00F902                     l1649:
  4165                           
  4166                           ; BSR set to: 0
  4167                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 465:     pp = 0;
  4168  00F902  0E00               	movlw	0
  4169  00F904  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4170  00F906  0E00               	movlw	0
  4171  00F908  6F6E               	movwf	efgtoa@pp& (0+255),b
  4172                           
  4173                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 466:     t = 0;
  4174  00F90A  0E00               	movlw	0
  4175  00F90C  6F6D               	movwf	(efgtoa@t+1)& (0+255),b
  4176  00F90E  0E00               	movlw	0
  4177  00F910  6F6C               	movwf	efgtoa@t& (0+255),b
  4178                           
  4179                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 467:     i = 0;
  4180  00F912  0E00               	movlw	0
  4181  00F914  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4182  00F916  0E00               	movlw	0
  4183  00F918  6F8A               	movwf	efgtoa@i& (0+255),b
  4184                           
  4185                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4186  00F91A  EF7C  F07D         	goto	l5803
  4187  00F91E                     l5755:
  4188                           
  4189                           ; BSR set to: 0
  4190                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 469:         l = 
      +                          floorf(h/u);
  4191  00F91E  C082  F001         	movff	efgtoa@h,___fldiv@b
  4192  00F922  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  4193  00F926  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  4194  00F92A  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  4195  00F92E  C094  F005         	movff	efgtoa@u,___fldiv@a
  4196  00F932  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  4197  00F936  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  4198  00F93A  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  4199  00F93E  ECED  F06F         	call	___fldiv	;wreg free
  4200  00F942  C001  F01A         	movff	?___fldiv,floorf@x
  4201  00F946  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  4202  00F94A  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  4203  00F94E  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  4204  00F952  ECE4  F06E         	call	_floorf	;wreg free
  4205  00F956  C01A  F086         	movff	?_floorf,efgtoa@l
  4206  00F95A  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  4207  00F95E  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  4208  00F962  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  4209                           
  4210                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 470:         d = 
      +                          (int)l;
  4211  00F966  C086  F001         	movff	efgtoa@l,___fltol@f1
  4212  00F96A  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4213  00F96E  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4214  00F972  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4215  00F976  ECD2  F06B         	call	___fltol	;wreg free
  4216  00F97A  C001  F078         	movff	?___fltol,efgtoa@d
  4217  00F97E  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  4218  00F982                     
  4219                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 471:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  4220  00F982  0100               	movlb	0	; () banked
  4221  00F984  B9D4               	btfsc	_flags& (0+255),4,b
  4222  00F986  EFC7  F07C         	goto	u5291
  4223  00F98A  EFC9  F07C         	goto	u5290
  4224  00F98E                     u5291:
  4225  00F98E  EFE6  F07C         	goto	l5767
  4226  00F992                     u5290:
  4227  00F992                     
  4228                           ; BSR set to: 0
  4229  00F992  5178               	movf	efgtoa@d& (0+255),w,b
  4230  00F994  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  4231  00F996  A4D8               	btfss	status,2,c
  4232  00F998  EFD0  F07C         	goto	u5301
  4233  00F99C  EFD2  F07C         	goto	u5300
  4234  00F9A0                     u5301:
  4235  00F9A0  EFE6  F07C         	goto	l5767
  4236  00F9A4                     u5300:
  4237  00F9A4                     
  4238                           ; BSR set to: 0
  4239  00F9A4  0E67               	movlw	103
  4240  00F9A6  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4241  00F9A8  A4D8               	btfss	status,2,c
  4242  00F9AA  EFD9  F07C         	goto	u5311
  4243  00F9AE  EFDB  F07C         	goto	u5310
  4244  00F9B2                     u5311:
  4245  00F9B2  EFE6  F07C         	goto	l5767
  4246  00F9B6                     u5310:
  4247  00F9B6                     
  4248                           ; BSR set to: 0
  4249  00F9B6  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4250  00F9B8  EFE2  F07C         	goto	u5320
  4251  00F9BC  EFE0  F07C         	goto	u5321
  4252  00F9C0                     u5321:
  4253  00F9C0  EFE6  F07C         	goto	l5767
  4254  00F9C4                     u5320:
  4255  00F9C4                     
  4256                           ; BSR set to: 0
  4257                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 472:             
      +                          ++t;
  4258  00F9C4  4B6C               	infsnz	efgtoa@t& (0+255),f,b
  4259  00F9C6  2B6D               	incf	(efgtoa@t+1)& (0+255),f,b
  4260                           
  4261                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 473:         } el
      +                          se {
  4262  00F9C8  EF30  F07D         	goto	l5795
  4263  00F9CC                     l5767:
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 474:             
      +                          if (!pp && (ne < 0)) {
  4267  00F9CC  516E               	movf	efgtoa@pp& (0+255),w,b
  4268  00F9CE  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4269  00F9D0  A4D8               	btfss	status,2,c
  4270  00F9D2  EFED  F07C         	goto	u5331
  4271  00F9D6  EFEF  F07C         	goto	u5330
  4272  00F9DA                     u5331:
  4273  00F9DA  EF19  F07D         	goto	l5787
  4274  00F9DE                     u5330:
  4275  00F9DE                     
  4276                           ; BSR set to: 0
  4277  00F9DE  BF71               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4278  00F9E0  EFF6  F07C         	goto	u5340
  4279  00F9E4  EFF4  F07C         	goto	u5341
  4280  00F9E8                     u5341:
  4281  00F9E8  EF19  F07D         	goto	l5787
  4282  00F9EC                     u5340:
  4283  00F9EC                     
  4284                           ; BSR set to: 0
  4285                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 475:             
      +                              dbuf[n++] = '.';
  4286  00F9EC  0E74               	movlw	low _dbuf
  4287  00F9EE  2592               	addwf	efgtoa@n& (0+255),w,b
  4288  00F9F0  6ED9               	movwf	fsr2l,c
  4289  00F9F2  0E01               	movlw	high _dbuf
  4290  00F9F4  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4291  00F9F6  6EDA               	movwf	fsr2h,c
  4292  00F9F8  0E2E               	movlw	46
  4293  00F9FA  6EDF               	movwf	indf2,c
  4294  00F9FC                     
  4295                           ; BSR set to: 0
  4296  00F9FC  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4297  00F9FE  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4298  00FA00                     
  4299                           ; BSR set to: 0
  4300                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 476:             
      +                              --w;
  4301  00FA00  077E               	decf	efgtoa@w& (0+255),f,b
  4302  00FA02  A0D8               	btfss	status,0,c
  4303  00FA04  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4304  00FA06                     
  4305                           ; BSR set to: 0
  4306                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 477:             
      +                              pp = 1;
  4307  00FA06  0E00               	movlw	0
  4308  00FA08  6F6F               	movwf	(efgtoa@pp+1)& (0+255),b
  4309  00FA0A  0E01               	movlw	1
  4310  00FA0C  6F6E               	movwf	efgtoa@pp& (0+255),b
  4311  00FA0E  EF19  F07D         	goto	l5787
  4312  00FA12                     l5779:
  4313                           
  4314                           ; BSR set to: 0
  4315                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 480:             
      +                              dbuf[n++] = '0';
  4316  00FA12  0E74               	movlw	low _dbuf
  4317  00FA14  2592               	addwf	efgtoa@n& (0+255),w,b
  4318  00FA16  6ED9               	movwf	fsr2l,c
  4319  00FA18  0E01               	movlw	high _dbuf
  4320  00FA1A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4321  00FA1C  6EDA               	movwf	fsr2h,c
  4322  00FA1E  0E30               	movlw	48
  4323  00FA20  6EDF               	movwf	indf2,c
  4324  00FA22                     
  4325                           ; BSR set to: 0
  4326  00FA22  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4327  00FA24  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4328  00FA26                     
  4329                           ; BSR set to: 0
  4330                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 481:             
      +                              --w;
  4331  00FA26  077E               	decf	efgtoa@w& (0+255),f,b
  4332  00FA28  A0D8               	btfss	status,0,c
  4333  00FA2A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4334  00FA2C                     
  4335                           ; BSR set to: 0
  4336                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 482:             
      +                              --t;
  4337  00FA2C  076C               	decf	efgtoa@t& (0+255),f,b
  4338  00FA2E  A0D8               	btfss	status,0,c
  4339  00FA30  076D               	decf	(efgtoa@t+1)& (0+255),f,b
  4340  00FA32                     l5787:
  4341                           
  4342                           ; BSR set to: 0
  4343                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 479:             
      +                          while (t) {
  4344  00FA32  516C               	movf	efgtoa@t& (0+255),w,b
  4345  00FA34  116D               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4346  00FA36  A4D8               	btfss	status,2,c
  4347  00FA38  EF20  F07D         	goto	u5351
  4348  00FA3C  EF22  F07D         	goto	u5350
  4349  00FA40                     u5351:
  4350  00FA40  EF09  F07D         	goto	l5779
  4351  00FA44                     u5350:
  4352  00FA44                     
  4353                           ; BSR set to: 0
  4354                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 484:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4355  00FA44  0E74               	movlw	low _dbuf
  4356  00FA46  2592               	addwf	efgtoa@n& (0+255),w,b
  4357  00FA48  6ED9               	movwf	fsr2l,c
  4358  00FA4A  0E01               	movlw	high _dbuf
  4359  00FA4C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4360  00FA4E  6EDA               	movwf	fsr2h,c
  4361  00FA50  5178               	movf	efgtoa@d& (0+255),w,b
  4362  00FA52  0F30               	addlw	48
  4363  00FA54  6EDF               	movwf	indf2,c
  4364  00FA56                     
  4365                           ; BSR set to: 0
  4366  00FA56  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4367  00FA58  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4368  00FA5A                     
  4369                           ; BSR set to: 0
  4370                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 485:             
      +                          --w;
  4371  00FA5A  077E               	decf	efgtoa@w& (0+255),f,b
  4372  00FA5C  A0D8               	btfss	status,0,c
  4373  00FA5E  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4374  00FA60                     l5795:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 487:         h -=
      +                           l*u;
  4378  00FA60  C082  F02E         	movff	efgtoa@h,___flsub@b
  4379  00FA64  C083  F02F         	movff	efgtoa@h+1,___flsub@b+1
  4380  00FA68  C084  F030         	movff	efgtoa@h+2,___flsub@b+2
  4381  00FA6C  C085  F031         	movff	efgtoa@h+3,___flsub@b+3
  4382  00FA70  C094  F019         	movff	efgtoa@u,___flmul@a
  4383  00FA74  C095  F01A         	movff	efgtoa@u+1,___flmul@a+1
  4384  00FA78  C096  F01B         	movff	efgtoa@u+2,___flmul@a+2
  4385  00FA7C  C097  F01C         	movff	efgtoa@u+3,___flmul@a+3
  4386  00FA80  C086  F015         	movff	efgtoa@l,___flmul@b
  4387  00FA84  C087  F016         	movff	efgtoa@l+1,___flmul@b+1
  4388  00FA88  C088  F017         	movff	efgtoa@l+2,___flmul@b+2
  4389  00FA8C  C089  F018         	movff	efgtoa@l+3,___flmul@b+3
  4390  00FA90  ECBA  F071         	call	___flmul	;wreg free
  4391  00FA94  C015  F032         	movff	?___flmul,___flsub@a
  4392  00FA98  C016  F033         	movff	?___flmul+1,___flsub@a+1
  4393  00FA9C  C017  F034         	movff	?___flmul+2,___flsub@a+2
  4394  00FAA0  C018  F035         	movff	?___flmul+3,___flsub@a+3
  4395  00FAA4  ECC4  F062         	call	___flsub	;wreg free
  4396  00FAA8  C02E  F082         	movff	?___flsub,efgtoa@h
  4397  00FAAC  C02F  F083         	movff	?___flsub+1,efgtoa@h+1
  4398  00FAB0  C030  F084         	movff	?___flsub+2,efgtoa@h+2
  4399  00FAB4  C031  F085         	movff	?___flsub+3,efgtoa@h+3
  4400  00FAB8                     
  4401                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 488:         u = 
      +                          u/10.0;
  4402  00FAB8  C094  F001         	movff	efgtoa@u,___fldiv@b
  4403  00FABC  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4404  00FAC0  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4405  00FAC4  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4406  00FAC8  0E00               	movlw	0
  4407  00FACA  6E05               	movwf	___fldiv@a^0,c
  4408  00FACC  0E00               	movlw	0
  4409  00FACE  6E06               	movwf	(___fldiv@a+1)^0,c
  4410  00FAD0  0E20               	movlw	32
  4411  00FAD2  6E07               	movwf	(___fldiv@a+2)^0,c
  4412  00FAD4  0E41               	movlw	65
  4413  00FAD6  6E08               	movwf	(___fldiv@a+3)^0,c
  4414  00FAD8  ECED  F06F         	call	___fldiv	;wreg free
  4415  00FADC  C001  F094         	movff	?___fldiv,efgtoa@u
  4416  00FAE0  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4417  00FAE4  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4418  00FAE8  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4419  00FAEC                     
  4420                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 489:         --ne
      +                          ;
  4421  00FAEC  0100               	movlb	0	; () banked
  4422  00FAEE  0770               	decf	efgtoa@ne& (0+255),f,b
  4423  00FAF0  A0D8               	btfss	status,0,c
  4424  00FAF2  0771               	decf	(efgtoa@ne+1)& (0+255),f,b
  4425  00FAF4                     
  4426                           ; BSR set to: 0
  4427                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 490:         ++i;
  4428  00FAF4  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4429  00FAF6  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4430  00FAF8                     l5803:
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 468:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4434  00FAF8  5172               	movf	efgtoa@m& (0+255),w,b
  4435  00FAFA  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4436  00FAFC  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4437  00FAFE  0A80               	xorlw	128
  4438  00FB00  6E41               	movwf	??_efgtoa^0,c
  4439  00FB02  5173               	movf	(efgtoa@m+1)& (0+255),w,b
  4440  00FB04  0A80               	xorlw	128
  4441  00FB06  5841               	subwfb	??_efgtoa^0,w,c
  4442  00FB08  B0D8               	btfsc	status,0,c
  4443  00FB0A  EF89  F07D         	goto	u5361
  4444  00FB0E  EF8B  F07D         	goto	u5360
  4445  00FB12                     u5361:
  4446  00FB12  EF99  F07D         	goto	l5807
  4447  00FB16                     u5360:
  4448  00FB16                     
  4449                           ; BSR set to: 0
  4450  00FB16  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4451  00FB18  EF97  F07D         	goto	u5371
  4452  00FB1C  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4453  00FB1E  E109               	bnz	u5370
  4454  00FB20  0E4B               	movlw	75
  4455  00FB22  5D92               	subwf	efgtoa@n& (0+255),w,b
  4456  00FB24  A0D8               	btfss	status,0,c
  4457  00FB26  EF97  F07D         	goto	u5371
  4458  00FB2A  EF99  F07D         	goto	u5370
  4459  00FB2E                     u5371:
  4460  00FB2E  EF8F  F07C         	goto	l5755
  4461  00FB32                     u5370:
  4462  00FB32                     l5807:
  4463                           
  4464                           ; BSR set to: 0
  4465                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 492:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4466  00FB32  516E               	movf	efgtoa@pp& (0+255),w,b
  4467  00FB34  116F               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4468  00FB36  A4D8               	btfss	status,2,c
  4469  00FB38  EFA0  F07D         	goto	u5381
  4470  00FB3C  EFA2  F07D         	goto	u5380
  4471  00FB40                     u5381:
  4472  00FB40  EFB3  F07D         	goto	l5815
  4473  00FB44                     u5380:
  4474  00FB44                     
  4475                           ; BSR set to: 0
  4476  00FB44  A9D4               	btfss	_flags& (0+255),4,b
  4477  00FB46  EFA7  F07D         	goto	u5391
  4478  00FB4A  EFA9  F07D         	goto	u5390
  4479  00FB4E                     u5391:
  4480  00FB4E  EFB3  F07D         	goto	l5815
  4481  00FB52                     u5390:
  4482  00FB52                     
  4483                           ; BSR set to: 0
  4484                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [n++] = '.';
  4485  00FB52  0E74               	movlw	low _dbuf
  4486  00FB54  2592               	addwf	efgtoa@n& (0+255),w,b
  4487  00FB56  6ED9               	movwf	fsr2l,c
  4488  00FB58  0E01               	movlw	high _dbuf
  4489  00FB5A  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4490  00FB5C  6EDA               	movwf	fsr2h,c
  4491  00FB5E  0E2E               	movlw	46
  4492  00FB60  6EDF               	movwf	indf2,c
  4493  00FB62                     
  4494                           ; BSR set to: 0
  4495  00FB62  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4496  00FB64  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4497  00FB66                     l5815:
  4498                           
  4499                           ; BSR set to: 0
  4500                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 495:     dbuf[n] 
      +                          = '\0';
  4501  00FB66  0E74               	movlw	low _dbuf
  4502  00FB68  2592               	addwf	efgtoa@n& (0+255),w,b
  4503  00FB6A  6ED9               	movwf	fsr2l,c
  4504  00FB6C  0E01               	movlw	high _dbuf
  4505  00FB6E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4506  00FB70  6EDA               	movwf	fsr2h,c
  4507  00FB72  0E00               	movlw	0
  4508  00FB74  6EDF               	movwf	indf2,c
  4509  00FB76                     
  4510                           ; BSR set to: 0
  4511                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 498:     if (nmod
      +                          e == 'e') {
  4512  00FB76  0E65               	movlw	101
  4513  00FB78  1980               	xorwf	efgtoa@nmode& (0+255),w,b
  4514  00FB7A  A4D8               	btfss	status,2,c
  4515  00FB7C  EFC2  F07D         	goto	u5401
  4516  00FB80  EFC4  F07D         	goto	u5400
  4517  00FB84                     u5401:
  4518  00FB84  EF1E  F079         	goto	l5617
  4519  00FB88                     u5400:
  4520  00FB88                     
  4521                           ; BSR set to: 0
  4522                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 499:         i = 
      +                          sizeof(dbuf) - 1;
  4523  00FB88  0E00               	movlw	0
  4524  00FB8A  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4525  00FB8C  0E4F               	movlw	79
  4526  00FB8E  6F8A               	movwf	efgtoa@i& (0+255),b
  4527  00FB90                     
  4528                           ; BSR set to: 0
  4529                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 500:         dbuf
      +                          [i] = '\0';
  4530  00FB90  0E74               	movlw	low _dbuf
  4531  00FB92  258A               	addwf	efgtoa@i& (0+255),w,b
  4532  00FB94  6ED9               	movwf	fsr2l,c
  4533  00FB96  0E01               	movlw	high _dbuf
  4534  00FB98  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4535  00FB9A  6EDA               	movwf	fsr2h,c
  4536  00FB9C  0E00               	movlw	0
  4537  00FB9E  6EDF               	movwf	indf2,c
  4538  00FBA0                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 501:         sign
      +                           = 0;
  4541  00FBA0  0E00               	movlw	0
  4542  00FBA2  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4543  00FBA4  0E00               	movlw	0
  4544  00FBA6  6F7A               	movwf	efgtoa@sign& (0+255),b
  4545  00FBA8                     
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 502:         if (
      +                          e < 0) {
  4548  00FBA8  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4549  00FBAA  EFDB  F07D         	goto	u5410
  4550  00FBAE  EFD9  F07D         	goto	u5411
  4551  00FBB2                     u5411:
  4552  00FBB2  EFE3  F07D         	goto	l5831
  4553  00FBB6                     u5410:
  4554  00FBB6                     
  4555                           ; BSR set to: 0
  4556                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 503:             
      +                          sign = 1;
  4557  00FBB6  0E00               	movlw	0
  4558  00FBB8  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4559  00FBBA  0E01               	movlw	1
  4560  00FBBC  6F7A               	movwf	efgtoa@sign& (0+255),b
  4561  00FBBE                     
  4562                           ; BSR set to: 0
  4563                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 504:             
      +                          e = -e;
  4564  00FBBE  6D90               	negf	efgtoa@e& (0+255),b
  4565  00FBC0  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4566  00FBC2  B0D8               	btfsc	status,0,c
  4567  00FBC4  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4568  00FBC6                     l5831:
  4569                           
  4570                           ; BSR set to: 0
  4571                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 506:         p = 
      +                          2;
  4572  00FBC6  0E00               	movlw	0
  4573  00FBC8  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4574  00FBCA  0E02               	movlw	2
  4575  00FBCC  6F7C               	movwf	efgtoa@p& (0+255),b
  4576                           
  4577                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4578  00FBCE  EF14  F07E         	goto	l5843
  4579  00FBD2                     l5833:
  4580                           
  4581                           ; BSR set to: 0
  4582                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 508:             
      +                          --i;
  4583  00FBD2  078A               	decf	efgtoa@i& (0+255),f,b
  4584  00FBD4  A0D8               	btfss	status,0,c
  4585  00FBD6  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4586  00FBD8                     
  4587                           ; BSR set to: 0
  4588                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 509:             
      +                          dbuf[i] = '0' + (e % 10);
  4589  00FBD8  0E74               	movlw	low _dbuf
  4590  00FBDA  258A               	addwf	efgtoa@i& (0+255),w,b
  4591  00FBDC  6ED9               	movwf	fsr2l,c
  4592  00FBDE  0E01               	movlw	high _dbuf
  4593  00FBE0  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4594  00FBE2  6EDA               	movwf	fsr2h,c
  4595  00FBE4  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4596  00FBE8  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4597  00FBEC  0E00               	movlw	0
  4598  00FBEE  6E04               	movwf	(___awmod@divisor+1)^0,c
  4599  00FBF0  0E0A               	movlw	10
  4600  00FBF2  6E03               	movwf	___awmod@divisor^0,c
  4601  00FBF4  EC04  F067         	call	___awmod	;wreg free
  4602  00FBF8  5001               	movf	?___awmod^0,w,c
  4603  00FBFA  0F30               	addlw	48
  4604  00FBFC  6EDF               	movwf	indf2,c
  4605  00FBFE                     
  4606                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 510:             
      +                          e = e / 10;
  4607  00FBFE  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4608  00FC02  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4609  00FC06  0E00               	movlw	0
  4610  00FC08  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4611  00FC0A  0E0A               	movlw	10
  4612  00FC0C  6E03               	movwf	___awdiv@divisor^0,c
  4613  00FC0E  ECBE  F067         	call	___awdiv	;wreg free
  4614  00FC12  C001  F090         	movff	?___awdiv,efgtoa@e
  4615  00FC16  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4616  00FC1A                     
  4617                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 511:             
      +                          --p;
  4618  00FC1A  0100               	movlb	0	; () banked
  4619  00FC1C  077C               	decf	efgtoa@p& (0+255),f,b
  4620  00FC1E  A0D8               	btfss	status,0,c
  4621  00FC20  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4622  00FC22                     
  4623                           ; BSR set to: 0
  4624                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 512:             
      +                          --w;
  4625  00FC22  077E               	decf	efgtoa@w& (0+255),f,b
  4626  00FC24  A0D8               	btfss	status,0,c
  4627  00FC26  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4628  00FC28                     l5843:
  4629                           
  4630                           ; BSR set to: 0
  4631                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 507:         whil
      +                          e (e || (0 < p)) {
  4632  00FC28  5190               	movf	efgtoa@e& (0+255),w,b
  4633  00FC2A  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4634  00FC2C  A4D8               	btfss	status,2,c
  4635  00FC2E  EF1B  F07E         	goto	u5421
  4636  00FC32  EF1D  F07E         	goto	u5420
  4637  00FC36                     u5421:
  4638  00FC36  EFE9  F07D         	goto	l5833
  4639  00FC3A                     u5420:
  4640  00FC3A                     
  4641                           ; BSR set to: 0
  4642  00FC3A  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4643  00FC3C  EF2A  F07E         	goto	u5430
  4644  00FC40  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4645  00FC42  E106               	bnz	u5431
  4646  00FC44  057C               	decf	efgtoa@p& (0+255),w,b
  4647  00FC46  B0D8               	btfsc	status,0,c
  4648  00FC48  EF28  F07E         	goto	u5431
  4649  00FC4C  EF2A  F07E         	goto	u5430
  4650  00FC50                     u5431:
  4651  00FC50  EFE9  F07D         	goto	l5833
  4652  00FC54                     u5430:
  4653  00FC54                     
  4654                           ; BSR set to: 0
  4655                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 514:         --i;
  4656  00FC54  078A               	decf	efgtoa@i& (0+255),f,b
  4657  00FC56  A0D8               	btfss	status,0,c
  4658  00FC58  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4659  00FC5A                     
  4660                           ; BSR set to: 0
  4661                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 515:         dbuf
      +                          [i] = sign ? '-' : '+';
  4662  00FC5A  517A               	movf	efgtoa@sign& (0+255),w,b
  4663  00FC5C  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4664  00FC5E  A4D8               	btfss	status,2,c
  4665  00FC60  EF34  F07E         	goto	u5441
  4666  00FC64  EF36  F07E         	goto	u5440
  4667  00FC68                     u5441:
  4668  00FC68  EF3C  F07E         	goto	l5853
  4669  00FC6C                     u5440:
  4670  00FC6C                     
  4671                           ; BSR set to: 0
  4672  00FC6C  0E00               	movlw	0
  4673  00FC6E  6F67               	movwf	(_efgtoa$2190+1)& (0+255),b
  4674  00FC70  0E2B               	movlw	43
  4675  00FC72  6F66               	movwf	_efgtoa$2190& (0+255),b
  4676  00FC74  EF40  F07E         	goto	l5855
  4677  00FC78                     l5853:
  4678                           
  4679                           ; BSR set to: 0
  4680  00FC78  0E00               	movlw	0
  4681  00FC7A  6F67               	movwf	(_efgtoa$2190+1)& (0+255),b
  4682  00FC7C  0E2D               	movlw	45
  4683  00FC7E  6F66               	movwf	_efgtoa$2190& (0+255),b
  4684  00FC80                     l5855:
  4685                           
  4686                           ; BSR set to: 0
  4687  00FC80  0E74               	movlw	low _dbuf
  4688  00FC82  258A               	addwf	efgtoa@i& (0+255),w,b
  4689  00FC84  6ED9               	movwf	fsr2l,c
  4690  00FC86  0E01               	movlw	high _dbuf
  4691  00FC88  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4692  00FC8A  6EDA               	movwf	fsr2h,c
  4693  00FC8C  C066  FFDF         	movff	_efgtoa$2190,indf2
  4694  00FC90                     
  4695                           ; BSR set to: 0
  4696                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 516:         --w;
  4697  00FC90  077E               	decf	efgtoa@w& (0+255),f,b
  4698  00FC92  A0D8               	btfss	status,0,c
  4699  00FC94  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4700  00FC96                     
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 518:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4703  00FC96  078A               	decf	efgtoa@i& (0+255),f,b
  4704  00FC98  A0D8               	btfss	status,0,c
  4705  00FC9A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4706  00FC9C                     
  4707                           ; BSR set to: 0
  4708  00FC9C  0EBF               	movlw	191
  4709  00FC9E  6E41               	movwf	??_efgtoa^0,c
  4710  00FCA0  0EFF               	movlw	255
  4711  00FCA2  6E42               	movwf	(??_efgtoa+1)^0,c
  4712  00FCA4  5040               	movf	efgtoa@c^0,w,c
  4713  00FCA6  6E43               	movwf	(??_efgtoa+2)^0,c
  4714  00FCA8  6A44               	clrf	(??_efgtoa+3)^0,c
  4715  00FCAA  5041               	movf	??_efgtoa^0,w,c
  4716  00FCAC  2643               	addwf	(??_efgtoa+2)^0,f,c
  4717  00FCAE  5042               	movf	(??_efgtoa+1)^0,w,c
  4718  00FCB0  2244               	addwfc	(??_efgtoa+3)^0,f,c
  4719  00FCB2  5044               	movf	(??_efgtoa+3)^0,w,c
  4720  00FCB4  E10A               	bnz	u5450
  4721  00FCB6  0E1A               	movlw	26
  4722  00FCB8  5C43               	subwf	(??_efgtoa+2)^0,w,c
  4723  00FCBA  A0D8               	btfss	status,0,c
  4724  00FCBC  EF62  F07E         	goto	u5451
  4725  00FCC0  EF65  F07E         	goto	u5450
  4726  00FCC4                     u5451:
  4727  00FCC4  0E01               	movlw	1
  4728  00FCC6  EF66  F07E         	goto	u5460
  4729  00FCCA                     u5450:
  4730  00FCCA  0E00               	movlw	0
  4731  00FCCC                     u5460:
  4732  00FCCC  6F6A               	movwf	_efgtoa$2192& (0+255),b
  4733  00FCCE  6B6B               	clrf	(_efgtoa$2192+1)& (0+255),b
  4734  00FCD0                     
  4735                           ; BSR set to: 0
  4736  00FCD0  516A               	movf	_efgtoa$2192& (0+255),w,b
  4737  00FCD2  116B               	iorwf	(_efgtoa$2192+1)& (0+255),w,b
  4738  00FCD4  A4D8               	btfss	status,2,c
  4739  00FCD6  EF6F  F07E         	goto	u5471
  4740  00FCDA  EF71  F07E         	goto	u5470
  4741  00FCDE                     u5471:
  4742  00FCDE  EF77  F07E         	goto	l5869
  4743  00FCE2                     u5470:
  4744  00FCE2                     
  4745                           ; BSR set to: 0
  4746  00FCE2  0E00               	movlw	0
  4747  00FCE4  6F69               	movwf	(_efgtoa$2191+1)& (0+255),b
  4748  00FCE6  0E65               	movlw	101
  4749  00FCE8  6F68               	movwf	_efgtoa$2191& (0+255),b
  4750  00FCEA  EF7B  F07E         	goto	l5871
  4751  00FCEE                     l5869:
  4752                           
  4753                           ; BSR set to: 0
  4754  00FCEE  0E00               	movlw	0
  4755  00FCF0  6F69               	movwf	(_efgtoa$2191+1)& (0+255),b
  4756  00FCF2  0E45               	movlw	69
  4757  00FCF4  6F68               	movwf	_efgtoa$2191& (0+255),b
  4758  00FCF6                     l5871:
  4759                           
  4760                           ; BSR set to: 0
  4761  00FCF6  0E74               	movlw	low _dbuf
  4762  00FCF8  258A               	addwf	efgtoa@i& (0+255),w,b
  4763  00FCFA  6ED9               	movwf	fsr2l,c
  4764  00FCFC  0E01               	movlw	high _dbuf
  4765  00FCFE  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4766  00FD00  6EDA               	movwf	fsr2h,c
  4767  00FD02  C068  FFDF         	movff	_efgtoa$2191,indf2
  4768  00FD06                     
  4769                           ; BSR set to: 0
  4770                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 519:         --w;
  4771  00FD06  077E               	decf	efgtoa@w& (0+255),f,b
  4772  00FD08  A0D8               	btfss	status,0,c
  4773  00FD0A  077F               	decf	(efgtoa@w+1)& (0+255),f,b
  4774  00FD0C                     
  4775                           ; BSR set to: 0
  4776                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 520:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4777  00FD0C  0E74               	movlw	low _dbuf
  4778  00FD0E  2592               	addwf	efgtoa@n& (0+255),w,b
  4779  00FD10  6E01               	movwf	strcpy@dest^0,c
  4780  00FD12  0E01               	movlw	high _dbuf
  4781  00FD14  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4782  00FD16  6E02               	movwf	(strcpy@dest+1)^0,c
  4783  00FD18  0E74               	movlw	low _dbuf
  4784  00FD1A  258A               	addwf	efgtoa@i& (0+255),w,b
  4785  00FD1C  6E03               	movwf	strcpy@src^0,c
  4786  00FD1E  0E01               	movlw	high _dbuf
  4787  00FD20  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4788  00FD22  6E04               	movwf	(strcpy@src+1)^0,c
  4789  00FD24  EC94  F063         	call	_strcpy	;wreg free
  4790  00FD28  EF1E  F079         	goto	l5617
  4791  00FD2C                     l1603:
  4792  00FD2C  0012               	return		;funcret
  4793  00FD2E                     __end_of_efgtoa:
  4794                           	callstack 0
  4795                           
  4796 ;; *************** function _tolower *****************
  4797 ;; Defined at:
  4798 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\tolower.c"
  4799 ;; Parameters:    Size  Location     Type
  4800 ;;  c               2    6[COMRAM] int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;		None
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2    6[COMRAM] int 
  4805 ;; Registers used:
  4806 ;;		wreg, status,2, status,0
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4812 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4813 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;Total ram usage:        8 bytes
  4817 ;; Hardware stack levels used: 1
  4818 ;; Hardware stack levels required when called: 1
  4819 ;; This function calls:
  4820 ;;		_isupper
  4821 ;; This function is called by:
  4822 ;;		_efgtoa
  4823 ;;		_vfpfcnvrt
  4824 ;; This function uses a non-reentrant model
  4825 ;;
  4826                           
  4827                           	psect	text6
  4828  00C786                     __ptext6:
  4829                           	callstack 0
  4830  00C786                     _tolower:
  4831                           	callstack 26
  4832  00C786  0EBF               	movlw	191
  4833  00C788  6E09               	movwf	??_tolower^0,c
  4834  00C78A  0EFF               	movlw	255
  4835  00C78C  6E0A               	movwf	(??_tolower+1)^0,c
  4836  00C78E  C007  F00B         	movff	tolower@c,??_tolower+2
  4837  00C792  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4838  00C796  5009               	movf	??_tolower^0,w,c
  4839  00C798  260B               	addwf	(??_tolower+2)^0,f,c
  4840  00C79A  500A               	movf	(??_tolower+1)^0,w,c
  4841  00C79C  220C               	addwfc	(??_tolower+3)^0,f,c
  4842  00C79E  500C               	movf	(??_tolower+3)^0,w,c
  4843  00C7A0  E10A               	bnz	u4750
  4844  00C7A2  0E1A               	movlw	26
  4845  00C7A4  5C0B               	subwf	(??_tolower+2)^0,w,c
  4846  00C7A6  A0D8               	btfss	status,0,c
  4847  00C7A8  EFD8  F063         	goto	u4751
  4848  00C7AC  EFDB  F063         	goto	u4750
  4849  00C7B0                     u4751:
  4850  00C7B0  0E01               	movlw	1
  4851  00C7B2  EFDC  F063         	goto	u4760
  4852  00C7B6                     u4750:
  4853  00C7B6  0E00               	movlw	0
  4854  00C7B8                     u4760:
  4855  00C7B8  6E0D               	movwf	_tolower$2338^0,c
  4856  00C7BA  6A0E               	clrf	(_tolower$2338+1)^0,c
  4857  00C7BC  500D               	movf	_tolower$2338^0,w,c
  4858  00C7BE  100E               	iorwf	(_tolower$2338+1)^0,w,c
  4859  00C7C0  B4D8               	btfsc	status,2,c
  4860  00C7C2  EFE5  F063         	goto	u4771
  4861  00C7C6  EFE7  F063         	goto	u4770
  4862  00C7CA                     u4771:
  4863  00C7CA  EFEE  F063         	goto	l1833
  4864  00C7CE                     u4770:
  4865  00C7CE  0E20               	movlw	32
  4866  00C7D0  1007               	iorwf	tolower@c^0,w,c
  4867  00C7D2  6E07               	movwf	?_tolower^0,c
  4868  00C7D4  5008               	movf	(tolower@c+1)^0,w,c
  4869  00C7D6  6E08               	movwf	(?_tolower+1)^0,c
  4870  00C7D8  EFF2  F063         	goto	l1838
  4871  00C7DC                     l1833:
  4872  00C7DC  C007  F007         	movff	tolower@c,?_tolower
  4873  00C7E0  C008  F008         	movff	tolower@c+1,?_tolower+1
  4874  00C7E4                     l1838:
  4875  00C7E4  0012               	return		;funcret
  4876  00C7E6                     __end_of_tolower:
  4877                           	callstack 0
  4878                           
  4879 ;; *************** function _isupper *****************
  4880 ;; Defined at:
  4881 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isupper.c"
  4882 ;; Parameters:    Size  Location     Type
  4883 ;;  c               2    0[COMRAM] int 
  4884 ;; Auto vars:     Size  Location     Type
  4885 ;;		None
  4886 ;; Return value:  Size  Location     Type
  4887 ;;                  2    0[COMRAM] int 
  4888 ;; Registers used:
  4889 ;;		wreg, status,2, status,0
  4890 ;; Tracked objects:
  4891 ;;		On entry : 0/0
  4892 ;;		On exit  : 0/0
  4893 ;;		Unchanged: 0/0
  4894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4895 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4897 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4898 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4899 ;;Total ram usage:        6 bytes
  4900 ;; Hardware stack levels used: 1
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_efgtoa
  4905 ;;		_vfpfcnvrt
  4906 ;;		_tolower
  4907 ;; This function uses a non-reentrant model
  4908 ;;
  4909                           
  4910                           	psect	text7
  4911  00C488                     __ptext7:
  4912                           	callstack 0
  4913  00C488                     _isupper:
  4914                           	callstack 26
  4915  00C488  0EBF               	movlw	191
  4916  00C48A  6E03               	movwf	??_isupper^0,c
  4917  00C48C  0EFF               	movlw	255
  4918  00C48E  6E04               	movwf	(??_isupper+1)^0,c
  4919  00C490  C001  F005         	movff	isupper@c,??_isupper+2
  4920  00C494  C002  F006         	movff	isupper@c+1,??_isupper+3
  4921  00C498  5003               	movf	??_isupper^0,w,c
  4922  00C49A  2605               	addwf	(??_isupper+2)^0,f,c
  4923  00C49C  5004               	movf	(??_isupper+1)^0,w,c
  4924  00C49E  2206               	addwfc	(??_isupper+3)^0,f,c
  4925  00C4A0  5006               	movf	(??_isupper+3)^0,w,c
  4926  00C4A2  E10A               	bnz	u3880
  4927  00C4A4  0E1A               	movlw	26
  4928  00C4A6  5C05               	subwf	(??_isupper+2)^0,w,c
  4929  00C4A8  A0D8               	btfss	status,0,c
  4930  00C4AA  EF59  F062         	goto	u3881
  4931  00C4AE  EF5C  F062         	goto	u3880
  4932  00C4B2                     u3881:
  4933  00C4B2  0E01               	movlw	1
  4934  00C4B4  EF5D  F062         	goto	u3890
  4935  00C4B8                     u3880:
  4936  00C4B8  0E00               	movlw	0
  4937  00C4BA                     u3890:
  4938  00C4BA  6E01               	movwf	?_isupper^0,c
  4939  00C4BC  6A02               	clrf	(?_isupper+1)^0,c
  4940  00C4BE  0012               	return		;funcret
  4941  00C4C0                     __end_of_isupper:
  4942                           	callstack 0
  4943                           
  4944 ;; *************** function _strcpy *****************
  4945 ;; Defined at:
  4946 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strcpy.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4949 ;;		 -> dbuf(80), 
  4950 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4951 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4952 ;;		 -> dbuf(80), 
  4953 ;; Auto vars:     Size  Location     Type
  4954 ;;  d               2    8[COMRAM] PTR unsigned char 
  4955 ;;		 -> dbuf(80), 
  4956 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4957 ;;		 -> STR_15(4), STR_14(4), STR_11(4), STR_10(4), 
  4958 ;;		 -> dbuf(80), 
  4959 ;; Return value:  Size  Location     Type
  4960 ;;                  2    0[COMRAM] PTR unsigned char 
  4961 ;; Registers used:
  4962 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4963 ;; Tracked objects:
  4964 ;;		On entry : 0/0
  4965 ;;		On exit  : 0/0
  4966 ;;		Unchanged: 0/0
  4967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4968 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4969 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4970 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4971 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4972 ;;Total ram usage:       10 bytes
  4973 ;; Hardware stack levels used: 1
  4974 ;; This function calls:
  4975 ;;		Nothing
  4976 ;; This function is called by:
  4977 ;;		_efgtoa
  4978 ;; This function uses a non-reentrant model
  4979 ;;
  4980                           
  4981                           	psect	text8
  4982  00C728                     __ptext8:
  4983                           	callstack 0
  4984  00C728                     _strcpy:
  4985                           	callstack 26
  4986  00C728  C003  F007         	movff	strcpy@src,strcpy@s
  4987  00C72C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4988  00C730  C001  F009         	movff	strcpy@dest,strcpy@d
  4989  00C734  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4990  00C738                     l5505:
  4991  00C738  5007               	movf	strcpy@s^0,w,c
  4992  00C73A  6E05               	movwf	??_strcpy^0,c
  4993  00C73C  5008               	movf	(strcpy@s+1)^0,w,c
  4994  00C73E  6E06               	movwf	(??_strcpy+1)^0,c
  4995  00C740  4A07               	infsnz	strcpy@s^0,f,c
  4996  00C742  2A08               	incf	(strcpy@s+1)^0,f,c
  4997  00C744  C005  FFF6         	movff	??_strcpy,tblptrl
  4998  00C748  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4999  00C74C  0E00               	movlw	low (__mediumconst shr (0+16))
  5000  00C74E  6EF8               	movwf	tblptru,c
  5001  00C750  C009  FFD9         	movff	strcpy@d,fsr2l
  5002  00C754  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  5003  00C758  4A09               	infsnz	strcpy@d^0,f,c
  5004  00C75A  2A0A               	incf	(strcpy@d+1)^0,f,c
  5005  00C75C  0E0E               	movlw	(high __ramtop+-1)
  5006  00C75E  64F7               	cpfsgt	tblptrh,c
  5007  00C760  D003               	bra	u4737
  5008  00C762  0008               	tblrd		*
  5009  00C764  50F5               	movf	tablat,w,c
  5010  00C766  D005               	bra	u4730
  5011  00C768                     u4737:
  5012  00C768  CFF6 FFE9          	movff	tblptrl,fsr0l
  5013  00C76C  CFF7 FFEA          	movff	tblptrh,fsr0h
  5014  00C770  50EF               	movf	indf0,w,c
  5015  00C772                     u4730:
  5016  00C772  6EDF               	movwf	indf2,c
  5017  00C774  50DF               	movf	indf2,w,c
  5018  00C776  A4D8               	btfss	status,2,c
  5019  00C778  EFC0  F063         	goto	u4741
  5020  00C77C  EFC2  F063         	goto	u4740
  5021  00C780                     u4741:
  5022  00C780  EF9C  F063         	goto	l5505
  5023  00C784                     u4740:
  5024  00C784  0012               	return		;funcret
  5025  00C786                     __end_of_strcpy:
  5026                           	callstack 0
  5027                           
  5028 ;; *************** function _pad *****************
  5029 ;; Defined at:
  5030 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c"
  5031 ;; Parameters:    Size  Location     Type
  5032 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  5033 ;;		 -> sprintf@f(6), 
  5034 ;;  buf             2   18[COMRAM] PTR unsigned char 
  5035 ;;		 -> dbuf(80), 
  5036 ;;  p               2   20[COMRAM] int 
  5037 ;; Auto vars:     Size  Location     Type
  5038 ;;  w               2   25[COMRAM] int 
  5039 ;;  i               2   23[COMRAM] int 
  5040 ;; Return value:  Size  Location     Type
  5041 ;;                  2   16[COMRAM] int 
  5042 ;; Registers used:
  5043 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5044 ;; Tracked objects:
  5045 ;;		On entry : 0/0
  5046 ;;		On exit  : 0/0
  5047 ;;		Unchanged: 0/0
  5048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5049 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5050 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5051 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5052 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5053 ;;Total ram usage:       11 bytes
  5054 ;; Hardware stack levels used: 1
  5055 ;; Hardware stack levels required when called: 3
  5056 ;; This function calls:
  5057 ;;		_fputc
  5058 ;;		_fputs
  5059 ;;		_strlen
  5060 ;; This function is called by:
  5061 ;;		_efgtoa
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text9
  5066  00D040                     __ptext9:
  5067                           	callstack 0
  5068  00D040                     _pad:
  5069                           	callstack 23
  5070  00D040                     
  5071                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  5072  00D040  0100               	movlb	0	; () banked
  5073  00D042  A1D4               	btfss	_flags& (0+255),0,b
  5074  00D044  EF26  F068         	goto	u4621
  5075  00D048  EF28  F068         	goto	u4620
  5076  00D04C                     u4621:
  5077  00D04C  EF32  F068         	goto	l5463
  5078  00D050                     u4620:
  5079  00D050                     
  5080                           ; BSR set to: 0
  5081                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  5082  00D050  C013  F00A         	movff	pad@buf,fputs@s
  5083  00D054  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5084  00D058  C011  F00C         	movff	pad@fp,fputs@fp
  5085  00D05C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5086  00D060  ECA2  F062         	call	_fputs	;wreg free
  5087  00D064                     l5463:
  5088                           
  5089                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  5090  00D064  BE16               	btfsc	(pad@p+1)^0,7,c
  5091  00D066  EF37  F068         	goto	u4631
  5092  00D06A  EF39  F068         	goto	u4630
  5093  00D06E                     u4631:
  5094  00D06E  EF3F  F068         	goto	l5467
  5095  00D072                     u4630:
  5096  00D072  C015  F01A         	movff	pad@p,pad@w
  5097  00D076  C016  F01B         	movff	pad@p+1,pad@w+1
  5098  00D07A  EF43  F068         	goto	l1580
  5099  00D07E                     l5467:
  5100  00D07E  0E00               	movlw	0
  5101  00D080  6E1B               	movwf	(pad@w+1)^0,c
  5102  00D082  0E00               	movlw	0
  5103  00D084  6E1A               	movwf	pad@w^0,c
  5104  00D086                     l1580:
  5105                           
  5106                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  5107  00D086  0E00               	movlw	0
  5108  00D088  6E19               	movwf	(pad@i+1)^0,c
  5109  00D08A  0E00               	movlw	0
  5110  00D08C  6E18               	movwf	pad@i^0,c
  5111                           
  5112                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5113  00D08E  EF55  F068         	goto	l5473
  5114  00D092                     l5469:
  5115                           
  5116                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  5117  00D092  0E00               	movlw	0
  5118  00D094  6E02               	movwf	(fputc@c+1)^0,c
  5119  00D096  0E20               	movlw	32
  5120  00D098  6E01               	movwf	fputc@c^0,c
  5121  00D09A  C011  F003         	movff	pad@fp,fputc@fp
  5122  00D09E  C012  F004         	movff	pad@fp+1,fputc@fp+1
  5123  00D0A2  EC83  F068         	call	_fputc	;wreg free
  5124  00D0A6                     
  5125                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 86:         ++i;
  5126  00D0A6  4A18               	infsnz	pad@i^0,f,c
  5127  00D0A8  2A19               	incf	(pad@i+1)^0,f,c
  5128  00D0AA                     l5473:
  5129                           
  5130                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  5131  00D0AA  501A               	movf	pad@w^0,w,c
  5132  00D0AC  5C18               	subwf	pad@i^0,w,c
  5133  00D0AE  5019               	movf	(pad@i+1)^0,w,c
  5134  00D0B0  0A80               	xorlw	128
  5135  00D0B2  6E17               	movwf	??_pad^0,c
  5136  00D0B4  501B               	movf	(pad@w+1)^0,w,c
  5137  00D0B6  0A80               	xorlw	128
  5138  00D0B8  5817               	subwfb	??_pad^0,w,c
  5139  00D0BA  A0D8               	btfss	status,0,c
  5140  00D0BC  EF62  F068         	goto	u4641
  5141  00D0C0  EF64  F068         	goto	u4640
  5142  00D0C4                     u4641:
  5143  00D0C4  EF49  F068         	goto	l5469
  5144  00D0C8                     u4640:
  5145  00D0C8                     
  5146                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  5147  00D0C8  0100               	movlb	0	; () banked
  5148  00D0CA  B1D4               	btfsc	_flags& (0+255),0,b
  5149  00D0CC  EF6A  F068         	goto	u4651
  5150  00D0D0  EF6C  F068         	goto	u4650
  5151  00D0D4                     u4651:
  5152  00D0D4  EF76  F068         	goto	l5477
  5153  00D0D8                     u4650:
  5154  00D0D8                     
  5155                           ; BSR set to: 0
  5156                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  5157  00D0D8  C013  F00A         	movff	pad@buf,fputs@s
  5158  00D0DC  C014  F00B         	movff	pad@buf+1,fputs@s+1
  5159  00D0E0  C011  F00C         	movff	pad@fp,fputs@fp
  5160  00D0E4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  5161  00D0E8  ECA2  F062         	call	_fputs	;wreg free
  5162  00D0EC                     l5477:
  5163                           
  5164                           ;C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\doprnt.c: 94:     return (i
      +                          nt)(strlen(buf) + (size_t)w);
  5165  00D0EC  C013  F001         	movff	pad@buf,strlen@s
  5166  00D0F0  C014  F002         	movff	pad@buf+1,strlen@s+1
  5167  00D0F4  ECF1  F061         	call	_strlen	;wreg free
  5168  00D0F8  501A               	movf	pad@w^0,w,c
  5169  00D0FA  2401               	addwf	?_strlen^0,w,c
  5170  00D0FC  6E11               	movwf	?_pad^0,c
  5171  00D0FE  501B               	movf	(pad@w+1)^0,w,c
  5172  00D100  2002               	addwfc	(?_strlen+1)^0,w,c
  5173  00D102  6E12               	movwf	(?_pad+1)^0,c
  5174  00D104  0012               	return		;funcret
  5175  00D106                     __end_of_pad:
  5176                           	callstack 0
  5177                           
  5178 ;; *************** function _strlen *****************
  5179 ;; Defined at:
  5180 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\strlen.c"
  5181 ;; Parameters:    Size  Location     Type
  5182 ;;  s               2    0[COMRAM] PTR const unsigned char 
  5183 ;;		 -> dbuf(80), 
  5184 ;; Auto vars:     Size  Location     Type
  5185 ;;  a               2    2[COMRAM] PTR const unsigned char 
  5186 ;;		 -> dbuf(80), 
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  2    0[COMRAM] unsigned int 
  5189 ;; Registers used:
  5190 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5196 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5197 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5199 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5200 ;;Total ram usage:        4 bytes
  5201 ;; Hardware stack levels used: 1
  5202 ;; This function calls:
  5203 ;;		Nothing
  5204 ;; This function is called by:
  5205 ;;		_pad
  5206 ;; This function uses a non-reentrant model
  5207 ;;
  5208                           
  5209                           	psect	text10
  5210  00C3E2                     __ptext10:
  5211                           	callstack 0
  5212  00C3E2                     _strlen:
  5213                           	callstack 25
  5214  00C3E2  C001  F003         	movff	strlen@s,strlen@a
  5215  00C3E6  C002  F004         	movff	strlen@s+1,strlen@a+1
  5216  00C3EA  EFF9  F061         	goto	l4931
  5217  00C3EE                     l4929:
  5218  00C3EE  4A01               	infsnz	strlen@s^0,f,c
  5219  00C3F0  2A02               	incf	(strlen@s+1)^0,f,c
  5220  00C3F2                     l4931:
  5221  00C3F2  C001  FFD9         	movff	strlen@s,fsr2l
  5222  00C3F6  C002  FFDA         	movff	strlen@s+1,fsr2h
  5223  00C3FA  50DF               	movf	indf2,w,c
  5224  00C3FC  A4D8               	btfss	status,2,c
  5225  00C3FE  EF03  F062         	goto	u3871
  5226  00C402  EF05  F062         	goto	u3870
  5227  00C406                     u3871:
  5228  00C406  EFF7  F061         	goto	l4929
  5229  00C40A                     u3870:
  5230  00C40A  5003               	movf	strlen@a^0,w,c
  5231  00C40C  5C01               	subwf	strlen@s^0,w,c
  5232  00C40E  6E01               	movwf	?_strlen^0,c
  5233  00C410  5004               	movf	(strlen@a+1)^0,w,c
  5234  00C412  5802               	subwfb	(strlen@s+1)^0,w,c
  5235  00C414  6E02               	movwf	(?_strlen+1)^0,c
  5236  00C416  0012               	return		;funcret
  5237  00C418                     __end_of_strlen:
  5238                           	callstack 0
  5239                           
  5240 ;; *************** function _fputs *****************
  5241 ;; Defined at:
  5242 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputs.c"
  5243 ;; Parameters:    Size  Location     Type
  5244 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5245 ;;		 -> dbuf(80), 
  5246 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5247 ;;		 -> sprintf@f(6), 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  i               2   14[COMRAM] int 
  5250 ;;  c               1   13[COMRAM] unsigned char 
  5251 ;; Return value:  Size  Location     Type
  5252 ;;                  2    9[COMRAM] int 
  5253 ;; Registers used:
  5254 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5255 ;; Tracked objects:
  5256 ;;		On entry : 0/0
  5257 ;;		On exit  : 0/0
  5258 ;;		Unchanged: 0/0
  5259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5260 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5261 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;Total ram usage:        7 bytes
  5265 ;; Hardware stack levels used: 1
  5266 ;; Hardware stack levels required when called: 2
  5267 ;; This function calls:
  5268 ;;		_fputc
  5269 ;; This function is called by:
  5270 ;;		_pad
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text11
  5275  00C544                     __ptext11:
  5276                           	callstack 0
  5277  00C544                     _fputs:
  5278                           	callstack 23
  5279  00C544  0E00               	movlw	0
  5280  00C546  6E10               	movwf	(fputs@i+1)^0,c
  5281  00C548  0E00               	movlw	0
  5282  00C54A  6E0F               	movwf	fputs@i^0,c
  5283  00C54C  EFB3  F062         	goto	l4925
  5284  00C550                     l4921:
  5285  00C550  C00E  F001         	movff	fputs@c,fputc@c
  5286  00C554  6A02               	clrf	(fputc@c+1)^0,c
  5287  00C556  C00C  F003         	movff	fputs@fp,fputc@fp
  5288  00C55A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5289  00C55E  EC83  F068         	call	_fputc	;wreg free
  5290  00C562  4A0F               	infsnz	fputs@i^0,f,c
  5291  00C564  2A10               	incf	(fputs@i+1)^0,f,c
  5292  00C566                     l4925:
  5293  00C566  500F               	movf	fputs@i^0,w,c
  5294  00C568  240A               	addwf	fputs@s^0,w,c
  5295  00C56A  6ED9               	movwf	fsr2l,c
  5296  00C56C  5010               	movf	(fputs@i+1)^0,w,c
  5297  00C56E  200B               	addwfc	(fputs@s+1)^0,w,c
  5298  00C570  6EDA               	movwf	fsr2h,c
  5299  00C572  50DF               	movf	indf2,w,c
  5300  00C574  6E0E               	movwf	fputs@c^0,c
  5301  00C576  500E               	movf	fputs@c^0,w,c
  5302  00C578  A4D8               	btfss	status,2,c
  5303  00C57A  EFC1  F062         	goto	u3861
  5304  00C57E  EFC3  F062         	goto	u3860
  5305  00C582                     u3861:
  5306  00C582  EFA8  F062         	goto	l4921
  5307  00C586                     u3860:
  5308  00C586  0012               	return		;funcret
  5309  00C588                     __end_of_fputs:
  5310                           	callstack 0
  5311                           
  5312 ;; *************** function _fputc *****************
  5313 ;; Defined at:
  5314 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\nf_fputc.c"
  5315 ;; Parameters:    Size  Location     Type
  5316 ;;  c               2    0[COMRAM] int 
  5317 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5318 ;;		 -> sprintf@f(6), 
  5319 ;; Auto vars:     Size  Location     Type
  5320 ;;		None
  5321 ;; Return value:  Size  Location     Type
  5322 ;;                  2    0[COMRAM] int 
  5323 ;; Registers used:
  5324 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5325 ;; Tracked objects:
  5326 ;;		On entry : 0/0
  5327 ;;		On exit  : 0/0
  5328 ;;		Unchanged: 0/0
  5329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5330 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5331 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5332 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5333 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5334 ;;Total ram usage:        9 bytes
  5335 ;; Hardware stack levels used: 1
  5336 ;; Hardware stack levels required when called: 1
  5337 ;; This function calls:
  5338 ;;		_putch
  5339 ;; This function is called by:
  5340 ;;		_pad
  5341 ;;		_vfpfcnvrt
  5342 ;;		_fputs
  5343 ;; This function uses a non-reentrant model
  5344 ;;
  5345                           
  5346                           	psect	text12
  5347  00D106                     __ptext12:
  5348                           	callstack 0
  5349  00D106                     _fputc:
  5350                           	callstack 26
  5351  00D106  5003               	movf	fputc@fp^0,w,c
  5352  00D108  1004               	iorwf	(fputc@fp+1)^0,w,c
  5353  00D10A  B4D8               	btfsc	status,2,c
  5354  00D10C  EF8A  F068         	goto	u3401
  5355  00D110  EF8C  F068         	goto	u3400
  5356  00D114                     u3401:
  5357  00D114  EF95  F068         	goto	l4673
  5358  00D118                     u3400:
  5359  00D118  5003               	movf	fputc@fp^0,w,c
  5360  00D11A  1004               	iorwf	(fputc@fp+1)^0,w,c
  5361  00D11C  A4D8               	btfss	status,2,c
  5362  00D11E  EF93  F068         	goto	u3411
  5363  00D122  EF95  F068         	goto	u3410
  5364  00D126                     u3411:
  5365  00D126  EF9A  F068         	goto	l4675
  5366  00D12A                     u3410:
  5367  00D12A                     l4673:
  5368  00D12A  5001               	movf	fputc@c^0,w,c
  5369  00D12C  ECE7  F05F         	call	_putch
  5370  00D130  EFE7  F068         	goto	l1796
  5371  00D134                     l4675:
  5372  00D134  EE20 F004          	lfsr	2,4
  5373  00D138  5003               	movf	fputc@fp^0,w,c
  5374  00D13A  26D9               	addwf	fsr2l,f,c
  5375  00D13C  5004               	movf	(fputc@fp+1)^0,w,c
  5376  00D13E  22DA               	addwfc	fsr2h,f,c
  5377  00D140  50DE               	movf	postinc2,w,c
  5378  00D142  10DE               	iorwf	postinc2,w,c
  5379  00D144  B4D8               	btfsc	status,2,c
  5380  00D146  EFA7  F068         	goto	u3421
  5381  00D14A  EFA9  F068         	goto	u3420
  5382  00D14E                     u3421:
  5383  00D14E  EFC4  F068         	goto	l4679
  5384  00D152                     u3420:
  5385  00D152  EE20 F004          	lfsr	2,4
  5386  00D156  5003               	movf	fputc@fp^0,w,c
  5387  00D158  26D9               	addwf	fsr2l,f,c
  5388  00D15A  5004               	movf	(fputc@fp+1)^0,w,c
  5389  00D15C  22DA               	addwfc	fsr2h,f,c
  5390  00D15E  EE10 F002          	lfsr	1,2
  5391  00D162  5003               	movf	fputc@fp^0,w,c
  5392  00D164  26E1               	addwf	fsr1l,f,c
  5393  00D166  5004               	movf	(fputc@fp+1)^0,w,c
  5394  00D168  22E2               	addwfc	fsr1h,f,c
  5395  00D16A  50DE               	movf	postinc2,w,c
  5396  00D16C  5CE6               	subwf	postinc1,w,c
  5397  00D16E  50E6               	movf	postinc1,w,c
  5398  00D170  0A80               	xorlw	128
  5399  00D172  6E09               	movwf	(??_fputc+4)^0,c
  5400  00D174  50DE               	movf	postinc2,w,c
  5401  00D176  0A80               	xorlw	128
  5402  00D178  5809               	subwfb	(??_fputc+4)^0,w,c
  5403  00D17A  B0D8               	btfsc	status,0,c
  5404  00D17C  EFC2  F068         	goto	u3431
  5405  00D180  EFC4  F068         	goto	u3430
  5406  00D184                     u3431:
  5407  00D184  EFE7  F068         	goto	l1796
  5408  00D188                     u3430:
  5409  00D188                     l4679:
  5410  00D188  EE20 F002          	lfsr	2,2
  5411  00D18C  5003               	movf	fputc@fp^0,w,c
  5412  00D18E  26D9               	addwf	fsr2l,f,c
  5413  00D190  5004               	movf	(fputc@fp+1)^0,w,c
  5414  00D192  22DA               	addwfc	fsr2h,f,c
  5415  00D194  CFDE F005          	movff	postinc2,??_fputc
  5416  00D198  CFDD F006          	movff	postdec2,??_fputc+1
  5417  00D19C  C003  FFD9         	movff	fputc@fp,fsr2l
  5418  00D1A0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5419  00D1A4  CFDE F007          	movff	postinc2,??_fputc+2
  5420  00D1A8  CFDD F008          	movff	postdec2,??_fputc+3
  5421  00D1AC  5005               	movf	??_fputc^0,w,c
  5422  00D1AE  2407               	addwf	(??_fputc+2)^0,w,c
  5423  00D1B0  6ED9               	movwf	fsr2l,c
  5424  00D1B2  5006               	movf	(??_fputc+1)^0,w,c
  5425  00D1B4  2008               	addwfc	(??_fputc+3)^0,w,c
  5426  00D1B6  6EDA               	movwf	fsr2h,c
  5427  00D1B8  C001  FFDF         	movff	fputc@c,indf2
  5428  00D1BC  EE20 F002          	lfsr	2,2
  5429  00D1C0  5003               	movf	fputc@fp^0,w,c
  5430  00D1C2  26D9               	addwf	fsr2l,f,c
  5431  00D1C4  5004               	movf	(fputc@fp+1)^0,w,c
  5432  00D1C6  22DA               	addwfc	fsr2h,f,c
  5433  00D1C8  2ADE               	incf	postinc2,f,c
  5434  00D1CA  0E00               	movlw	0
  5435  00D1CC  22DD               	addwfc	postdec2,f,c
  5436  00D1CE                     l1796:
  5437  00D1CE  0012               	return		;funcret
  5438  00D1D0                     __end_of_fputc:
  5439                           	callstack 0
  5440                           
  5441 ;; *************** function _putch *****************
  5442 ;; Defined at:
  5443 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\putch.c"
  5444 ;; Parameters:    Size  Location     Type
  5445 ;;  c               1    wreg     unsigned char 
  5446 ;; Auto vars:     Size  Location     Type
  5447 ;;  c               1    0[COMRAM] unsigned char 
  5448 ;; Return value:  Size  Location     Type
  5449 ;;                  1    wreg      void 
  5450 ;; Registers used:
  5451 ;;		wreg
  5452 ;; Tracked objects:
  5453 ;;		On entry : 0/0
  5454 ;;		On exit  : 0/0
  5455 ;;		Unchanged: 0/0
  5456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5457 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5458 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5459 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5460 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5461 ;;Total ram usage:        0 bytes
  5462 ;; Hardware stack levels used: 1
  5463 ;; This function calls:
  5464 ;;		Nothing
  5465 ;; This function is called by:
  5466 ;;		_fputc
  5467 ;; This function uses a non-reentrant model
  5468 ;;
  5469                           
  5470                           	psect	text13
  5471  00BFCE                     __ptext13:
  5472                           	callstack 0
  5473  00BFCE                     _putch:
  5474                           	callstack 26
  5475  00BFCE  0012               	return		;funcret
  5476  00BFD0                     __end_of_putch:
  5477                           	callstack 0
  5478                           
  5479 ;; *************** function _floorf *****************
  5480 ;; Defined at:
  5481 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\floorf.c"
  5482 ;; Parameters:    Size  Location     Type
  5483 ;;  x               4   25[COMRAM] float 
  5484 ;; Auto vars:     Size  Location     Type
  5485 ;;  u               4   41[COMRAM] struct .
  5486 ;;  m               4   35[COMRAM] unsigned long 
  5487 ;;  e               2   39[COMRAM] int 
  5488 ;; Return value:  Size  Location     Type
  5489 ;;                  4   25[COMRAM] float 
  5490 ;; Registers used:
  5491 ;;		wreg, status,2, status,0
  5492 ;; Tracked objects:
  5493 ;;		On entry : 0/0
  5494 ;;		On exit  : 0/0
  5495 ;;		Unchanged: 0/0
  5496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5497 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5498 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5499 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5500 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5501 ;;Total ram usage:       20 bytes
  5502 ;; Hardware stack levels used: 1
  5503 ;; This function calls:
  5504 ;;		Nothing
  5505 ;; This function is called by:
  5506 ;;		_efgtoa
  5507 ;; This function uses a non-reentrant model
  5508 ;;
  5509                           
  5510                           	psect	text14
  5511  00DDC8                     __ptext14:
  5512                           	callstack 0
  5513  00DDC8                     _floorf:
  5514                           	callstack 26
  5515  00DDC8  C0AE  F02A         	movff	floorf@F527,floorf@u
  5516  00DDCC  C0AF  F02B         	movff	floorf@F527+1,floorf@u+1
  5517  00DDD0  C0B0  F02C         	movff	floorf@F527+2,floorf@u+2
  5518  00DDD4  C0B1  F02D         	movff	floorf@F527+3,floorf@u+3
  5519  00DDD8  C01A  F02A         	movff	floorf@x,floorf@u
  5520  00DDDC  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5521  00DDE0  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5522  00DDE4  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5523  00DDE8  0E81               	movlw	129
  5524  00DDEA  6E1E               	movwf	??_floorf^0,c
  5525  00DDEC  0EFF               	movlw	255
  5526  00DDEE  6E1F               	movwf	(??_floorf+1)^0,c
  5527  00DDF0  C02A  F020         	movff	floorf@u,??_floorf+2
  5528  00DDF4  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5529  00DDF8  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5530  00DDFC  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5531  00DE00  0E18               	movlw	24
  5532  00DE02  EF08  F06F         	goto	u4780
  5533  00DE06                     u4785:
  5534  00DE06  90D8               	bcf	status,0,c
  5535  00DE08  3223               	rrcf	(??_floorf+5)^0,f,c
  5536  00DE0A  3222               	rrcf	(??_floorf+4)^0,f,c
  5537  00DE0C  3221               	rrcf	(??_floorf+3)^0,f,c
  5538  00DE0E  3220               	rrcf	(??_floorf+2)^0,f,c
  5539  00DE10                     u4780:
  5540  00DE10  2EE8               	decfsz	wreg,f,c
  5541  00DE12  EF03  F06F         	goto	u4785
  5542  00DE16  5020               	movf	(??_floorf+2)^0,w,c
  5543  00DE18  241E               	addwf	??_floorf^0,w,c
  5544  00DE1A  6E28               	movwf	floorf@e^0,c
  5545  00DE1C  0E00               	movlw	0
  5546  00DE1E  201F               	addwfc	(??_floorf+1)^0,w,c
  5547  00DE20  6E29               	movwf	(floorf@e+1)^0,c
  5548  00DE22  BE29               	btfsc	(floorf@e+1)^0,7,c
  5549  00DE24  EF1D  F06F         	goto	u4791
  5550  00DE28  5029               	movf	(floorf@e+1)^0,w,c
  5551  00DE2A  E109               	bnz	u4790
  5552  00DE2C  0E17               	movlw	23
  5553  00DE2E  5C28               	subwf	floorf@e^0,w,c
  5554  00DE30  A0D8               	btfss	status,0,c
  5555  00DE32  EF1D  F06F         	goto	u4791
  5556  00DE36  EF1F  F06F         	goto	u4790
  5557  00DE3A                     u4791:
  5558  00DE3A  EF29  F06F         	goto	l5523
  5559  00DE3E                     u4790:
  5560  00DE3E                     l5521:
  5561  00DE3E  C01A  F01A         	movff	floorf@x,?_floorf
  5562  00DE42  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5563  00DE46  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5564  00DE4A  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5565  00DE4E  EFEC  F06F         	goto	l1757
  5566  00DE52                     l5523:
  5567  00DE52  BE29               	btfsc	(floorf@e+1)^0,7,c
  5568  00DE54  EF2E  F06F         	goto	u4801
  5569  00DE58  EF30  F06F         	goto	u4800
  5570  00DE5C                     u4801:
  5571  00DE5C  EFA0  F06F         	goto	l5533
  5572  00DE60                     u4800:
  5573  00DE60  C028  F01E         	movff	floorf@e,??_floorf
  5574  00DE64  0EFF               	movlw	255
  5575  00DE66  6E1F               	movwf	(??_floorf+1)^0,c
  5576  00DE68  0EFF               	movlw	255
  5577  00DE6A  6E20               	movwf	(??_floorf+2)^0,c
  5578  00DE6C  0E7F               	movlw	127
  5579  00DE6E  6E21               	movwf	(??_floorf+3)^0,c
  5580  00DE70  0E00               	movlw	0
  5581  00DE72  6E22               	movwf	(??_floorf+4)^0,c
  5582  00DE74                     u4815:
  5583  00DE74  661E               	tstfsz	??_floorf^0,c
  5584  00DE76  EF3F  F06F         	goto	u4816
  5585  00DE7A  EF47  F06F         	goto	u4817
  5586  00DE7E                     u4816:
  5587  00DE7E  3422               	rlcf	(??_floorf+4)^0,w,c
  5588  00DE80  3222               	rrcf	(??_floorf+4)^0,f,c
  5589  00DE82  3221               	rrcf	(??_floorf+3)^0,f,c
  5590  00DE84  3220               	rrcf	(??_floorf+2)^0,f,c
  5591  00DE86  321F               	rrcf	(??_floorf+1)^0,f,c
  5592  00DE88  2E1E               	decfsz	??_floorf^0,f,c
  5593  00DE8A  EF3A  F06F         	goto	u4815
  5594  00DE8E                     u4817:
  5595  00DE8E  C01F  F024         	movff	??_floorf+1,floorf@m
  5596  00DE92  C020  F025         	movff	??_floorf+2,floorf@m+1
  5597  00DE96  C021  F026         	movff	??_floorf+3,floorf@m+2
  5598  00DE9A  C022  F027         	movff	??_floorf+4,floorf@m+3
  5599  00DE9E  5024               	movf	floorf@m^0,w,c
  5600  00DEA0  142A               	andwf	floorf@u^0,w,c
  5601  00DEA2  6E1E               	movwf	??_floorf^0,c
  5602  00DEA4  5025               	movf	(floorf@m+1)^0,w,c
  5603  00DEA6  142B               	andwf	(floorf@u+1)^0,w,c
  5604  00DEA8  6E1F               	movwf	(??_floorf+1)^0,c
  5605  00DEAA  5026               	movf	(floorf@m+2)^0,w,c
  5606  00DEAC  142C               	andwf	(floorf@u+2)^0,w,c
  5607  00DEAE  6E20               	movwf	(??_floorf+2)^0,c
  5608  00DEB0  5027               	movf	(floorf@m+3)^0,w,c
  5609  00DEB2  142D               	andwf	(floorf@u+3)^0,w,c
  5610  00DEB4  6E21               	movwf	(??_floorf+3)^0,c
  5611  00DEB6  501E               	movf	??_floorf^0,w,c
  5612  00DEB8  101F               	iorwf	(??_floorf+1)^0,w,c
  5613  00DEBA  1020               	iorwf	(??_floorf+2)^0,w,c
  5614  00DEBC  1021               	iorwf	(??_floorf+3)^0,w,c
  5615  00DEBE  A4D8               	btfss	status,2,c
  5616  00DEC0  EF64  F06F         	goto	u4821
  5617  00DEC4  EF66  F06F         	goto	u4820
  5618  00DEC8                     u4821:
  5619  00DEC8  EF68  F06F         	goto	l5529
  5620  00DECC                     u4820:
  5621  00DECC  EF1F  F06F         	goto	l5521
  5622  00DED0                     l5529:
  5623  00DED0  C02A  F01E         	movff	floorf@u,??_floorf
  5624  00DED4  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5625  00DED8  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5626  00DEDC  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5627  00DEE0  0E20               	movlw	32
  5628  00DEE2  EF78  F06F         	goto	u4830
  5629  00DEE6                     u4835:
  5630  00DEE6  90D8               	bcf	status,0,c
  5631  00DEE8  3221               	rrcf	(??_floorf+3)^0,f,c
  5632  00DEEA  3220               	rrcf	(??_floorf+2)^0,f,c
  5633  00DEEC  321F               	rrcf	(??_floorf+1)^0,f,c
  5634  00DEEE  321E               	rrcf	??_floorf^0,f,c
  5635  00DEF0                     u4830:
  5636  00DEF0  2EE8               	decfsz	wreg,f,c
  5637  00DEF2  EF73  F06F         	goto	u4835
  5638  00DEF6  501E               	movf	??_floorf^0,w,c
  5639  00DEF8  101F               	iorwf	(??_floorf+1)^0,w,c
  5640  00DEFA  1020               	iorwf	(??_floorf+2)^0,w,c
  5641  00DEFC  1021               	iorwf	(??_floorf+3)^0,w,c
  5642  00DEFE  B4D8               	btfsc	status,2,c
  5643  00DF00  EF84  F06F         	goto	u4841
  5644  00DF04  EF86  F06F         	goto	u4840
  5645  00DF08                     u4841:
  5646  00DF08  EF8E  F06F         	goto	l1760
  5647  00DF0C                     u4840:
  5648  00DF0C  5024               	movf	floorf@m^0,w,c
  5649  00DF0E  262A               	addwf	floorf@u^0,f,c
  5650  00DF10  5025               	movf	(floorf@m+1)^0,w,c
  5651  00DF12  222B               	addwfc	(floorf@u+1)^0,f,c
  5652  00DF14  5026               	movf	(floorf@m+2)^0,w,c
  5653  00DF16  222C               	addwfc	(floorf@u+2)^0,f,c
  5654  00DF18  5027               	movf	(floorf@m+3)^0,w,c
  5655  00DF1A  222D               	addwfc	(floorf@u+3)^0,f,c
  5656  00DF1C                     l1760:
  5657  00DF1C  1C24               	comf	floorf@m^0,w,c
  5658  00DF1E  6E1E               	movwf	??_floorf^0,c
  5659  00DF20  1C25               	comf	(floorf@m+1)^0,w,c
  5660  00DF22  6E1F               	movwf	(??_floorf+1)^0,c
  5661  00DF24  1C26               	comf	(floorf@m+2)^0,w,c
  5662  00DF26  6E20               	movwf	(??_floorf+2)^0,c
  5663  00DF28  1C27               	comf	(floorf@m+3)^0,w,c
  5664  00DF2A  6E21               	movwf	(??_floorf+3)^0,c
  5665  00DF2C  501E               	movf	??_floorf^0,w,c
  5666  00DF2E  162A               	andwf	floorf@u^0,f,c
  5667  00DF30  501F               	movf	(??_floorf+1)^0,w,c
  5668  00DF32  162B               	andwf	(floorf@u+1)^0,f,c
  5669  00DF34  5020               	movf	(??_floorf+2)^0,w,c
  5670  00DF36  162C               	andwf	(floorf@u+2)^0,f,c
  5671  00DF38  5021               	movf	(??_floorf+3)^0,w,c
  5672  00DF3A  162D               	andwf	(floorf@u+3)^0,f,c
  5673  00DF3C  EFE4  F06F         	goto	l5541
  5674  00DF40                     l5533:
  5675  00DF40  C02A  F01E         	movff	floorf@u,??_floorf
  5676  00DF44  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5677  00DF48  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5678  00DF4C  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5679  00DF50  0E20               	movlw	32
  5680  00DF52  EFB0  F06F         	goto	u4850
  5681  00DF56                     u4855:
  5682  00DF56  90D8               	bcf	status,0,c
  5683  00DF58  3221               	rrcf	(??_floorf+3)^0,f,c
  5684  00DF5A  3220               	rrcf	(??_floorf+2)^0,f,c
  5685  00DF5C  321F               	rrcf	(??_floorf+1)^0,f,c
  5686  00DF5E  321E               	rrcf	??_floorf^0,f,c
  5687  00DF60                     u4850:
  5688  00DF60  2EE8               	decfsz	wreg,f,c
  5689  00DF62  EFAB  F06F         	goto	u4855
  5690  00DF66  501E               	movf	??_floorf^0,w,c
  5691  00DF68  101F               	iorwf	(??_floorf+1)^0,w,c
  5692  00DF6A  1020               	iorwf	(??_floorf+2)^0,w,c
  5693  00DF6C  1021               	iorwf	(??_floorf+3)^0,w,c
  5694  00DF6E  A4D8               	btfss	status,2,c
  5695  00DF70  EFBC  F06F         	goto	u4861
  5696  00DF74  EFBE  F06F         	goto	u4860
  5697  00DF78                     u4861:
  5698  00DF78  EFC8  F06F         	goto	l5537
  5699  00DF7C                     u4860:
  5700  00DF7C  0E00               	movlw	0
  5701  00DF7E  6E2A               	movwf	floorf@u^0,c
  5702  00DF80  0E00               	movlw	0
  5703  00DF82  6E2B               	movwf	(floorf@u+1)^0,c
  5704  00DF84  0E00               	movlw	0
  5705  00DF86  6E2C               	movwf	(floorf@u+2)^0,c
  5706  00DF88  0E00               	movlw	0
  5707  00DF8A  6E2D               	movwf	(floorf@u+3)^0,c
  5708  00DF8C  EFE4  F06F         	goto	l5541
  5709  00DF90                     l5537:
  5710  00DF90  90D8               	bcf	status,0,c
  5711  00DF92  342A               	rlcf	floorf@u^0,w,c
  5712  00DF94  6E1E               	movwf	??_floorf^0,c
  5713  00DF96  342B               	rlcf	(floorf@u+1)^0,w,c
  5714  00DF98  6E1F               	movwf	(??_floorf+1)^0,c
  5715  00DF9A  342C               	rlcf	(floorf@u+2)^0,w,c
  5716  00DF9C  6E20               	movwf	(??_floorf+2)^0,c
  5717  00DF9E  342D               	rlcf	(floorf@u+3)^0,w,c
  5718  00DFA0  6E21               	movwf	(??_floorf+3)^0,c
  5719  00DFA2  501E               	movf	??_floorf^0,w,c
  5720  00DFA4  101F               	iorwf	(??_floorf+1)^0,w,c
  5721  00DFA6  1020               	iorwf	(??_floorf+2)^0,w,c
  5722  00DFA8  1021               	iorwf	(??_floorf+3)^0,w,c
  5723  00DFAA  B4D8               	btfsc	status,2,c
  5724  00DFAC  EFDA  F06F         	goto	u4871
  5725  00DFB0  EFDC  F06F         	goto	u4870
  5726  00DFB4                     u4871:
  5727  00DFB4  EFE4  F06F         	goto	l5541
  5728  00DFB8                     u4870:
  5729  00DFB8  0E00               	movlw	0
  5730  00DFBA  6E2A               	movwf	floorf@u^0,c
  5731  00DFBC  0E00               	movlw	0
  5732  00DFBE  6E2B               	movwf	(floorf@u+1)^0,c
  5733  00DFC0  0E80               	movlw	128
  5734  00DFC2  6E2C               	movwf	(floorf@u+2)^0,c
  5735  00DFC4  0EBF               	movlw	191
  5736  00DFC6  6E2D               	movwf	(floorf@u+3)^0,c
  5737  00DFC8                     l5541:
  5738  00DFC8  C02A  F01A         	movff	floorf@u,?_floorf
  5739  00DFCC  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5740  00DFD0  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5741  00DFD4  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5742  00DFD8                     l1757:
  5743  00DFD8  0012               	return		;funcret
  5744  00DFDA                     __end_of_floorf:
  5745                           	callstack 0
  5746                           
  5747 ;; *************** function ___fpclassifyf *****************
  5748 ;; Defined at:
  5749 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__fpclassifyf.c"
  5750 ;; Parameters:    Size  Location     Type
  5751 ;;  x               4    0[COMRAM] float 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  u               4   10[COMRAM] struct .
  5754 ;;  e               2    8[COMRAM] int 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  2    0[COMRAM] int 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5765 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5766 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5767 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5768 ;;Total ram usage:       14 bytes
  5769 ;; Hardware stack levels used: 1
  5770 ;; This function calls:
  5771 ;;		Nothing
  5772 ;; This function is called by:
  5773 ;;		_efgtoa
  5774 ;; This function uses a non-reentrant model
  5775 ;;
  5776                           
  5777                           	psect	text15
  5778  00D39E                     __ptext15:
  5779                           	callstack 0
  5780  00D39E                     ___fpclassifyf:
  5781                           	callstack 26
  5782  00D39E  C0B2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5783  00D3A2  C0B3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5784  00D3A6  C0B4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5785  00D3AA  C0B5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5786  00D3AE  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5787  00D3B2  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5788  00D3B6  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5789  00D3BA  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5790  00D3BE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5791  00D3C2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5792  00D3C6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5793  00D3CA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5794  00D3CE  0E18               	movlw	24
  5795  00D3D0  EFEF  F069         	goto	u4660
  5796  00D3D4                     u4665:
  5797  00D3D4  90D8               	bcf	status,0,c
  5798  00D3D6  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5799  00D3D8  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5800  00D3DA  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5801  00D3DC  3205               	rrcf	??___fpclassifyf^0,f,c
  5802  00D3DE                     u4660:
  5803  00D3DE  2EE8               	decfsz	wreg,f,c
  5804  00D3E0  EFEA  F069         	goto	u4665
  5805  00D3E4  5005               	movf	??___fpclassifyf^0,w,c
  5806  00D3E6  6E09               	movwf	___fpclassifyf@e^0,c
  5807  00D3E8  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5808  00D3EA  5009               	movf	___fpclassifyf@e^0,w,c
  5809  00D3EC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5810  00D3EE  A4D8               	btfss	status,2,c
  5811  00D3F0  EFFC  F069         	goto	u4671
  5812  00D3F4  EFFE  F069         	goto	u4670
  5813  00D3F8                     u4671:
  5814  00D3F8  EF1E  F06A         	goto	l5493
  5815  00D3FC                     u4670:
  5816  00D3FC  90D8               	bcf	status,0,c
  5817  00D3FE  340B               	rlcf	___fpclassifyf@u^0,w,c
  5818  00D400  6E05               	movwf	??___fpclassifyf^0,c
  5819  00D402  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5820  00D404  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5821  00D406  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5822  00D408  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5823  00D40A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5824  00D40C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5825  00D40E  5005               	movf	??___fpclassifyf^0,w,c
  5826  00D410  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5827  00D412  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5828  00D414  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5829  00D416  A4D8               	btfss	status,2,c
  5830  00D418  EF10  F06A         	goto	u4681
  5831  00D41C  EF12  F06A         	goto	u4680
  5832  00D420                     u4681:
  5833  00D420  EF18  F06A         	goto	l5489
  5834  00D424                     u4680:
  5835  00D424  0E00               	movlw	0
  5836  00D426  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5837  00D428  0E02               	movlw	2
  5838  00D42A  6E01               	movwf	?___fpclassifyf^0,c
  5839  00D42C  EF4D  F06A         	goto	l1719
  5840  00D430                     l5489:
  5841  00D430  0E00               	movlw	0
  5842  00D432  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5843  00D434  0E03               	movlw	3
  5844  00D436  6E01               	movwf	?___fpclassifyf^0,c
  5845  00D438  EF4D  F06A         	goto	l1719
  5846  00D43C                     l5493:
  5847  00D43C  2809               	incf	___fpclassifyf@e^0,w,c
  5848  00D43E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5849  00D440  A4D8               	btfss	status,2,c
  5850  00D442  EF25  F06A         	goto	u4691
  5851  00D446  EF27  F06A         	goto	u4690
  5852  00D44A                     u4691:
  5853  00D44A  EF49  F06A         	goto	l5499
  5854  00D44E                     u4690:
  5855  00D44E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5856  00D452  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5857  00D456  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5858  00D45A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5859  00D45E  0E09               	movlw	9
  5860  00D460                     u4705:
  5861  00D460  90D8               	bcf	status,0,c
  5862  00D462  3605               	rlcf	??___fpclassifyf^0,f,c
  5863  00D464  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5864  00D466  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5865  00D468  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5866  00D46A  2EE8               	decfsz	wreg,f,c
  5867  00D46C  EF30  F06A         	goto	u4705
  5868  00D470  5005               	movf	??___fpclassifyf^0,w,c
  5869  00D472  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5870  00D474  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5871  00D476  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5872  00D478  B4D8               	btfsc	status,2,c
  5873  00D47A  EF41  F06A         	goto	u4711
  5874  00D47E  EF44  F06A         	goto	u4710
  5875  00D482                     u4711:
  5876  00D482  0E01               	movlw	1
  5877  00D484  EF45  F06A         	goto	u4720
  5878  00D488                     u4710:
  5879  00D488  0E00               	movlw	0
  5880  00D48A                     u4720:
  5881  00D48A  6E01               	movwf	?___fpclassifyf^0,c
  5882  00D48C  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5883  00D48E  EF4D  F06A         	goto	l1719
  5884  00D492                     l5499:
  5885  00D492  0E00               	movlw	0
  5886  00D494  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5887  00D496  0E04               	movlw	4
  5888  00D498  6E01               	movwf	?___fpclassifyf^0,c
  5889  00D49A                     l1719:
  5890  00D49A  0012               	return		;funcret
  5891  00D49C                     __end_of___fpclassifyf:
  5892                           	callstack 0
  5893                           
  5894 ;; *************** function ___fltol *****************
  5895 ;; Defined at:
  5896 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fltol.c"
  5897 ;; Parameters:    Size  Location     Type
  5898 ;;  f1              4    0[COMRAM] int 
  5899 ;; Auto vars:     Size  Location     Type
  5900 ;;  exp1            1    9[COMRAM] unsigned char 
  5901 ;;  sign1           1    8[COMRAM] unsigned char 
  5902 ;; Return value:  Size  Location     Type
  5903 ;;                  4    0[COMRAM] long 
  5904 ;; Registers used:
  5905 ;;		wreg, status,2, status,0
  5906 ;; Tracked objects:
  5907 ;;		On entry : 0/0
  5908 ;;		On exit  : 0/0
  5909 ;;		Unchanged: 0/0
  5910 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5911 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5912 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5913 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5914 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5915 ;;Total ram usage:       10 bytes
  5916 ;; Hardware stack levels used: 1
  5917 ;; This function calls:
  5918 ;;		Nothing
  5919 ;; This function is called by:
  5920 ;;		_efgtoa
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text16
  5925  00D7A4                     __ptext16:
  5926                           	callstack 0
  5927  00D7A4                     ___fltol:
  5928                           	callstack 26
  5929  00D7A4  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5930  00D7A6  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5931  00D7A8  6E0A               	movwf	___fltol@exp1^0,c
  5932  00D7AA  500A               	movf	___fltol@exp1^0,w,c
  5933  00D7AC  A4D8               	btfss	status,2,c
  5934  00D7AE  EFDB  F06B         	goto	u4551
  5935  00D7B2  EFDD  F06B         	goto	u4550
  5936  00D7B6                     u4551:
  5937  00D7B6  EFE7  F06B         	goto	l5421
  5938  00D7BA                     u4550:
  5939  00D7BA                     l5417:
  5940  00D7BA  0E00               	movlw	0
  5941  00D7BC  6E01               	movwf	?___fltol^0,c
  5942  00D7BE  0E00               	movlw	0
  5943  00D7C0  6E02               	movwf	(?___fltol+1)^0,c
  5944  00D7C2  0E00               	movlw	0
  5945  00D7C4  6E03               	movwf	(?___fltol+2)^0,c
  5946  00D7C6  0E00               	movlw	0
  5947  00D7C8  6E04               	movwf	(?___fltol+3)^0,c
  5948  00D7CA  EF54  F06C         	goto	l1158
  5949  00D7CE                     l5421:
  5950  00D7CE  C001  F005         	movff	___fltol@f1,??___fltol
  5951  00D7D2  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5952  00D7D6  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5953  00D7DA  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5954  00D7DE  0E20               	movlw	32
  5955  00D7E0  EFF7  F06B         	goto	u4560
  5956  00D7E4                     u4565:
  5957  00D7E4  90D8               	bcf	status,0,c
  5958  00D7E6  3208               	rrcf	(??___fltol+3)^0,f,c
  5959  00D7E8  3207               	rrcf	(??___fltol+2)^0,f,c
  5960  00D7EA  3206               	rrcf	(??___fltol+1)^0,f,c
  5961  00D7EC  3205               	rrcf	??___fltol^0,f,c
  5962  00D7EE                     u4560:
  5963  00D7EE  2EE8               	decfsz	wreg,f,c
  5964  00D7F0  EFF2  F06B         	goto	u4565
  5965  00D7F4  5005               	movf	??___fltol^0,w,c
  5966  00D7F6  6E09               	movwf	___fltol@sign1^0,c
  5967  00D7F8  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5968  00D7FA  0EFF               	movlw	255
  5969  00D7FC  1601               	andwf	___fltol@f1^0,f,c
  5970  00D7FE  0EFF               	movlw	255
  5971  00D800  1602               	andwf	(___fltol@f1+1)^0,f,c
  5972  00D802  0EFF               	movlw	255
  5973  00D804  1603               	andwf	(___fltol@f1+2)^0,f,c
  5974  00D806  0E00               	movlw	0
  5975  00D808  1604               	andwf	(___fltol@f1+3)^0,f,c
  5976  00D80A  0E96               	movlw	150
  5977  00D80C  5E0A               	subwf	___fltol@exp1^0,f,c
  5978  00D80E  BE0A               	btfsc	___fltol@exp1^0,7,c
  5979  00D810  EF0E  F06C         	goto	u4570
  5980  00D814  EF0C  F06C         	goto	u4571
  5981  00D818                     u4571:
  5982  00D818  EF24  F06C         	goto	l5441
  5983  00D81C                     u4570:
  5984  00D81C  500A               	movf	___fltol@exp1^0,w,c
  5985  00D81E  0A80               	xorlw	128
  5986  00D820  0F97               	addlw	151
  5987  00D822  B0D8               	btfsc	status,0,c
  5988  00D824  EF16  F06C         	goto	u4581
  5989  00D828  EF18  F06C         	goto	u4580
  5990  00D82C                     u4581:
  5991  00D82C  EF1A  F06C         	goto	l5437
  5992  00D830                     u4580:
  5993  00D830  EFDD  F06B         	goto	l5417
  5994  00D834                     l5437:
  5995  00D834  90D8               	bcf	status,0,c
  5996  00D836  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5997  00D838  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5998  00D83A  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5999  00D83C  3201               	rrcf	___fltol@f1^0,f,c
  6000  00D83E  3E0A               	incfsz	___fltol@exp1^0,f,c
  6001  00D840  EF1A  F06C         	goto	l5437
  6002  00D844  EF3C  F06C         	goto	l5451
  6003  00D848                     l5441:
  6004  00D848  0E1F               	movlw	31
  6005  00D84A  640A               	cpfsgt	___fltol@exp1^0,c
  6006  00D84C  EF2A  F06C         	goto	u4591
  6007  00D850  EF2C  F06C         	goto	u4590
  6008  00D854                     u4591:
  6009  00D854  EF34  F06C         	goto	l5449
  6010  00D858                     u4590:
  6011  00D858  EFDD  F06B         	goto	l5417
  6012  00D85C                     l5447:
  6013  00D85C  90D8               	bcf	status,0,c
  6014  00D85E  3601               	rlcf	___fltol@f1^0,f,c
  6015  00D860  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6016  00D862  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6017  00D864  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6018  00D866  060A               	decf	___fltol@exp1^0,f,c
  6019  00D868                     l5449:
  6020  00D868  500A               	movf	___fltol@exp1^0,w,c
  6021  00D86A  A4D8               	btfss	status,2,c
  6022  00D86C  EF3A  F06C         	goto	u4601
  6023  00D870  EF3C  F06C         	goto	u4600
  6024  00D874                     u4601:
  6025  00D874  EF2E  F06C         	goto	l5447
  6026  00D878                     u4600:
  6027  00D878                     l5451:
  6028  00D878  5009               	movf	___fltol@sign1^0,w,c
  6029  00D87A  B4D8               	btfsc	status,2,c
  6030  00D87C  EF42  F06C         	goto	u4611
  6031  00D880  EF44  F06C         	goto	u4610
  6032  00D884                     u4611:
  6033  00D884  EF4C  F06C         	goto	l5455
  6034  00D888                     u4610:
  6035  00D888  1E04               	comf	(___fltol@f1+3)^0,f,c
  6036  00D88A  1E03               	comf	(___fltol@f1+2)^0,f,c
  6037  00D88C  1E02               	comf	(___fltol@f1+1)^0,f,c
  6038  00D88E  6C01               	negf	___fltol@f1^0,c
  6039  00D890  0E00               	movlw	0
  6040  00D892  2202               	addwfc	(___fltol@f1+1)^0,f,c
  6041  00D894  2203               	addwfc	(___fltol@f1+2)^0,f,c
  6042  00D896  2204               	addwfc	(___fltol@f1+3)^0,f,c
  6043  00D898                     l5455:
  6044  00D898  C001  F001         	movff	___fltol@f1,?___fltol
  6045  00D89C  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  6046  00D8A0  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  6047  00D8A4  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  6048  00D8A8                     l1158:
  6049  00D8A8  0012               	return		;funcret
  6050  00D8AA                     __end_of___fltol:
  6051                           	callstack 0
  6052                           
  6053 ;; *************** function ___flsub *****************
  6054 ;; Defined at:
  6055 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6056 ;; Parameters:    Size  Location     Type
  6057 ;;  b               4   45[COMRAM] long 
  6058 ;;  a               4   49[COMRAM] long 
  6059 ;; Auto vars:     Size  Location     Type
  6060 ;;		None
  6061 ;; Return value:  Size  Location     Type
  6062 ;;                  4   45[COMRAM] long 
  6063 ;; Registers used:
  6064 ;;		wreg, status,2, status,0, cstack
  6065 ;; Tracked objects:
  6066 ;;		On entry : 0/0
  6067 ;;		On exit  : 0/0
  6068 ;;		Unchanged: 0/0
  6069 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6070 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6071 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6072 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6073 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6074 ;;Total ram usage:        8 bytes
  6075 ;; Hardware stack levels used: 1
  6076 ;; Hardware stack levels required when called: 1
  6077 ;; This function calls:
  6078 ;;		___fladd
  6079 ;; This function is called by:
  6080 ;;		_efgtoa
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text17
  6085  00C588                     __ptext17:
  6086                           	callstack 0
  6087  00C588                     ___flsub:
  6088                           	callstack 25
  6089  00C588  0E00               	movlw	0
  6090  00C58A  1A32               	xorwf	___flsub@a^0,f,c
  6091  00C58C  0E00               	movlw	0
  6092  00C58E  1A33               	xorwf	(___flsub@a+1)^0,f,c
  6093  00C590  0E00               	movlw	0
  6094  00C592  1A34               	xorwf	(___flsub@a+2)^0,f,c
  6095  00C594  0E80               	movlw	128
  6096  00C596  1A35               	xorwf	(___flsub@a+3)^0,f,c
  6097  00C598  C02E  F001         	movff	___flsub@b,___fladd@b
  6098  00C59C  C02F  F002         	movff	___flsub@b+1,___fladd@b+1
  6099  00C5A0  C030  F003         	movff	___flsub@b+2,___fladd@b+2
  6100  00C5A4  C031  F004         	movff	___flsub@b+3,___fladd@b+3
  6101  00C5A8  C032  F005         	movff	___flsub@a,___fladd@a
  6102  00C5AC  C033  F006         	movff	___flsub@a+1,___fladd@a+1
  6103  00C5B0  C034  F007         	movff	___flsub@a+2,___fladd@a+2
  6104  00C5B4  C035  F008         	movff	___flsub@a+3,___fladd@a+3
  6105  00C5B8  EC0B  F076         	call	___fladd	;wreg free
  6106  00C5BC  C001  F02E         	movff	?___fladd,?___flsub
  6107  00C5C0  C002  F02F         	movff	?___fladd+1,?___flsub+1
  6108  00C5C4  C003  F030         	movff	?___fladd+2,?___flsub+2
  6109  00C5C8  C004  F031         	movff	?___fladd+3,?___flsub+3
  6110  00C5CC  0012               	return		;funcret
  6111  00C5CE                     __end_of___flsub:
  6112                           	callstack 0
  6113                           
  6114 ;; *************** function ___fladd *****************
  6115 ;; Defined at:
  6116 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcadd.c"
  6117 ;; Parameters:    Size  Location     Type
  6118 ;;  b               4    0[COMRAM] long 
  6119 ;;  a               4    4[COMRAM] long 
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;  grs             1   15[COMRAM] unsigned char 
  6122 ;;  bexp            1   14[COMRAM] unsigned char 
  6123 ;;  aexp            1   13[COMRAM] unsigned char 
  6124 ;;  signs           1   12[COMRAM] unsigned char 
  6125 ;; Return value:  Size  Location     Type
  6126 ;;                  4    0[COMRAM] unsigned char 
  6127 ;; Registers used:
  6128 ;;		wreg, status,2, status,0
  6129 ;; Tracked objects:
  6130 ;;		On entry : 0/0
  6131 ;;		On exit  : 0/0
  6132 ;;		Unchanged: 0/0
  6133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6134 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6135 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6136 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6137 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6138 ;;Total ram usage:       16 bytes
  6139 ;; Hardware stack levels used: 1
  6140 ;; This function calls:
  6141 ;;		Nothing
  6142 ;; This function is called by:
  6143 ;;		___flsub
  6144 ;;		_efgtoa
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           	psect	text18
  6149  00EC16                     __ptext18:
  6150                           	callstack 0
  6151  00EC16                     ___fladd:
  6152                           	callstack 25
  6153  00EC16  5004               	movf	(___fladd@b+3)^0,w,c
  6154  00EC18  0B80               	andlw	128
  6155  00EC1A  6E0D               	movwf	___fladd@signs^0,c
  6156  00EC1C  5004               	movf	(___fladd@b+3)^0,w,c
  6157  00EC1E  2404               	addwf	(___fladd@b+3)^0,w,c
  6158  00EC20  6E0F               	movwf	___fladd@bexp^0,c
  6159  00EC22  AE03               	btfss	(___fladd@b+2)^0,7,c
  6160  00EC24  EF16  F076         	goto	u3471
  6161  00EC28  EF18  F076         	goto	u3470
  6162  00EC2C                     u3471:
  6163  00EC2C  EF19  F076         	goto	l4723
  6164  00EC30                     u3470:
  6165  00EC30  800F               	bsf	___fladd@bexp^0,0,c
  6166  00EC32                     l4723:
  6167  00EC32  500F               	movf	___fladd@bexp^0,w,c
  6168  00EC34  B4D8               	btfsc	status,2,c
  6169  00EC36  EF1F  F076         	goto	u3481
  6170  00EC3A  EF21  F076         	goto	u3480
  6171  00EC3E                     u3481:
  6172  00EC3E  EF36  F076         	goto	l4733
  6173  00EC42                     u3480:
  6174  00EC42  280F               	incf	___fladd@bexp^0,w,c
  6175  00EC44  A4D8               	btfss	status,2,c
  6176  00EC46  EF27  F076         	goto	u3491
  6177  00EC4A  EF29  F076         	goto	u3490
  6178  00EC4E                     u3491:
  6179  00EC4E  EF31  F076         	goto	l4729
  6180  00EC52                     u3490:
  6181  00EC52  0E00               	movlw	0
  6182  00EC54  6E01               	movwf	___fladd@b^0,c
  6183  00EC56  0E00               	movlw	0
  6184  00EC58  6E02               	movwf	(___fladd@b+1)^0,c
  6185  00EC5A  0E00               	movlw	0
  6186  00EC5C  6E03               	movwf	(___fladd@b+2)^0,c
  6187  00EC5E  0E00               	movlw	0
  6188  00EC60  6E04               	movwf	(___fladd@b+3)^0,c
  6189  00EC62                     l4729:
  6190  00EC62  8E03               	bsf	(___fladd@b+2)^0,7,c
  6191  00EC64  0E00               	movlw	0
  6192  00EC66  6E04               	movwf	(___fladd@b+3)^0,c
  6193  00EC68  EF3E  F076         	goto	l4735
  6194  00EC6C                     l4733:
  6195  00EC6C  0E00               	movlw	0
  6196  00EC6E  6E01               	movwf	___fladd@b^0,c
  6197  00EC70  0E00               	movlw	0
  6198  00EC72  6E02               	movwf	(___fladd@b+1)^0,c
  6199  00EC74  0E00               	movlw	0
  6200  00EC76  6E03               	movwf	(___fladd@b+2)^0,c
  6201  00EC78  0E00               	movlw	0
  6202  00EC7A  6E04               	movwf	(___fladd@b+3)^0,c
  6203  00EC7C                     l4735:
  6204  00EC7C  5008               	movf	(___fladd@a+3)^0,w,c
  6205  00EC7E  0B80               	andlw	128
  6206  00EC80  6E0E               	movwf	___fladd@aexp^0,c
  6207  00EC82  500D               	movf	___fladd@signs^0,w,c
  6208  00EC84  180E               	xorwf	___fladd@aexp^0,w,c
  6209  00EC86  B4D8               	btfsc	status,2,c
  6210  00EC88  EF48  F076         	goto	u3501
  6211  00EC8C  EF4A  F076         	goto	u3500
  6212  00EC90                     u3501:
  6213  00EC90  EF4B  F076         	goto	l4741
  6214  00EC94                     u3500:
  6215  00EC94  8C0D               	bsf	___fladd@signs^0,6,c
  6216  00EC96                     l4741:
  6217  00EC96  5008               	movf	(___fladd@a+3)^0,w,c
  6218  00EC98  2408               	addwf	(___fladd@a+3)^0,w,c
  6219  00EC9A  6E0E               	movwf	___fladd@aexp^0,c
  6220  00EC9C  AE07               	btfss	(___fladd@a+2)^0,7,c
  6221  00EC9E  EF53  F076         	goto	u3511
  6222  00ECA2  EF55  F076         	goto	u3510
  6223  00ECA6                     u3511:
  6224  00ECA6  EF56  F076         	goto	l4747
  6225  00ECAA                     u3510:
  6226  00ECAA  800E               	bsf	___fladd@aexp^0,0,c
  6227  00ECAC                     l4747:
  6228  00ECAC  500E               	movf	___fladd@aexp^0,w,c
  6229  00ECAE  B4D8               	btfsc	status,2,c
  6230  00ECB0  EF5C  F076         	goto	u3521
  6231  00ECB4  EF5E  F076         	goto	u3520
  6232  00ECB8                     u3521:
  6233  00ECB8  EF73  F076         	goto	l4757
  6234  00ECBC                     u3520:
  6235  00ECBC  280E               	incf	___fladd@aexp^0,w,c
  6236  00ECBE  A4D8               	btfss	status,2,c
  6237  00ECC0  EF64  F076         	goto	u3531
  6238  00ECC4  EF66  F076         	goto	u3530
  6239  00ECC8                     u3531:
  6240  00ECC8  EF6E  F076         	goto	l4753
  6241  00ECCC                     u3530:
  6242  00ECCC  0E00               	movlw	0
  6243  00ECCE  6E05               	movwf	___fladd@a^0,c
  6244  00ECD0  0E00               	movlw	0
  6245  00ECD2  6E06               	movwf	(___fladd@a+1)^0,c
  6246  00ECD4  0E00               	movlw	0
  6247  00ECD6  6E07               	movwf	(___fladd@a+2)^0,c
  6248  00ECD8  0E00               	movlw	0
  6249  00ECDA  6E08               	movwf	(___fladd@a+3)^0,c
  6250  00ECDC                     l4753:
  6251  00ECDC  8E07               	bsf	(___fladd@a+2)^0,7,c
  6252  00ECDE  0E00               	movlw	0
  6253  00ECE0  6E08               	movwf	(___fladd@a+3)^0,c
  6254  00ECE2  EF7B  F076         	goto	l4759
  6255  00ECE6                     l4757:
  6256  00ECE6  0E00               	movlw	0
  6257  00ECE8  6E05               	movwf	___fladd@a^0,c
  6258  00ECEA  0E00               	movlw	0
  6259  00ECEC  6E06               	movwf	(___fladd@a+1)^0,c
  6260  00ECEE  0E00               	movlw	0
  6261  00ECF0  6E07               	movwf	(___fladd@a+2)^0,c
  6262  00ECF2  0E00               	movlw	0
  6263  00ECF4  6E08               	movwf	(___fladd@a+3)^0,c
  6264  00ECF6                     l4759:
  6265  00ECF6  500F               	movf	___fladd@bexp^0,w,c
  6266  00ECF8  5C0E               	subwf	___fladd@aexp^0,w,c
  6267  00ECFA  B0D8               	btfsc	status,0,c
  6268  00ECFC  EF82  F076         	goto	u3541
  6269  00ED00  EF84  F076         	goto	u3540
  6270  00ED04                     u3541:
  6271  00ED04  EFAB  F076         	goto	l4795
  6272  00ED08                     u3540:
  6273  00ED08  AC0D               	btfss	___fladd@signs^0,6,c
  6274  00ED0A  EF89  F076         	goto	u3551
  6275  00ED0E  EF8B  F076         	goto	u3550
  6276  00ED12                     u3551:
  6277  00ED12  EF8D  F076         	goto	l4765
  6278  00ED16                     u3550:
  6279  00ED16  0E80               	movlw	128
  6280  00ED18  1A0D               	xorwf	___fladd@signs^0,f,c
  6281  00ED1A                     l4765:
  6282  00ED1A  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6283  00ED1E  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6284  00ED22  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6285  00ED26  C001  F010         	movff	___fladd@b,___fladd@grs
  6286  00ED2A  C005  F001         	movff	___fladd@a,___fladd@b
  6287  00ED2E  C010  F005         	movff	___fladd@grs,___fladd@a
  6288  00ED32  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6289  00ED36  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6290  00ED3A  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6291  00ED3E  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6292  00ED42  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6293  00ED46  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6294  00ED4A  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6295  00ED4E  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6296  00ED52  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6297  00ED56                     l4795:
  6298  00ED56  0E00               	movlw	0
  6299  00ED58  6E10               	movwf	___fladd@grs^0,c
  6300  00ED5A  500F               	movf	___fladd@bexp^0,w,c
  6301  00ED5C  C00E  F009         	movff	___fladd@aexp,??___fladd
  6302  00ED60  6A0A               	clrf	(??___fladd+1)^0,c
  6303  00ED62  5E09               	subwf	??___fladd^0,f,c
  6304  00ED64  0E00               	movlw	0
  6305  00ED66  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6306  00ED68  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6307  00ED6A  EFC0  F076         	goto	u3561
  6308  00ED6E  500A               	movf	(??___fladd+1)^0,w,c
  6309  00ED70  E109               	bnz	u3560
  6310  00ED72  0E1A               	movlw	26
  6311  00ED74  5C09               	subwf	??___fladd^0,w,c
  6312  00ED76  A0D8               	btfss	status,0,c
  6313  00ED78  EFC0  F076         	goto	u3561
  6314  00ED7C  EFC2  F076         	goto	u3560
  6315  00ED80                     u3561:
  6316  00ED80  EFF9  F076         	goto	l1390
  6317  00ED84                     u3560:
  6318  00ED84  5001               	movf	___fladd@b^0,w,c
  6319  00ED86  1002               	iorwf	(___fladd@b+1)^0,w,c
  6320  00ED88  1003               	iorwf	(___fladd@b+2)^0,w,c
  6321  00ED8A  1004               	iorwf	(___fladd@b+3)^0,w,c
  6322  00ED8C  A4D8               	btfss	status,2,c
  6323  00ED8E  EFCB  F076         	goto	u3571
  6324  00ED92  EFCE  F076         	goto	u3570
  6325  00ED96                     u3571:
  6326  00ED96  0E01               	movlw	1
  6327  00ED98  EFCF  F076         	goto	u3580
  6328  00ED9C                     u3570:
  6329  00ED9C  0E00               	movlw	0
  6330  00ED9E                     u3580:
  6331  00ED9E  6E10               	movwf	___fladd@grs^0,c
  6332  00EDA0  0E00               	movlw	0
  6333  00EDA2  6E01               	movwf	___fladd@b^0,c
  6334  00EDA4  0E00               	movlw	0
  6335  00EDA6  6E02               	movwf	(___fladd@b+1)^0,c
  6336  00EDA8  0E00               	movlw	0
  6337  00EDAA  6E03               	movwf	(___fladd@b+2)^0,c
  6338  00EDAC  0E00               	movlw	0
  6339  00EDAE  6E04               	movwf	(___fladd@b+3)^0,c
  6340  00EDB0  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6341  00EDB4  EF02  F077         	goto	l1389
  6342  00EDB8                     l1391:
  6343  00EDB8  A010               	btfss	___fladd@grs^0,0,c
  6344  00EDBA  EFE1  F076         	goto	u3591
  6345  00EDBE  EFE3  F076         	goto	u3590
  6346  00EDC2                     u3591:
  6347  00EDC2  EFE9  F076         	goto	l4807
  6348  00EDC6                     u3590:
  6349  00EDC6  90D8               	bcf	status,0,c
  6350  00EDC8  3010               	rrcf	___fladd@grs^0,w,c
  6351  00EDCA  0901               	iorlw	1
  6352  00EDCC  6E10               	movwf	___fladd@grs^0,c
  6353  00EDCE  EFEB  F076         	goto	l4809
  6354  00EDD2                     l4807:
  6355  00EDD2  90D8               	bcf	status,0,c
  6356  00EDD4  3210               	rrcf	___fladd@grs^0,f,c
  6357  00EDD6                     l4809:
  6358  00EDD6  A001               	btfss	___fladd@b^0,0,c
  6359  00EDD8  EFF0  F076         	goto	u3601
  6360  00EDDC  EFF2  F076         	goto	u3600
  6361  00EDE0                     u3601:
  6362  00EDE0  EFF3  F076         	goto	l4813
  6363  00EDE4                     u3600:
  6364  00EDE4  8E10               	bsf	___fladd@grs^0,7,c
  6365  00EDE6                     l4813:
  6366  00EDE6  3404               	rlcf	(___fladd@b+3)^0,w,c
  6367  00EDE8  3204               	rrcf	(___fladd@b+3)^0,f,c
  6368  00EDEA  3203               	rrcf	(___fladd@b+2)^0,f,c
  6369  00EDEC  3202               	rrcf	(___fladd@b+1)^0,f,c
  6370  00EDEE  3201               	rrcf	___fladd@b^0,f,c
  6371  00EDF0  2A0F               	incf	___fladd@bexp^0,f,c
  6372  00EDF2                     l1390:
  6373  00EDF2  500E               	movf	___fladd@aexp^0,w,c
  6374  00EDF4  5C0F               	subwf	___fladd@bexp^0,w,c
  6375  00EDF6  A0D8               	btfss	status,0,c
  6376  00EDF8  EF00  F077         	goto	u3611
  6377  00EDFC  EF02  F077         	goto	u3610
  6378  00EE00                     u3611:
  6379  00EE00  EFDC  F076         	goto	l1391
  6380  00EE04                     u3610:
  6381  00EE04                     l1389:
  6382  00EE04  BC0D               	btfsc	___fladd@signs^0,6,c
  6383  00EE06  EF07  F077         	goto	u3621
  6384  00EE0A  EF09  F077         	goto	u3620
  6385  00EE0E                     u3621:
  6386  00EE0E  EF49  F077         	goto	l4841
  6387  00EE12                     u3620:
  6388  00EE12  500F               	movf	___fladd@bexp^0,w,c
  6389  00EE14  A4D8               	btfss	status,2,c
  6390  00EE16  EF0F  F077         	goto	u3631
  6391  00EE1A  EF11  F077         	goto	u3630
  6392  00EE1E                     u3631:
  6393  00EE1E  EF1B  F077         	goto	l4823
  6394  00EE22                     u3630:
  6395  00EE22  0E00               	movlw	0
  6396  00EE24  6E01               	movwf	?___fladd^0,c
  6397  00EE26  0E00               	movlw	0
  6398  00EE28  6E02               	movwf	(?___fladd+1)^0,c
  6399  00EE2A  0E00               	movlw	0
  6400  00EE2C  6E03               	movwf	(?___fladd+2)^0,c
  6401  00EE2E  0E00               	movlw	0
  6402  00EE30  6E04               	movwf	(?___fladd+3)^0,c
  6403  00EE32  EF6A  F078         	goto	l1398
  6404  00EE36                     l4823:
  6405  00EE36  5005               	movf	___fladd@a^0,w,c
  6406  00EE38  2601               	addwf	___fladd@b^0,f,c
  6407  00EE3A  5006               	movf	(___fladd@a+1)^0,w,c
  6408  00EE3C  2202               	addwfc	(___fladd@b+1)^0,f,c
  6409  00EE3E  5007               	movf	(___fladd@a+2)^0,w,c
  6410  00EE40  2203               	addwfc	(___fladd@b+2)^0,f,c
  6411  00EE42  5008               	movf	(___fladd@a+3)^0,w,c
  6412  00EE44  2204               	addwfc	(___fladd@b+3)^0,f,c
  6413  00EE46  A004               	btfss	(___fladd@b+3)^0,0,c
  6414  00EE48  EF28  F077         	goto	u3641
  6415  00EE4C  EF2A  F077         	goto	u3640
  6416  00EE50                     u3641:
  6417  00EE50  EFD6  F077         	goto	l4877
  6418  00EE54                     u3640:
  6419  00EE54  A010               	btfss	___fladd@grs^0,0,c
  6420  00EE56  EF2F  F077         	goto	u3651
  6421  00EE5A  EF31  F077         	goto	u3650
  6422  00EE5E                     u3651:
  6423  00EE5E  EF37  F077         	goto	l4831
  6424  00EE62                     u3650:
  6425  00EE62  90D8               	bcf	status,0,c
  6426  00EE64  3010               	rrcf	___fladd@grs^0,w,c
  6427  00EE66  0901               	iorlw	1
  6428  00EE68  6E10               	movwf	___fladd@grs^0,c
  6429  00EE6A  EF39  F077         	goto	l4833
  6430  00EE6E                     l4831:
  6431  00EE6E  90D8               	bcf	status,0,c
  6432  00EE70  3210               	rrcf	___fladd@grs^0,f,c
  6433  00EE72                     l4833:
  6434  00EE72  A001               	btfss	___fladd@b^0,0,c
  6435  00EE74  EF3E  F077         	goto	u3661
  6436  00EE78  EF40  F077         	goto	u3660
  6437  00EE7C                     u3661:
  6438  00EE7C  EF41  F077         	goto	l4837
  6439  00EE80                     u3660:
  6440  00EE80  8E10               	bsf	___fladd@grs^0,7,c
  6441  00EE82                     l4837:
  6442  00EE82  3404               	rlcf	(___fladd@b+3)^0,w,c
  6443  00EE84  3204               	rrcf	(___fladd@b+3)^0,f,c
  6444  00EE86  3203               	rrcf	(___fladd@b+2)^0,f,c
  6445  00EE88  3202               	rrcf	(___fladd@b+1)^0,f,c
  6446  00EE8A  3201               	rrcf	___fladd@b^0,f,c
  6447  00EE8C  2A0F               	incf	___fladd@bexp^0,f,c
  6448  00EE8E  EFD6  F077         	goto	l4877
  6449  00EE92                     l4841:
  6450  00EE92  5005               	movf	___fladd@a^0,w,c
  6451  00EE94  5C01               	subwf	___fladd@b^0,w,c
  6452  00EE96  5006               	movf	(___fladd@a+1)^0,w,c
  6453  00EE98  5802               	subwfb	(___fladd@b+1)^0,w,c
  6454  00EE9A  5007               	movf	(___fladd@a+2)^0,w,c
  6455  00EE9C  5803               	subwfb	(___fladd@b+2)^0,w,c
  6456  00EE9E  5004               	movf	(___fladd@b+3)^0,w,c
  6457  00EEA0  0A80               	xorlw	128
  6458  00EEA2  6E09               	movwf	??___fladd^0,c
  6459  00EEA4  5008               	movf	(___fladd@a+3)^0,w,c
  6460  00EEA6  0A80               	xorlw	128
  6461  00EEA8  5809               	subwfb	??___fladd^0,w,c
  6462  00EEAA  B0D8               	btfsc	status,0,c
  6463  00EEAC  EF5A  F077         	goto	u3671
  6464  00EEB0  EF5C  F077         	goto	u3670
  6465  00EEB4                     u3671:
  6466  00EEB4  EF87  F077         	goto	l4851
  6467  00EEB8                     u3670:
  6468  00EEB8  5001               	movf	___fladd@b^0,w,c
  6469  00EEBA  5C05               	subwf	___fladd@a^0,w,c
  6470  00EEBC  6E09               	movwf	??___fladd^0,c
  6471  00EEBE  5002               	movf	(___fladd@b+1)^0,w,c
  6472  00EEC0  5806               	subwfb	(___fladd@a+1)^0,w,c
  6473  00EEC2  6E0A               	movwf	(??___fladd+1)^0,c
  6474  00EEC4  5003               	movf	(___fladd@b+2)^0,w,c
  6475  00EEC6  5807               	subwfb	(___fladd@a+2)^0,w,c
  6476  00EEC8  6E0B               	movwf	(??___fladd+2)^0,c
  6477  00EECA  5004               	movf	(___fladd@b+3)^0,w,c
  6478  00EECC  5808               	subwfb	(___fladd@a+3)^0,w,c
  6479  00EECE  6E0C               	movwf	(??___fladd+3)^0,c
  6480  00EED0  0EFF               	movlw	255
  6481  00EED2  2409               	addwf	??___fladd^0,w,c
  6482  00EED4  6E01               	movwf	___fladd@b^0,c
  6483  00EED6  0EFF               	movlw	255
  6484  00EED8  200A               	addwfc	(??___fladd+1)^0,w,c
  6485  00EEDA  6E02               	movwf	(___fladd@b+1)^0,c
  6486  00EEDC  0EFF               	movlw	255
  6487  00EEDE  200B               	addwfc	(??___fladd+2)^0,w,c
  6488  00EEE0  6E03               	movwf	(___fladd@b+2)^0,c
  6489  00EEE2  0EFF               	movlw	255
  6490  00EEE4  200C               	addwfc	(??___fladd+3)^0,w,c
  6491  00EEE6  6E04               	movwf	(___fladd@b+3)^0,c
  6492  00EEE8  0E80               	movlw	128
  6493  00EEEA  1A0D               	xorwf	___fladd@signs^0,f,c
  6494  00EEEC  6C10               	negf	___fladd@grs^0,c
  6495  00EEEE  5010               	movf	___fladd@grs^0,w,c
  6496  00EEF0  A4D8               	btfss	status,2,c
  6497  00EEF2  EF7D  F077         	goto	u3681
  6498  00EEF6  EF7F  F077         	goto	u3680
  6499  00EEFA                     u3681:
  6500  00EEFA  EF8F  F077         	goto	l1406
  6501  00EEFE                     u3680:
  6502  00EEFE  0E01               	movlw	1
  6503  00EF00  2601               	addwf	___fladd@b^0,f,c
  6504  00EF02  0E00               	movlw	0
  6505  00EF04  2202               	addwfc	(___fladd@b+1)^0,f,c
  6506  00EF06  2203               	addwfc	(___fladd@b+2)^0,f,c
  6507  00EF08  2204               	addwfc	(___fladd@b+3)^0,f,c
  6508  00EF0A  EF8F  F077         	goto	l1406
  6509  00EF0E                     l4851:
  6510  00EF0E  5005               	movf	___fladd@a^0,w,c
  6511  00EF10  5E01               	subwf	___fladd@b^0,f,c
  6512  00EF12  5006               	movf	(___fladd@a+1)^0,w,c
  6513  00EF14  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6514  00EF16  5007               	movf	(___fladd@a+2)^0,w,c
  6515  00EF18  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6516  00EF1A  5008               	movf	(___fladd@a+3)^0,w,c
  6517  00EF1C  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6518  00EF1E                     l1406:
  6519  00EF1E  5001               	movf	___fladd@b^0,w,c
  6520  00EF20  1002               	iorwf	(___fladd@b+1)^0,w,c
  6521  00EF22  1003               	iorwf	(___fladd@b+2)^0,w,c
  6522  00EF24  1004               	iorwf	(___fladd@b+3)^0,w,c
  6523  00EF26  A4D8               	btfss	status,2,c
  6524  00EF28  EF98  F077         	goto	u3691
  6525  00EF2C  EF9A  F077         	goto	u3690
  6526  00EF30                     u3691:
  6527  00EF30  EFCF  F077         	goto	l4875
  6528  00EF34                     u3690:
  6529  00EF34  5010               	movf	___fladd@grs^0,w,c
  6530  00EF36  A4D8               	btfss	status,2,c
  6531  00EF38  EFA0  F077         	goto	u3701
  6532  00EF3C  EFA2  F077         	goto	u3700
  6533  00EF40                     u3701:
  6534  00EF40  EFCF  F077         	goto	l4875
  6535  00EF44                     u3700:
  6536  00EF44  0E00               	movlw	0
  6537  00EF46  6E01               	movwf	?___fladd^0,c
  6538  00EF48  0E00               	movlw	0
  6539  00EF4A  6E02               	movwf	(?___fladd+1)^0,c
  6540  00EF4C  0E00               	movlw	0
  6541  00EF4E  6E03               	movwf	(?___fladd+2)^0,c
  6542  00EF50  0E00               	movlw	0
  6543  00EF52  6E04               	movwf	(?___fladd+3)^0,c
  6544  00EF54  EF6A  F078         	goto	l1398
  6545  00EF58                     l4859:
  6546  00EF58  90D8               	bcf	status,0,c
  6547  00EF5A  3601               	rlcf	___fladd@b^0,f,c
  6548  00EF5C  3602               	rlcf	(___fladd@b+1)^0,f,c
  6549  00EF5E  3603               	rlcf	(___fladd@b+2)^0,f,c
  6550  00EF60  3604               	rlcf	(___fladd@b+3)^0,f,c
  6551  00EF62  AE10               	btfss	___fladd@grs^0,7,c
  6552  00EF64  EFB6  F077         	goto	u3711
  6553  00EF68  EFB8  F077         	goto	u3710
  6554  00EF6C                     u3711:
  6555  00EF6C  EFB9  F077         	goto	l4865
  6556  00EF70                     u3710:
  6557  00EF70  8001               	bsf	___fladd@b^0,0,c
  6558  00EF72                     l4865:
  6559  00EF72  A010               	btfss	___fladd@grs^0,0,c
  6560  00EF74  EFBE  F077         	goto	u3721
  6561  00EF78  EFC0  F077         	goto	u3720
  6562  00EF7C                     u3721:
  6563  00EF7C  EFC4  F077         	goto	l4869
  6564  00EF80                     u3720:
  6565  00EF80  80D8               	bsf	status,0,c
  6566  00EF82  3610               	rlcf	___fladd@grs^0,f,c
  6567  00EF84  EFC6  F077         	goto	l4871
  6568  00EF88                     l4869:
  6569  00EF88  90D8               	bcf	status,0,c
  6570  00EF8A  3610               	rlcf	___fladd@grs^0,f,c
  6571  00EF8C                     l4871:
  6572  00EF8C  500F               	movf	___fladd@bexp^0,w,c
  6573  00EF8E  B4D8               	btfsc	status,2,c
  6574  00EF90  EFCC  F077         	goto	u3731
  6575  00EF94  EFCE  F077         	goto	u3730
  6576  00EF98                     u3731:
  6577  00EF98  EFCF  F077         	goto	l4875
  6578  00EF9C                     u3730:
  6579  00EF9C  060F               	decf	___fladd@bexp^0,f,c
  6580  00EF9E                     l4875:
  6581  00EF9E  AE03               	btfss	(___fladd@b+2)^0,7,c
  6582  00EFA0  EFD4  F077         	goto	u3741
  6583  00EFA4  EFD6  F077         	goto	u3740
  6584  00EFA8                     u3741:
  6585  00EFA8  EFAC  F077         	goto	l4859
  6586  00EFAC                     u3740:
  6587  00EFAC                     l4877:
  6588  00EFAC  0E00               	movlw	0
  6589  00EFAE  6E0E               	movwf	___fladd@aexp^0,c
  6590  00EFB0  AE10               	btfss	___fladd@grs^0,7,c
  6591  00EFB2  EFDD  F077         	goto	u3751
  6592  00EFB6  EFDF  F077         	goto	u3750
  6593  00EFBA                     u3751:
  6594  00EFBA  EFF7  F077         	goto	l1415
  6595  00EFBE                     u3750:
  6596  00EFBE  C010  F009         	movff	___fladd@grs,??___fladd
  6597  00EFC2  0E7F               	movlw	127
  6598  00EFC4  1609               	andwf	??___fladd^0,f,c
  6599  00EFC6  B4D8               	btfsc	status,2,c
  6600  00EFC8  EFE8  F077         	goto	u3761
  6601  00EFCC  EFEA  F077         	goto	u3760
  6602  00EFD0                     u3761:
  6603  00EFD0  EFEE  F077         	goto	l1416
  6604  00EFD4                     u3760:
  6605  00EFD4                     l4883:
  6606  00EFD4  0E01               	movlw	1
  6607  00EFD6  6E0E               	movwf	___fladd@aexp^0,c
  6608  00EFD8  EFF7  F077         	goto	l1415
  6609  00EFDC                     l1416:
  6610  00EFDC  A001               	btfss	___fladd@b^0,0,c
  6611  00EFDE  EFF3  F077         	goto	u3771
  6612  00EFE2  EFF5  F077         	goto	u3770
  6613  00EFE6                     u3771:
  6614  00EFE6  EFF7  F077         	goto	l1415
  6615  00EFEA                     u3770:
  6616  00EFEA  EFEA  F077         	goto	l4883
  6617  00EFEE                     l1415:
  6618  00EFEE  500E               	movf	___fladd@aexp^0,w,c
  6619  00EFF0  B4D8               	btfsc	status,2,c
  6620  00EFF2  EFFD  F077         	goto	u3781
  6621  00EFF6  EFFF  F077         	goto	u3780
  6622  00EFFA                     u3781:
  6623  00EFFA  EF2A  F078         	goto	l4895
  6624  00EFFE                     u3780:
  6625  00EFFE  0E01               	movlw	1
  6626  00F000  2601               	addwf	___fladd@b^0,f,c
  6627  00F002  0E00               	movlw	0
  6628  00F004  2202               	addwfc	(___fladd@b+1)^0,f,c
  6629  00F006  2203               	addwfc	(___fladd@b+2)^0,f,c
  6630  00F008  2204               	addwfc	(___fladd@b+3)^0,f,c
  6631  00F00A  A004               	btfss	(___fladd@b+3)^0,0,c
  6632  00F00C  EF0A  F078         	goto	u3791
  6633  00F010  EF0C  F078         	goto	u3790
  6634  00F014                     u3791:
  6635  00F014  EF2A  F078         	goto	l4895
  6636  00F018                     u3790:
  6637  00F018  C001  F009         	movff	___fladd@b,??___fladd
  6638  00F01C  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6639  00F020  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6640  00F024  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6641  00F028  340C               	rlcf	(??___fladd+3)^0,w,c
  6642  00F02A  320C               	rrcf	(??___fladd+3)^0,f,c
  6643  00F02C  320B               	rrcf	(??___fladd+2)^0,f,c
  6644  00F02E  320A               	rrcf	(??___fladd+1)^0,f,c
  6645  00F030  3209               	rrcf	??___fladd^0,f,c
  6646  00F032  C009  F001         	movff	??___fladd,___fladd@b
  6647  00F036  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6648  00F03A  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6649  00F03E  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6650  00F042  280F               	incf	___fladd@bexp^0,w,c
  6651  00F044  B4D8               	btfsc	status,2,c
  6652  00F046  EF27  F078         	goto	u3801
  6653  00F04A  EF29  F078         	goto	u3800
  6654  00F04E                     u3801:
  6655  00F04E  EF2A  F078         	goto	l4895
  6656  00F052                     u3800:
  6657  00F052  2A0F               	incf	___fladd@bexp^0,f,c
  6658  00F054                     l4895:
  6659  00F054  280F               	incf	___fladd@bexp^0,w,c
  6660  00F056  B4D8               	btfsc	status,2,c
  6661  00F058  EF30  F078         	goto	u3811
  6662  00F05C  EF32  F078         	goto	u3810
  6663  00F060                     u3811:
  6664  00F060  EF3A  F078         	goto	l4899
  6665  00F064                     u3810:
  6666  00F064  500F               	movf	___fladd@bexp^0,w,c
  6667  00F066  A4D8               	btfss	status,2,c
  6668  00F068  EF38  F078         	goto	u3821
  6669  00F06C  EF3A  F078         	goto	u3820
  6670  00F070                     u3821:
  6671  00F070  EF4C  F078         	goto	l4903
  6672  00F074                     u3820:
  6673  00F074                     l4899:
  6674  00F074  0E00               	movlw	0
  6675  00F076  6E01               	movwf	___fladd@b^0,c
  6676  00F078  0E00               	movlw	0
  6677  00F07A  6E02               	movwf	(___fladd@b+1)^0,c
  6678  00F07C  0E00               	movlw	0
  6679  00F07E  6E03               	movwf	(___fladd@b+2)^0,c
  6680  00F080  0E00               	movlw	0
  6681  00F082  6E04               	movwf	(___fladd@b+3)^0,c
  6682  00F084  500F               	movf	___fladd@bexp^0,w,c
  6683  00F086  A4D8               	btfss	status,2,c
  6684  00F088  EF48  F078         	goto	u3831
  6685  00F08C  EF4A  F078         	goto	u3830
  6686  00F090                     u3831:
  6687  00F090  EF4C  F078         	goto	l4903
  6688  00F094                     u3830:
  6689  00F094  0E00               	movlw	0
  6690  00F096  6E0D               	movwf	___fladd@signs^0,c
  6691  00F098                     l4903:
  6692  00F098  A00F               	btfss	___fladd@bexp^0,0,c
  6693  00F09A  EF51  F078         	goto	u3841
  6694  00F09E  EF53  F078         	goto	u3840
  6695  00F0A2                     u3841:
  6696  00F0A2  EF56  F078         	goto	l4907
  6697  00F0A6                     u3840:
  6698  00F0A6  8E03               	bsf	(___fladd@b+2)^0,7,c
  6699  00F0A8  EF57  F078         	goto	l4909
  6700  00F0AC                     l4907:
  6701  00F0AC  9E03               	bcf	(___fladd@b+2)^0,7,c
  6702  00F0AE                     l4909:
  6703  00F0AE  90D8               	bcf	status,0,c
  6704  00F0B0  300F               	rrcf	___fladd@bexp^0,w,c
  6705  00F0B2  6E04               	movwf	(___fladd@b+3)^0,c
  6706  00F0B4  AE0D               	btfss	___fladd@signs^0,7,c
  6707  00F0B6  EF5F  F078         	goto	u3851
  6708  00F0BA  EF61  F078         	goto	u3850
  6709  00F0BE                     u3851:
  6710  00F0BE  EF62  F078         	goto	l4915
  6711  00F0C2                     u3850:
  6712  00F0C2  8E04               	bsf	(___fladd@b+3)^0,7,c
  6713  00F0C4                     l4915:
  6714  00F0C4  C001  F001         	movff	___fladd@b,?___fladd
  6715  00F0C8  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6716  00F0CC  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6717  00F0D0  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6718  00F0D4                     l1398:
  6719  00F0D4  0012               	return		;funcret
  6720  00F0D6                     __end_of___fladd:
  6721                           	callstack 0
  6722                           
  6723 ;; *************** function ___flneg *****************
  6724 ;; Defined at:
  6725 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flneg.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  f1              4    0[COMRAM] unsigned char 
  6728 ;; Auto vars:     Size  Location     Type
  6729 ;;		None
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  4    0[COMRAM] unsigned char 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6742 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6743 ;;Total ram usage:        4 bytes
  6744 ;; Hardware stack levels used: 1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_efgtoa
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           	psect	text19
  6753  00C450                     __ptext19:
  6754                           	callstack 0
  6755  00C450                     ___flneg:
  6756                           	callstack 26
  6757  00C450  5001               	movf	___flneg@f1^0,w,c
  6758  00C452  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6759  00C454  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6760  00C456  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6761  00C458  B4D8               	btfsc	status,2,c
  6762  00C45A  EF31  F062         	goto	u4541
  6763  00C45E  EF33  F062         	goto	u4540
  6764  00C462                     u4541:
  6765  00C462  EF3B  F062         	goto	l5411
  6766  00C466                     u4540:
  6767  00C466  0E00               	movlw	0
  6768  00C468  1A01               	xorwf	___flneg@f1^0,f,c
  6769  00C46A  0E00               	movlw	0
  6770  00C46C  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6771  00C46E  0E00               	movlw	0
  6772  00C470  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6773  00C472  0E80               	movlw	128
  6774  00C474  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6775  00C476                     l5411:
  6776  00C476  C001  F001         	movff	___flneg@f1,?___flneg
  6777  00C47A  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6778  00C47E  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6779  00C482  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6780  00C486  0012               	return		;funcret
  6781  00C488                     __end_of___flneg:
  6782                           	callstack 0
  6783                           
  6784 ;; *************** function ___flge *****************
  6785 ;; Defined at:
  6786 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\flge.c"
  6787 ;; Parameters:    Size  Location     Type
  6788 ;;  ff1             4   45[COMRAM] unsigned char 
  6789 ;;  ff2             4   49[COMRAM] unsigned char 
  6790 ;; Auto vars:     Size  Location     Type
  6791 ;;		None
  6792 ;; Return value:  Size  Location     Type
  6793 ;;		None               void
  6794 ;; Registers used:
  6795 ;;		wreg, status,2, status,0
  6796 ;; Tracked objects:
  6797 ;;		On entry : 0/0
  6798 ;;		On exit  : 0/0
  6799 ;;		Unchanged: 0/0
  6800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6801 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6802 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6803 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6804 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6805 ;;Total ram usage:       12 bytes
  6806 ;; Hardware stack levels used: 1
  6807 ;; This function calls:
  6808 ;;		Nothing
  6809 ;; This function is called by:
  6810 ;;		_efgtoa
  6811 ;; This function uses a non-reentrant model
  6812 ;;
  6813                           
  6814                           	psect	text20
  6815  00D6A0                     __ptext20:
  6816                           	callstack 0
  6817  00D6A0                     ___flge:
  6818                           	callstack 26
  6819  00D6A0  0E00               	movlw	0
  6820  00D6A2  142E               	andwf	___flge@ff1^0,w,c
  6821  00D6A4  6E36               	movwf	??___flge^0,c
  6822  00D6A6  0E00               	movlw	0
  6823  00D6A8  142F               	andwf	(___flge@ff1+1)^0,w,c
  6824  00D6AA  6E37               	movwf	(??___flge+1)^0,c
  6825  00D6AC  0E80               	movlw	128
  6826  00D6AE  1430               	andwf	(___flge@ff1+2)^0,w,c
  6827  00D6B0  6E38               	movwf	(??___flge+2)^0,c
  6828  00D6B2  0E7F               	movlw	127
  6829  00D6B4  1431               	andwf	(___flge@ff1+3)^0,w,c
  6830  00D6B6  6E39               	movwf	(??___flge+3)^0,c
  6831  00D6B8  5036               	movf	??___flge^0,w,c
  6832  00D6BA  1037               	iorwf	(??___flge+1)^0,w,c
  6833  00D6BC  1038               	iorwf	(??___flge+2)^0,w,c
  6834  00D6BE  1039               	iorwf	(??___flge+3)^0,w,c
  6835  00D6C0  A4D8               	btfss	status,2,c
  6836  00D6C2  EF65  F06B         	goto	u4491
  6837  00D6C6  EF67  F06B         	goto	u4490
  6838  00D6CA                     u4491:
  6839  00D6CA  EF6F  F06B         	goto	l5389
  6840  00D6CE                     u4490:
  6841  00D6CE  0E00               	movlw	0
  6842  00D6D0  6E2E               	movwf	___flge@ff1^0,c
  6843  00D6D2  0E00               	movlw	0
  6844  00D6D4  6E2F               	movwf	(___flge@ff1+1)^0,c
  6845  00D6D6  0E00               	movlw	0
  6846  00D6D8  6E30               	movwf	(___flge@ff1+2)^0,c
  6847  00D6DA  0E00               	movlw	0
  6848  00D6DC  6E31               	movwf	(___flge@ff1+3)^0,c
  6849  00D6DE                     l5389:
  6850  00D6DE  0E00               	movlw	0
  6851  00D6E0  1432               	andwf	___flge@ff2^0,w,c
  6852  00D6E2  6E36               	movwf	??___flge^0,c
  6853  00D6E4  0E00               	movlw	0
  6854  00D6E6  1433               	andwf	(___flge@ff2+1)^0,w,c
  6855  00D6E8  6E37               	movwf	(??___flge+1)^0,c
  6856  00D6EA  0E80               	movlw	128
  6857  00D6EC  1434               	andwf	(___flge@ff2+2)^0,w,c
  6858  00D6EE  6E38               	movwf	(??___flge+2)^0,c
  6859  00D6F0  0E7F               	movlw	127
  6860  00D6F2  1435               	andwf	(___flge@ff2+3)^0,w,c
  6861  00D6F4  6E39               	movwf	(??___flge+3)^0,c
  6862  00D6F6  5036               	movf	??___flge^0,w,c
  6863  00D6F8  1037               	iorwf	(??___flge+1)^0,w,c
  6864  00D6FA  1038               	iorwf	(??___flge+2)^0,w,c
  6865  00D6FC  1039               	iorwf	(??___flge+3)^0,w,c
  6866  00D6FE  A4D8               	btfss	status,2,c
  6867  00D700  EF84  F06B         	goto	u4501
  6868  00D704  EF86  F06B         	goto	u4500
  6869  00D708                     u4501:
  6870  00D708  EF8E  F06B         	goto	l5393
  6871  00D70C                     u4500:
  6872  00D70C  0E00               	movlw	0
  6873  00D70E  6E32               	movwf	___flge@ff2^0,c
  6874  00D710  0E00               	movlw	0
  6875  00D712  6E33               	movwf	(___flge@ff2+1)^0,c
  6876  00D714  0E00               	movlw	0
  6877  00D716  6E34               	movwf	(___flge@ff2+2)^0,c
  6878  00D718  0E00               	movlw	0
  6879  00D71A  6E35               	movwf	(___flge@ff2+3)^0,c
  6880  00D71C                     l5393:
  6881  00D71C  AE31               	btfss	(___flge@ff1+3)^0,7,c
  6882  00D71E  EF93  F06B         	goto	u4511
  6883  00D722  EF95  F06B         	goto	u4510
  6884  00D726                     u4511:
  6885  00D726  EF9E  F06B         	goto	l5397
  6886  00D72A                     u4510:
  6887  00D72A  6C2E               	negf	___flge@ff1^0,c
  6888  00D72C  1E2F               	comf	(___flge@ff1+1)^0,f,c
  6889  00D72E  B0D8               	btfsc	status,0,c
  6890  00D730  2A2F               	incf	(___flge@ff1+1)^0,f,c
  6891  00D732  1E30               	comf	(___flge@ff1+2)^0,f,c
  6892  00D734  B0D8               	btfsc	status,0,c
  6893  00D736  2A30               	incf	(___flge@ff1+2)^0,f,c
  6894  00D738  0E80               	movlw	128
  6895  00D73A  5631               	subfwb	(___flge@ff1+3)^0,f,c
  6896  00D73C                     l5397:
  6897  00D73C  AE35               	btfss	(___flge@ff2+3)^0,7,c
  6898  00D73E  EFA3  F06B         	goto	u4521
  6899  00D742  EFA5  F06B         	goto	u4520
  6900  00D746                     u4521:
  6901  00D746  EFAE  F06B         	goto	l1126
  6902  00D74A                     u4520:
  6903  00D74A  6C32               	negf	___flge@ff2^0,c
  6904  00D74C  1E33               	comf	(___flge@ff2+1)^0,f,c
  6905  00D74E  B0D8               	btfsc	status,0,c
  6906  00D750  2A33               	incf	(___flge@ff2+1)^0,f,c
  6907  00D752  1E34               	comf	(___flge@ff2+2)^0,f,c
  6908  00D754  B0D8               	btfsc	status,0,c
  6909  00D756  2A34               	incf	(___flge@ff2+2)^0,f,c
  6910  00D758  0E80               	movlw	128
  6911  00D75A  5635               	subfwb	(___flge@ff2+3)^0,f,c
  6912  00D75C                     l1126:
  6913  00D75C  0E00               	movlw	0
  6914  00D75E  1A2E               	xorwf	___flge@ff1^0,f,c
  6915  00D760  0E00               	movlw	0
  6916  00D762  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  6917  00D764  0E00               	movlw	0
  6918  00D766  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  6919  00D768  0E80               	movlw	128
  6920  00D76A  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  6921  00D76C  0E00               	movlw	0
  6922  00D76E  1A32               	xorwf	___flge@ff2^0,f,c
  6923  00D770  0E00               	movlw	0
  6924  00D772  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  6925  00D774  0E00               	movlw	0
  6926  00D776  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  6927  00D778  0E80               	movlw	128
  6928  00D77A  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  6929  00D77C  5032               	movf	___flge@ff2^0,w,c
  6930  00D77E  5C2E               	subwf	___flge@ff1^0,w,c
  6931  00D780  5033               	movf	(___flge@ff2+1)^0,w,c
  6932  00D782  582F               	subwfb	(___flge@ff1+1)^0,w,c
  6933  00D784  5034               	movf	(___flge@ff2+2)^0,w,c
  6934  00D786  5830               	subwfb	(___flge@ff1+2)^0,w,c
  6935  00D788  5035               	movf	(___flge@ff2+3)^0,w,c
  6936  00D78A  5831               	subwfb	(___flge@ff1+3)^0,w,c
  6937  00D78C  B0D8               	btfsc	status,0,c
  6938  00D78E  EFCB  F06B         	goto	u4531
  6939  00D792  EFCD  F06B         	goto	u4530
  6940  00D796                     u4531:
  6941  00D796  EFD0  F06B         	goto	l5403
  6942  00D79A                     u4530:
  6943  00D79A  90D8               	bcf	status,0,c
  6944  00D79C  EFD1  F06B         	goto	l1131
  6945  00D7A0                     l5403:
  6946  00D7A0  80D8               	bsf	status,0,c
  6947  00D7A2                     l1131:
  6948  00D7A2  0012               	return		;funcret
  6949  00D7A4                     __end_of___flge:
  6950                           	callstack 0
  6951                           
  6952 ;; *************** function ___fleq *****************
  6953 ;; Defined at:
  6954 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\fleq.c"
  6955 ;; Parameters:    Size  Location     Type
  6956 ;;  ff1             4    0[COMRAM] unsigned char 
  6957 ;;  ff2             4    4[COMRAM] unsigned char 
  6958 ;; Auto vars:     Size  Location     Type
  6959 ;;		None
  6960 ;; Return value:  Size  Location     Type
  6961 ;;		None               void
  6962 ;; Registers used:
  6963 ;;		wreg, status,2, status,0
  6964 ;; Tracked objects:
  6965 ;;		On entry : 0/0
  6966 ;;		On exit  : 0/0
  6967 ;;		Unchanged: 0/0
  6968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6969 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6970 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6971 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6972 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6973 ;;Total ram usage:       12 bytes
  6974 ;; Hardware stack levels used: 1
  6975 ;; This function calls:
  6976 ;;		Nothing
  6977 ;; This function is called by:
  6978 ;;		_efgtoa
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text21
  6983  00CD5E                     __ptext21:
  6984                           	callstack 0
  6985  00CD5E                     ___fleq:
  6986                           	callstack 26
  6987  00CD5E  0E00               	movlw	0
  6988  00CD60  1401               	andwf	___fleq@ff1^0,w,c
  6989  00CD62  6E09               	movwf	??___fleq^0,c
  6990  00CD64  0E00               	movlw	0
  6991  00CD66  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6992  00CD68  6E0A               	movwf	(??___fleq+1)^0,c
  6993  00CD6A  0E80               	movlw	128
  6994  00CD6C  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6995  00CD6E  6E0B               	movwf	(??___fleq+2)^0,c
  6996  00CD70  0E7F               	movlw	127
  6997  00CD72  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6998  00CD74  6E0C               	movwf	(??___fleq+3)^0,c
  6999  00CD76  5009               	movf	??___fleq^0,w,c
  7000  00CD78  100A               	iorwf	(??___fleq+1)^0,w,c
  7001  00CD7A  100B               	iorwf	(??___fleq+2)^0,w,c
  7002  00CD7C  100C               	iorwf	(??___fleq+3)^0,w,c
  7003  00CD7E  A4D8               	btfss	status,2,c
  7004  00CD80  EFC4  F066         	goto	u4461
  7005  00CD84  EFC6  F066         	goto	u4460
  7006  00CD88                     u4461:
  7007  00CD88  EFCE  F066         	goto	l5373
  7008  00CD8C                     u4460:
  7009  00CD8C  0E00               	movlw	0
  7010  00CD8E  6E01               	movwf	___fleq@ff1^0,c
  7011  00CD90  0E00               	movlw	0
  7012  00CD92  6E02               	movwf	(___fleq@ff1+1)^0,c
  7013  00CD94  0E00               	movlw	0
  7014  00CD96  6E03               	movwf	(___fleq@ff1+2)^0,c
  7015  00CD98  0E00               	movlw	0
  7016  00CD9A  6E04               	movwf	(___fleq@ff1+3)^0,c
  7017  00CD9C                     l5373:
  7018  00CD9C  0E00               	movlw	0
  7019  00CD9E  1405               	andwf	___fleq@ff2^0,w,c
  7020  00CDA0  6E09               	movwf	??___fleq^0,c
  7021  00CDA2  0E00               	movlw	0
  7022  00CDA4  1406               	andwf	(___fleq@ff2+1)^0,w,c
  7023  00CDA6  6E0A               	movwf	(??___fleq+1)^0,c
  7024  00CDA8  0E80               	movlw	128
  7025  00CDAA  1407               	andwf	(___fleq@ff2+2)^0,w,c
  7026  00CDAC  6E0B               	movwf	(??___fleq+2)^0,c
  7027  00CDAE  0E7F               	movlw	127
  7028  00CDB0  1408               	andwf	(___fleq@ff2+3)^0,w,c
  7029  00CDB2  6E0C               	movwf	(??___fleq+3)^0,c
  7030  00CDB4  5009               	movf	??___fleq^0,w,c
  7031  00CDB6  100A               	iorwf	(??___fleq+1)^0,w,c
  7032  00CDB8  100B               	iorwf	(??___fleq+2)^0,w,c
  7033  00CDBA  100C               	iorwf	(??___fleq+3)^0,w,c
  7034  00CDBC  A4D8               	btfss	status,2,c
  7035  00CDBE  EFE3  F066         	goto	u4471
  7036  00CDC2  EFE5  F066         	goto	u4470
  7037  00CDC6                     u4471:
  7038  00CDC6  EFED  F066         	goto	l5377
  7039  00CDCA                     u4470:
  7040  00CDCA  0E00               	movlw	0
  7041  00CDCC  6E05               	movwf	___fleq@ff2^0,c
  7042  00CDCE  0E00               	movlw	0
  7043  00CDD0  6E06               	movwf	(___fleq@ff2+1)^0,c
  7044  00CDD2  0E00               	movlw	0
  7045  00CDD4  6E07               	movwf	(___fleq@ff2+2)^0,c
  7046  00CDD6  0E00               	movlw	0
  7047  00CDD8  6E08               	movwf	(___fleq@ff2+3)^0,c
  7048  00CDDA                     l5377:
  7049  00CDDA  5005               	movf	___fleq@ff2^0,w,c
  7050  00CDDC  1801               	xorwf	___fleq@ff1^0,w,c
  7051  00CDDE  E10F               	bnz	u4480
  7052  00CDE0  5006               	movf	(___fleq@ff2+1)^0,w,c
  7053  00CDE2  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  7054  00CDE4  E10C               	bnz	u4480
  7055  00CDE6  5007               	movf	(___fleq@ff2+2)^0,w,c
  7056  00CDE8  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  7057  00CDEA  E109               	bnz	u4480
  7058  00CDEC  5008               	movf	(___fleq@ff2+3)^0,w,c
  7059  00CDEE  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  7060  00CDF0  B4D8               	btfsc	status,2,c
  7061  00CDF2  EFFD  F066         	goto	u4481
  7062  00CDF6  EFFF  F066         	goto	u4480
  7063  00CDFA                     u4481:
  7064  00CDFA  EF02  F067         	goto	l5381
  7065  00CDFE                     u4480:
  7066  00CDFE  90D8               	bcf	status,0,c
  7067  00CE00  EF03  F067         	goto	l1120
  7068  00CE04                     l5381:
  7069  00CE04  80D8               	bsf	status,0,c
  7070  00CE06                     l1120:
  7071  00CE06  0012               	return		;funcret
  7072  00CE08                     __end_of___fleq:
  7073                           	callstack 0
  7074                           
  7075 ;; *************** function ___awmod *****************
  7076 ;; Defined at:
  7077 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awmod.c"
  7078 ;; Parameters:    Size  Location     Type
  7079 ;;  dividend        2    0[COMRAM] int 
  7080 ;;  divisor         2    2[COMRAM] int 
  7081 ;; Auto vars:     Size  Location     Type
  7082 ;;  sign            1    5[COMRAM] unsigned char 
  7083 ;;  counter         1    4[COMRAM] unsigned char 
  7084 ;; Return value:  Size  Location     Type
  7085 ;;                  2    0[COMRAM] int 
  7086 ;; Registers used:
  7087 ;;		wreg, status,2, status,0
  7088 ;; Tracked objects:
  7089 ;;		On entry : 0/0
  7090 ;;		On exit  : 0/0
  7091 ;;		Unchanged: 0/0
  7092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7093 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7094 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7095 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7097 ;;Total ram usage:        6 bytes
  7098 ;; Hardware stack levels used: 1
  7099 ;; This function calls:
  7100 ;;		Nothing
  7101 ;; This function is called by:
  7102 ;;		_efgtoa
  7103 ;; This function uses a non-reentrant model
  7104 ;;
  7105                           
  7106                           	psect	text22
  7107  00CE08                     __ptext22:
  7108                           	callstack 0
  7109  00CE08                     ___awmod:
  7110                           	callstack 26
  7111  00CE08  0E00               	movlw	0
  7112  00CE0A  6E06               	movwf	___awmod@sign^0,c
  7113  00CE0C  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  7114  00CE0E  EF0D  F067         	goto	u4400
  7115  00CE12  EF0B  F067         	goto	u4401
  7116  00CE16                     u4401:
  7117  00CE16  EF13  F067         	goto	l5341
  7118  00CE1A                     u4400:
  7119  00CE1A  6C01               	negf	___awmod@dividend^0,c
  7120  00CE1C  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7121  00CE1E  B0D8               	btfsc	status,0,c
  7122  00CE20  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7123  00CE22  0E01               	movlw	1
  7124  00CE24  6E06               	movwf	___awmod@sign^0,c
  7125  00CE26                     l5341:
  7126  00CE26  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  7127  00CE28  EF1A  F067         	goto	u4410
  7128  00CE2C  EF18  F067         	goto	u4411
  7129  00CE30                     u4411:
  7130  00CE30  EF1E  F067         	goto	l5345
  7131  00CE34                     u4410:
  7132  00CE34  6C03               	negf	___awmod@divisor^0,c
  7133  00CE36  1E04               	comf	(___awmod@divisor+1)^0,f,c
  7134  00CE38  B0D8               	btfsc	status,0,c
  7135  00CE3A  2A04               	incf	(___awmod@divisor+1)^0,f,c
  7136  00CE3C                     l5345:
  7137  00CE3C  5003               	movf	___awmod@divisor^0,w,c
  7138  00CE3E  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  7139  00CE40  B4D8               	btfsc	status,2,c
  7140  00CE42  EF25  F067         	goto	u4421
  7141  00CE46  EF27  F067         	goto	u4420
  7142  00CE4A                     u4421:
  7143  00CE4A  EF4B  F067         	goto	l5361
  7144  00CE4E                     u4420:
  7145  00CE4E  0E01               	movlw	1
  7146  00CE50  6E05               	movwf	___awmod@counter^0,c
  7147  00CE52  EF2F  F067         	goto	l5351
  7148  00CE56                     l5349:
  7149  00CE56  90D8               	bcf	status,0,c
  7150  00CE58  3603               	rlcf	___awmod@divisor^0,f,c
  7151  00CE5A  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  7152  00CE5C  2A05               	incf	___awmod@counter^0,f,c
  7153  00CE5E                     l5351:
  7154  00CE5E  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  7155  00CE60  EF34  F067         	goto	u4431
  7156  00CE64  EF36  F067         	goto	u4430
  7157  00CE68                     u4431:
  7158  00CE68  EF2B  F067         	goto	l5349
  7159  00CE6C                     u4430:
  7160  00CE6C                     l5353:
  7161  00CE6C  5003               	movf	___awmod@divisor^0,w,c
  7162  00CE6E  5C01               	subwf	___awmod@dividend^0,w,c
  7163  00CE70  5004               	movf	(___awmod@divisor+1)^0,w,c
  7164  00CE72  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  7165  00CE74  A0D8               	btfss	status,0,c
  7166  00CE76  EF3F  F067         	goto	u4441
  7167  00CE7A  EF41  F067         	goto	u4440
  7168  00CE7E                     u4441:
  7169  00CE7E  EF45  F067         	goto	l5357
  7170  00CE82                     u4440:
  7171  00CE82  5003               	movf	___awmod@divisor^0,w,c
  7172  00CE84  5E01               	subwf	___awmod@dividend^0,f,c
  7173  00CE86  5004               	movf	(___awmod@divisor+1)^0,w,c
  7174  00CE88  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  7175  00CE8A                     l5357:
  7176  00CE8A  90D8               	bcf	status,0,c
  7177  00CE8C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  7178  00CE8E  3203               	rrcf	___awmod@divisor^0,f,c
  7179  00CE90  2E05               	decfsz	___awmod@counter^0,f,c
  7180  00CE92  EF36  F067         	goto	l5353
  7181  00CE96                     l5361:
  7182  00CE96  5006               	movf	___awmod@sign^0,w,c
  7183  00CE98  B4D8               	btfsc	status,2,c
  7184  00CE9A  EF51  F067         	goto	u4451
  7185  00CE9E  EF53  F067         	goto	u4450
  7186  00CEA2                     u4451:
  7187  00CEA2  EF57  F067         	goto	l5365
  7188  00CEA6                     u4450:
  7189  00CEA6  6C01               	negf	___awmod@dividend^0,c
  7190  00CEA8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  7191  00CEAA  B0D8               	btfsc	status,0,c
  7192  00CEAC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  7193  00CEAE                     l5365:
  7194  00CEAE  C001  F001         	movff	___awmod@dividend,?___awmod
  7195  00CEB2  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  7196  00CEB6  0012               	return		;funcret
  7197  00CEB8                     __end_of___awmod:
  7198                           	callstack 0
  7199                           
  7200 ;; *************** function ___awdiv *****************
  7201 ;; Defined at:
  7202 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\awdiv.c"
  7203 ;; Parameters:    Size  Location     Type
  7204 ;;  dividend        2    0[COMRAM] int 
  7205 ;;  divisor         2    2[COMRAM] int 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  quotient        2    6[COMRAM] int 
  7208 ;;  sign            1    5[COMRAM] unsigned char 
  7209 ;;  counter         1    4[COMRAM] unsigned char 
  7210 ;; Return value:  Size  Location     Type
  7211 ;;                  2    0[COMRAM] int 
  7212 ;; Registers used:
  7213 ;;		wreg, status,2, status,0
  7214 ;; Tracked objects:
  7215 ;;		On entry : 0/0
  7216 ;;		On exit  : 0/0
  7217 ;;		Unchanged: 0/0
  7218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7219 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7222 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7223 ;;Total ram usage:        8 bytes
  7224 ;; Hardware stack levels used: 1
  7225 ;; This function calls:
  7226 ;;		Nothing
  7227 ;; This function is called by:
  7228 ;;		_efgtoa
  7229 ;;		_ssd1306_DrawPixel
  7230 ;;		_OLED_DrawPixel
  7231 ;; This function uses a non-reentrant model
  7232 ;;
  7233                           
  7234                           	psect	text23
  7235  00CF7C                     __ptext23:
  7236                           	callstack 0
  7237  00CF7C                     ___awdiv:
  7238                           	callstack 26
  7239  00CF7C  0E00               	movlw	0
  7240  00CF7E  6E06               	movwf	___awdiv@sign^0,c
  7241  00CF80  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7242  00CF82  EFC7  F067         	goto	u4340
  7243  00CF86  EFC5  F067         	goto	u4341
  7244  00CF8A                     u4341:
  7245  00CF8A  EFCD  F067         	goto	l5297
  7246  00CF8E                     u4340:
  7247  00CF8E  6C03               	negf	___awdiv@divisor^0,c
  7248  00CF90  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7249  00CF92  B0D8               	btfsc	status,0,c
  7250  00CF94  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7251  00CF96  0E01               	movlw	1
  7252  00CF98  6E06               	movwf	___awdiv@sign^0,c
  7253  00CF9A                     l5297:
  7254  00CF9A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7255  00CF9C  EFD4  F067         	goto	u4350
  7256  00CFA0  EFD2  F067         	goto	u4351
  7257  00CFA4                     u4351:
  7258  00CFA4  EFDA  F067         	goto	l5303
  7259  00CFA8                     u4350:
  7260  00CFA8  6C01               	negf	___awdiv@dividend^0,c
  7261  00CFAA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7262  00CFAC  B0D8               	btfsc	status,0,c
  7263  00CFAE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7264  00CFB0  0E01               	movlw	1
  7265  00CFB2  1A06               	xorwf	___awdiv@sign^0,f,c
  7266  00CFB4                     l5303:
  7267  00CFB4  0E00               	movlw	0
  7268  00CFB6  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7269  00CFB8  0E00               	movlw	0
  7270  00CFBA  6E07               	movwf	___awdiv@quotient^0,c
  7271  00CFBC  5003               	movf	___awdiv@divisor^0,w,c
  7272  00CFBE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7273  00CFC0  B4D8               	btfsc	status,2,c
  7274  00CFC2  EFE5  F067         	goto	u4361
  7275  00CFC6  EFE7  F067         	goto	u4360
  7276  00CFCA                     u4361:
  7277  00CFCA  EF0F  F068         	goto	l5325
  7278  00CFCE                     u4360:
  7279  00CFCE  0E01               	movlw	1
  7280  00CFD0  6E05               	movwf	___awdiv@counter^0,c
  7281  00CFD2  EFEF  F067         	goto	l5311
  7282  00CFD6                     l5309:
  7283  00CFD6  90D8               	bcf	status,0,c
  7284  00CFD8  3603               	rlcf	___awdiv@divisor^0,f,c
  7285  00CFDA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7286  00CFDC  2A05               	incf	___awdiv@counter^0,f,c
  7287  00CFDE                     l5311:
  7288  00CFDE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7289  00CFE0  EFF4  F067         	goto	u4371
  7290  00CFE4  EFF6  F067         	goto	u4370
  7291  00CFE8                     u4371:
  7292  00CFE8  EFEB  F067         	goto	l5309
  7293  00CFEC                     u4370:
  7294  00CFEC                     l5313:
  7295  00CFEC  90D8               	bcf	status,0,c
  7296  00CFEE  3607               	rlcf	___awdiv@quotient^0,f,c
  7297  00CFF0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7298  00CFF2  5003               	movf	___awdiv@divisor^0,w,c
  7299  00CFF4  5C01               	subwf	___awdiv@dividend^0,w,c
  7300  00CFF6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7301  00CFF8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7302  00CFFA  A0D8               	btfss	status,0,c
  7303  00CFFC  EF02  F068         	goto	u4381
  7304  00D000  EF04  F068         	goto	u4380
  7305  00D004                     u4381:
  7306  00D004  EF09  F068         	goto	l5321
  7307  00D008                     u4380:
  7308  00D008  5003               	movf	___awdiv@divisor^0,w,c
  7309  00D00A  5E01               	subwf	___awdiv@dividend^0,f,c
  7310  00D00C  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7311  00D00E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7312  00D010  8007               	bsf	___awdiv@quotient^0,0,c
  7313  00D012                     l5321:
  7314  00D012  90D8               	bcf	status,0,c
  7315  00D014  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7316  00D016  3203               	rrcf	___awdiv@divisor^0,f,c
  7317  00D018  2E05               	decfsz	___awdiv@counter^0,f,c
  7318  00D01A  EFF6  F067         	goto	l5313
  7319  00D01E                     l5325:
  7320  00D01E  5006               	movf	___awdiv@sign^0,w,c
  7321  00D020  B4D8               	btfsc	status,2,c
  7322  00D022  EF15  F068         	goto	u4391
  7323  00D026  EF17  F068         	goto	u4390
  7324  00D02A                     u4391:
  7325  00D02A  EF1B  F068         	goto	l5329
  7326  00D02E                     u4390:
  7327  00D02E  6C07               	negf	___awdiv@quotient^0,c
  7328  00D030  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7329  00D032  B0D8               	btfsc	status,0,c
  7330  00D034  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7331  00D036                     l5329:
  7332  00D036  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7333  00D03A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7334  00D03E  0012               	return		;funcret
  7335  00D040                     __end_of___awdiv:
  7336                           	callstack 0
  7337                           
  7338 ;; *************** function _atoi *****************
  7339 ;; Defined at:
  7340 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\atoi.c"
  7341 ;; Parameters:    Size  Location     Type
  7342 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7343 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  7344 ;; Auto vars:     Size  Location     Type
  7345 ;;  n               2   20[COMRAM] int 
  7346 ;;  neg             2   13[COMRAM] int 
  7347 ;; Return value:  Size  Location     Type
  7348 ;;                  2    7[COMRAM] int 
  7349 ;; Registers used:
  7350 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7351 ;; Tracked objects:
  7352 ;;		On entry : 0/0
  7353 ;;		On exit  : 0/0
  7354 ;;		Unchanged: 0/0
  7355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7357 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7358 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7359 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7360 ;;Total ram usage:       15 bytes
  7361 ;; Hardware stack levels used: 1
  7362 ;; Hardware stack levels required when called: 1
  7363 ;; This function calls:
  7364 ;;		___wmul
  7365 ;;		_isdigit
  7366 ;;		_isspace
  7367 ;; This function is called by:
  7368 ;;		_vfpfcnvrt
  7369 ;; This function uses a non-reentrant model
  7370 ;;
  7371                           
  7372                           	psect	text24
  7373  00D8AA                     __ptext24:
  7374                           	callstack 0
  7375  00D8AA                     _atoi:
  7376                           	callstack 26
  7377  00D8AA  0E00               	movlw	0
  7378  00D8AC  6E16               	movwf	(atoi@n+1)^0,c
  7379  00D8AE  0E00               	movlw	0
  7380  00D8B0  6E15               	movwf	atoi@n^0,c
  7381  00D8B2  0E00               	movlw	0
  7382  00D8B4  6E0F               	movwf	(atoi@neg+1)^0,c
  7383  00D8B6  0E00               	movlw	0
  7384  00D8B8  6E0E               	movwf	atoi@neg^0,c
  7385  00D8BA  EF61  F06C         	goto	l5885
  7386  00D8BE                     l5883:
  7387  00D8BE  4A08               	infsnz	atoi@s^0,f,c
  7388  00D8C0  2A09               	incf	(atoi@s+1)^0,f,c
  7389  00D8C2                     l5885:
  7390  00D8C2  0E01               	movlw	1
  7391  00D8C4  6E14               	movwf	_atoi$2245^0,c
  7392  00D8C6  C008  FFF6         	movff	atoi@s,tblptrl
  7393  00D8CA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7394  00D8CE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7395  00D8CE  6AF8               	clrf	tblptru,c
  7396  00D8D0                     	endif
  7397  00D8D0                     	if	0	;tblptru may be non-zero
  7398  00D8D0                     	endif
  7399  00D8D0  0008               	tblrd		*
  7400  00D8D2  50F5               	movf	tablat,w,c
  7401  00D8D4  0A20               	xorlw	32
  7402  00D8D6  B4D8               	btfsc	status,2,c
  7403  00D8D8  EF70  F06C         	goto	u5481
  7404  00D8DC  EF72  F06C         	goto	u5480
  7405  00D8E0                     u5481:
  7406  00D8E0  EF90  F06C         	goto	l5893
  7407  00D8E4                     u5480:
  7408  00D8E4  0EF7               	movlw	247
  7409  00D8E6  6E0A               	movwf	??_atoi^0,c
  7410  00D8E8  0EFF               	movlw	255
  7411  00D8EA  6E0B               	movwf	(??_atoi+1)^0,c
  7412  00D8EC  C008  FFF6         	movff	atoi@s,tblptrl
  7413  00D8F0  C009  FFF7         	movff	atoi@s+1,tblptrh
  7414  00D8F4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7415  00D8F4  6AF8               	clrf	tblptru,c
  7416  00D8F6                     	endif
  7417  00D8F6                     	if	0	;tblptru may be non-zero
  7418  00D8F6                     	endif
  7419  00D8F6  0008               	tblrd		*
  7420  00D8F8  50F5               	movf	tablat,w,c
  7421  00D8FA  6E0C               	movwf	(??_atoi+2)^0,c
  7422  00D8FC  6A0D               	clrf	(??_atoi+3)^0,c
  7423  00D8FE  500A               	movf	??_atoi^0,w,c
  7424  00D900  260C               	addwf	(??_atoi+2)^0,f,c
  7425  00D902  500B               	movf	(??_atoi+1)^0,w,c
  7426  00D904  220D               	addwfc	(??_atoi+3)^0,f,c
  7427  00D906  500D               	movf	(??_atoi+3)^0,w,c
  7428  00D908  E109               	bnz	u5490
  7429  00D90A  0E05               	movlw	5
  7430  00D90C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7431  00D90E  A0D8               	btfss	status,0,c
  7432  00D910  EF8C  F06C         	goto	u5491
  7433  00D914  EF8E  F06C         	goto	u5490
  7434  00D918                     u5491:
  7435  00D918  EF90  F06C         	goto	l5893
  7436  00D91C                     u5490:
  7437  00D91C  0E00               	movlw	0
  7438  00D91E  6E14               	movwf	_atoi$2245^0,c
  7439  00D920                     l5893:
  7440  00D920  C014  F010         	movff	_atoi$2245,_atoi$2244
  7441  00D924  6A11               	clrf	(_atoi$2244+1)^0,c
  7442  00D926  5010               	movf	_atoi$2244^0,w,c
  7443  00D928  1011               	iorwf	(_atoi$2244+1)^0,w,c
  7444  00D92A  A4D8               	btfss	status,2,c
  7445  00D92C  EF9A  F06C         	goto	u5501
  7446  00D930  EF9C  F06C         	goto	u5500
  7447  00D934                     u5501:
  7448  00D934  EF5F  F06C         	goto	l5883
  7449  00D938                     u5500:
  7450  00D938  EFA6  F06C         	goto	l5903
  7451  00D93C                     l5899:
  7452  00D93C  0E00               	movlw	0
  7453  00D93E  6E0F               	movwf	(atoi@neg+1)^0,c
  7454  00D940  0E01               	movlw	1
  7455  00D942  6E0E               	movwf	atoi@neg^0,c
  7456  00D944                     l5901:
  7457  00D944  4A08               	infsnz	atoi@s^0,f,c
  7458  00D946  2A09               	incf	(atoi@s+1)^0,f,c
  7459  00D948  EFDD  F06C         	goto	l5909
  7460  00D94C                     l5903:
  7461  00D94C  C008  FFF6         	movff	atoi@s,tblptrl
  7462  00D950  C009  FFF7         	movff	atoi@s+1,tblptrh
  7463  00D954                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7464  00D954  6AF8               	clrf	tblptru,c
  7465  00D956                     	endif
  7466  00D956                     	if	0	;tblptru may be non-zero
  7467  00D956                     	endif
  7468  00D956  0008               	tblrd		*
  7469  00D958  50F5               	movf	tablat,w,c
  7470  00D95A  6E0A               	movwf	??_atoi^0,c
  7471  00D95C  6A0B               	clrf	(??_atoi+1)^0,c
  7472                           
  7473                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7474                           ; Switch size 1, requested type "simple"
  7475                           ; Number of cases is 1, Range of values is 0 to 0
  7476                           ; switch strategies available:
  7477                           ; Name         Instructions Cycles
  7478                           ; simple_byte            4     3 (average)
  7479                           ;	Chosen strategy is simple_byte
  7480  00D95E  500B               	movf	(??_atoi+1)^0,w,c
  7481  00D960  0A00               	xorlw	0	; case 0
  7482  00D962  B4D8               	btfsc	status,2,c
  7483  00D964  EFB6  F06C         	goto	l6723
  7484  00D968  EFDD  F06C         	goto	l5909
  7485  00D96C                     l6723:
  7486                           
  7487                           ; Switch size 1, requested type "simple"
  7488                           ; Number of cases is 2, Range of values is 43 to 45
  7489                           ; switch strategies available:
  7490                           ; Name         Instructions Cycles
  7491                           ; simple_byte            7     4 (average)
  7492                           ;	Chosen strategy is simple_byte
  7493  00D96C  500A               	movf	??_atoi^0,w,c
  7494  00D96E  0A2B               	xorlw	43	; case 43
  7495  00D970  B4D8               	btfsc	status,2,c
  7496  00D972  EFA2  F06C         	goto	l5901
  7497  00D976  0A06               	xorlw	6	; case 45
  7498  00D978  B4D8               	btfsc	status,2,c
  7499  00D97A  EF9E  F06C         	goto	l5899
  7500  00D97E  EFDD  F06C         	goto	l5909
  7501  00D982                     l5905:
  7502  00D982  C015  F001         	movff	atoi@n,___wmul@multiplier
  7503  00D986  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7504  00D98A  0E00               	movlw	0
  7505  00D98C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7506  00D98E  0E0A               	movlw	10
  7507  00D990  6E03               	movwf	___wmul@multiplicand^0,c
  7508  00D992  EC12  F061         	call	___wmul	;wreg free
  7509  00D996  C008  FFF6         	movff	atoi@s,tblptrl
  7510  00D99A  C009  FFF7         	movff	atoi@s+1,tblptrh
  7511  00D99E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7512  00D99E  6AF8               	clrf	tblptru,c
  7513  00D9A0                     	endif
  7514  00D9A0                     	if	0	;tblptru may be non-zero
  7515  00D9A0                     	endif
  7516  00D9A0  0008               	tblrd		*
  7517  00D9A2  50F5               	movf	tablat,w,c
  7518  00D9A4  5E01               	subwf	?___wmul^0,f,c
  7519  00D9A6  0E00               	movlw	0
  7520  00D9A8  5A02               	subwfb	(?___wmul+1)^0,f,c
  7521  00D9AA  0E30               	movlw	48
  7522  00D9AC  2401               	addwf	?___wmul^0,w,c
  7523  00D9AE  6E15               	movwf	atoi@n^0,c
  7524  00D9B0  0E00               	movlw	0
  7525  00D9B2  2002               	addwfc	(?___wmul+1)^0,w,c
  7526  00D9B4  6E16               	movwf	(atoi@n+1)^0,c
  7527  00D9B6  EFA2  F06C         	goto	l5901
  7528  00D9BA                     l5909:
  7529  00D9BA  0ED0               	movlw	208
  7530  00D9BC  6E0A               	movwf	??_atoi^0,c
  7531  00D9BE  0EFF               	movlw	255
  7532  00D9C0  6E0B               	movwf	(??_atoi+1)^0,c
  7533  00D9C2  C008  FFF6         	movff	atoi@s,tblptrl
  7534  00D9C6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7535  00D9CA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7536  00D9CA  6AF8               	clrf	tblptru,c
  7537  00D9CC                     	endif
  7538  00D9CC                     	if	0	;tblptru may be non-zero
  7539  00D9CC                     	endif
  7540  00D9CC  0008               	tblrd		*
  7541  00D9CE  50F5               	movf	tablat,w,c
  7542  00D9D0  6E0C               	movwf	(??_atoi+2)^0,c
  7543  00D9D2  6A0D               	clrf	(??_atoi+3)^0,c
  7544  00D9D4  500A               	movf	??_atoi^0,w,c
  7545  00D9D6  260C               	addwf	(??_atoi+2)^0,f,c
  7546  00D9D8  500B               	movf	(??_atoi+1)^0,w,c
  7547  00D9DA  220D               	addwfc	(??_atoi+3)^0,f,c
  7548  00D9DC  500D               	movf	(??_atoi+3)^0,w,c
  7549  00D9DE  E10A               	bnz	u5510
  7550  00D9E0  0E0A               	movlw	10
  7551  00D9E2  5C0C               	subwf	(??_atoi+2)^0,w,c
  7552  00D9E4  A0D8               	btfss	status,0,c
  7553  00D9E6  EFF7  F06C         	goto	u5511
  7554  00D9EA  EFFA  F06C         	goto	u5510
  7555  00D9EE                     u5511:
  7556  00D9EE  0E01               	movlw	1
  7557  00D9F0  EFFB  F06C         	goto	u5520
  7558  00D9F4                     u5510:
  7559  00D9F4  0E00               	movlw	0
  7560  00D9F6                     u5520:
  7561  00D9F6  6E12               	movwf	_atoi$2246^0,c
  7562  00D9F8  6A13               	clrf	(_atoi$2246+1)^0,c
  7563  00D9FA  5012               	movf	_atoi$2246^0,w,c
  7564  00D9FC  1013               	iorwf	(_atoi$2246+1)^0,w,c
  7565  00D9FE  A4D8               	btfss	status,2,c
  7566  00DA00  EF04  F06D         	goto	u5531
  7567  00DA04  EF06  F06D         	goto	u5530
  7568  00DA08                     u5531:
  7569  00DA08  EFC1  F06C         	goto	l5905
  7570  00DA0C                     u5530:
  7571  00DA0C  500E               	movf	atoi@neg^0,w,c
  7572  00DA0E  100F               	iorwf	(atoi@neg+1)^0,w,c
  7573  00DA10  A4D8               	btfss	status,2,c
  7574  00DA12  EF0D  F06D         	goto	u5541
  7575  00DA16  EF0F  F06D         	goto	u5540
  7576  00DA1A                     u5541:
  7577  00DA1A  EF1D  F06D         	goto	l1748
  7578  00DA1E                     u5540:
  7579  00DA1E  C015  F00A         	movff	atoi@n,??_atoi
  7580  00DA22  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7581  00DA26  1E0A               	comf	??_atoi^0,f,c
  7582  00DA28  1E0B               	comf	(??_atoi+1)^0,f,c
  7583  00DA2A  4A0A               	infsnz	??_atoi^0,f,c
  7584  00DA2C  2A0B               	incf	(??_atoi+1)^0,f,c
  7585  00DA2E  C00A  F008         	movff	??_atoi,?_atoi
  7586  00DA32  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7587  00DA36  EF21  F06D         	goto	l1751
  7588  00DA3A                     l1748:
  7589  00DA3A  C015  F008         	movff	atoi@n,?_atoi
  7590  00DA3E  C016  F009         	movff	atoi@n+1,?_atoi+1
  7591  00DA42                     l1751:
  7592  00DA42  0012               	return		;funcret
  7593  00DA44                     __end_of_atoi:
  7594                           	callstack 0
  7595                           
  7596 ;; *************** function _isspace *****************
  7597 ;; Defined at:
  7598 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isspace.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  c               2    0[COMRAM] int 
  7601 ;; Auto vars:     Size  Location     Type
  7602 ;;		None
  7603 ;; Return value:  Size  Location     Type
  7604 ;;                  2    0[COMRAM] int 
  7605 ;; Registers used:
  7606 ;;		wreg, status,2, status,0
  7607 ;; Tracked objects:
  7608 ;;		On entry : 0/0
  7609 ;;		On exit  : 0/0
  7610 ;;		Unchanged: 0/0
  7611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7612 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7614 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7615 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7616 ;;Total ram usage:        7 bytes
  7617 ;; Hardware stack levels used: 1
  7618 ;; This function calls:
  7619 ;;		Nothing
  7620 ;; This function is called by:
  7621 ;;		_atoi
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text25
  7626  00C5CE                     __ptext25:
  7627                           	callstack 0
  7628  00C5CE                     _isspace:
  7629                           	callstack 26
  7630  00C5CE  0E01               	movlw	1
  7631  00C5D0  6E07               	movwf	_isspace$2275^0,c
  7632  00C5D2  0E20               	movlw	32
  7633  00C5D4  1801               	xorwf	isspace@c^0,w,c
  7634  00C5D6  1002               	iorwf	(isspace@c+1)^0,w,c
  7635  00C5D8  B4D8               	btfsc	status,2,c
  7636  00C5DA  EFF1  F062         	goto	u4901
  7637  00C5DE  EFF3  F062         	goto	u4900
  7638  00C5E2                     u4901:
  7639  00C5E2  EF0C  F063         	goto	l5557
  7640  00C5E6                     u4900:
  7641  00C5E6  0EF7               	movlw	247
  7642  00C5E8  6E03               	movwf	??_isspace^0,c
  7643  00C5EA  0EFF               	movlw	255
  7644  00C5EC  6E04               	movwf	(??_isspace+1)^0,c
  7645  00C5EE  C001  F005         	movff	isspace@c,??_isspace+2
  7646  00C5F2  C002  F006         	movff	isspace@c+1,??_isspace+3
  7647  00C5F6  5003               	movf	??_isspace^0,w,c
  7648  00C5F8  2605               	addwf	(??_isspace+2)^0,f,c
  7649  00C5FA  5004               	movf	(??_isspace+1)^0,w,c
  7650  00C5FC  2206               	addwfc	(??_isspace+3)^0,f,c
  7651  00C5FE  5006               	movf	(??_isspace+3)^0,w,c
  7652  00C600  E109               	bnz	u4910
  7653  00C602  0E05               	movlw	5
  7654  00C604  5C05               	subwf	(??_isspace+2)^0,w,c
  7655  00C606  A0D8               	btfss	status,0,c
  7656  00C608  EF08  F063         	goto	u4911
  7657  00C60C  EF0A  F063         	goto	u4910
  7658  00C610                     u4911:
  7659  00C610  EF0C  F063         	goto	l5557
  7660  00C614                     u4910:
  7661  00C614  0E00               	movlw	0
  7662  00C616  6E07               	movwf	_isspace$2275^0,c
  7663  00C618                     l5557:
  7664  00C618  C007  F001         	movff	_isspace$2275,?_isspace
  7665  00C61C  6A02               	clrf	(?_isspace+1)^0,c
  7666  00C61E  0012               	return		;funcret
  7667  00C620                     __end_of_isspace:
  7668                           	callstack 0
  7669                           
  7670 ;; *************** function _isdigit *****************
  7671 ;; Defined at:
  7672 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\isdigit.c"
  7673 ;; Parameters:    Size  Location     Type
  7674 ;;  c               2    0[COMRAM] int 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;		None
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  2    0[COMRAM] int 
  7679 ;; Registers used:
  7680 ;;		wreg, status,2, status,0
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7688 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7689 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7690 ;;Total ram usage:        6 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; This function calls:
  7693 ;;		Nothing
  7694 ;; This function is called by:
  7695 ;;		_vfpfcnvrt
  7696 ;;		_atoi
  7697 ;; This function uses a non-reentrant model
  7698 ;;
  7699                           
  7700                           	psect	text26
  7701  00C418                     __ptext26:
  7702                           	callstack 0
  7703  00C418                     _isdigit:
  7704                           	callstack 27
  7705  00C418  0ED0               	movlw	208
  7706  00C41A  6E03               	movwf	??_isdigit^0,c
  7707  00C41C  0EFF               	movlw	255
  7708  00C41E  6E04               	movwf	(??_isdigit+1)^0,c
  7709  00C420  C001  F005         	movff	isdigit@c,??_isdigit+2
  7710  00C424  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7711  00C428  5003               	movf	??_isdigit^0,w,c
  7712  00C42A  2605               	addwf	(??_isdigit+2)^0,f,c
  7713  00C42C  5004               	movf	(??_isdigit+1)^0,w,c
  7714  00C42E  2206               	addwfc	(??_isdigit+3)^0,f,c
  7715  00C430  5006               	movf	(??_isdigit+3)^0,w,c
  7716  00C432  E10A               	bnz	u4880
  7717  00C434  0E0A               	movlw	10
  7718  00C436  5C05               	subwf	(??_isdigit+2)^0,w,c
  7719  00C438  A0D8               	btfss	status,0,c
  7720  00C43A  EF21  F062         	goto	u4881
  7721  00C43E  EF24  F062         	goto	u4880
  7722  00C442                     u4881:
  7723  00C442  0E01               	movlw	1
  7724  00C444  EF25  F062         	goto	u4890
  7725  00C448                     u4880:
  7726  00C448  0E00               	movlw	0
  7727  00C44A                     u4890:
  7728  00C44A  6E01               	movwf	?_isdigit^0,c
  7729  00C44C  6A02               	clrf	(?_isdigit+1)^0,c
  7730  00C44E  0012               	return		;funcret
  7731  00C450                     __end_of_isdigit:
  7732                           	callstack 0
  7733                           
  7734 ;; *************** function _Voltage_ReadRegister *****************
  7735 ;; Defined at:
  7736 ;;		line 30 in file "INA260.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;		None
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  temp_b          2   51[COMRAM] unsigned int 
  7741 ;;  temp_a          1   53[COMRAM] unsigned char 
  7742 ;; Return value:  Size  Location     Type
  7743 ;;                  4   45[COMRAM] float 
  7744 ;; Registers used:
  7745 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7746 ;; Tracked objects:
  7747 ;;		On entry : 0/0
  7748 ;;		On exit  : 0/0
  7749 ;;		Unchanged: 0/0
  7750 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7751 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7752 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7753 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7754 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7755 ;;Total ram usage:        9 bytes
  7756 ;; Hardware stack levels used: 1
  7757 ;; Hardware stack levels required when called: 2
  7758 ;; This function calls:
  7759 ;;		_I2C_Master_Read
  7760 ;;		_I2C_Master_RepeatedStart
  7761 ;;		_I2C_Master_Start
  7762 ;;		_I2C_Master_Stop
  7763 ;;		_I2C_Master_Write
  7764 ;;		___fldiv
  7765 ;;		___flmul
  7766 ;;		___xxtofl
  7767 ;; This function is called by:
  7768 ;;		_main
  7769 ;; This function uses a non-reentrant model
  7770 ;;
  7771                           
  7772                           	psect	text27
  7773  00D59E                     __ptext27:
  7774                           	callstack 0
  7775  00D59E                     _Voltage_ReadRegister:
  7776                           	callstack 28
  7777  00D59E                     
  7778                           ;INA260.c: 31:     I2C_Master_Start();
  7779  00D59E  EC08  F060         	call	_I2C_Master_Start	;wreg free
  7780                           
  7781                           ;INA260.c: 32:     I2C_Master_Write(0x80);
  7782  00D5A2  0E00               	movlw	0
  7783  00D5A4  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7784  00D5A6  0E80               	movlw	128
  7785  00D5A8  6E02               	movwf	I2C_Master_Write@d^0,c
  7786  00D5AA  EC34  F060         	call	_I2C_Master_Write	;wreg free
  7787                           
  7788                           ;INA260.c: 33:     I2C_Master_Write(0x02);
  7789  00D5AE  0E00               	movlw	0
  7790  00D5B0  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7791  00D5B2  0E02               	movlw	2
  7792  00D5B4  6E02               	movwf	I2C_Master_Write@d^0,c
  7793  00D5B6  EC34  F060         	call	_I2C_Master_Write	;wreg free
  7794                           
  7795                           ;INA260.c: 34:     I2C_Master_RepeatedStart();
  7796  00D5BA  EC04  F060         	call	_I2C_Master_RepeatedStart	;wreg free
  7797                           
  7798                           ;INA260.c: 35:     I2C_Master_Write(0x81);
  7799  00D5BE  0E00               	movlw	0
  7800  00D5C0  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7801  00D5C2  0E81               	movlw	129
  7802  00D5C4  6E02               	movwf	I2C_Master_Write@d^0,c
  7803  00D5C6  EC34  F060         	call	_I2C_Master_Write	;wreg free
  7804                           
  7805                           ;INA260.c: 36:     char temp_a = I2C_Master_Read(1);
  7806  00D5CA  0E00               	movlw	0
  7807  00D5CC  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7808  00D5CE  0E01               	movlw	1
  7809  00D5D0  6E02               	movwf	I2C_Master_Read@a^0,c
  7810  00D5D2  ECD6  F061         	call	_I2C_Master_Read	;wreg free
  7811  00D5D6  5002               	movf	?_I2C_Master_Read^0,w,c
  7812  00D5D8  6E36               	movwf	Voltage_ReadRegister@temp_a^0,c
  7813                           
  7814                           ;INA260.c: 37:     unsigned int temp_b = temp_a<<8 | I2C_Master_Read(0);
  7815  00D5DA  0E00               	movlw	0
  7816  00D5DC  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7817  00D5DE  0E00               	movlw	0
  7818  00D5E0  6E02               	movwf	I2C_Master_Read@a^0,c
  7819  00D5E2  ECD6  F061         	call	_I2C_Master_Read	;wreg free
  7820  00D5E6  5036               	movf	Voltage_ReadRegister@temp_a^0,w,c
  7821  00D5E8  6E33               	movwf	(??_Voltage_ReadRegister+1)^0,c
  7822  00D5EA  6A32               	clrf	??_Voltage_ReadRegister^0,c
  7823  00D5EC  5002               	movf	?_I2C_Master_Read^0,w,c
  7824  00D5EE  1032               	iorwf	??_Voltage_ReadRegister^0,w,c
  7825  00D5F0  6E34               	movwf	Voltage_ReadRegister@temp_b^0,c
  7826  00D5F2  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
  7827  00D5F4  1033               	iorwf	(??_Voltage_ReadRegister+1)^0,w,c
  7828  00D5F6  6E35               	movwf	(Voltage_ReadRegister@temp_b+1)^0,c
  7829  00D5F8                     
  7830                           ;INA260.c: 38:     voltage = temp_b *1.25;
  7831  00D5F8  C034  F007         	movff	Voltage_ReadRegister@temp_b,___xxtofl@val
  7832  00D5FC  C035  F008         	movff	Voltage_ReadRegister@temp_b+1,___xxtofl@val+1
  7833  00D600  6A09               	clrf	(___xxtofl@val+2)^0,c
  7834  00D602  6A0A               	clrf	(___xxtofl@val+3)^0,c
  7835  00D604  0E00               	movlw	0
  7836  00D606  EC22  F06D         	call	___xxtofl
  7837  00D60A  C007  F015         	movff	?___xxtofl,___flmul@b
  7838  00D60E  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  7839  00D612  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  7840  00D616  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  7841  00D61A  0E00               	movlw	0
  7842  00D61C  6E19               	movwf	___flmul@a^0,c
  7843  00D61E  0E00               	movlw	0
  7844  00D620  6E1A               	movwf	(___flmul@a+1)^0,c
  7845  00D622  0EA0               	movlw	160
  7846  00D624  6E1B               	movwf	(___flmul@a+2)^0,c
  7847  00D626  0E3F               	movlw	63
  7848  00D628  6E1C               	movwf	(___flmul@a+3)^0,c
  7849  00D62A  ECBA  F071         	call	___flmul	;wreg free
  7850  00D62E  C015  F0BE         	movff	?___flmul,_voltage
  7851  00D632  C016  F0BF         	movff	?___flmul+1,_voltage+1
  7852  00D636  C017  F0C0         	movff	?___flmul+2,_voltage+2
  7853  00D63A  C018  F0C1         	movff	?___flmul+3,_voltage+3
  7854  00D63E                     
  7855                           ;INA260.c: 39:     I2C_Master_Stop();
  7856  00D63E  EC0C  F060         	call	_I2C_Master_Stop	;wreg free
  7857  00D642                     
  7858                           ;INA260.c: 40:     voltage = voltage/1000;
  7859  00D642  C0BE  F001         	movff	_voltage,___fldiv@b
  7860  00D646  C0BF  F002         	movff	_voltage+1,___fldiv@b+1
  7861  00D64A  C0C0  F003         	movff	_voltage+2,___fldiv@b+2
  7862  00D64E  C0C1  F004         	movff	_voltage+3,___fldiv@b+3
  7863  00D652  0E00               	movlw	0
  7864  00D654  6E05               	movwf	___fldiv@a^0,c
  7865  00D656  0E00               	movlw	0
  7866  00D658  6E06               	movwf	(___fldiv@a+1)^0,c
  7867  00D65A  0E7A               	movlw	122
  7868  00D65C  6E07               	movwf	(___fldiv@a+2)^0,c
  7869  00D65E  0E44               	movlw	68
  7870  00D660  6E08               	movwf	(___fldiv@a+3)^0,c
  7871  00D662  ECED  F06F         	call	___fldiv	;wreg free
  7872  00D666  C001  F0BE         	movff	?___fldiv,_voltage
  7873  00D66A  C002  F0BF         	movff	?___fldiv+1,_voltage+1
  7874  00D66E  C003  F0C0         	movff	?___fldiv+2,_voltage+2
  7875  00D672  C004  F0C1         	movff	?___fldiv+3,_voltage+3
  7876  00D676                     
  7877                           ;INA260.c: 42:     _delay((unsigned long)((600)*(8000000/4000.0)));
  7878  00D676  0E07               	movlw	7
  7879  00D678  6E33               	movwf	(??_Voltage_ReadRegister+1)^0,c
  7880  00D67A  0E17               	movlw	23
  7881  00D67C  6E32               	movwf	??_Voltage_ReadRegister^0,c
  7882  00D67E  0E6A               	movlw	106
  7883  00D680                     u6377:
  7884  00D680  2EE8               	decfsz	wreg,f,c
  7885  00D682  D7FE               	bra	u6377
  7886  00D684  2E32               	decfsz	??_Voltage_ReadRegister^0,f,c
  7887  00D686  D7FC               	bra	u6377
  7888  00D688  2E33               	decfsz	(??_Voltage_ReadRegister+1)^0,f,c
  7889  00D68A  D7FA               	bra	u6377
  7890  00D68C  D000               	nop2	
  7891  00D68E                     
  7892                           ;INA260.c: 43:     return voltage;
  7893  00D68E  C0BE  F02E         	movff	_voltage,?_Voltage_ReadRegister
  7894  00D692  C0BF  F02F         	movff	_voltage+1,?_Voltage_ReadRegister+1
  7895  00D696  C0C0  F030         	movff	_voltage+2,?_Voltage_ReadRegister+2
  7896  00D69A  C0C1  F031         	movff	_voltage+3,?_Voltage_ReadRegister+3
  7897  00D69E  0012               	return		;funcret
  7898  00D6A0                     __end_of_Voltage_ReadRegister:
  7899                           	callstack 0
  7900                           
  7901 ;; *************** function _SYSTEM_Initialize *****************
  7902 ;; Defined at:
  7903 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7904 ;; Parameters:    Size  Location     Type
  7905 ;;		None
  7906 ;; Auto vars:     Size  Location     Type
  7907 ;;		None
  7908 ;; Return value:  Size  Location     Type
  7909 ;;                  1    wreg      void 
  7910 ;; Registers used:
  7911 ;;		wreg, status,2, cstack
  7912 ;; Tracked objects:
  7913 ;;		On entry : 0/0
  7914 ;;		On exit  : 0/0
  7915 ;;		Unchanged: 0/0
  7916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7921 ;;Total ram usage:        0 bytes
  7922 ;; Hardware stack levels used: 1
  7923 ;; Hardware stack levels required when called: 1
  7924 ;; This function calls:
  7925 ;;		_OSCILLATOR_Initialize
  7926 ;;		_PIN_MANAGER_Initialize
  7927 ;; This function is called by:
  7928 ;;		_main
  7929 ;; This function uses a non-reentrant model
  7930 ;;
  7931                           
  7932                           	psect	text28
  7933  00C072                     __ptext28:
  7934                           	callstack 0
  7935  00C072                     _SYSTEM_Initialize:
  7936                           	callstack 29
  7937  00C072                     
  7938                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7939  00C072  EC25  F061         	call	_PIN_MANAGER_Initialize	;wreg free
  7940                           
  7941                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7942  00C076  EC68  F060         	call	_OSCILLATOR_Initialize	;wreg free
  7943  00C07A  0012               	return		;funcret
  7944  00C07C                     __end_of_SYSTEM_Initialize:
  7945                           	callstack 0
  7946                           
  7947 ;; *************** function _PIN_MANAGER_Initialize *****************
  7948 ;; Defined at:
  7949 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7950 ;; Parameters:    Size  Location     Type
  7951 ;;		None
  7952 ;; Auto vars:     Size  Location     Type
  7953 ;;		None
  7954 ;; Return value:  Size  Location     Type
  7955 ;;                  1    wreg      void 
  7956 ;; Registers used:
  7957 ;;		wreg, status,2
  7958 ;; Tracked objects:
  7959 ;;		On entry : 0/0
  7960 ;;		On exit  : 0/0
  7961 ;;		Unchanged: 0/0
  7962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7963 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7964 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7965 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7966 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7967 ;;Total ram usage:        0 bytes
  7968 ;; Hardware stack levels used: 1
  7969 ;; This function calls:
  7970 ;;		Nothing
  7971 ;; This function is called by:
  7972 ;;		_SYSTEM_Initialize
  7973 ;; This function uses a non-reentrant model
  7974 ;;
  7975                           
  7976                           	psect	text29
  7977  00C24A                     __ptext29:
  7978                           	callstack 0
  7979  00C24A                     _PIN_MANAGER_Initialize:
  7980                           	callstack 29
  7981  00C24A                     
  7982                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7983  00C24A  0E00               	movlw	0
  7984  00C24C  6E89               	movwf	137,c	;volatile
  7985                           
  7986                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7987  00C24E  0E00               	movlw	0
  7988  00C250  6E8A               	movwf	138,c	;volatile
  7989                           
  7990                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7991  00C252  0E00               	movlw	0
  7992  00C254  6E8B               	movwf	139,c	;volatile
  7993                           
  7994                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xEF;
  7995  00C256  0EEF               	movlw	239
  7996  00C258  6E92               	movwf	146,c	;volatile
  7997  00C25A                     
  7998                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7999  00C25A  6893               	setf	147,c	;volatile
  8000                           
  8001                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  8002  00C25C  0EBF               	movlw	191
  8003  00C25E  6E94               	movwf	148,c	;volatile
  8004                           
  8005                           ;mcc_generated_files/pin_manager.c: 78:     ANCON0 = 0xDF;
  8006  00C260  0EDF               	movlw	223
  8007  00C262  010F               	movlb	15	; () banked
  8008  00C264  6F5D               	movwf	93,b	;volatile
  8009                           
  8010                           ;mcc_generated_files/pin_manager.c: 79:     ANCON1 = 0x7F;
  8011  00C266  0E7F               	movlw	127
  8012  00C268  6F5C               	movwf	92,b	;volatile
  8013                           
  8014                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  8015  00C26A  0E00               	movlw	0
  8016  00C26C  6F5B               	movwf	91,b	;volatile
  8017  00C26E                     
  8018                           ; BSR set to: 15
  8019                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  8020  00C26E  8EF1               	bsf	241,7,c	;volatile
  8021  00C270                     
  8022                           ; BSR set to: 15
  8023  00C270  0012               	return		;funcret
  8024  00C272                     __end_of_PIN_MANAGER_Initialize:
  8025                           	callstack 0
  8026                           
  8027 ;; *************** function _OSCILLATOR_Initialize *****************
  8028 ;; Defined at:
  8029 ;;		line 58 in file "mcc_generated_files/mcc.c"
  8030 ;; Parameters:    Size  Location     Type
  8031 ;;		None
  8032 ;; Auto vars:     Size  Location     Type
  8033 ;;		None
  8034 ;; Return value:  Size  Location     Type
  8035 ;;                  1    wreg      void 
  8036 ;; Registers used:
  8037 ;;		wreg, status,2
  8038 ;; Tracked objects:
  8039 ;;		On entry : 0/0
  8040 ;;		On exit  : 0/0
  8041 ;;		Unchanged: 0/0
  8042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8043 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8046 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8047 ;;Total ram usage:        0 bytes
  8048 ;; Hardware stack levels used: 1
  8049 ;; This function calls:
  8050 ;;		Nothing
  8051 ;; This function is called by:
  8052 ;;		_SYSTEM_Initialize
  8053 ;; This function uses a non-reentrant model
  8054 ;;
  8055                           
  8056                           	psect	text30
  8057  00C0D0                     __ptext30:
  8058                           	callstack 0
  8059  00C0D0                     _OSCILLATOR_Initialize:
  8060                           	callstack 29
  8061  00C0D0                     
  8062                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x60;
  8063  00C0D0  0E60               	movlw	96
  8064  00C0D2  6ED3               	movwf	211,c	;volatile
  8065                           
  8066                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x00;
  8067  00C0D4  0E00               	movlw	0
  8068  00C0D6  6ED2               	movwf	210,c	;volatile
  8069                           
  8070                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  8071  00C0D8  0E00               	movlw	0
  8072  00C0DA  6E9B               	movwf	155,c	;volatile
  8073                           
  8074                           ;mcc_generated_files/mcc.c: 67:     REFOCON = 0x00;
  8075  00C0DC  0E00               	movlw	0
  8076  00C0DE  6E9A               	movwf	154,c	;volatile
  8077  00C0E0  0012               	return		;funcret
  8078  00C0E2                     __end_of_OSCILLATOR_Initialize:
  8079                           	callstack 0
  8080                           
  8081 ;; *************** function _Power_ReadRegister *****************
  8082 ;; Defined at:
  8083 ;;		line 62 in file "INA260.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;		None
  8086 ;; Auto vars:     Size  Location     Type
  8087 ;;  temp_f          2   31[COMRAM] unsigned int 
  8088 ;;  temp_e          1   33[COMRAM] unsigned char 
  8089 ;; Return value:  Size  Location     Type
  8090 ;;                  4   25[COMRAM] float 
  8091 ;; Registers used:
  8092 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  8093 ;; Tracked objects:
  8094 ;;		On entry : 0/0
  8095 ;;		On exit  : 0/0
  8096 ;;		Unchanged: 0/0
  8097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8098 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8099 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8100 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8101 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8102 ;;Total ram usage:        9 bytes
  8103 ;; Hardware stack levels used: 1
  8104 ;; Hardware stack levels required when called: 2
  8105 ;; This function calls:
  8106 ;;		_I2C_Master_Read
  8107 ;;		_I2C_Master_RepeatedStart
  8108 ;;		_I2C_Master_Start
  8109 ;;		_I2C_Master_Stop
  8110 ;;		_I2C_Master_Write
  8111 ;;		___fldiv
  8112 ;;		___wmul
  8113 ;;		___xxtofl
  8114 ;; This function is called by:
  8115 ;;		_main
  8116 ;; This function uses a non-reentrant model
  8117 ;;
  8118                           
  8119                           	psect	text31
  8120  00D2AC                     __ptext31:
  8121                           	callstack 0
  8122  00D2AC                     _Power_ReadRegister:
  8123                           	callstack 28
  8124  00D2AC                     
  8125                           ;INA260.c: 63:     I2C_Master_Start();
  8126  00D2AC  EC08  F060         	call	_I2C_Master_Start	;wreg free
  8127                           
  8128                           ;INA260.c: 64:     I2C_Master_Write(0x80);
  8129  00D2B0  0E00               	movlw	0
  8130  00D2B2  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  8131  00D2B4  0E80               	movlw	128
  8132  00D2B6  6E02               	movwf	I2C_Master_Write@d^0,c
  8133  00D2B8  EC34  F060         	call	_I2C_Master_Write	;wreg free
  8134                           
  8135                           ;INA260.c: 65:     I2C_Master_Write(0x03);
  8136  00D2BC  0E00               	movlw	0
  8137  00D2BE  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  8138  00D2C0  0E03               	movlw	3
  8139  00D2C2  6E02               	movwf	I2C_Master_Write@d^0,c
  8140  00D2C4  EC34  F060         	call	_I2C_Master_Write	;wreg free
  8141                           
  8142                           ;INA260.c: 66:     I2C_Master_RepeatedStart();
  8143  00D2C8  EC04  F060         	call	_I2C_Master_RepeatedStart	;wreg free
  8144                           
  8145                           ;INA260.c: 67:     I2C_Master_Write(0x81);
  8146  00D2CC  0E00               	movlw	0
  8147  00D2CE  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  8148  00D2D0  0E81               	movlw	129
  8149  00D2D2  6E02               	movwf	I2C_Master_Write@d^0,c
  8150  00D2D4  EC34  F060         	call	_I2C_Master_Write	;wreg free
  8151                           
  8152                           ;INA260.c: 68:     char temp_e = I2C_Master_Read(1);
  8153  00D2D8  0E00               	movlw	0
  8154  00D2DA  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  8155  00D2DC  0E01               	movlw	1
  8156  00D2DE  6E02               	movwf	I2C_Master_Read@a^0,c
  8157  00D2E0  ECD6  F061         	call	_I2C_Master_Read	;wreg free
  8158  00D2E4  5002               	movf	?_I2C_Master_Read^0,w,c
  8159  00D2E6  6E22               	movwf	Power_ReadRegister@temp_e^0,c
  8160                           
  8161                           ;INA260.c: 69:     unsigned int temp_f = temp_e<<8 | I2C_Master_Read(0);
  8162  00D2E8  0E00               	movlw	0
  8163  00D2EA  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  8164  00D2EC  0E00               	movlw	0
  8165  00D2EE  6E02               	movwf	I2C_Master_Read@a^0,c
  8166  00D2F0  ECD6  F061         	call	_I2C_Master_Read	;wreg free
  8167  00D2F4  5022               	movf	Power_ReadRegister@temp_e^0,w,c
  8168  00D2F6  6E1F               	movwf	(??_Power_ReadRegister+1)^0,c
  8169  00D2F8  6A1E               	clrf	??_Power_ReadRegister^0,c
  8170  00D2FA  5002               	movf	?_I2C_Master_Read^0,w,c
  8171  00D2FC  101E               	iorwf	??_Power_ReadRegister^0,w,c
  8172  00D2FE  6E20               	movwf	Power_ReadRegister@temp_f^0,c
  8173  00D300  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
  8174  00D302  101F               	iorwf	(??_Power_ReadRegister+1)^0,w,c
  8175  00D304  6E21               	movwf	(Power_ReadRegister@temp_f+1)^0,c
  8176  00D306                     
  8177                           ;INA260.c: 70:     power = temp_f *10;
  8178  00D306  C020  F001         	movff	Power_ReadRegister@temp_f,___wmul@multiplier
  8179  00D30A  C021  F002         	movff	Power_ReadRegister@temp_f+1,___wmul@multiplier+1
  8180  00D30E  0E00               	movlw	0
  8181  00D310  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  8182  00D312  0E0A               	movlw	10
  8183  00D314  6E03               	movwf	___wmul@multiplicand^0,c
  8184  00D316  EC12  F061         	call	___wmul	;wreg free
  8185  00D31A  C001  F007         	movff	?___wmul,___xxtofl@val
  8186  00D31E  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  8187  00D322  6A09               	clrf	(___xxtofl@val+2)^0,c
  8188  00D324  6A0A               	clrf	(___xxtofl@val+3)^0,c
  8189  00D326  0E00               	movlw	0
  8190  00D328  EC22  F06D         	call	___xxtofl
  8191  00D32C  C007  F0B6         	movff	?___xxtofl,_power
  8192  00D330  C008  F0B7         	movff	?___xxtofl+1,_power+1
  8193  00D334  C009  F0B8         	movff	?___xxtofl+2,_power+2
  8194  00D338  C00A  F0B9         	movff	?___xxtofl+3,_power+3
  8195  00D33C                     
  8196                           ;INA260.c: 71:     I2C_Master_Stop();
  8197  00D33C  EC0C  F060         	call	_I2C_Master_Stop	;wreg free
  8198  00D340                     
  8199                           ;INA260.c: 72:     power = power/1000;
  8200  00D340  C0B6  F001         	movff	_power,___fldiv@b
  8201  00D344  C0B7  F002         	movff	_power+1,___fldiv@b+1
  8202  00D348  C0B8  F003         	movff	_power+2,___fldiv@b+2
  8203  00D34C  C0B9  F004         	movff	_power+3,___fldiv@b+3
  8204  00D350  0E00               	movlw	0
  8205  00D352  6E05               	movwf	___fldiv@a^0,c
  8206  00D354  0E00               	movlw	0
  8207  00D356  6E06               	movwf	(___fldiv@a+1)^0,c
  8208  00D358  0E7A               	movlw	122
  8209  00D35A  6E07               	movwf	(___fldiv@a+2)^0,c
  8210  00D35C  0E44               	movlw	68
  8211  00D35E  6E08               	movwf	(___fldiv@a+3)^0,c
  8212  00D360  ECED  F06F         	call	___fldiv	;wreg free
  8213  00D364  C001  F0B6         	movff	?___fldiv,_power
  8214  00D368  C002  F0B7         	movff	?___fldiv+1,_power+1
  8215  00D36C  C003  F0B8         	movff	?___fldiv+2,_power+2
  8216  00D370  C004  F0B9         	movff	?___fldiv+3,_power+3
  8217  00D374                     
  8218                           ;INA260.c: 74:     _delay((unsigned long)((600)*(8000000/4000.0)));
  8219  00D374  0E07               	movlw	7
  8220  00D376  6E1F               	movwf	(??_Power_ReadRegister+1)^0,c
  8221  00D378  0E17               	movlw	23
  8222  00D37A  6E1E               	movwf	??_Power_ReadRegister^0,c
  8223  00D37C  0E6A               	movlw	106
  8224  00D37E                     u6387:
  8225  00D37E  2EE8               	decfsz	wreg,f,c
  8226  00D380  D7FE               	bra	u6387
  8227  00D382  2E1E               	decfsz	??_Power_ReadRegister^0,f,c
  8228  00D384  D7FC               	bra	u6387
  8229  00D386  2E1F               	decfsz	(??_Power_ReadRegister+1)^0,f,c
  8230  00D388  D7FA               	bra	u6387
  8231  00D38A  D000               	nop2	
  8232  00D38C                     
  8233                           ;INA260.c: 75:     return power;
  8234  00D38C  C0B6  F01A         	movff	_power,?_Power_ReadRegister
  8235  00D390  C0B7  F01B         	movff	_power+1,?_Power_ReadRegister+1
  8236  00D394  C0B8  F01C         	movff	_power+2,?_Power_ReadRegister+2
  8237  00D398  C0B9  F01D         	movff	_power+3,?_Power_ReadRegister+3
  8238  00D39C  0012               	return		;funcret
  8239  00D39E                     __end_of_Power_ReadRegister:
  8240                           	callstack 0
  8241                           
  8242 ;; *************** function ___wmul *****************
  8243 ;; Defined at:
  8244 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\Umul16.c"
  8245 ;; Parameters:    Size  Location     Type
  8246 ;;  multiplier      2    0[COMRAM] unsigned int 
  8247 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8248 ;; Auto vars:     Size  Location     Type
  8249 ;;  product         2    4[COMRAM] unsigned int 
  8250 ;; Return value:  Size  Location     Type
  8251 ;;                  2    0[COMRAM] unsigned int 
  8252 ;; Registers used:
  8253 ;;		wreg, status,2, status,0, prodl, prodh
  8254 ;; Tracked objects:
  8255 ;;		On entry : 0/0
  8256 ;;		On exit  : 0/0
  8257 ;;		Unchanged: 0/0
  8258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8259 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8260 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8262 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8263 ;;Total ram usage:        6 bytes
  8264 ;; Hardware stack levels used: 1
  8265 ;; This function calls:
  8266 ;;		Nothing
  8267 ;; This function is called by:
  8268 ;;		_Power_ReadRegister
  8269 ;;		_atoi
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           	psect	text32
  8274  00C224                     __ptext32:
  8275                           	callstack 0
  8276  00C224                     ___wmul:
  8277                           	callstack 26
  8278  00C224  5001               	movf	___wmul@multiplier^0,w,c
  8279  00C226  0203               	mulwf	___wmul@multiplicand^0,c
  8280  00C228  CFF3 F005          	movff	prodl,___wmul@product
  8281  00C22C  CFF4 F006          	movff	prodh,___wmul@product+1
  8282  00C230  5001               	movf	___wmul@multiplier^0,w,c
  8283  00C232  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8284  00C234  50F3               	movf	243,w,c
  8285  00C236  2606               	addwf	(___wmul@product+1)^0,f,c
  8286  00C238  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8287  00C23A  0203               	mulwf	___wmul@multiplicand^0,c
  8288  00C23C  50F3               	movf	243,w,c
  8289  00C23E  2606               	addwf	(___wmul@product+1)^0,f,c
  8290  00C240  C005  F001         	movff	___wmul@product,?___wmul
  8291  00C244  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8292  00C248  0012               	return		;funcret
  8293  00C24A                     __end_of___wmul:
  8294                           	callstack 0
  8295                           
  8296 ;; *************** function _Oled_WriteString *****************
  8297 ;; Defined at:
  8298 ;;		line 91 in file "OLED.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;  characters      2   32[COMRAM] PTR unsigned char 
  8301 ;;		 -> STR_9(11), STR_8(11), STR_7(9), STR_6(18), 
  8302 ;;		 -> power_str(6), current_str(6), voltage_str(6), STR_2(4), 
  8303 ;;		 -> STR_1(3), 
  8304 ;; Auto vars:     Size  Location     Type
  8305 ;;		None
  8306 ;; Return value:  Size  Location     Type
  8307 ;;                  1    wreg      void 
  8308 ;; Registers used:
  8309 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8310 ;; Tracked objects:
  8311 ;;		On entry : 0/0
  8312 ;;		On exit  : 0/0
  8313 ;;		Unchanged: 0/0
  8314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8319 ;;Total ram usage:        2 bytes
  8320 ;; Hardware stack levels used: 1
  8321 ;; Hardware stack levels required when called: 11
  8322 ;; This function calls:
  8323 ;;		_Oled_WriteCharacter
  8324 ;; This function is called by:
  8325 ;;		_main
  8326 ;; This function uses a non-reentrant model
  8327 ;;
  8328                           
  8329                           	psect	text33
  8330  00C7E6                     __ptext33:
  8331                           	callstack 0
  8332  00C7E6                     _Oled_WriteString:
  8333                           	callstack 19
  8334  00C7E6                     
  8335                           ;OLED.c: 92:     while (*characters) Oled_WriteCharacter(*characters++);
  8336  00C7E6  EF0A  F064         	goto	l6211
  8337  00C7EA                     l6207:
  8338  00C7EA  C021  FFF6         	movff	Oled_WriteString@characters,tblptrl
  8339  00C7EE  C022  FFF7         	movff	Oled_WriteString@characters+1,tblptrh
  8340  00C7F2  0E00               	movlw	low (__mediumconst shr (0+16))
  8341  00C7F4  6EF8               	movwf	tblptru,c
  8342  00C7F6  0E0E               	movlw	(high __ramtop+-1)
  8343  00C7F8  64F7               	cpfsgt	tblptrh,c
  8344  00C7FA  D003               	bra	u5947
  8345  00C7FC  0008               	tblrd		*
  8346  00C7FE  50F5               	movf	tablat,w,c
  8347  00C800  D005               	bra	u5940
  8348  00C802                     u5947:
  8349  00C802  CFF6 FFE9          	movff	tblptrl,fsr0l
  8350  00C806  CFF7 FFEA          	movff	tblptrh,fsr0h
  8351  00C80A  50EF               	movf	indf0,w,c
  8352  00C80C                     u5940:
  8353  00C80C  ECC1  F064         	call	_Oled_WriteCharacter
  8354  00C810  4A21               	infsnz	Oled_WriteString@characters^0,f,c
  8355  00C812  2A22               	incf	(Oled_WriteString@characters+1)^0,f,c
  8356  00C814                     l6211:
  8357  00C814  C021  FFF6         	movff	Oled_WriteString@characters,tblptrl
  8358  00C818  C022  FFF7         	movff	Oled_WriteString@characters+1,tblptrh
  8359  00C81C  0E00               	movlw	low (__mediumconst shr (0+16))
  8360  00C81E  6EF8               	movwf	tblptru,c
  8361  00C820  0E0E               	movlw	(high __ramtop+-1)
  8362  00C822  64F7               	cpfsgt	tblptrh,c
  8363  00C824  D003               	bra	u5957
  8364  00C826  0008               	tblrd		*
  8365  00C828  50F5               	movf	tablat,w,c
  8366  00C82A  D005               	bra	u5950
  8367  00C82C                     u5957:
  8368  00C82C  CFF6 FFE9          	movff	tblptrl,fsr0l
  8369  00C830  CFF7 FFEA          	movff	tblptrh,fsr0h
  8370  00C834  50EF               	movf	indf0,w,c
  8371  00C836                     u5950:
  8372  00C836  0900               	iorlw	0
  8373  00C838  A4D8               	btfss	status,2,c
  8374  00C83A  EF21  F064         	goto	u5961
  8375  00C83E  EF23  F064         	goto	u5960
  8376  00C842                     u5961:
  8377  00C842  EFF5  F063         	goto	l6207
  8378  00C846                     u5960:
  8379  00C846  0012               	return		;funcret
  8380  00C848                     __end_of_Oled_WriteString:
  8381                           	callstack 0
  8382                           
  8383 ;; *************** function _Oled_WriteCharacter *****************
  8384 ;; Defined at:
  8385 ;;		line 97 in file "OLED.c"
  8386 ;; Parameters:    Size  Location     Type
  8387 ;;  character       1    wreg     unsigned char 
  8388 ;; Auto vars:     Size  Location     Type
  8389 ;;  character       1   29[COMRAM] unsigned char 
  8390 ;;  i               2   30[COMRAM] int 
  8391 ;; Return value:  Size  Location     Type
  8392 ;;                  1    wreg      void 
  8393 ;; Registers used:
  8394 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8395 ;; Tracked objects:
  8396 ;;		On entry : 0/0
  8397 ;;		On exit  : 0/0
  8398 ;;		Unchanged: 0/0
  8399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8400 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8401 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8402 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8403 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8404 ;;Total ram usage:        7 bytes
  8405 ;; Hardware stack levels used: 1
  8406 ;; Hardware stack levels required when called: 10
  8407 ;; This function calls:
  8408 ;;		_Oled_Data
  8409 ;; This function is called by:
  8410 ;;		_Oled_WriteString
  8411 ;; This function uses a non-reentrant model
  8412 ;;
  8413                           
  8414                           	psect	text34
  8415  00C982                     __ptext34:
  8416                           	callstack 0
  8417  00C982                     _Oled_WriteCharacter:
  8418                           	callstack 19
  8419                           
  8420                           ;incstack = 0
  8421                           ;Oled_WriteCharacter@character stored from wreg
  8422  00C982  6E1E               	movwf	Oled_WriteCharacter@character^0,c
  8423  00C984                     
  8424                           ;OLED.c: 98:     for (int i = 0; i < 5; i++) Oled_Data((ASCII[character - 0x20][i]));
  8425  00C984  0E00               	movlw	0
  8426  00C986  6E20               	movwf	(Oled_WriteCharacter@i+1)^0,c
  8427  00C988  0E00               	movlw	0
  8428  00C98A  6E1F               	movwf	Oled_WriteCharacter@i^0,c
  8429  00C98C                     l6063:
  8430  00C98C  0E60               	movlw	96
  8431  00C98E  6E1A               	movwf	??_Oled_WriteCharacter^0,c
  8432  00C990  0EFF               	movlw	255
  8433  00C992  6E1B               	movwf	(??_Oled_WriteCharacter+1)^0,c
  8434  00C994  501E               	movf	Oled_WriteCharacter@character^0,w,c
  8435  00C996  0D05               	mullw	5
  8436  00C998  0ECF               	movlw	low _ASCII
  8437  00C99A  6E1C               	movwf	(??_Oled_WriteCharacter+2)^0,c
  8438  00C99C  0EFD               	movlw	high _ASCII
  8439  00C99E  6E1D               	movwf	(??_Oled_WriteCharacter+3)^0,c
  8440  00C9A0  50F3               	movf	243,w,c
  8441  00C9A2  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8442  00C9A4  50F4               	movf	244,w,c
  8443  00C9A6  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8444  00C9A8  501F               	movf	Oled_WriteCharacter@i^0,w,c
  8445  00C9AA  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8446  00C9AC  5020               	movf	(Oled_WriteCharacter@i+1)^0,w,c
  8447  00C9AE  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8448  00C9B0  501A               	movf	??_Oled_WriteCharacter^0,w,c
  8449  00C9B2  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8450  00C9B4  501B               	movf	(??_Oled_WriteCharacter+1)^0,w,c
  8451  00C9B6  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8452  00C9B8  C01C  FFF6         	movff	??_Oled_WriteCharacter+2,tblptrl
  8453  00C9BC  C01D  FFF7         	movff	??_Oled_WriteCharacter+3,tblptrh
  8454  00C9C0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8455  00C9C0  6AF8               	clrf	tblptru,c
  8456  00C9C2                     	endif
  8457  00C9C2                     	if	0	;tblptru may be non-zero
  8458  00C9C2                     	endif
  8459  00C9C2  0008               	tblrd		*
  8460  00C9C4  50F5               	movf	tablat,w,c
  8461  00C9C6  ECCB  F060         	call	_Oled_Data
  8462  00C9CA  4A1F               	infsnz	Oled_WriteCharacter@i^0,f,c
  8463  00C9CC  2A20               	incf	(Oled_WriteCharacter@i+1)^0,f,c
  8464  00C9CE  BE20               	btfsc	(Oled_WriteCharacter@i+1)^0,7,c
  8465  00C9D0  EFF3  F064         	goto	u5761
  8466  00C9D4  5020               	movf	(Oled_WriteCharacter@i+1)^0,w,c
  8467  00C9D6  E109               	bnz	u5760
  8468  00C9D8  0E05               	movlw	5
  8469  00C9DA  5C1F               	subwf	Oled_WriteCharacter@i^0,w,c
  8470  00C9DC  A0D8               	btfss	status,0,c
  8471  00C9DE  EFF3  F064         	goto	u5761
  8472  00C9E2  EFF5  F064         	goto	u5760
  8473  00C9E6                     u5761:
  8474  00C9E6  EFC6  F064         	goto	l6063
  8475  00C9EA                     u5760:
  8476  00C9EA                     
  8477                           ;OLED.c: 99:     Oled_Data(0x00);
  8478  00C9EA  0E00               	movlw	0
  8479  00C9EC  ECCB  F060         	call	_Oled_Data
  8480  00C9F0  0012               	return		;funcret
  8481  00C9F2                     __end_of_Oled_WriteCharacter:
  8482                           	callstack 0
  8483                           
  8484 ;; *************** function _Oled_SelectPage *****************
  8485 ;; Defined at:
  8486 ;;		line 142 in file "OLED.c"
  8487 ;; Parameters:    Size  Location     Type
  8488 ;;  page_num        1    wreg     unsigned char 
  8489 ;; Auto vars:     Size  Location     Type
  8490 ;;  page_num        1   25[COMRAM] unsigned char 
  8491 ;;  Result          1   26[COMRAM] unsigned char 
  8492 ;; Return value:  Size  Location     Type
  8493 ;;                  1    wreg      void 
  8494 ;; Registers used:
  8495 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8496 ;; Tracked objects:
  8497 ;;		On entry : 0/0
  8498 ;;		On exit  : 0/0
  8499 ;;		Unchanged: 0/0
  8500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8501 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8502 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8503 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8504 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8505 ;;Total ram usage:        2 bytes
  8506 ;; Hardware stack levels used: 1
  8507 ;; Hardware stack levels required when called: 10
  8508 ;; This function calls:
  8509 ;;		_Oled_Command
  8510 ;; This function is called by:
  8511 ;;		_main
  8512 ;;		_Oled_ClearLine
  8513 ;; This function uses a non-reentrant model
  8514 ;;
  8515                           
  8516                           	psect	text35
  8517  00C13A                     __ptext35:
  8518                           	callstack 0
  8519  00C13A                     _Oled_SelectPage:
  8520                           	callstack 20
  8521                           
  8522                           ;incstack = 0
  8523                           ;Oled_SelectPage@page_num stored from wreg
  8524  00C13A  6E1A               	movwf	Oled_SelectPage@page_num^0,c
  8525  00C13C                     
  8526                           ;OLED.c: 143:     uint8_t Result = 0xB0 | page_num;
  8527  00C13C  501A               	movf	Oled_SelectPage@page_num^0,w,c
  8528  00C13E  09B0               	iorlw	176
  8529  00C140  6E1B               	movwf	Oled_SelectPage@Result^0,c
  8530  00C142                     
  8531                           ;OLED.c: 144:     Oled_Command(Result);
  8532  00C142  501B               	movf	Oled_SelectPage@Result^0,w,c
  8533  00C144  ECDC  F060         	call	_Oled_Command
  8534  00C148                     
  8535                           ;OLED.c: 145:     Oled_Command(0x00);
  8536  00C148  0E00               	movlw	0
  8537  00C14A  ECDC  F060         	call	_Oled_Command
  8538  00C14E                     
  8539                           ;OLED.c: 146:     Oled_Command(0x10);
  8540  00C14E  0E10               	movlw	16
  8541  00C150  ECDC  F060         	call	_Oled_Command
  8542  00C154  0012               	return		;funcret
  8543  00C156                     __end_of_Oled_SelectPage:
  8544                           	callstack 0
  8545                           
  8546 ;; *************** function _Oled_Init *****************
  8547 ;; Defined at:
  8548 ;;		line 59 in file "OLED.c"
  8549 ;; Parameters:    Size  Location     Type
  8550 ;;		None
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;                  1    wreg      void 
  8555 ;; Registers used:
  8556 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8566 ;;Total ram usage:        0 bytes
  8567 ;; Hardware stack levels used: 1
  8568 ;; Hardware stack levels required when called: 10
  8569 ;; This function calls:
  8570 ;;		_Oled_Command
  8571 ;; This function is called by:
  8572 ;;		_main
  8573 ;; This function uses a non-reentrant model
  8574 ;;
  8575                           
  8576                           	psect	text36
  8577  00CB76                     __ptext36:
  8578                           	callstack 0
  8579  00CB76                     _Oled_Init:
  8580                           	callstack 20
  8581  00CB76                     
  8582                           ;OLED.c: 61:     Oled_Command(0xAE);
  8583  00CB76  0EAE               	movlw	174
  8584  00CB78  ECDC  F060         	call	_Oled_Command
  8585                           
  8586                           ;OLED.c: 62:     Oled_Command(0xD5);
  8587  00CB7C  0ED5               	movlw	213
  8588  00CB7E  ECDC  F060         	call	_Oled_Command
  8589                           
  8590                           ;OLED.c: 63:     Oled_Command(0x80);
  8591  00CB82  0E80               	movlw	128
  8592  00CB84  ECDC  F060         	call	_Oled_Command
  8593                           
  8594                           ;OLED.c: 64:     Oled_Command(0xA8);
  8595  00CB88  0EA8               	movlw	168
  8596  00CB8A  ECDC  F060         	call	_Oled_Command
  8597                           
  8598                           ;OLED.c: 65:     Oled_Command(64 - 1);
  8599  00CB8E  0E3F               	movlw	63
  8600  00CB90  ECDC  F060         	call	_Oled_Command
  8601                           
  8602                           ;OLED.c: 66:     Oled_Command(0xD3);
  8603  00CB94  0ED3               	movlw	211
  8604  00CB96  ECDC  F060         	call	_Oled_Command
  8605                           
  8606                           ;OLED.c: 67:     Oled_Command(0x00);
  8607  00CB9A  0E00               	movlw	0
  8608  00CB9C  ECDC  F060         	call	_Oled_Command
  8609                           
  8610                           ;OLED.c: 68:     Oled_Command(0x40 | 0x00);
  8611  00CBA0  0E40               	movlw	64
  8612  00CBA2  ECDC  F060         	call	_Oled_Command
  8613                           
  8614                           ;OLED.c: 69:     Oled_Command(0x8D);
  8615  00CBA6  0E8D               	movlw	141
  8616  00CBA8  ECDC  F060         	call	_Oled_Command
  8617                           
  8618                           ;OLED.c: 70:     Oled_Command(0x14);
  8619  00CBAC  0E14               	movlw	20
  8620  00CBAE  ECDC  F060         	call	_Oled_Command
  8621                           
  8622                           ;OLED.c: 71:     Oled_Command(0x20);
  8623  00CBB2  0E20               	movlw	32
  8624  00CBB4  ECDC  F060         	call	_Oled_Command
  8625                           
  8626                           ;OLED.c: 72:     Oled_Command(0x00);
  8627  00CBB8  0E00               	movlw	0
  8628  00CBBA  ECDC  F060         	call	_Oled_Command
  8629                           
  8630                           ;OLED.c: 73:     Oled_Command(0xA0 | 0x01);
  8631  00CBBE  0EA1               	movlw	161
  8632  00CBC0  ECDC  F060         	call	_Oled_Command
  8633                           
  8634                           ;OLED.c: 74:     Oled_Command(0xC8);
  8635  00CBC4  0EC8               	movlw	200
  8636  00CBC6  ECDC  F060         	call	_Oled_Command
  8637                           
  8638                           ;OLED.c: 75:     Oled_Command(0xDA);
  8639  00CBCA  0EDA               	movlw	218
  8640  00CBCC  ECDC  F060         	call	_Oled_Command
  8641                           
  8642                           ;OLED.c: 76:     Oled_Command(0x02);
  8643  00CBD0  0E02               	movlw	2
  8644  00CBD2  ECDC  F060         	call	_Oled_Command
  8645                           
  8646                           ;OLED.c: 77:     Oled_Command(0x81);
  8647  00CBD6  0E81               	movlw	129
  8648  00CBD8  ECDC  F060         	call	_Oled_Command
  8649                           
  8650                           ;OLED.c: 78:     Oled_Command(0x8F);
  8651  00CBDC  0E8F               	movlw	143
  8652  00CBDE  ECDC  F060         	call	_Oled_Command
  8653                           
  8654                           ;OLED.c: 79:     Oled_Command(0xD9);
  8655  00CBE2  0ED9               	movlw	217
  8656  00CBE4  ECDC  F060         	call	_Oled_Command
  8657                           
  8658                           ;OLED.c: 80:     Oled_Command(0xF1);
  8659  00CBE8  0EF1               	movlw	241
  8660  00CBEA  ECDC  F060         	call	_Oled_Command
  8661                           
  8662                           ;OLED.c: 81:     Oled_Command(0xDB);
  8663  00CBEE  0EDB               	movlw	219
  8664  00CBF0  ECDC  F060         	call	_Oled_Command
  8665                           
  8666                           ;OLED.c: 82:     Oled_Command(0x40);
  8667  00CBF4  0E40               	movlw	64
  8668  00CBF6  ECDC  F060         	call	_Oled_Command
  8669                           
  8670                           ;OLED.c: 83:     Oled_Command(0xA4);
  8671  00CBFA  0EA4               	movlw	164
  8672  00CBFC  ECDC  F060         	call	_Oled_Command
  8673                           
  8674                           ;OLED.c: 84:     Oled_Command(0xA6);
  8675  00CC00  0EA6               	movlw	166
  8676  00CC02  ECDC  F060         	call	_Oled_Command
  8677                           
  8678                           ;OLED.c: 85:     Oled_Command(0x2E);
  8679  00CC06  0E2E               	movlw	46
  8680  00CC08  ECDC  F060         	call	_Oled_Command
  8681                           
  8682                           ;OLED.c: 86:     Oled_Command(0xAF);
  8683  00CC0C  0EAF               	movlw	175
  8684  00CC0E  ECDC  F060         	call	_Oled_Command
  8685  00CC12  0012               	return		;funcret
  8686  00CC14                     __end_of_Oled_Init:
  8687                           	callstack 0
  8688                           
  8689 ;; *************** function _Oled_Command *****************
  8690 ;; Defined at:
  8691 ;;		line 33 in file "OLED.c"
  8692 ;; Parameters:    Size  Location     Type
  8693 ;;  command         1    wreg     unsigned char 
  8694 ;; Auto vars:     Size  Location     Type
  8695 ;;  command         1   22[COMRAM] unsigned char 
  8696 ;;  data_I2C        2   23[COMRAM] unsigned char [2]
  8697 ;; Return value:  Size  Location     Type
  8698 ;;                  1    wreg      void 
  8699 ;; Registers used:
  8700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8701 ;; Tracked objects:
  8702 ;;		On entry : 0/0
  8703 ;;		On exit  : 0/0
  8704 ;;		Unchanged: 0/0
  8705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8706 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8707 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8709 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8710 ;;Total ram usage:        3 bytes
  8711 ;; Hardware stack levels used: 1
  8712 ;; Hardware stack levels required when called: 9
  8713 ;; This function calls:
  8714 ;;		_I2C_WriteNBytes
  8715 ;; This function is called by:
  8716 ;;		_Oled_Init
  8717 ;;		_Oled_SelectPage
  8718 ;;		_Oled_SetContrast
  8719 ;;		_ssd1306_UpdateScreen
  8720 ;; This function uses a non-reentrant model
  8721 ;;
  8722                           
  8723                           	psect	text37
  8724  00C1B8                     __ptext37:
  8725                           	callstack 0
  8726  00C1B8                     _Oled_Command:
  8727                           	callstack 20
  8728                           
  8729                           ;incstack = 0
  8730                           ;Oled_Command@command stored from wreg
  8731  00C1B8  6E17               	movwf	Oled_Command@command^0,c
  8732  00C1BA                     
  8733                           ;OLED.c: 34:     uint8_t data_I2C[2];;OLED.c: 36:     data_I2C[0] = 0x00;
  8734  00C1BA  0E00               	movlw	0
  8735  00C1BC  6E18               	movwf	Oled_Command@data_I2C^0,c
  8736  00C1BE                     
  8737                           ;OLED.c: 37:     data_I2C[1] = command;
  8738  00C1BE  C017  F019         	movff	Oled_Command@command,Oled_Command@data_I2C+1
  8739  00C1C2                     
  8740                           ;OLED.c: 40:     I2C_WriteNBytes(0x3C, data_I2C, 2);
  8741  00C1C2  0E18               	movlw	low Oled_Command@data_I2C
  8742  00C1C4  6E12               	movwf	I2C_WriteNBytes@data^0,c
  8743  00C1C6  0E00               	movlw	high Oled_Command@data_I2C
  8744  00C1C8  6E13               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8745  00C1CA  0E00               	movlw	0
  8746  00C1CC  6E15               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8747  00C1CE  0E02               	movlw	2
  8748  00C1D0  6E14               	movwf	I2C_WriteNBytes@len^0,c
  8749  00C1D2  0E3C               	movlw	60
  8750  00C1D4  EC39  F063         	call	_I2C_WriteNBytes
  8751  00C1D8  0012               	return		;funcret
  8752  00C1DA                     __end_of_Oled_Command:
  8753                           	callstack 0
  8754                           
  8755 ;; *************** function _Oled_Clear *****************
  8756 ;; Defined at:
  8757 ;;		line 109 in file "OLED.c"
  8758 ;; Parameters:    Size  Location     Type
  8759 ;;		None
  8760 ;; Auto vars:     Size  Location     Type
  8761 ;;  i               2   25[COMRAM] int 
  8762 ;; Return value:  Size  Location     Type
  8763 ;;                  1    wreg      void 
  8764 ;; Registers used:
  8765 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8766 ;; Tracked objects:
  8767 ;;		On entry : 0/0
  8768 ;;		On exit  : 0/0
  8769 ;;		Unchanged: 0/0
  8770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8771 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8772 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8773 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8774 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8775 ;;Total ram usage:        2 bytes
  8776 ;; Hardware stack levels used: 1
  8777 ;; Hardware stack levels required when called: 10
  8778 ;; This function calls:
  8779 ;;		_Oled_Data
  8780 ;; This function is called by:
  8781 ;;		_main
  8782 ;; This function uses a non-reentrant model
  8783 ;;
  8784                           
  8785                           	psect	text38
  8786  00C34E                     __ptext38:
  8787                           	callstack 0
  8788  00C34E                     _Oled_Clear:
  8789                           	callstack 20
  8790  00C34E                     
  8791                           ;OLED.c: 110:     int i = 0;
  8792  00C34E  0E00               	movlw	0
  8793  00C350  6E1B               	movwf	(Oled_Clear@i+1)^0,c
  8794  00C352  0E00               	movlw	0
  8795  00C354  6E1A               	movwf	Oled_Clear@i^0,c
  8796  00C356                     l6191:
  8797                           
  8798                           ;OLED.c: 114:         Oled_Data(0x00);
  8799  00C356  0E00               	movlw	0
  8800  00C358  ECCB  F060         	call	_Oled_Data
  8801  00C35C                     
  8802                           ;OLED.c: 115:     }
  8803  00C35C  4A1A               	infsnz	Oled_Clear@i^0,f,c
  8804  00C35E  2A1B               	incf	(Oled_Clear@i+1)^0,f,c
  8805  00C360  BE1B               	btfsc	(Oled_Clear@i+1)^0,7,c
  8806  00C362  EFBA  F061         	goto	u5931
  8807  00C366  0E04               	movlw	4
  8808  00C368  5C1B               	subwf	(Oled_Clear@i+1)^0,w,c
  8809  00C36A  A0D8               	btfss	status,0,c
  8810  00C36C  EFBA  F061         	goto	u5931
  8811  00C370  EFBC  F061         	goto	u5930
  8812  00C374                     u5931:
  8813  00C374  EFAB  F061         	goto	l6191
  8814  00C378                     u5930:
  8815  00C378  0012               	return		;funcret
  8816  00C37A                     __end_of_Oled_Clear:
  8817                           	callstack 0
  8818                           
  8819 ;; *************** function _Oled_Data *****************
  8820 ;; Defined at:
  8821 ;;		line 46 in file "OLED.c"
  8822 ;; Parameters:    Size  Location     Type
  8823 ;;  value           1    wreg     unsigned char 
  8824 ;; Auto vars:     Size  Location     Type
  8825 ;;  value           1   22[COMRAM] unsigned char 
  8826 ;;  data_I2C        2   23[COMRAM] unsigned char [2]
  8827 ;; Return value:  Size  Location     Type
  8828 ;;                  1    wreg      void 
  8829 ;; Registers used:
  8830 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8831 ;; Tracked objects:
  8832 ;;		On entry : 0/0
  8833 ;;		On exit  : 0/0
  8834 ;;		Unchanged: 0/0
  8835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8836 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8840 ;;Total ram usage:        3 bytes
  8841 ;; Hardware stack levels used: 1
  8842 ;; Hardware stack levels required when called: 9
  8843 ;; This function calls:
  8844 ;;		_I2C_WriteNBytes
  8845 ;; This function is called by:
  8846 ;;		_Oled_WriteCharacter
  8847 ;;		_Oled_Clear
  8848 ;;		_Oled_ClearLine
  8849 ;;		_OLEDWriteLargeCharacter
  8850 ;;		_ssd1306_UpdateScreen
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           
  8854                           	psect	text39
  8855  00C196                     __ptext39:
  8856                           	callstack 0
  8857  00C196                     _Oled_Data:
  8858                           	callstack 19
  8859                           
  8860                           ;incstack = 0
  8861                           ;Oled_Data@value stored from wreg
  8862  00C196  6E17               	movwf	Oled_Data@value^0,c
  8863  00C198                     
  8864                           ;OLED.c: 47:     uint8_t data_I2C[2];;OLED.c: 49:     data_I2C[0] = 0x40;
  8865  00C198  0E40               	movlw	64
  8866  00C19A  6E18               	movwf	Oled_Data@data_I2C^0,c
  8867  00C19C                     
  8868                           ;OLED.c: 50:     data_I2C[1] = value;
  8869  00C19C  C017  F019         	movff	Oled_Data@value,Oled_Data@data_I2C+1
  8870  00C1A0                     
  8871                           ;OLED.c: 53:     I2C_WriteNBytes(0x3C, data_I2C, 2);
  8872  00C1A0  0E18               	movlw	low Oled_Data@data_I2C
  8873  00C1A2  6E12               	movwf	I2C_WriteNBytes@data^0,c
  8874  00C1A4  0E00               	movlw	high Oled_Data@data_I2C
  8875  00C1A6  6E13               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8876  00C1A8  0E00               	movlw	0
  8877  00C1AA  6E15               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8878  00C1AC  0E02               	movlw	2
  8879  00C1AE  6E14               	movwf	I2C_WriteNBytes@len^0,c
  8880  00C1B0  0E3C               	movlw	60
  8881  00C1B2  EC39  F063         	call	_I2C_WriteNBytes
  8882  00C1B6  0012               	return		;funcret
  8883  00C1B8                     __end_of_Oled_Data:
  8884                           	callstack 0
  8885                           
  8886 ;; *************** function _I2C_WriteNBytes *****************
  8887 ;; Defined at:
  8888 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8889 ;; Parameters:    Size  Location     Type
  8890 ;;  address         1    wreg     unsigned char 
  8891 ;;  data            2   17[COMRAM] PTR unsigned char 
  8892 ;;		 -> Oled_Data@data_I2C(2), Oled_Command@data_I2C(2), 
  8893 ;;  len             2   19[COMRAM] unsigned int 
  8894 ;; Auto vars:     Size  Location     Type
  8895 ;;  address         1   21[COMRAM] unsigned char 
  8896 ;; Return value:  Size  Location     Type
  8897 ;;                  1    wreg      void 
  8898 ;; Registers used:
  8899 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8900 ;; Tracked objects:
  8901 ;;		On entry : 0/0
  8902 ;;		On exit  : 0/0
  8903 ;;		Unchanged: 0/0
  8904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8905 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8906 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8907 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8908 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8909 ;;Total ram usage:        5 bytes
  8910 ;; Hardware stack levels used: 1
  8911 ;; Hardware stack levels required when called: 8
  8912 ;; This function calls:
  8913 ;;		_I2C_Close
  8914 ;;		_I2C_MasterWrite
  8915 ;;		_I2C_Open
  8916 ;;		_I2C_SetAddressNackCallback
  8917 ;;		_I2C_SetBuffer
  8918 ;; This function is called by:
  8919 ;;		_Oled_Command
  8920 ;;		_Oled_Data
  8921 ;; This function uses a non-reentrant model
  8922 ;;
  8923                           
  8924                           	psect	text40
  8925  00C672                     __ptext40:
  8926                           	callstack 0
  8927  00C672                     _I2C_WriteNBytes:
  8928                           	callstack 19
  8929                           
  8930                           ;incstack = 0
  8931                           ;I2C_WriteNBytes@address stored from wreg
  8932  00C672  6E16               	movwf	I2C_WriteNBytes@address^0,c
  8933  00C674                     l5563:
  8934  00C674  5016               	movf	I2C_WriteNBytes@address^0,w,c
  8935  00C676  EC74  F065         	call	_I2C_Open
  8936  00C67A  0900               	iorlw	0
  8937  00C67C  B4D8               	btfsc	status,2,c
  8938  00C67E  EF43  F063         	goto	u4921
  8939  00C682  EF45  F063         	goto	u4920
  8940  00C686                     u4921:
  8941  00C686  EF3A  F063         	goto	l5563
  8942  00C68A                     u4920:
  8943  00C68A                     
  8944                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  8945  00C68A  C012  F001         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  8946  00C68E  C013  F002         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  8947  00C692  C014  F003         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  8948  00C696  C015  F004         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  8949  00C69A  ECED  F060         	call	_I2C_SetBuffer	;wreg free
  8950  00C69E                     
  8951                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  8952  00C69E  0E00               	movlw	0
  8953  00C6A0  6E06               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8954  00C6A2  0E00               	movlw	0
  8955  00C6A4  6E07               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8956  00C6A6  0E00               	movlw	0
  8957  00C6A8  6E08               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8958  00C6AA  0E00               	movlw	0
  8959  00C6AC  6E09               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8960  00C6AE  EC91  F060         	call	_I2C_SetAddressNackCallback	;wreg free
  8961  00C6B2                     
  8962                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  8963  00C6B2  EC30  F060         	call	_I2C_MasterWrite	;wreg free
  8964  00C6B6                     l5571:
  8965  00C6B6  EC39  F061         	call	_I2C_Close	;wreg free
  8966  00C6BA  06E8               	decf	wreg,f,c
  8967  00C6BC  B4D8               	btfsc	status,2,c
  8968  00C6BE  EF63  F063         	goto	u4931
  8969  00C6C2  EF65  F063         	goto	u4930
  8970  00C6C6                     u4931:
  8971  00C6C6  EF5B  F063         	goto	l5571
  8972  00C6CA                     u4930:
  8973  00C6CA  0012               	return		;funcret
  8974  00C6CC                     __end_of_I2C_WriteNBytes:
  8975                           	callstack 0
  8976                           
  8977 ;; *************** function _I2C_SetAddressNackCallback *****************
  8978 ;; Defined at:
  8979 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  8980 ;; Parameters:    Size  Location     Type
  8981 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
  8982 ;;		 -> Absolute function(1), 
  8983 ;;  ptr             2    7[COMRAM] PTR void 
  8984 ;;		 -> NULL(0), 
  8985 ;; Auto vars:     Size  Location     Type
  8986 ;;		None
  8987 ;; Return value:  Size  Location     Type
  8988 ;;                  1    wreg      void 
  8989 ;; Registers used:
  8990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8991 ;; Tracked objects:
  8992 ;;		On entry : 0/0
  8993 ;;		On exit  : 0/0
  8994 ;;		Unchanged: 0/0
  8995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8999 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9000 ;;Total ram usage:        4 bytes
  9001 ;; Hardware stack levels used: 1
  9002 ;; Hardware stack levels required when called: 1
  9003 ;; This function calls:
  9004 ;;		_I2C_SetCallback
  9005 ;; This function is called by:
  9006 ;;		_I2C_WriteNBytes
  9007 ;;		_I2C_Read1ByteRegister
  9008 ;;		_I2C_Read2ByteRegister
  9009 ;;		_I2C_Write1ByteRegister
  9010 ;;		_I2C_Write2ByteRegister
  9011 ;;		_I2C_ReadDataBlock
  9012 ;; This function uses a non-reentrant model
  9013 ;;
  9014                           
  9015                           	psect	text41
  9016  00C122                     __ptext41:
  9017                           	callstack 0
  9018  00C122                     _I2C_SetAddressNackCallback:
  9019                           	callstack 25
  9020  00C122                     
  9021                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  9022  00C122  C006  F001         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  9023  00C126  C007  F002         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  9024  00C12A  C008  F003         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  9025  00C12E  C009  F004         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  9026  00C132  0E02               	movlw	2
  9027  00C134  ECF9  F064         	call	_I2C_SetCallback
  9028  00C138  0012               	return		;funcret
  9029  00C13A                     __end_of_I2C_SetAddressNackCallback:
  9030                           	callstack 0
  9031                           
  9032 ;; *************** function _I2C_Open *****************
  9033 ;; Defined at:
  9034 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  9035 ;; Parameters:    Size  Location     Type
  9036 ;;  address         1    wreg     unsigned char 
  9037 ;; Auto vars:     Size  Location     Type
  9038 ;;  address         1    0[COMRAM] unsigned char 
  9039 ;;  returnValue     1    1[COMRAM] enum E355
  9040 ;; Return value:  Size  Location     Type
  9041 ;;                  1    wreg      enum E355
  9042 ;; Registers used:
  9043 ;;		wreg, status,2, status,0, cstack
  9044 ;; Tracked objects:
  9045 ;;		On entry : 0/0
  9046 ;;		On exit  : 0/0
  9047 ;;		Unchanged: 0/0
  9048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9049 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9052 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9053 ;;Total ram usage:        2 bytes
  9054 ;; Hardware stack levels used: 1
  9055 ;; Hardware stack levels required when called: 1
  9056 ;; This function calls:
  9057 ;;		_I2C_MasterClearIrq
  9058 ;;		_I2C_MasterOpen
  9059 ;; This function is called by:
  9060 ;;		_I2C_WriteNBytes
  9061 ;;		_I2C_Read1ByteRegister
  9062 ;;		_I2C_Read2ByteRegister
  9063 ;;		_I2C_Write1ByteRegister
  9064 ;;		_I2C_Write2ByteRegister
  9065 ;;		_I2C_ReadNBytes
  9066 ;;		_I2C_ReadDataBlock
  9067 ;; This function uses a non-reentrant model
  9068 ;;
  9069                           
  9070                           	psect	text42
  9071  00CAE8                     __ptext42:
  9072                           	callstack 0
  9073  00CAE8                     _I2C_Open:
  9074                           	callstack 25
  9075                           
  9076                           ;incstack = 0
  9077                           ;I2C_Open@address stored from wreg
  9078  00CAE8  6E01               	movwf	I2C_Open@address^0,c
  9079  00CAEA                     
  9080                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9081  00CAEA  0E01               	movlw	1
  9082  00CAEC  6E02               	movwf	I2C_Open@returnValue^0,c
  9083  00CAEE                     
  9084                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  9085  00CAEE  0101               	movlb	1	; () banked
  9086  00CAF0  B573               	btfsc	(_I2C_Status+35)& (0+255),2,b
  9087  00CAF2  EF7D  F065         	goto	u3901
  9088  00CAF6  EF7F  F065         	goto	u3900
  9089  00CAFA                     u3901:
  9090  00CAFA  EFB9  F065         	goto	l4985
  9091  00CAFE                     u3900:
  9092  00CAFE                     
  9093                           ; BSR set to: 1
  9094                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  9095  00CAFE  C001  F16C         	movff	I2C_Open@address,_I2C_Status+28
  9096  00CB02                     
  9097                           ; BSR set to: 1
  9098                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  9099  00CB02  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
  9100  00CB04                     
  9101                           ; BSR set to: 1
  9102                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  9103  00CB04  8573               	bsf	(_I2C_Status+35)& (0+255),2,b
  9104  00CB06                     
  9105                           ; BSR set to: 1
  9106                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  9107  00CB06  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
  9108  00CB08                     
  9109                           ; BSR set to: 1
  9110                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  9111  00CB08  0E0E               	movlw	14
  9112  00CB0A  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9113  00CB0C                     
  9114                           ; BSR set to: 1
  9115                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  9116  00CB0C  0E01               	movlw	1
  9117  00CB0E  6F6B               	movwf	(_I2C_Status+27)& (0+255),b
  9118  00CB10  0EF4               	movlw	244
  9119  00CB12  6F6A               	movwf	(_I2C_Status+26)& (0+255),b
  9120  00CB14                     
  9121                           ; BSR set to: 1
  9122                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  9123  00CB14  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
  9124  00CB16                     
  9125                           ; BSR set to: 1
  9126                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  9127  00CB16  0EE8               	movlw	low _I2C_CallbackReturnStop
  9128  00CB18  6F50               	movwf	_I2C_Status& (0+255),b
  9129  00CB1A  0EBF               	movlw	high _I2C_CallbackReturnStop
  9130  00CB1C  6F51               	movwf	(_I2C_Status+1)& (0+255),b
  9131  00CB1E                     
  9132                           ; BSR set to: 1
  9133                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  9134  00CB1E  0E00               	movlw	0
  9135  00CB20  6F5C               	movwf	(_I2C_Status+12)& (0+255),b
  9136  00CB22  0E00               	movlw	0
  9137  00CB24  6F5D               	movwf	(_I2C_Status+13)& (0+255),b
  9138  00CB26                     
  9139                           ; BSR set to: 1
  9140                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  9141  00CB26  0EE8               	movlw	low _I2C_CallbackReturnStop
  9142  00CB28  6F52               	movwf	(_I2C_Status+2)& (0+255),b
  9143  00CB2A  0EBF               	movlw	high _I2C_CallbackReturnStop
  9144  00CB2C  6F53               	movwf	(_I2C_Status+3)& (0+255),b
  9145  00CB2E                     
  9146                           ; BSR set to: 1
  9147                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  9148  00CB2E  0E00               	movlw	0
  9149  00CB30  6F5E               	movwf	(_I2C_Status+14)& (0+255),b
  9150  00CB32  0E00               	movlw	0
  9151  00CB34  6F5F               	movwf	(_I2C_Status+15)& (0+255),b
  9152  00CB36                     
  9153                           ; BSR set to: 1
  9154                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  9155  00CB36  0EE8               	movlw	low _I2C_CallbackReturnStop
  9156  00CB38  6F54               	movwf	(_I2C_Status+4)& (0+255),b
  9157  00CB3A  0EBF               	movlw	high _I2C_CallbackReturnStop
  9158  00CB3C  6F55               	movwf	(_I2C_Status+5)& (0+255),b
  9159  00CB3E                     
  9160                           ; BSR set to: 1
  9161                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  9162  00CB3E  0E00               	movlw	0
  9163  00CB40  6F60               	movwf	(_I2C_Status+16)& (0+255),b
  9164  00CB42  0E00               	movlw	0
  9165  00CB44  6F61               	movwf	(_I2C_Status+17)& (0+255),b
  9166  00CB46                     
  9167                           ; BSR set to: 1
  9168                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  9169  00CB46  0EE8               	movlw	low _I2C_CallbackReturnStop
  9170  00CB48  6F56               	movwf	(_I2C_Status+6)& (0+255),b
  9171  00CB4A  0EBF               	movlw	high _I2C_CallbackReturnStop
  9172  00CB4C  6F57               	movwf	(_I2C_Status+7)& (0+255),b
  9173  00CB4E                     
  9174                           ; BSR set to: 1
  9175                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  9176  00CB4E  0E00               	movlw	0
  9177  00CB50  6F62               	movwf	(_I2C_Status+18)& (0+255),b
  9178  00CB52  0E00               	movlw	0
  9179  00CB54  6F63               	movwf	(_I2C_Status+19)& (0+255),b
  9180  00CB56                     
  9181                           ; BSR set to: 1
  9182                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  9183  00CB56  0EEC               	movlw	low _I2C_CallbackReturnReset
  9184  00CB58  6F58               	movwf	(_I2C_Status+8)& (0+255),b
  9185  00CB5A  0EBF               	movlw	high _I2C_CallbackReturnReset
  9186  00CB5C  6F59               	movwf	(_I2C_Status+9)& (0+255),b
  9187  00CB5E                     
  9188                           ; BSR set to: 1
  9189                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  9190  00CB5E  0E00               	movlw	0
  9191  00CB60  6F64               	movwf	(_I2C_Status+20)& (0+255),b
  9192  00CB62  0E00               	movlw	0
  9193  00CB64  6F65               	movwf	(_I2C_Status+21)& (0+255),b
  9194  00CB66                     
  9195                           ; BSR set to: 1
  9196                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  9197  00CB66  ECE8  F05F         	call	_I2C_MasterClearIrq	;wreg free
  9198  00CB6A                     
  9199                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  9200  00CB6A  ECBA  F060         	call	_I2C_MasterOpen	;wreg free
  9201  00CB6E                     
  9202                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  9203  00CB6E  0E00               	movlw	0
  9204  00CB70  6E02               	movwf	I2C_Open@returnValue^0,c
  9205  00CB72                     l4985:
  9206                           
  9207                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  9208  00CB72  5002               	movf	I2C_Open@returnValue^0,w,c
  9209  00CB74  0012               	return		;funcret
  9210  00CB76                     __end_of_I2C_Open:
  9211                           	callstack 0
  9212                           
  9213 ;; *************** function _I2C_MasterOpen *****************
  9214 ;; Defined at:
  9215 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      _Bool 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9233 ;;Total ram usage:        0 bytes
  9234 ;; Hardware stack levels used: 1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		_I2C_Open
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           	psect	text43
  9243  00C174                     __ptext43:
  9244                           	callstack 0
  9245  00C174                     _I2C_MasterOpen:
  9246                           	callstack 25
  9247  00C174                     
  9248                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  9249  00C174  BAC6               	btfsc	198,5,c	;volatile
  9250  00C176  EFBF  F060         	goto	u3441
  9251  00C17A  EFC1  F060         	goto	u3440
  9252  00C17E                     u3441:
  9253  00C17E  EFCA  F060         	goto	l424
  9254  00C182                     u3440:
  9255  00C182                     
  9256                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  9257  00C182  0E00               	movlw	0
  9258  00C184  6EC7               	movwf	199,c	;volatile
  9259                           
  9260                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  9261  00C186  0E08               	movlw	8
  9262  00C188  6EC6               	movwf	198,c	;volatile
  9263                           
  9264                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  9265  00C18A  0E00               	movlw	0
  9266  00C18C  6EC5               	movwf	197,c	;volatile
  9267                           
  9268                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  9269  00C18E  0E13               	movlw	19
  9270  00C190  6EC8               	movwf	200,c	;volatile
  9271  00C192                     
  9272                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  9273  00C192  8AC6               	bsf	198,5,c	;volatile
  9274  00C194                     l424:
  9275  00C194  0012               	return		;funcret
  9276  00C196                     __end_of_I2C_MasterOpen:
  9277                           	callstack 0
  9278                           
  9279 ;; *************** function _I2C_MasterWrite *****************
  9280 ;; Defined at:
  9281 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  9282 ;; Parameters:    Size  Location     Type
  9283 ;;		None
  9284 ;; Auto vars:     Size  Location     Type
  9285 ;;		None
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  1    wreg      enum E355
  9288 ;; Registers used:
  9289 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9295 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9296 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;Total ram usage:        0 bytes
  9300 ;; Hardware stack levels used: 1
  9301 ;; Hardware stack levels required when called: 7
  9302 ;; This function calls:
  9303 ;;		_I2C_MasterOperation
  9304 ;; This function is called by:
  9305 ;;		_I2C_WriteNBytes
  9306 ;;		_I2C_Read1ByteRegister
  9307 ;;		_I2C_Read2ByteRegister
  9308 ;;		_I2C_Write1ByteRegister
  9309 ;;		_I2C_Write2ByteRegister
  9310 ;;		_I2C_ReadDataBlock
  9311 ;; This function uses a non-reentrant model
  9312 ;;
  9313                           
  9314                           	psect	text44
  9315  00C060                     __ptext44:
  9316                           	callstack 0
  9317  00C060                     _I2C_MasterWrite:
  9318                           	callstack 19
  9319  00C060                     
  9320                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  9321  00C060  0E00               	movlw	0
  9322  00C062  EC80  F062         	call	_I2C_MasterOperation
  9323  00C066  0012               	return		;funcret
  9324  00C068                     __end_of_I2C_MasterWrite:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _I2C_MasterOperation *****************
  9328 ;; Defined at:
  9329 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;  read            1    wreg     _Bool 
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;  read            1   15[COMRAM] _Bool 
  9334 ;;  returnValue     1   16[COMRAM] enum E355
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  1    wreg      enum E355
  9337 ;; Registers used:
  9338 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9344 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9345 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9348 ;;Total ram usage:        2 bytes
  9349 ;; Hardware stack levels used: 1
  9350 ;; Hardware stack levels required when called: 6
  9351 ;; This function calls:
  9352 ;;		_I2C_MasterStart
  9353 ;;		_I2C_Poller
  9354 ;; This function is called by:
  9355 ;;		_I2C_MasterWrite
  9356 ;;		_I2C_MasterRead
  9357 ;; This function uses a non-reentrant model
  9358 ;;
  9359                           
  9360                           	psect	text45
  9361  00C500                     __ptext45:
  9362                           	callstack 0
  9363  00C500                     _I2C_MasterOperation:
  9364                           	callstack 19
  9365                           
  9366                           ;incstack = 0
  9367                           ;I2C_MasterOperation@read stored from wreg
  9368  00C500  6E10               	movwf	I2C_MasterOperation@read^0,c
  9369  00C502                     
  9370                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9371  00C502  0E01               	movlw	1
  9372  00C504  6E11               	movwf	I2C_MasterOperation@returnValue^0,c
  9373  00C506                     
  9374                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  9375  00C506  0101               	movlb	1	; () banked
  9376  00C508  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9377  00C50A  EF89  F062         	goto	u3451
  9378  00C50E  EF8B  F062         	goto	u3450
  9379  00C512                     u3451:
  9380  00C512  EFA0  F062         	goto	l4713
  9381  00C516                     u3450:
  9382  00C516                     
  9383                           ; BSR set to: 1
  9384                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  9385  00C516  8373               	bsf	(_I2C_Status+35)& (0+255),1,b
  9386  00C518                     
  9387                           ; BSR set to: 1
  9388                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  9389  00C518  0E00               	movlw	0
  9390  00C51A  6E11               	movwf	I2C_MasterOperation@returnValue^0,c
  9391  00C51C                     
  9392                           ; BSR set to: 1
  9393                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  9394  00C51C  5010               	movf	I2C_MasterOperation@read^0,w,c
  9395  00C51E  B4D8               	btfsc	status,2,c
  9396  00C520  EF94  F062         	goto	u3461
  9397  00C524  EF96  F062         	goto	u3460
  9398  00C528                     u3461:
  9399  00C528  EF9A  F062         	goto	l4707
  9400  00C52C                     u3460:
  9401  00C52C                     
  9402                           ; BSR set to: 1
  9403                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9404  00C52C  0E01               	movlw	1
  9405  00C52E  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9406                           
  9407                           ;mcc_generated_files/i2c_master.c: 235:         }
  9408  00C530  EF9C  F062         	goto	l4709
  9409  00C534                     l4707:
  9410                           
  9411                           ; BSR set to: 1
  9412                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9413  00C534  0E02               	movlw	2
  9414  00C536  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9415  00C538                     l4709:
  9416                           
  9417                           ; BSR set to: 1
  9418                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  9419  00C538  ECEE  F05F         	call	_I2C_MasterStart	;wreg free
  9420  00C53C                     
  9421                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  9422  00C53C  ECAB  F060         	call	_I2C_Poller	;wreg free
  9423  00C540                     l4713:
  9424                           
  9425                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  9426  00C540  5011               	movf	I2C_MasterOperation@returnValue^0,w,c
  9427  00C542  0012               	return		;funcret
  9428  00C544                     __end_of_I2C_MasterOperation:
  9429                           	callstack 0
  9430                           
  9431 ;; *************** function _I2C_Poller *****************
  9432 ;; Defined at:
  9433 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  9434 ;; Parameters:    Size  Location     Type
  9435 ;;		None
  9436 ;; Auto vars:     Size  Location     Type
  9437 ;;		None
  9438 ;; Return value:  Size  Location     Type
  9439 ;;                  1    wreg      void 
  9440 ;; Registers used:
  9441 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9442 ;; Tracked objects:
  9443 ;;		On entry : 0/0
  9444 ;;		On exit  : 0/0
  9445 ;;		Unchanged: 0/0
  9446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9447 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9448 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9449 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9450 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9451 ;;Total ram usage:        0 bytes
  9452 ;; Hardware stack levels used: 1
  9453 ;; Hardware stack levels required when called: 5
  9454 ;; This function calls:
  9455 ;;		_I2C_MasterFsm
  9456 ;;		_I2C_MasterWaitForEvent
  9457 ;; This function is called by:
  9458 ;;		_I2C_MasterOperation
  9459 ;; This function uses a non-reentrant model
  9460 ;;
  9461                           
  9462                           	psect	text46
  9463  00C156                     __ptext46:
  9464                           	callstack 0
  9465  00C156                     _I2C_Poller:
  9466                           	callstack 19
  9467  00C156                     
  9468                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9469  00C156  EFB1  F060         	goto	l4667
  9470  00C15A                     l4663:
  9471                           
  9472                           ; BSR set to: 1
  9473                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  9474  00C15A  EC60  F060         	call	_I2C_MasterWaitForEvent	;wreg free
  9475  00C15E                     
  9476                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  9477  00C15E  EC89  F064         	call	_I2C_MasterFsm	;wreg free
  9478  00C162                     l4667:
  9479                           
  9480                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9481  00C162  0101               	movlb	1	; () banked
  9482  00C164  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9483  00C166  EFB7  F060         	goto	u3391
  9484  00C16A  EFB9  F060         	goto	u3390
  9485  00C16E                     u3391:
  9486  00C16E  EFAD  F060         	goto	l4663
  9487  00C172                     u3390:
  9488  00C172                     
  9489                           ; BSR set to: 1
  9490  00C172  0012               	return		;funcret
  9491  00C174                     __end_of_I2C_Poller:
  9492                           	callstack 0
  9493                           
  9494 ;; *************** function _I2C_MasterWaitForEvent *****************
  9495 ;; Defined at:
  9496 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  9497 ;; Parameters:    Size  Location     Type
  9498 ;;		None
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;		None
  9501 ;; Return value:  Size  Location     Type
  9502 ;;                  1    wreg      void 
  9503 ;; Registers used:
  9504 ;;		None
  9505 ;; Tracked objects:
  9506 ;;		On entry : 0/0
  9507 ;;		On exit  : 0/0
  9508 ;;		Unchanged: 0/0
  9509 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9510 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9511 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9512 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9513 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9514 ;;Total ram usage:        0 bytes
  9515 ;; Hardware stack levels used: 1
  9516 ;; This function calls:
  9517 ;;		Nothing
  9518 ;; This function is called by:
  9519 ;;		_I2C_Poller
  9520 ;; This function uses a non-reentrant model
  9521 ;;
  9522                           
  9523                           	psect	text47
  9524  00C0C0                     __ptext47:
  9525                           	callstack 0
  9526  00C0C0                     _I2C_MasterWaitForEvent:
  9527                           	callstack 23
  9528  00C0C0                     l481:
  9529                           
  9530                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  9531  00C0C0  A69E               	btfss	158,3,c	;volatile
  9532  00C0C2  EF65  F060         	goto	u3351
  9533  00C0C6  EF67  F060         	goto	u3350
  9534  00C0CA                     u3351:
  9535  00C0CA  EF60  F060         	goto	l481
  9536  00C0CE                     u3350:
  9537  00C0CE  0012               	return		;funcret
  9538  00C0D0                     __end_of_I2C_MasterWaitForEvent:
  9539                           	callstack 0
  9540                           
  9541 ;; *************** function _I2C_MasterFsm *****************
  9542 ;; Defined at:
  9543 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  9544 ;; Parameters:    Size  Location     Type
  9545 ;;		None
  9546 ;; Auto vars:     Size  Location     Type
  9547 ;;		None
  9548 ;; Return value:  Size  Location     Type
  9549 ;;                  1    wreg      void 
  9550 ;; Registers used:
  9551 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9552 ;; Tracked objects:
  9553 ;;		On entry : 0/0
  9554 ;;		On exit  : 0/0
  9555 ;;		Unchanged: 0/0
  9556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9557 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9558 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9559 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9560 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9561 ;;Total ram usage:        2 bytes
  9562 ;; Hardware stack levels used: 1
  9563 ;; Hardware stack levels required when called: 4
  9564 ;; This function calls:
  9565 ;;		_I2C_DO_ADDRESS_NACK
  9566 ;;		_I2C_DO_IDLE
  9567 ;;		_I2C_DO_RCEN
  9568 ;;		_I2C_DO_RESET
  9569 ;;		_I2C_DO_RX
  9570 ;;		_I2C_DO_RX_ACK
  9571 ;;		_I2C_DO_RX_NACK_RESTART
  9572 ;;		_I2C_DO_RX_NACK_STOP
  9573 ;;		_I2C_DO_SEND_ADR_READ
  9574 ;;		_I2C_DO_SEND_ADR_WRITE
  9575 ;;		_I2C_DO_SEND_RESTART
  9576 ;;		_I2C_DO_SEND_RESTART_READ
  9577 ;;		_I2C_DO_SEND_RESTART_WRITE
  9578 ;;		_I2C_DO_SEND_STOP
  9579 ;;		_I2C_DO_TX
  9580 ;;		_I2C_DO_TX_EMPTY
  9581 ;;		_I2C_MasterClearIrq
  9582 ;;		_I2C_MasterIsNack
  9583 ;; This function is called by:
  9584 ;;		_I2C_Poller
  9585 ;; This function uses a non-reentrant model
  9586 ;;
  9587                           
  9588                           	psect	text48
  9589  00C912                     __ptext48:
  9590                           	callstack 0
  9591  00C912                     _I2C_MasterFsm:
  9592                           	callstack 19
  9593  00C912                     
  9594                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  9595  00C912  ECE8  F05F         	call	_I2C_MasterClearIrq	;wreg free
  9596  00C916                     
  9597                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  9598  00C916  0101               	movlb	1	; () banked
  9599  00C918  A173               	btfss	(_I2C_Status+35)& (0+255),0,b
  9600  00C91A  EF91  F064         	goto	u3361
  9601  00C91E  EF93  F064         	goto	u3360
  9602  00C922                     u3361:
  9603  00C922  EFA0  F064         	goto	l4657
  9604  00C926                     u3360:
  9605  00C926                     
  9606                           ; BSR set to: 1
  9607  00C926  EC7B  F060         	call	_I2C_MasterIsNack	;wreg free
  9608  00C92A  0900               	iorlw	0
  9609  00C92C  B4D8               	btfsc	status,2,c
  9610  00C92E  EF9B  F064         	goto	u3371
  9611  00C932  EF9D  F064         	goto	u3370
  9612  00C936                     u3371:
  9613  00C936  EFA0  F064         	goto	l4657
  9614  00C93A                     u3370:
  9615  00C93A                     
  9616                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  9617  00C93A  0E0F               	movlw	15
  9618  00C93C  0101               	movlb	1	; () banked
  9619  00C93E  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9620  00C940                     l4657:
  9621                           
  9622                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  9623  00C940  0101               	movlb	1	; () banked
  9624  00C942  5171               	movf	(_I2C_Status+33)& (0+255),w,b
  9625  00C944  0D02               	mullw	2
  9626  00C946  0EAF               	movlw	low _i2c_fsmStateTable
  9627  00C948  24F3               	addwf	243,w,c
  9628  00C94A  6EF6               	movwf	tblptrl,c
  9629  00C94C  0EFD               	movlw	high _i2c_fsmStateTable
  9630  00C94E  20F4               	addwfc	244,w,c
  9631  00C950  6EF7               	movwf	tblptrh,c
  9632  00C952                     	if	1	;There are 3 active tblptr bytes
  9633  00C952  6AF8               	clrf	tblptru,c
  9634  00C954  0E00               	movlw	low (__mediumconst shr (0+16))
  9635  00C956  22F8               	addwfc	tblptru,f,c
  9636  00C958                     	endif
  9637  00C958  0009               	tblrd		*+
  9638  00C95A  CFF5 F00E          	movff	tablat,??_I2C_MasterFsm
  9639  00C95E  0009               	tblrd		*+
  9640  00C960  CFF5 F00F          	movff	tablat,??_I2C_MasterFsm+1
  9641  00C964  D802               	call	u3388
  9642  00C966  EFBE  F064         	goto	u3389
  9643  00C96A                     u3388:
  9644  00C96A  0005               	push	
  9645  00C96C  6EFA               	movwf	pclath,c
  9646  00C96E  500E               	movf	??_I2C_MasterFsm^0,w,c
  9647  00C970  6EFD               	movwf	tosl,c
  9648  00C972  500F               	movf	(??_I2C_MasterFsm+1)^0,w,c
  9649  00C974  6EFE               	movwf	tosh,c
  9650  00C976  6AFF               	clrf	tosu,c
  9651  00C978  50FA               	movf	pclath,w,c
  9652  00C97A  0012               	return		;indir
  9653  00C97C                     u3389:
  9654  00C97C  0101               	movlb	1	; () banked
  9655  00C97E  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9656  00C980                     
  9657                           ; BSR set to: 1
  9658  00C980  0012               	return		;funcret
  9659  00C982                     __end_of_I2C_MasterFsm:
  9660                           	callstack 0
  9661                           
  9662 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  9663 ;; Defined at:
  9664 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  9665 ;; Parameters:    Size  Location     Type
  9666 ;;		None
  9667 ;; Auto vars:     Size  Location     Type
  9668 ;;		None
  9669 ;; Return value:  Size  Location     Type
  9670 ;;                  1    wreg      enum E12577
  9671 ;; Registers used:
  9672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9673 ;; Tracked objects:
  9674 ;;		On entry : 0/0
  9675 ;;		On exit  : 0/0
  9676 ;;		Unchanged: 0/0
  9677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9679 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9680 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9681 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9682 ;;Total ram usage:        2 bytes
  9683 ;; Hardware stack levels used: 1
  9684 ;; Hardware stack levels required when called: 3
  9685 ;; This function calls:
  9686 ;;		Absolute function
  9687 ;;		_I2C_CallbackReturnReset
  9688 ;;		_I2C_CallbackReturnStop
  9689 ;;		_I2C_DO_SEND_RESTART
  9690 ;;		_I2C_DO_SEND_STOP
  9691 ;;		_rd1RegCompleteHandler
  9692 ;;		_rd2RegCompleteHandler
  9693 ;;		_rdBlkRegCompleteHandler
  9694 ;;		_wr1RegCompleteHandler
  9695 ;;		_wr2RegCompleteHandler
  9696 ;; This function is called by:
  9697 ;;		_I2C_MasterFsm
  9698 ;; This function uses a non-reentrant model
  9699 ;;
  9700                           
  9701                           	psect	text49
  9702  00C8AC                     __ptext49:
  9703                           	callstack 0
  9704  00C8AC                     _I2C_DO_ADDRESS_NACK:
  9705                           	callstack 19
  9706  00C8AC                     
  9707                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  9708  00C8AC  0101               	movlb	1	; () banked
  9709  00C8AE  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
  9710  00C8B0                     
  9711                           ; BSR set to: 1
  9712                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  9713  00C8B0  0E02               	movlw	2
  9714  00C8B2  6F72               	movwf	(_I2C_Status+34)& (0+255),b
  9715                           
  9716                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  9717  00C8B4  EF64  F064         	goto	l4639
  9718  00C8B8                     l4629:
  9719                           
  9720                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  9721  00C8B8  EC1C  F060         	call	_I2C_DO_SEND_RESTART	;wreg free
  9722  00C8BC  EF88  F064         	goto	l403
  9723  00C8C0                     l4633:
  9724                           
  9725                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  9726  00C8C0  EC20  F060         	call	_I2C_DO_SEND_STOP	;wreg free
  9727  00C8C4  EF88  F064         	goto	l403
  9728  00C8C8                     l4639:
  9729                           
  9730                           ; BSR set to: 1
  9731  00C8C8  C160  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  9732  00C8CC  C161  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  9733  00C8D0  D802               	call	u3348
  9734  00C8D2  EF74  F064         	goto	u3349
  9735  00C8D6                     u3348:
  9736  00C8D6  0005               	push	
  9737  00C8D8  6EFA               	movwf	pclath,c
  9738  00C8DA  5154               	movf	(_I2C_Status+4)& (0+255),w,b
  9739  00C8DC  6EFD               	movwf	tosl,c
  9740  00C8DE  5155               	movf	(_I2C_Status+5)& (0+255),w,b
  9741  00C8E0  6EFE               	movwf	tosh,c
  9742  00C8E2  6AFF               	clrf	tosu,c
  9743  00C8E4  50FA               	movf	pclath,w,c
  9744  00C8E6  0012               	return		;indir
  9745  00C8E8                     u3349:
  9746  00C8E8  6E0C               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  9747  00C8EA  6A0D               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  9748                           
  9749                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9750                           ; Switch size 1, requested type "simple"
  9751                           ; Number of cases is 1, Range of values is 0 to 0
  9752                           ; switch strategies available:
  9753                           ; Name         Instructions Cycles
  9754                           ; simple_byte            4     3 (average)
  9755                           ;	Chosen strategy is simple_byte
  9756  00C8EC  500D               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  9757  00C8EE  0A00               	xorlw	0	; case 0
  9758  00C8F0  B4D8               	btfsc	status,2,c
  9759  00C8F2  EF7D  F064         	goto	l6725
  9760  00C8F6  EF60  F064         	goto	l4633
  9761  00C8FA                     l6725:
  9762                           
  9763                           ; Switch size 1, requested type "simple"
  9764                           ; Number of cases is 2, Range of values is 2 to 3
  9765                           ; switch strategies available:
  9766                           ; Name         Instructions Cycles
  9767                           ; simple_byte            7     4 (average)
  9768                           ;	Chosen strategy is simple_byte
  9769  00C8FA  500C               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  9770  00C8FC  0A02               	xorlw	2	; case 2
  9771  00C8FE  B4D8               	btfsc	status,2,c
  9772  00C900  EF5C  F064         	goto	l4629
  9773  00C904  0A01               	xorlw	1	; case 3
  9774  00C906  B4D8               	btfsc	status,2,c
  9775  00C908  EF5C  F064         	goto	l4629
  9776  00C90C  EF60  F064         	goto	l4633
  9777  00C910                     l403:
  9778  00C910  0012               	return		;funcret
  9779  00C912                     __end_of_I2C_DO_ADDRESS_NACK:
  9780                           	callstack 0
  9781                           
  9782 ;; *************** function _I2C_DO_RESET *****************
  9783 ;; Defined at:
  9784 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  9785 ;; Parameters:    Size  Location     Type
  9786 ;;		None
  9787 ;; Auto vars:     Size  Location     Type
  9788 ;;		None
  9789 ;; Return value:  Size  Location     Type
  9790 ;;                  1    wreg      enum E12577
  9791 ;; Registers used:
  9792 ;;		wreg, status,2
  9793 ;; Tracked objects:
  9794 ;;		On entry : 0/0
  9795 ;;		On exit  : 0/0
  9796 ;;		Unchanged: 0/0
  9797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9798 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9801 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9802 ;;Total ram usage:        0 bytes
  9803 ;; Hardware stack levels used: 1
  9804 ;; This function calls:
  9805 ;;		Nothing
  9806 ;; This function is called by:
  9807 ;;		_I2C_MasterFsm
  9808 ;; This function uses a non-reentrant model
  9809 ;;
  9810                           
  9811                           	psect	text50
  9812  00C094                     __ptext50:
  9813                           	callstack 0
  9814  00C094                     _I2C_DO_RESET:
  9815                           	callstack 22
  9816  00C094                     
  9817                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  9818  00C094  0101               	movlb	1	; () banked
  9819  00C096  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
  9820  00C098                     
  9821                           ; BSR set to: 1
  9822                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  9823  00C098  0E00               	movlw	0
  9824  00C09A  6F72               	movwf	(_I2C_Status+34)& (0+255),b
  9825  00C09C                     
  9826                           ; BSR set to: 1
  9827                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  9828  00C09C  0E0E               	movlw	14
  9829  00C09E                     
  9830                           ; BSR set to: 1
  9831  00C09E  0012               	return		;funcret
  9832  00C0A0                     __end_of_I2C_DO_RESET:
  9833                           	callstack 0
  9834                           
  9835 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  9836 ;; Defined at:
  9837 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;		None
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      enum E12577
  9844 ;; Registers used:
  9845 ;;		wreg, cstack
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9855 ;;Total ram usage:        0 bytes
  9856 ;; Hardware stack levels used: 1
  9857 ;; Hardware stack levels required when called: 1
  9858 ;; This function calls:
  9859 ;;		_I2C_MasterSendNack
  9860 ;; This function is called by:
  9861 ;;		_I2C_DO_RX
  9862 ;;		_I2C_MasterFsm
  9863 ;; This function uses a non-reentrant model
  9864 ;;
  9865                           
  9866                           	psect	text51
  9867  00C058                     __ptext51:
  9868                           	callstack 0
  9869  00C058                     _I2C_DO_RX_NACK_RESTART:
  9870                           	callstack 21
  9871  00C058                     
  9872                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  9873  00C058  ECFE  F05F         	call	_I2C_MasterSendNack	;wreg free
  9874  00C05C                     
  9875                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  9876  00C05C  0E09               	movlw	9
  9877  00C05E  0012               	return		;funcret
  9878  00C060                     __end_of_I2C_DO_RX_NACK_RESTART:
  9879                           	callstack 0
  9880                           
  9881 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  9882 ;; Defined at:
  9883 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;		None
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;		None
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  1    wreg      enum E12577
  9890 ;; Registers used:
  9891 ;;		wreg, cstack
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9900 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9901 ;;Total ram usage:        0 bytes
  9902 ;; Hardware stack levels used: 1
  9903 ;; Hardware stack levels required when called: 1
  9904 ;; This function calls:
  9905 ;;		_I2C_MasterSendNack
  9906 ;; This function is called by:
  9907 ;;		_I2C_DO_RX
  9908 ;;		_I2C_MasterFsm
  9909 ;; This function uses a non-reentrant model
  9910 ;;
  9911                           
  9912                           	psect	text52
  9913  00C050                     __ptext52:
  9914                           	callstack 0
  9915  00C050                     _I2C_DO_RX_NACK_STOP:
  9916                           	callstack 21
  9917  00C050                     
  9918                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  9919  00C050  ECFE  F05F         	call	_I2C_MasterSendNack	;wreg free
  9920  00C054                     
  9921                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  9922  00C054  0E0A               	movlw	10
  9923  00C056  0012               	return		;funcret
  9924  00C058                     __end_of_I2C_DO_RX_NACK_STOP:
  9925                           	callstack 0
  9926                           
  9927 ;; *************** function _I2C_DO_RX_ACK *****************
  9928 ;; Defined at:
  9929 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  9930 ;; Parameters:    Size  Location     Type
  9931 ;;		None
  9932 ;; Auto vars:     Size  Location     Type
  9933 ;;		None
  9934 ;; Return value:  Size  Location     Type
  9935 ;;                  1    wreg      enum E12577
  9936 ;; Registers used:
  9937 ;;		wreg, cstack
  9938 ;; Tracked objects:
  9939 ;;		On entry : 0/0
  9940 ;;		On exit  : 0/0
  9941 ;;		Unchanged: 0/0
  9942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9944 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9946 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9947 ;;Total ram usage:        0 bytes
  9948 ;; Hardware stack levels used: 1
  9949 ;; Hardware stack levels required when called: 1
  9950 ;; This function calls:
  9951 ;;		_I2C_MasterSendAck
  9952 ;; This function is called by:
  9953 ;;		_I2C_MasterFsm
  9954 ;; This function uses a non-reentrant model
  9955 ;;
  9956                           
  9957                           	psect	text53
  9958  00C048                     __ptext53:
  9959                           	callstack 0
  9960  00C048                     _I2C_DO_RX_ACK:
  9961                           	callstack 21
  9962  00C048                     
  9963                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  9964  00C048  EC01  F060         	call	_I2C_MasterSendAck	;wreg free
  9965  00C04C                     
  9966                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  9967  00C04C  0E05               	movlw	5
  9968  00C04E  0012               	return		;funcret
  9969  00C050                     __end_of_I2C_DO_RX_ACK:
  9970                           	callstack 0
  9971                           
  9972 ;; *************** function _I2C_DO_SEND_STOP *****************
  9973 ;; Defined at:
  9974 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  9975 ;; Parameters:    Size  Location     Type
  9976 ;;		None
  9977 ;; Auto vars:     Size  Location     Type
  9978 ;;		None
  9979 ;; Return value:  Size  Location     Type
  9980 ;;                  1    wreg      enum E12577
  9981 ;; Registers used:
  9982 ;;		wreg, cstack
  9983 ;; Tracked objects:
  9984 ;;		On entry : 0/0
  9985 ;;		On exit  : 0/0
  9986 ;;		Unchanged: 0/0
  9987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9990 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9991 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9992 ;;Total ram usage:        0 bytes
  9993 ;; Hardware stack levels used: 1
  9994 ;; Hardware stack levels required when called: 1
  9995 ;; This function calls:
  9996 ;;		_I2C_MasterStop
  9997 ;; This function is called by:
  9998 ;;		_I2C_DO_TX
  9999 ;;		_I2C_DO_TX_EMPTY
 10000 ;;		_I2C_DO_ADDRESS_NACK
 10001 ;;		_I2C_MasterFsm
 10002 ;; This function uses a non-reentrant model
 10003 ;;
 10004                           
 10005                           	psect	text54
 10006  00C040                     __ptext54:
 10007                           	callstack 0
 10008  00C040                     _I2C_DO_SEND_STOP:
 10009                           	callstack 20
 10010  00C040                     
 10011                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
 10012  00C040  ECF2  F05F         	call	_I2C_MasterStop	;wreg free
 10013  00C044                     
 10014                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
 10015  00C044  0E00               	movlw	0
 10016  00C046  0012               	return		;funcret
 10017  00C048                     __end_of_I2C_DO_SEND_STOP:
 10018                           	callstack 0
 10019                           
 10020 ;; *************** function _I2C_DO_SEND_RESTART *****************
 10021 ;; Defined at:
 10022 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;		None
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;		None
 10027 ;; Return value:  Size  Location     Type
 10028 ;;                  1    wreg      enum E12577
 10029 ;; Registers used:
 10030 ;;		wreg, cstack
 10031 ;; Tracked objects:
 10032 ;;		On entry : 0/0
 10033 ;;		On exit  : 0/0
 10034 ;;		Unchanged: 0/0
 10035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10036 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10037 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10038 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10039 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10040 ;;Total ram usage:        0 bytes
 10041 ;; Hardware stack levels used: 1
 10042 ;; Hardware stack levels required when called: 1
 10043 ;; This function calls:
 10044 ;;		_I2C_MasterEnableRestart
 10045 ;; This function is called by:
 10046 ;;		_I2C_DO_TX_EMPTY
 10047 ;;		_I2C_DO_ADDRESS_NACK
 10048 ;;		_I2C_MasterFsm
 10049 ;; This function uses a non-reentrant model
 10050 ;;
 10051                           
 10052                           	psect	text55
 10053  00C038                     __ptext55:
 10054                           	callstack 0
 10055  00C038                     _I2C_DO_SEND_RESTART:
 10056                           	callstack 20
 10057  00C038                     
 10058                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
 10059  00C038  ECF0  F05F         	call	_I2C_MasterEnableRestart	;wreg free
 10060  00C03C                     
 10061                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
 10062  00C03C  0E01               	movlw	1
 10063  00C03E  0012               	return		;funcret
 10064  00C040                     __end_of_I2C_DO_SEND_RESTART:
 10065                           	callstack 0
 10066                           
 10067 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
 10068 ;; Defined at:
 10069 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;		None
 10072 ;; Auto vars:     Size  Location     Type
 10073 ;;		None
 10074 ;; Return value:  Size  Location     Type
 10075 ;;                  1    wreg      enum E12577
 10076 ;; Registers used:
 10077 ;;		wreg, cstack
 10078 ;; Tracked objects:
 10079 ;;		On entry : 0/0
 10080 ;;		On exit  : 0/0
 10081 ;;		Unchanged: 0/0
 10082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10084 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10086 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10087 ;;Total ram usage:        0 bytes
 10088 ;; Hardware stack levels used: 1
 10089 ;; Hardware stack levels required when called: 1
 10090 ;; This function calls:
 10091 ;;		_I2C_MasterEnableRestart
 10092 ;; This function is called by:
 10093 ;;		_I2C_DO_TX
 10094 ;;		_I2C_MasterFsm
 10095 ;; This function uses a non-reentrant model
 10096 ;;
 10097                           
 10098                           	psect	text56
 10099  00C030                     __ptext56:
 10100                           	callstack 0
 10101  00C030                     _I2C_DO_SEND_RESTART_WRITE:
 10102                           	callstack 20
 10103  00C030                     
 10104                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
 10105  00C030  ECF0  F05F         	call	_I2C_MasterEnableRestart	;wreg free
 10106  00C034                     
 10107                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
 10108  00C034  0E02               	movlw	2
 10109  00C036  0012               	return		;funcret
 10110  00C038                     __end_of_I2C_DO_SEND_RESTART_WRITE:
 10111                           	callstack 0
 10112                           
 10113 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
 10114 ;; Defined at:
 10115 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;		None
 10118 ;; Auto vars:     Size  Location     Type
 10119 ;;		None
 10120 ;; Return value:  Size  Location     Type
 10121 ;;                  1    wreg      enum E12577
 10122 ;; Registers used:
 10123 ;;		wreg, cstack
 10124 ;; Tracked objects:
 10125 ;;		On entry : 0/0
 10126 ;;		On exit  : 0/0
 10127 ;;		Unchanged: 0/0
 10128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10133 ;;Total ram usage:        0 bytes
 10134 ;; Hardware stack levels used: 1
 10135 ;; Hardware stack levels required when called: 1
 10136 ;; This function calls:
 10137 ;;		_I2C_MasterEnableRestart
 10138 ;; This function is called by:
 10139 ;;		_I2C_DO_TX
 10140 ;;		_I2C_MasterFsm
 10141 ;; This function uses a non-reentrant model
 10142 ;;
 10143                           
 10144                           	psect	text57
 10145  00C028                     __ptext57:
 10146                           	callstack 0
 10147  00C028                     _I2C_DO_SEND_RESTART_READ:
 10148                           	callstack 20
 10149  00C028                     
 10150                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
 10151  00C028  ECF0  F05F         	call	_I2C_MasterEnableRestart	;wreg free
 10152  00C02C                     
 10153                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
 10154  00C02C  0E01               	movlw	1
 10155  00C02E  0012               	return		;funcret
 10156  00C030                     __end_of_I2C_DO_SEND_RESTART_READ:
 10157                           	callstack 0
 10158                           
 10159 ;; *************** function _I2C_DO_RCEN *****************
 10160 ;; Defined at:
 10161 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
 10162 ;; Parameters:    Size  Location     Type
 10163 ;;		None
 10164 ;; Auto vars:     Size  Location     Type
 10165 ;;		None
 10166 ;; Return value:  Size  Location     Type
 10167 ;;                  1    wreg      enum E12577
 10168 ;; Registers used:
 10169 ;;		wreg, cstack
 10170 ;; Tracked objects:
 10171 ;;		On entry : 0/0
 10172 ;;		On exit  : 0/0
 10173 ;;		Unchanged: 0/0
 10174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10175 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10178 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10179 ;;Total ram usage:        0 bytes
 10180 ;; Hardware stack levels used: 1
 10181 ;; Hardware stack levels required when called: 1
 10182 ;; This function calls:
 10183 ;;		_I2C_MasterStartRx
 10184 ;; This function is called by:
 10185 ;;		_I2C_MasterFsm
 10186 ;; This function uses a non-reentrant model
 10187 ;;
 10188                           
 10189                           	psect	text58
 10190  00C088                     __ptext58:
 10191                           	callstack 0
 10192  00C088                     _I2C_DO_RCEN:
 10193                           	callstack 21
 10194  00C088                     
 10195                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
 10196  00C088  0101               	movlb	1	; () banked
 10197  00C08A  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 10198  00C08C                     
 10199                           ; BSR set to: 1
 10200                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
 10201  00C08C  ECF8  F05F         	call	_I2C_MasterStartRx	;wreg free
 10202  00C090                     
 10203                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
 10204  00C090  0E04               	movlw	4
 10205  00C092  0012               	return		;funcret
 10206  00C094                     __end_of_I2C_DO_RCEN:
 10207                           	callstack 0
 10208                           
 10209 ;; *************** function _I2C_DO_RX *****************
 10210 ;; Defined at:
 10211 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;		None
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;		None
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  1    wreg      enum E12577
 10218 ;; Registers used:
 10219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10225 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10226 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10227 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10228 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10229 ;;Total ram usage:        2 bytes
 10230 ;; Hardware stack levels used: 1
 10231 ;; Hardware stack levels required when called: 3
 10232 ;; This function calls:
 10233 ;;		Absolute function
 10234 ;;		_I2C_CallbackReturnReset
 10235 ;;		_I2C_CallbackReturnStop
 10236 ;;		_I2C_DO_RX_NACK_RESTART
 10237 ;;		_I2C_DO_RX_NACK_STOP
 10238 ;;		_I2C_MasterGetRxData
 10239 ;;		_I2C_MasterSendAck
 10240 ;;		_rd1RegCompleteHandler
 10241 ;;		_rd2RegCompleteHandler
 10242 ;;		_rdBlkRegCompleteHandler
 10243 ;;		_wr1RegCompleteHandler
 10244 ;;		_wr2RegCompleteHandler
 10245 ;; This function is called by:
 10246 ;;		_I2C_MasterFsm
 10247 ;; This function uses a non-reentrant model
 10248 ;;
 10249                           
 10250                           	psect	text59
 10251  00CCB8                     __ptext59:
 10252                           	callstack 0
 10253  00CCB8                     _I2C_DO_RX:
 10254                           	callstack 19
 10255  00CCB8                     
 10256                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 10257  00CCB8  ECFA  F05F         	call	_I2C_MasterGetRxData	;wreg free
 10258  00CCBC  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 10259  00CCC0  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 10260  00CCC4  6EDF               	movwf	indf2,c
 10261  00CCC6  0101               	movlb	1	; () banked
 10262  00CCC8  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10263  00CCCA  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 10264  00CCCC                     
 10265                           ; BSR set to: 1
 10266                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 10267  00CCCC  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 10268  00CCCE  A0D8               	btfss	status,0,c
 10269  00CCD0  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 10270  00CCD2  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 10271  00CCD4  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10272  00CCD6  B4D8               	btfsc	status,2,c
 10273  00CCD8  EF70  F066         	goto	u3311
 10274  00CCDC  EF72  F066         	goto	u3310
 10275  00CCE0                     u3311:
 10276  00CCE0  EF77  F066         	goto	l340
 10277  00CCE4                     u3310:
 10278  00CCE4                     
 10279                           ; BSR set to: 1
 10280                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 10281  00CCE4  EC01  F060         	call	_I2C_MasterSendAck	;wreg free
 10282  00CCE8                     
 10283                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 10284  00CCE8  0E05               	movlw	5
 10285  00CCEA  EFAE  F066         	goto	l341
 10286  00CCEE                     l340:
 10287                           
 10288                           ; BSR set to: 1
 10289                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 10290  00CCEE  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 10291                           
 10292                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10293  00CCF0  EF82  F066         	goto	l4569
 10294  00CCF4                     l4559:
 10295                           
 10296                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 10297  00CCF4  EC2C  F060         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 10298  00CCF8  EFAE  F066         	goto	l341
 10299  00CCFC                     l4563:
 10300                           
 10301                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 10302  00CCFC  EC28  F060         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 10303  00CD00  EFAE  F066         	goto	l341
 10304  00CD04                     l4569:
 10305                           
 10306                           ; BSR set to: 1
 10307  00CD04  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10308  00CD08  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10309  00CD0C  D802               	call	u3328
 10310  00CD0E  EF92  F066         	goto	u3329
 10311  00CD12                     u3328:
 10312  00CD12  0005               	push	
 10313  00CD14  6EFA               	movwf	pclath,c
 10314  00CD16  5150               	movf	_I2C_Status& (0+255),w,b
 10315  00CD18  6EFD               	movwf	tosl,c
 10316  00CD1A  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 10317  00CD1C  6EFE               	movwf	tosh,c
 10318  00CD1E  6AFF               	clrf	tosu,c
 10319  00CD20  50FA               	movf	pclath,w,c
 10320  00CD22  0012               	return		;indir
 10321  00CD24                     u3329:
 10322  00CD24  6E0C               	movwf	??_I2C_DO_RX^0,c
 10323  00CD26  6A0D               	clrf	(??_I2C_DO_RX+1)^0,c
 10324                           
 10325                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10326                           ; Switch size 1, requested type "simple"
 10327                           ; Number of cases is 1, Range of values is 0 to 0
 10328                           ; switch strategies available:
 10329                           ; Name         Instructions Cycles
 10330                           ; simple_byte            4     3 (average)
 10331                           ;	Chosen strategy is simple_byte
 10332  00CD28  500D               	movf	(??_I2C_DO_RX+1)^0,w,c
 10333  00CD2A  0A00               	xorlw	0	; case 0
 10334  00CD2C  B4D8               	btfsc	status,2,c
 10335  00CD2E  EF9B  F066         	goto	l6727
 10336  00CD32  EF7E  F066         	goto	l4563
 10337  00CD36                     l6727:
 10338                           
 10339                           ; Switch size 1, requested type "simple"
 10340                           ; Number of cases is 4, Range of values is 1 to 4
 10341                           ; switch strategies available:
 10342                           ; Name         Instructions Cycles
 10343                           ; simple_byte           13     7 (average)
 10344                           ;	Chosen strategy is simple_byte
 10345  00CD36  500C               	movf	??_I2C_DO_RX^0,w,c
 10346  00CD38  0A01               	xorlw	1	; case 1
 10347  00CD3A  B4D8               	btfsc	status,2,c
 10348  00CD3C  EF7E  F066         	goto	l4563
 10349  00CD40  0A03               	xorlw	3	; case 2
 10350  00CD42  B4D8               	btfsc	status,2,c
 10351  00CD44  EF7A  F066         	goto	l4559
 10352  00CD48  0A01               	xorlw	1	; case 3
 10353  00CD4A  B4D8               	btfsc	status,2,c
 10354  00CD4C  EF7A  F066         	goto	l4559
 10355  00CD50  0A07               	xorlw	7	; case 4
 10356  00CD52  B4D8               	btfsc	status,2,c
 10357  00CD54  EF7E  F066         	goto	l4563
 10358  00CD58  EF7E  F066         	goto	l4563
 10359  00CD5C                     l341:
 10360  00CD5C  0012               	return		;funcret
 10361  00CD5E                     __end_of_I2C_DO_RX:
 10362                           	callstack 0
 10363                           
 10364 ;; *************** function _I2C_DO_TX *****************
 10365 ;; Defined at:
 10366 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 10367 ;; Parameters:    Size  Location     Type
 10368 ;;		None
 10369 ;; Auto vars:     Size  Location     Type
 10370 ;;		None
 10371 ;; Return value:  Size  Location     Type
 10372 ;;                  1    wreg      enum E12577
 10373 ;; Registers used:
 10374 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10375 ;; Tracked objects:
 10376 ;;		On entry : 0/0
 10377 ;;		On exit  : 0/0
 10378 ;;		Unchanged: 0/0
 10379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10380 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10381 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10382 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10383 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10384 ;;Total ram usage:        2 bytes
 10385 ;; Hardware stack levels used: 1
 10386 ;; Hardware stack levels required when called: 3
 10387 ;; This function calls:
 10388 ;;		Absolute function
 10389 ;;		_I2C_CallbackReturnReset
 10390 ;;		_I2C_CallbackReturnStop
 10391 ;;		_I2C_DO_SEND_RESTART_READ
 10392 ;;		_I2C_DO_SEND_RESTART_WRITE
 10393 ;;		_I2C_DO_SEND_STOP
 10394 ;;		_I2C_MasterIsNack
 10395 ;;		_I2C_MasterSendTxData
 10396 ;;		_rd1RegCompleteHandler
 10397 ;;		_rd2RegCompleteHandler
 10398 ;;		_rdBlkRegCompleteHandler
 10399 ;;		_wr1RegCompleteHandler
 10400 ;;		_wr2RegCompleteHandler
 10401 ;; This function is called by:
 10402 ;;		_I2C_MasterFsm
 10403 ;; This function uses a non-reentrant model
 10404 ;;
 10405                           
 10406                           	psect	text60
 10407  00CEB8                     __ptext60:
 10408                           	callstack 0
 10409  00CEB8                     _I2C_DO_TX:
 10410                           	callstack 19
 10411  00CEB8                     
 10412                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 10413  00CEB8  EC7B  F060         	call	_I2C_MasterIsNack	;wreg free
 10414  00CEBC  0900               	iorlw	0
 10415  00CEBE  B4D8               	btfsc	status,2,c
 10416  00CEC0  EF64  F067         	goto	u3281
 10417  00CEC4  EF66  F067         	goto	u3280
 10418  00CEC8                     u3281:
 10419  00CEC8  EFA1  F067         	goto	l324
 10420  00CECC                     u3280:
 10421  00CECC  EF74  F067         	goto	l4529
 10422  00CED0                     l4515:
 10423                           
 10424                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 10425  00CED0  EC14  F060         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 10426  00CED4  EFBD  F067         	goto	l327
 10427  00CED8                     l4519:
 10428                           
 10429                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 10430  00CED8  EC18  F060         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 10431  00CEDC  EFBD  F067         	goto	l327
 10432  00CEE0                     l4523:
 10433                           
 10434                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 10435  00CEE0  EC20  F060         	call	_I2C_DO_SEND_STOP	;wreg free
 10436  00CEE4  EFBD  F067         	goto	l327
 10437  00CEE8                     l4529:
 10438  00CEE8  C162  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 10439  00CEEC  C163  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 10440  00CEF0  D802               	call	u3298
 10441  00CEF2  EF85  F067         	goto	u3299
 10442  00CEF6                     u3298:
 10443  00CEF6  0005               	push	
 10444  00CEF8  6EFA               	movwf	pclath,c
 10445  00CEFA  0101               	movlb	1	; () banked
 10446  00CEFC  5156               	movf	(_I2C_Status+6)& (0+255),w,b
 10447  00CEFE  6EFD               	movwf	tosl,c
 10448  00CF00  5157               	movf	(_I2C_Status+7)& (0+255),w,b
 10449  00CF02  6EFE               	movwf	tosh,c
 10450  00CF04  6AFF               	clrf	tosu,c
 10451  00CF06  50FA               	movf	pclath,w,c
 10452  00CF08  0012               	return		;indir
 10453  00CF0A                     u3299:
 10454  00CF0A  6E0C               	movwf	??_I2C_DO_TX^0,c
 10455  00CF0C  6A0D               	clrf	(??_I2C_DO_TX+1)^0,c
 10456                           
 10457                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10458                           ; Switch size 1, requested type "simple"
 10459                           ; Number of cases is 1, Range of values is 0 to 0
 10460                           ; switch strategies available:
 10461                           ; Name         Instructions Cycles
 10462                           ; simple_byte            4     3 (average)
 10463                           ;	Chosen strategy is simple_byte
 10464  00CF0E  500D               	movf	(??_I2C_DO_TX+1)^0,w,c
 10465  00CF10  0A00               	xorlw	0	; case 0
 10466  00CF12  B4D8               	btfsc	status,2,c
 10467  00CF14  EF8E  F067         	goto	l6729
 10468  00CF18  EF70  F067         	goto	l4523
 10469  00CF1C                     l6729:
 10470                           
 10471                           ; Switch size 1, requested type "simple"
 10472                           ; Number of cases is 4, Range of values is 1 to 4
 10473                           ; switch strategies available:
 10474                           ; Name         Instructions Cycles
 10475                           ; simple_byte           13     7 (average)
 10476                           ;	Chosen strategy is simple_byte
 10477  00CF1C  500C               	movf	??_I2C_DO_TX^0,w,c
 10478  00CF1E  0A01               	xorlw	1	; case 1
 10479  00CF20  B4D8               	btfsc	status,2,c
 10480  00CF22  EF70  F067         	goto	l4523
 10481  00CF26  0A03               	xorlw	3	; case 2
 10482  00CF28  B4D8               	btfsc	status,2,c
 10483  00CF2A  EF68  F067         	goto	l4515
 10484  00CF2E  0A01               	xorlw	1	; case 3
 10485  00CF30  B4D8               	btfsc	status,2,c
 10486  00CF32  EF6C  F067         	goto	l4519
 10487  00CF36  0A07               	xorlw	7	; case 4
 10488  00CF38  B4D8               	btfsc	status,2,c
 10489  00CF3A  EF70  F067         	goto	l4523
 10490  00CF3E  EF70  F067         	goto	l4523
 10491  00CF42                     l324:
 10492                           
 10493                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 10494  00CF42  0101               	movlb	1	; () banked
 10495  00CF44  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 10496  00CF46                     
 10497                           ; BSR set to: 1
 10498                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 10499  00CF46  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 10500  00CF4A  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 10501  00CF4E  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10502  00CF50  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 10503  00CF52  50DF               	movf	indf2,w,c
 10504  00CF54  EC10  F060         	call	_I2C_MasterSendTxData
 10505  00CF58                     
 10506                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 10507  00CF58  0101               	movlb	1	; () banked
 10508  00CF5A  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 10509  00CF5C  A0D8               	btfss	status,0,c
 10510  00CF5E  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 10511  00CF60  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 10512  00CF62  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10513  00CF64  A4D8               	btfss	status,2,c
 10514  00CF66  EFB7  F067         	goto	u3301
 10515  00CF6A  EFB9  F067         	goto	u3300
 10516  00CF6E                     u3301:
 10517  00CF6E  EFBC  F067         	goto	l4537
 10518  00CF72                     u3300:
 10519  00CF72                     
 10520                           ; BSR set to: 1
 10521  00CF72  0E06               	movlw	6
 10522  00CF74  EFBD  F067         	goto	l327
 10523  00CF78                     l4537:
 10524                           
 10525                           ; BSR set to: 1
 10526  00CF78  0E03               	movlw	3
 10527  00CF7A                     l327:
 10528  00CF7A  0012               	return		;funcret
 10529  00CF7C                     __end_of_I2C_DO_TX:
 10530                           	callstack 0
 10531                           
 10532 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 10533 ;; Defined at:
 10534 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 10535 ;; Parameters:    Size  Location     Type
 10536 ;;		None
 10537 ;; Auto vars:     Size  Location     Type
 10538 ;;		None
 10539 ;; Return value:  Size  Location     Type
 10540 ;;                  1    wreg      enum E12577
 10541 ;; Registers used:
 10542 ;;		wreg, status,2, status,0, cstack
 10543 ;; Tracked objects:
 10544 ;;		On entry : 0/0
 10545 ;;		On exit  : 0/0
 10546 ;;		Unchanged: 0/0
 10547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10552 ;;Total ram usage:        0 bytes
 10553 ;; Hardware stack levels used: 1
 10554 ;; Hardware stack levels required when called: 1
 10555 ;; This function calls:
 10556 ;;		_I2C_MasterSendTxData
 10557 ;; This function is called by:
 10558 ;;		_I2C_MasterFsm
 10559 ;; This function uses a non-reentrant model
 10560 ;;
 10561                           
 10562                           	psect	text61
 10563  00C0B0                     __ptext61:
 10564                           	callstack 0
 10565  00C0B0                     _I2C_DO_SEND_ADR_WRITE:
 10566                           	callstack 21
 10567  00C0B0                     
 10568                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 10569  00C0B0  0101               	movlb	1	; () banked
 10570  00C0B2  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 10571  00C0B4                     
 10572                           ; BSR set to: 1
 10573                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 10574  00C0B4  516C               	movf	(_I2C_Status+28)& (0+255),w,b
 10575  00C0B6  256C               	addwf	(_I2C_Status+28)& (0+255),w,b
 10576  00C0B8  EC10  F060         	call	_I2C_MasterSendTxData
 10577  00C0BC                     
 10578                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 10579  00C0BC  0E03               	movlw	3
 10580  00C0BE  0012               	return		;funcret
 10581  00C0C0                     __end_of_I2C_DO_SEND_ADR_WRITE:
 10582                           	callstack 0
 10583                           
 10584 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 10585 ;; Defined at:
 10586 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 10587 ;; Parameters:    Size  Location     Type
 10588 ;;		None
 10589 ;; Auto vars:     Size  Location     Type
 10590 ;;		None
 10591 ;; Return value:  Size  Location     Type
 10592 ;;                  1    wreg      enum E12577
 10593 ;; Registers used:
 10594 ;;		wreg, status,0, cstack
 10595 ;; Tracked objects:
 10596 ;;		On entry : 0/0
 10597 ;;		On exit  : 0/0
 10598 ;;		Unchanged: 0/0
 10599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10600 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10603 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10604 ;;Total ram usage:        0 bytes
 10605 ;; Hardware stack levels used: 1
 10606 ;; Hardware stack levels required when called: 1
 10607 ;; This function calls:
 10608 ;;		_I2C_MasterSendTxData
 10609 ;; This function is called by:
 10610 ;;		_I2C_MasterFsm
 10611 ;; This function uses a non-reentrant model
 10612 ;;
 10613                           
 10614                           	psect	text62
 10615  00C0A0                     __ptext62:
 10616                           	callstack 0
 10617  00C0A0                     _I2C_DO_SEND_ADR_READ:
 10618                           	callstack 21
 10619  00C0A0                     
 10620                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 10621  00C0A0  0101               	movlb	1	; () banked
 10622  00C0A2  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 10623  00C0A4                     
 10624                           ; BSR set to: 1
 10625                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 10626  00C0A4  80D8               	bsf	status,0,c
 10627  00C0A6  356C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 10628  00C0A8  EC10  F060         	call	_I2C_MasterSendTxData
 10629  00C0AC                     
 10630                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 10631  00C0AC  0E05               	movlw	5
 10632  00C0AE  0012               	return		;funcret
 10633  00C0B0                     __end_of_I2C_DO_SEND_ADR_READ:
 10634                           	callstack 0
 10635                           
 10636 ;; *************** function _I2C_DO_IDLE *****************
 10637 ;; Defined at:
 10638 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;		None
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  1    wreg      enum E12577
 10645 ;; Registers used:
 10646 ;;		wreg, status,2
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10652 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10655 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10656 ;;Total ram usage:        0 bytes
 10657 ;; Hardware stack levels used: 1
 10658 ;; This function calls:
 10659 ;;		Nothing
 10660 ;; This function is called by:
 10661 ;;		_I2C_MasterFsm
 10662 ;; This function uses a non-reentrant model
 10663 ;;
 10664                           
 10665                           	psect	text63
 10666  00C07C                     __ptext63:
 10667                           	callstack 0
 10668  00C07C                     _I2C_DO_IDLE:
 10669                           	callstack 22
 10670  00C07C                     
 10671                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 10672  00C07C  0101               	movlb	1	; () banked
 10673  00C07E  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
 10674  00C080                     
 10675                           ; BSR set to: 1
 10676                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 10677  00C080  0E00               	movlw	0
 10678  00C082  6F72               	movwf	(_I2C_Status+34)& (0+255),b
 10679  00C084                     
 10680                           ; BSR set to: 1
 10681                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 10682  00C084  0E0E               	movlw	14
 10683  00C086                     
 10684                           ; BSR set to: 1
 10685  00C086  0012               	return		;funcret
 10686  00C088                     __end_of_I2C_DO_IDLE:
 10687                           	callstack 0
 10688                           
 10689 ;; *************** function _I2C_DO_TX_EMPTY *****************
 10690 ;; Defined at:
 10691 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 10692 ;; Parameters:    Size  Location     Type
 10693 ;;		None
 10694 ;; Auto vars:     Size  Location     Type
 10695 ;;		None
 10696 ;; Return value:  Size  Location     Type
 10697 ;;                  1    wreg      enum E12577
 10698 ;; Registers used:
 10699 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10700 ;; Tracked objects:
 10701 ;;		On entry : 0/0
 10702 ;;		On exit  : 0/0
 10703 ;;		Unchanged: 0/0
 10704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10705 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10706 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10707 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10708 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10709 ;;Total ram usage:        2 bytes
 10710 ;; Hardware stack levels used: 1
 10711 ;; Hardware stack levels required when called: 3
 10712 ;; This function calls:
 10713 ;;		Absolute function
 10714 ;;		_I2C_CallbackReturnReset
 10715 ;;		_I2C_CallbackReturnStop
 10716 ;;		_I2C_DO_SEND_RESTART
 10717 ;;		_I2C_DO_SEND_STOP
 10718 ;;		_I2C_MasterSetIrq
 10719 ;;		_rd1RegCompleteHandler
 10720 ;;		_rd2RegCompleteHandler
 10721 ;;		_rdBlkRegCompleteHandler
 10722 ;;		_wr1RegCompleteHandler
 10723 ;;		_wr2RegCompleteHandler
 10724 ;; This function is called by:
 10725 ;;		_I2C_MasterFsm
 10726 ;; This function uses a non-reentrant model
 10727 ;;
 10728                           
 10729                           	psect	text64
 10730  00CA6C                     __ptext64:
 10731                           	callstack 0
 10732  00CA6C                     _I2C_DO_TX_EMPTY:
 10733                           	callstack 19
 10734  00CA6C                     
 10735                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 10736  00CA6C  0101               	movlb	1	; () banked
 10737  00CA6E  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 10738                           
 10739                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10740  00CA70  EF47  F065         	goto	l4603
 10741  00CA74                     l4587:
 10742                           
 10743                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 10744  00CA74  EC1C  F060         	call	_I2C_DO_SEND_RESTART	;wreg free
 10745  00CA78  EF73  F065         	goto	l358
 10746  00CA7C                     l4591:
 10747                           
 10748                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 10749  00CA7C  ECFC  F05F         	call	_I2C_MasterSetIrq	;wreg free
 10750  00CA80                     
 10751                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 10752  00CA80  0E03               	movlw	3
 10753  00CA82  EF73  F065         	goto	l358
 10754  00CA86                     l4597:
 10755                           
 10756                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 10757  00CA86  EC20  F060         	call	_I2C_DO_SEND_STOP	;wreg free
 10758  00CA8A  EF73  F065         	goto	l358
 10759  00CA8E                     l4603:
 10760                           
 10761                           ; BSR set to: 1
 10762  00CA8E  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10763  00CA92  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10764  00CA96  D802               	call	u3338
 10765  00CA98  EF57  F065         	goto	u3339
 10766  00CA9C                     u3338:
 10767  00CA9C  0005               	push	
 10768  00CA9E  6EFA               	movwf	pclath,c
 10769  00CAA0  5150               	movf	_I2C_Status& (0+255),w,b
 10770  00CAA2  6EFD               	movwf	tosl,c
 10771  00CAA4  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 10772  00CAA6  6EFE               	movwf	tosh,c
 10773  00CAA8  6AFF               	clrf	tosu,c
 10774  00CAAA  50FA               	movf	pclath,w,c
 10775  00CAAC  0012               	return		;indir
 10776  00CAAE                     u3339:
 10777  00CAAE  6E0C               	movwf	??_I2C_DO_TX_EMPTY^0,c
 10778  00CAB0  6A0D               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 10779                           
 10780                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10781                           ; Switch size 1, requested type "simple"
 10782                           ; Number of cases is 1, Range of values is 0 to 0
 10783                           ; switch strategies available:
 10784                           ; Name         Instructions Cycles
 10785                           ; simple_byte            4     3 (average)
 10786                           ;	Chosen strategy is simple_byte
 10787  00CAB2  500D               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 10788  00CAB4  0A00               	xorlw	0	; case 0
 10789  00CAB6  B4D8               	btfsc	status,2,c
 10790  00CAB8  EF60  F065         	goto	l6731
 10791  00CABC  EF43  F065         	goto	l4597
 10792  00CAC0                     l6731:
 10793                           
 10794                           ; Switch size 1, requested type "simple"
 10795                           ; Number of cases is 4, Range of values is 1 to 4
 10796                           ; switch strategies available:
 10797                           ; Name         Instructions Cycles
 10798                           ; simple_byte           13     7 (average)
 10799                           ;	Chosen strategy is simple_byte
 10800  00CAC0  500C               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 10801  00CAC2  0A01               	xorlw	1	; case 1
 10802  00CAC4  B4D8               	btfsc	status,2,c
 10803  00CAC6  EF43  F065         	goto	l4597
 10804  00CACA  0A03               	xorlw	3	; case 2
 10805  00CACC  B4D8               	btfsc	status,2,c
 10806  00CACE  EF3A  F065         	goto	l4587
 10807  00CAD2  0A01               	xorlw	1	; case 3
 10808  00CAD4  B4D8               	btfsc	status,2,c
 10809  00CAD6  EF3A  F065         	goto	l4587
 10810  00CADA  0A07               	xorlw	7	; case 4
 10811  00CADC  B4D8               	btfsc	status,2,c
 10812  00CADE  EF3E  F065         	goto	l4591
 10813  00CAE2  EF43  F065         	goto	l4597
 10814  00CAE6                     l358:
 10815  00CAE6  0012               	return		;funcret
 10816  00CAE8                     __end_of_I2C_DO_TX_EMPTY:
 10817                           	callstack 0
 10818                           
 10819 ;; *************** function _I2C_MasterSetIrq *****************
 10820 ;; Defined at:
 10821 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 10822 ;; Parameters:    Size  Location     Type
 10823 ;;		None
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  1    wreg      void 
 10828 ;; Registers used:
 10829 ;;		None
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10838 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10839 ;;Total ram usage:        0 bytes
 10840 ;; Hardware stack levels used: 1
 10841 ;; This function calls:
 10842 ;;		Nothing
 10843 ;; This function is called by:
 10844 ;;		_I2C_DO_TX_EMPTY
 10845 ;; This function uses a non-reentrant model
 10846 ;;
 10847                           
 10848                           	psect	text65
 10849  00BFF8                     __ptext65:
 10850                           	callstack 0
 10851  00BFF8                     _I2C_MasterSetIrq:
 10852                           	callstack 21
 10853  00BFF8                     
 10854                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 10855  00BFF8  869E               	bsf	158,3,c	;volatile
 10856  00BFFA  0012               	return		;funcret
 10857  00BFFC                     __end_of_I2C_MasterSetIrq:
 10858                           	callstack 0
 10859                           
 10860 ;; *************** function _I2C_MasterIsNack *****************
 10861 ;; Defined at:
 10862 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 10863 ;; Parameters:    Size  Location     Type
 10864 ;;		None
 10865 ;; Auto vars:     Size  Location     Type
 10866 ;;		None
 10867 ;; Return value:  Size  Location     Type
 10868 ;;                  1    wreg      _Bool 
 10869 ;; Registers used:
 10870 ;;		wreg
 10871 ;; Tracked objects:
 10872 ;;		On entry : 0/0
 10873 ;;		On exit  : 0/0
 10874 ;;		Unchanged: 0/0
 10875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10876 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10879 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10880 ;;Total ram usage:        0 bytes
 10881 ;; Hardware stack levels used: 1
 10882 ;; This function calls:
 10883 ;;		Nothing
 10884 ;; This function is called by:
 10885 ;;		_I2C_MasterFsm
 10886 ;;		_I2C_DO_TX
 10887 ;; This function uses a non-reentrant model
 10888 ;;
 10889                           
 10890                           	psect	text66
 10891  00C0F6                     __ptext66:
 10892                           	callstack 0
 10893  00C0F6                     _I2C_MasterIsNack:
 10894                           	callstack 22
 10895  00C0F6                     
 10896                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 10897  00C0F6  BCC5               	btfsc	197,6,c	;volatile
 10898  00C0F8  EF80  F060         	goto	u3271
 10899  00C0FC  EF83  F060         	goto	u3270
 10900  00C100                     u3271:
 10901  00C100  0E01               	movlw	1
 10902  00C102  EF84  F060         	goto	u3276
 10903  00C106                     u3270:
 10904  00C106  0E00               	movlw	0
 10905  00C108                     u3276:
 10906  00C108  0012               	return		;funcret
 10907  00C10A                     __end_of_I2C_MasterIsNack:
 10908                           	callstack 0
 10909                           
 10910 ;; *************** function _I2C_MasterSendTxData *****************
 10911 ;; Defined at:
 10912 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 10913 ;; Parameters:    Size  Location     Type
 10914 ;;  data            1    wreg     unsigned char 
 10915 ;; Auto vars:     Size  Location     Type
 10916 ;;  data            1    0[COMRAM] unsigned char 
 10917 ;; Return value:  Size  Location     Type
 10918 ;;                  1    wreg      void 
 10919 ;; Registers used:
 10920 ;;		wreg
 10921 ;; Tracked objects:
 10922 ;;		On entry : 0/0
 10923 ;;		On exit  : 0/0
 10924 ;;		Unchanged: 0/0
 10925 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10926 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10927 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10928 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10929 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10930 ;;Total ram usage:        1 bytes
 10931 ;; Hardware stack levels used: 1
 10932 ;; This function calls:
 10933 ;;		Nothing
 10934 ;; This function is called by:
 10935 ;;		_I2C_DO_SEND_ADR_READ
 10936 ;;		_I2C_DO_SEND_ADR_WRITE
 10937 ;;		_I2C_DO_TX
 10938 ;; This function uses a non-reentrant model
 10939 ;;
 10940                           
 10941                           	psect	text67
 10942  00C020                     __ptext67:
 10943                           	callstack 0
 10944  00C020                     _I2C_MasterSendTxData:
 10945                           	callstack 21
 10946                           
 10947                           ;incstack = 0
 10948                           ;I2C_MasterSendTxData@data stored from wreg
 10949  00C020  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 10950  00C022                     
 10951                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 10952  00C022  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 10953  00C026  0012               	return		;funcret
 10954  00C028                     __end_of_I2C_MasterSendTxData:
 10955                           	callstack 0
 10956                           
 10957 ;; *************** function _I2C_MasterSendAck *****************
 10958 ;; Defined at:
 10959 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 10960 ;; Parameters:    Size  Location     Type
 10961 ;;		None
 10962 ;; Auto vars:     Size  Location     Type
 10963 ;;		None
 10964 ;; Return value:  Size  Location     Type
 10965 ;;                  1    wreg      void 
 10966 ;; Registers used:
 10967 ;;		None
 10968 ;; Tracked objects:
 10969 ;;		On entry : 0/0
 10970 ;;		On exit  : 0/0
 10971 ;;		Unchanged: 0/0
 10972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10973 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10976 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10977 ;;Total ram usage:        0 bytes
 10978 ;; Hardware stack levels used: 1
 10979 ;; This function calls:
 10980 ;;		Nothing
 10981 ;; This function is called by:
 10982 ;;		_I2C_DO_RX
 10983 ;;		_I2C_DO_RX_ACK
 10984 ;; This function uses a non-reentrant model
 10985 ;;
 10986                           
 10987                           	psect	text68
 10988  00C002                     __ptext68:
 10989                           	callstack 0
 10990  00C002                     _I2C_MasterSendAck:
 10991                           	callstack 21
 10992  00C002                     
 10993                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 10994  00C002  9AC5               	bcf	197,5,c	;volatile
 10995                           
 10996                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 10997  00C004  88C5               	bsf	197,4,c	;volatile
 10998  00C006  0012               	return		;funcret
 10999  00C008                     __end_of_I2C_MasterSendAck:
 11000                           	callstack 0
 11001                           
 11002 ;; *************** function _I2C_MasterGetRxData *****************
 11003 ;; Defined at:
 11004 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 11005 ;; Parameters:    Size  Location     Type
 11006 ;;		None
 11007 ;; Auto vars:     Size  Location     Type
 11008 ;;		None
 11009 ;; Return value:  Size  Location     Type
 11010 ;;                  1    wreg      unsigned char 
 11011 ;; Registers used:
 11012 ;;		wreg, status,2
 11013 ;; Tracked objects:
 11014 ;;		On entry : 0/0
 11015 ;;		On exit  : 0/0
 11016 ;;		Unchanged: 0/0
 11017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11022 ;;Total ram usage:        0 bytes
 11023 ;; Hardware stack levels used: 1
 11024 ;; This function calls:
 11025 ;;		Nothing
 11026 ;; This function is called by:
 11027 ;;		_I2C_DO_RX
 11028 ;; This function uses a non-reentrant model
 11029 ;;
 11030                           
 11031                           	psect	text69
 11032  00BFF4                     __ptext69:
 11033                           	callstack 0
 11034  00BFF4                     _I2C_MasterGetRxData:
 11035                           	callstack 21
 11036  00BFF4                     
 11037                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 11038  00BFF4  50C9               	movf	201,w,c	;volatile
 11039  00BFF6  0012               	return		;funcret
 11040  00BFF8                     __end_of_I2C_MasterGetRxData:
 11041                           	callstack 0
 11042                           
 11043 ;; *************** function _I2C_MasterSendNack *****************
 11044 ;; Defined at:
 11045 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 11046 ;; Parameters:    Size  Location     Type
 11047 ;;		None
 11048 ;; Auto vars:     Size  Location     Type
 11049 ;;		None
 11050 ;; Return value:  Size  Location     Type
 11051 ;;                  1    wreg      void 
 11052 ;; Registers used:
 11053 ;;		None
 11054 ;; Tracked objects:
 11055 ;;		On entry : 0/0
 11056 ;;		On exit  : 0/0
 11057 ;;		Unchanged: 0/0
 11058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11063 ;;Total ram usage:        0 bytes
 11064 ;; Hardware stack levels used: 1
 11065 ;; This function calls:
 11066 ;;		Nothing
 11067 ;; This function is called by:
 11068 ;;		_I2C_DO_RX_NACK_STOP
 11069 ;;		_I2C_DO_RX_NACK_RESTART
 11070 ;; This function uses a non-reentrant model
 11071 ;;
 11072                           
 11073                           	psect	text70
 11074  00BFFC                     __ptext70:
 11075                           	callstack 0
 11076  00BFFC                     _I2C_MasterSendNack:
 11077                           	callstack 21
 11078  00BFFC                     
 11079                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 11080  00BFFC  8AC5               	bsf	197,5,c	;volatile
 11081                           
 11082                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 11083  00BFFE  88C5               	bsf	197,4,c	;volatile
 11084  00C000  0012               	return		;funcret
 11085  00C002                     __end_of_I2C_MasterSendNack:
 11086                           	callstack 0
 11087                           
 11088 ;; *************** function _I2C_MasterStartRx *****************
 11089 ;; Defined at:
 11090 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 11091 ;; Parameters:    Size  Location     Type
 11092 ;;		None
 11093 ;; Auto vars:     Size  Location     Type
 11094 ;;		None
 11095 ;; Return value:  Size  Location     Type
 11096 ;;                  1    wreg      void 
 11097 ;; Registers used:
 11098 ;;		None
 11099 ;; Tracked objects:
 11100 ;;		On entry : 0/0
 11101 ;;		On exit  : 0/0
 11102 ;;		Unchanged: 0/0
 11103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11104 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;Total ram usage:        0 bytes
 11109 ;; Hardware stack levels used: 1
 11110 ;; This function calls:
 11111 ;;		Nothing
 11112 ;; This function is called by:
 11113 ;;		_I2C_DO_RCEN
 11114 ;; This function uses a non-reentrant model
 11115 ;;
 11116                           
 11117                           	psect	text71
 11118  00BFF0                     __ptext71:
 11119                           	callstack 0
 11120  00BFF0                     _I2C_MasterStartRx:
 11121                           	callstack 21
 11122  00BFF0                     
 11123                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 11124  00BFF0  86C5               	bsf	197,3,c	;volatile
 11125  00BFF2  0012               	return		;funcret
 11126  00BFF4                     __end_of_I2C_MasterStartRx:
 11127                           	callstack 0
 11128                           
 11129 ;; *************** function _I2C_CallbackReturnReset *****************
 11130 ;; Defined at:
 11131 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 11132 ;; Parameters:    Size  Location     Type
 11133 ;;  funPtr          2    9[COMRAM] PTR void 
 11134 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11135 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;		None
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      enum E360
 11140 ;; Registers used:
 11141 ;;		wreg
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11147 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11148 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11150 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11151 ;;Total ram usage:        2 bytes
 11152 ;; Hardware stack levels used: 1
 11153 ;; This function calls:
 11154 ;;		Nothing
 11155 ;; This function is called by:
 11156 ;;		_I2C_Open
 11157 ;;		_I2C_DO_TX
 11158 ;;		_I2C_DO_RX
 11159 ;;		_I2C_DO_TX_EMPTY
 11160 ;;		_I2C_DO_ADDRESS_NACK
 11161 ;;		_I2C_DO_RX_EMPTY
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text72
 11166  00BFEC                     __ptext72:
 11167                           	callstack 0
 11168  00BFEC                     _I2C_CallbackReturnReset:
 11169                           	callstack 21
 11170  00BFEC                     
 11171                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 11172  00BFEC  0E05               	movlw	5
 11173  00BFEE  0012               	return		;funcret
 11174  00BFF0                     __end_of_I2C_CallbackReturnReset:
 11175                           	callstack 0
 11176                           
 11177 ;; *************** function _I2C_CallbackReturnStop *****************
 11178 ;; Defined at:
 11179 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 11180 ;; Parameters:    Size  Location     Type
 11181 ;;  funPtr          2    9[COMRAM] PTR void 
 11182 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11183 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11184 ;; Auto vars:     Size  Location     Type
 11185 ;;		None
 11186 ;; Return value:  Size  Location     Type
 11187 ;;                  1    wreg      enum E360
 11188 ;; Registers used:
 11189 ;;		wreg
 11190 ;; Tracked objects:
 11191 ;;		On entry : 0/0
 11192 ;;		On exit  : 0/0
 11193 ;;		Unchanged: 0/0
 11194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11195 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11196 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11197 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11198 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11199 ;;Total ram usage:        2 bytes
 11200 ;; Hardware stack levels used: 1
 11201 ;; This function calls:
 11202 ;;		Nothing
 11203 ;; This function is called by:
 11204 ;;		_I2C_Open
 11205 ;;		_I2C_SetCallback
 11206 ;;		_I2C_DO_TX
 11207 ;;		_I2C_DO_RX
 11208 ;;		_I2C_DO_TX_EMPTY
 11209 ;;		_I2C_DO_ADDRESS_NACK
 11210 ;;		_I2C_DO_RX_EMPTY
 11211 ;; This function uses a non-reentrant model
 11212 ;;
 11213                           
 11214                           	psect	text73
 11215  00BFE8                     __ptext73:
 11216                           	callstack 0
 11217  00BFE8                     _I2C_CallbackReturnStop:
 11218                           	callstack 21
 11219  00BFE8                     
 11220                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP_;
 11221  00BFE8  0E01               	movlw	1
 11222  00BFEA  0012               	return		;funcret
 11223  00BFEC                     __end_of_I2C_CallbackReturnStop:
 11224                           	callstack 0
 11225                           
 11226 ;; *************** function _rdBlkRegCompleteHandler *****************
 11227 ;; Defined at:
 11228 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  ptr             2    9[COMRAM] PTR void 
 11231 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11232 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11233 ;; Auto vars:     Size  Location     Type
 11234 ;;		None
 11235 ;; Return value:  Size  Location     Type
 11236 ;;                  1    wreg      enum E360
 11237 ;; Registers used:
 11238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11239 ;; Tracked objects:
 11240 ;;		On entry : 0/0
 11241 ;;		On exit  : 0/0
 11242 ;;		Unchanged: 0/0
 11243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11244 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11245 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11247 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11248 ;;Total ram usage:        2 bytes
 11249 ;; Hardware stack levels used: 1
 11250 ;; Hardware stack levels required when called: 2
 11251 ;; This function calls:
 11252 ;;		_I2C_SetBuffer
 11253 ;;		_I2C_SetDataCompleteCallback
 11254 ;; This function is called by:
 11255 ;;		_I2C_ReadDataBlock
 11256 ;;		_I2C_DO_TX
 11257 ;;		_I2C_DO_RX
 11258 ;;		_I2C_DO_TX_EMPTY
 11259 ;;		_I2C_DO_ADDRESS_NACK
 11260 ;;		_I2C_DO_RX_EMPTY
 11261 ;; This function uses a non-reentrant model
 11262 ;;
 11263                           
 11264                           	psect	text74
 11265  00C4C0                     __ptext74:
 11266                           	callstack 0
 11267  00C4C0                     _rdBlkRegCompleteHandler:
 11268                           	callstack 19
 11269  00C4C0                     
 11270                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 11271  00C4C0  EE20 F002          	lfsr	2,2
 11272  00C4C4  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 11273  00C4C6  26D9               	addwf	fsr2l,f,c
 11274  00C4C8  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 11275  00C4CA  22DA               	addwfc	fsr2h,f,c
 11276  00C4CC  CFDE F001          	movff	postinc2,I2C_SetBuffer@buffer
 11277  00C4D0  CFDD F002          	movff	postdec2,I2C_SetBuffer@buffer+1
 11278  00C4D4  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 11279  00C4D8  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 11280  00C4DC  CFDE F003          	movff	postinc2,I2C_SetBuffer@bufferSize
 11281  00C4E0  CFDD F004          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 11282  00C4E4  ECED  F060         	call	_I2C_SetBuffer	;wreg free
 11283  00C4E8                     
 11284                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11285  00C4E8  0E00               	movlw	0
 11286  00C4EA  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11287  00C4EC  0E00               	movlw	0
 11288  00C4EE  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11289  00C4F0  0E00               	movlw	0
 11290  00C4F2  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11291  00C4F4  0E00               	movlw	0
 11292  00C4F6  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11293  00C4F8  EC85  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11294  00C4FC                     
 11295                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 11296  00C4FC  0E02               	movlw	2
 11297  00C4FE  0012               	return		;funcret
 11298  00C500                     __end_of_rdBlkRegCompleteHandler:
 11299                           	callstack 0
 11300                           
 11301 ;; *************** function _wr1RegCompleteHandler *****************
 11302 ;; Defined at:
 11303 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 11304 ;; Parameters:    Size  Location     Type
 11305 ;;  ptr             2    9[COMRAM] PTR void 
 11306 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11307 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11308 ;; Auto vars:     Size  Location     Type
 11309 ;;		None
 11310 ;; Return value:  Size  Location     Type
 11311 ;;                  1    wreg      enum E360
 11312 ;; Registers used:
 11313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11314 ;; Tracked objects:
 11315 ;;		On entry : 0/0
 11316 ;;		On exit  : 0/0
 11317 ;;		Unchanged: 0/0
 11318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11319 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11322 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11323 ;;Total ram usage:        2 bytes
 11324 ;; Hardware stack levels used: 1
 11325 ;; Hardware stack levels required when called: 2
 11326 ;; This function calls:
 11327 ;;		_I2C_SetBuffer
 11328 ;;		_I2C_SetDataCompleteCallback
 11329 ;; This function is called by:
 11330 ;;		_I2C_Write1ByteRegister
 11331 ;;		_I2C_DO_TX
 11332 ;;		_I2C_DO_RX
 11333 ;;		_I2C_DO_TX_EMPTY
 11334 ;;		_I2C_DO_ADDRESS_NACK
 11335 ;;		_I2C_DO_RX_EMPTY
 11336 ;; This function uses a non-reentrant model
 11337 ;;
 11338                           
 11339                           	psect	text75
 11340  00C322                     __ptext75:
 11341                           	callstack 0
 11342  00C322                     _wr1RegCompleteHandler:
 11343                           	callstack 19
 11344  00C322                     
 11345                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 11346  00C322  C00A  F001         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11347  00C326  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11348  00C32A  0E00               	movlw	0
 11349  00C32C  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11350  00C32E  0E01               	movlw	1
 11351  00C330  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11352  00C332  ECED  F060         	call	_I2C_SetBuffer	;wreg free
 11353  00C336                     
 11354                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11355  00C336  0E00               	movlw	0
 11356  00C338  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11357  00C33A  0E00               	movlw	0
 11358  00C33C  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11359  00C33E  0E00               	movlw	0
 11360  00C340  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11361  00C342  0E00               	movlw	0
 11362  00C344  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11363  00C346  EC85  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11364  00C34A                     
 11365                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 11366  00C34A  0E04               	movlw	4
 11367  00C34C  0012               	return		;funcret
 11368  00C34E                     __end_of_wr1RegCompleteHandler:
 11369                           	callstack 0
 11370                           
 11371 ;; *************** function _rd2RegCompleteHandler *****************
 11372 ;; Defined at:
 11373 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 11374 ;; Parameters:    Size  Location     Type
 11375 ;;  ptr             2    9[COMRAM] PTR void 
 11376 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11377 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11378 ;; Auto vars:     Size  Location     Type
 11379 ;;		None
 11380 ;; Return value:  Size  Location     Type
 11381 ;;                  1    wreg      enum E360
 11382 ;; Registers used:
 11383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11384 ;; Tracked objects:
 11385 ;;		On entry : 0/0
 11386 ;;		On exit  : 0/0
 11387 ;;		Unchanged: 0/0
 11388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11389 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11391 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11393 ;;Total ram usage:        2 bytes
 11394 ;; Hardware stack levels used: 1
 11395 ;; Hardware stack levels required when called: 2
 11396 ;; This function calls:
 11397 ;;		_I2C_SetBuffer
 11398 ;;		_I2C_SetDataCompleteCallback
 11399 ;; This function is called by:
 11400 ;;		_I2C_Read2ByteRegister
 11401 ;;		_I2C_DO_TX
 11402 ;;		_I2C_DO_RX
 11403 ;;		_I2C_DO_TX_EMPTY
 11404 ;;		_I2C_DO_ADDRESS_NACK
 11405 ;;		_I2C_DO_RX_EMPTY
 11406 ;; This function uses a non-reentrant model
 11407 ;;
 11408                           
 11409                           	psect	text76
 11410  00C2F6                     __ptext76:
 11411                           	callstack 0
 11412  00C2F6                     _rd2RegCompleteHandler:
 11413                           	callstack 19
 11414  00C2F6                     
 11415                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 11416  00C2F6  C00A  F001         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11417  00C2FA  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11418  00C2FE  0E00               	movlw	0
 11419  00C300  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11420  00C302  0E02               	movlw	2
 11421  00C304  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11422  00C306  ECED  F060         	call	_I2C_SetBuffer	;wreg free
 11423  00C30A                     
 11424                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11425  00C30A  0E00               	movlw	0
 11426  00C30C  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11427  00C30E  0E00               	movlw	0
 11428  00C310  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11429  00C312  0E00               	movlw	0
 11430  00C314  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11431  00C316  0E00               	movlw	0
 11432  00C318  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11433  00C31A  EC85  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11434  00C31E                     
 11435                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 11436  00C31E  0E02               	movlw	2
 11437  00C320  0012               	return		;funcret
 11438  00C322                     __end_of_rd2RegCompleteHandler:
 11439                           	callstack 0
 11440                           
 11441 ;; *************** function _rd1RegCompleteHandler *****************
 11442 ;; Defined at:
 11443 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;  ptr             2    9[COMRAM] PTR void 
 11446 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11447 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11448 ;; Auto vars:     Size  Location     Type
 11449 ;;		None
 11450 ;; Return value:  Size  Location     Type
 11451 ;;                  1    wreg      enum E360
 11452 ;; Registers used:
 11453 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11454 ;; Tracked objects:
 11455 ;;		On entry : 0/0
 11456 ;;		On exit  : 0/0
 11457 ;;		Unchanged: 0/0
 11458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11463 ;;Total ram usage:        2 bytes
 11464 ;; Hardware stack levels used: 1
 11465 ;; Hardware stack levels required when called: 2
 11466 ;; This function calls:
 11467 ;;		_I2C_SetBuffer
 11468 ;;		_I2C_SetDataCompleteCallback
 11469 ;; This function is called by:
 11470 ;;		_I2C_Read1ByteRegister
 11471 ;;		_I2C_DO_TX
 11472 ;;		_I2C_DO_RX
 11473 ;;		_I2C_DO_TX_EMPTY
 11474 ;;		_I2C_DO_ADDRESS_NACK
 11475 ;;		_I2C_DO_RX_EMPTY
 11476 ;; This function uses a non-reentrant model
 11477 ;;
 11478                           
 11479                           	psect	text77
 11480  00C2CA                     __ptext77:
 11481                           	callstack 0
 11482  00C2CA                     _rd1RegCompleteHandler:
 11483                           	callstack 19
 11484  00C2CA                     
 11485                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 11486  00C2CA  C00A  F001         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11487  00C2CE  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11488  00C2D2  0E00               	movlw	0
 11489  00C2D4  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11490  00C2D6  0E01               	movlw	1
 11491  00C2D8  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11492  00C2DA  ECED  F060         	call	_I2C_SetBuffer	;wreg free
 11493  00C2DE                     
 11494                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11495  00C2DE  0E00               	movlw	0
 11496  00C2E0  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11497  00C2E2  0E00               	movlw	0
 11498  00C2E4  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11499  00C2E6  0E00               	movlw	0
 11500  00C2E8  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11501  00C2EA  0E00               	movlw	0
 11502  00C2EC  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11503  00C2EE  EC85  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11504  00C2F2                     
 11505                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 11506  00C2F2  0E02               	movlw	2
 11507  00C2F4  0012               	return		;funcret
 11508  00C2F6                     __end_of_rd1RegCompleteHandler:
 11509                           	callstack 0
 11510                           
 11511 ;; *************** function _wr2RegCompleteHandler *****************
 11512 ;; Defined at:
 11513 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 11514 ;; Parameters:    Size  Location     Type
 11515 ;;  ptr             2    9[COMRAM] PTR void 
 11516 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11517 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11518 ;; Auto vars:     Size  Location     Type
 11519 ;;		None
 11520 ;; Return value:  Size  Location     Type
 11521 ;;                  1    wreg      enum E360
 11522 ;; Registers used:
 11523 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11524 ;; Tracked objects:
 11525 ;;		On entry : 0/0
 11526 ;;		On exit  : 0/0
 11527 ;;		Unchanged: 0/0
 11528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11529 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11530 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11532 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11533 ;;Total ram usage:        2 bytes
 11534 ;; Hardware stack levels used: 1
 11535 ;; Hardware stack levels required when called: 2
 11536 ;; This function calls:
 11537 ;;		_I2C_SetBuffer
 11538 ;;		_I2C_SetDataCompleteCallback
 11539 ;; This function is called by:
 11540 ;;		_I2C_Write2ByteRegister
 11541 ;;		_I2C_DO_TX
 11542 ;;		_I2C_DO_RX
 11543 ;;		_I2C_DO_TX_EMPTY
 11544 ;;		_I2C_DO_ADDRESS_NACK
 11545 ;;		_I2C_DO_RX_EMPTY
 11546 ;; This function uses a non-reentrant model
 11547 ;;
 11548                           
 11549                           	psect	text78
 11550  00C29E                     __ptext78:
 11551                           	callstack 0
 11552  00C29E                     _wr2RegCompleteHandler:
 11553                           	callstack 19
 11554  00C29E                     
 11555                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 11556  00C29E  C00A  F001         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11557  00C2A2  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11558  00C2A6  0E00               	movlw	0
 11559  00C2A8  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11560  00C2AA  0E02               	movlw	2
 11561  00C2AC  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11562  00C2AE  ECED  F060         	call	_I2C_SetBuffer	;wreg free
 11563  00C2B2                     
 11564                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11565  00C2B2  0E00               	movlw	0
 11566  00C2B4  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11567  00C2B6  0E00               	movlw	0
 11568  00C2B8  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11569  00C2BA  0E00               	movlw	0
 11570  00C2BC  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11571  00C2BE  0E00               	movlw	0
 11572  00C2C0  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11573  00C2C2  EC85  F060         	call	_I2C_SetDataCompleteCallback	;wreg free
 11574  00C2C6                     
 11575                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 11576  00C2C6  0E04               	movlw	4
 11577  00C2C8  0012               	return		;funcret
 11578  00C2CA                     __end_of_wr2RegCompleteHandler:
 11579                           	callstack 0
 11580                           
 11581 ;; *************** function _I2C_SetDataCompleteCallback *****************
 11582 ;; Defined at:
 11583 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 11584 ;; Parameters:    Size  Location     Type
 11585 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 11586 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11587 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11588 ;;  ptr             2    7[COMRAM] PTR void 
 11589 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11590 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11591 ;; Auto vars:     Size  Location     Type
 11592 ;;		None
 11593 ;; Return value:  Size  Location     Type
 11594 ;;                  1    wreg      void 
 11595 ;; Registers used:
 11596 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11597 ;; Tracked objects:
 11598 ;;		On entry : 0/0
 11599 ;;		On exit  : 0/0
 11600 ;;		Unchanged: 0/0
 11601 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11602 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11603 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11604 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11605 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11606 ;;Total ram usage:        4 bytes
 11607 ;; Hardware stack levels used: 1
 11608 ;; Hardware stack levels required when called: 1
 11609 ;; This function calls:
 11610 ;;		_I2C_SetCallback
 11611 ;; This function is called by:
 11612 ;;		_rd1RegCompleteHandler
 11613 ;;		_rd2RegCompleteHandler
 11614 ;;		_wr1RegCompleteHandler
 11615 ;;		_wr2RegCompleteHandler
 11616 ;;		_rdBlkRegCompleteHandler
 11617 ;;		_I2C_Read1ByteRegister
 11618 ;;		_I2C_Read2ByteRegister
 11619 ;;		_I2C_Write1ByteRegister
 11620 ;;		_I2C_Write2ByteRegister
 11621 ;;		_I2C_ReadDataBlock
 11622 ;; This function uses a non-reentrant model
 11623 ;;
 11624                           
 11625                           	psect	text79
 11626  00C10A                     __ptext79:
 11627                           	callstack 0
 11628  00C10A                     _I2C_SetDataCompleteCallback:
 11629                           	callstack 19
 11630  00C10A                     
 11631                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 11632  00C10A  C006  F001         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 11633  00C10E  C007  F002         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 11634  00C112  C008  F003         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 11635  00C116  C009  F004         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 11636  00C11A  0E00               	movlw	0
 11637  00C11C  ECF9  F064         	call	_I2C_SetCallback
 11638  00C120  0012               	return		;funcret
 11639  00C122                     __end_of_I2C_SetDataCompleteCallback:
 11640                           	callstack 0
 11641                           
 11642 ;; *************** function _I2C_SetCallback *****************
 11643 ;; Defined at:
 11644 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 11645 ;; Parameters:    Size  Location     Type
 11646 ;;  idx             1    wreg     enum E12595
 11647 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 11648 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11649 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11650 ;;  ptr             2    2[COMRAM] PTR void 
 11651 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11652 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11653 ;; Auto vars:     Size  Location     Type
 11654 ;;  idx             1    4[COMRAM] enum E12595
 11655 ;; Return value:  Size  Location     Type
 11656 ;;                  1    wreg      void 
 11657 ;; Registers used:
 11658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11659 ;; Tracked objects:
 11660 ;;		On entry : 0/0
 11661 ;;		On exit  : 0/0
 11662 ;;		Unchanged: 0/0
 11663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11664 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11665 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11667 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11668 ;;Total ram usage:        5 bytes
 11669 ;; Hardware stack levels used: 1
 11670 ;; This function calls:
 11671 ;;		Nothing
 11672 ;; This function is called by:
 11673 ;;		_I2C_SetDataCompleteCallback
 11674 ;;		_I2C_SetAddressNackCallback
 11675 ;;		_I2C_SetWriteCollisionCallback
 11676 ;;		_I2C_SetDataNackCallback
 11677 ;;		_I2C_SetTimeoutCallback
 11678 ;; This function uses a non-reentrant model
 11679 ;;
 11680                           
 11681                           	psect	text80
 11682  00C9F2                     __ptext80:
 11683                           	callstack 0
 11684  00C9F2                     _I2C_SetCallback:
 11685                           	callstack 25
 11686                           
 11687                           ;incstack = 0
 11688                           ;I2C_SetCallback@idx stored from wreg
 11689  00C9F2  6E05               	movwf	I2C_SetCallback@idx^0,c
 11690  00C9F4                     
 11691                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 11692  00C9F4  5001               	movf	I2C_SetCallback@cb^0,w,c
 11693  00C9F6  1002               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 11694  00C9F8  B4D8               	btfsc	status,2,c
 11695  00C9FA  EF01  F065         	goto	u3251
 11696  00C9FE  EF03  F065         	goto	u3250
 11697  00CA02                     u3251:
 11698  00CA02  EF1D  F065         	goto	l4367
 11699  00CA06                     u3250:
 11700  00CA06                     
 11701                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 11702  00CA06  5005               	movf	I2C_SetCallback@idx^0,w,c
 11703  00CA08  0D02               	mullw	2
 11704  00CA0A  0E50               	movlw	low _I2C_Status
 11705  00CA0C  24F3               	addwf	243,w,c
 11706  00CA0E  6ED9               	movwf	fsr2l,c
 11707  00CA10  0E01               	movlw	high _I2C_Status
 11708  00CA12  20F4               	addwfc	prodh,w,c
 11709  00CA14  6EDA               	movwf	fsr2h,c
 11710  00CA16  C001  FFDE         	movff	I2C_SetCallback@cb,postinc2
 11711  00CA1A  C002  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 11712                           
 11713                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 11714  00CA1E  5005               	movf	I2C_SetCallback@idx^0,w,c
 11715  00CA20  0D02               	mullw	2
 11716  00CA22  0E5C               	movlw	low (_I2C_Status+12)
 11717  00CA24  24F3               	addwf	243,w,c
 11718  00CA26  6ED9               	movwf	fsr2l,c
 11719  00CA28  0E01               	movlw	high (_I2C_Status+12)
 11720  00CA2A  20F4               	addwfc	prodh,w,c
 11721  00CA2C  6EDA               	movwf	fsr2h,c
 11722  00CA2E  C003  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 11723  00CA32  C004  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 11724                           
 11725                           ;mcc_generated_files/i2c_master.c: 304:     }
 11726  00CA36  EF35  F065         	goto	l302
 11727  00CA3A                     l4367:
 11728                           
 11729                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 11730  00CA3A  5005               	movf	I2C_SetCallback@idx^0,w,c
 11731  00CA3C  0D02               	mullw	2
 11732  00CA3E  0E50               	movlw	low _I2C_Status
 11733  00CA40  24F3               	addwf	243,w,c
 11734  00CA42  6ED9               	movwf	fsr2l,c
 11735  00CA44  0E01               	movlw	high _I2C_Status
 11736  00CA46  20F4               	addwfc	prodh,w,c
 11737  00CA48  6EDA               	movwf	fsr2h,c
 11738  00CA4A  0EE8               	movlw	low _I2C_CallbackReturnStop
 11739  00CA4C  6EDE               	movwf	postinc2,c
 11740  00CA4E  0EBF               	movlw	high _I2C_CallbackReturnStop
 11741  00CA50  6EDD               	movwf	postdec2,c
 11742                           
 11743                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 11744  00CA52  5005               	movf	I2C_SetCallback@idx^0,w,c
 11745  00CA54  0D02               	mullw	2
 11746  00CA56  0E5C               	movlw	low (_I2C_Status+12)
 11747  00CA58  24F3               	addwf	243,w,c
 11748  00CA5A  6ED9               	movwf	fsr2l,c
 11749  00CA5C  0E01               	movlw	high (_I2C_Status+12)
 11750  00CA5E  20F4               	addwfc	prodh,w,c
 11751  00CA60  6EDA               	movwf	fsr2h,c
 11752  00CA62  0E00               	movlw	0
 11753  00CA64  6EDE               	movwf	postinc2,c
 11754  00CA66  0E00               	movlw	0
 11755  00CA68  6EDD               	movwf	postdec2,c
 11756  00CA6A                     l302:
 11757  00CA6A  0012               	return		;funcret
 11758  00CA6C                     __end_of_I2C_SetCallback:
 11759                           	callstack 0
 11760                           
 11761 ;; *************** function _I2C_SetBuffer *****************
 11762 ;; Defined at:
 11763 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 11764 ;; Parameters:    Size  Location     Type
 11765 ;;  buffer          2    0[COMRAM] PTR void 
 11766 ;;		 -> Oled_Data@data_I2C(2), Oled_Command@data_I2C(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 11767 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 11768 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 11769 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 11770 ;;  bufferSize      2    2[COMRAM] unsigned int 
 11771 ;; Auto vars:     Size  Location     Type
 11772 ;;		None
 11773 ;; Return value:  Size  Location     Type
 11774 ;;                  1    wreg      void 
 11775 ;; Registers used:
 11776 ;;		wreg, status,2, status,0
 11777 ;; Tracked objects:
 11778 ;;		On entry : 0/0
 11779 ;;		On exit  : 0/0
 11780 ;;		Unchanged: 0/0
 11781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11786 ;;Total ram usage:        4 bytes
 11787 ;; Hardware stack levels used: 1
 11788 ;; This function calls:
 11789 ;;		Nothing
 11790 ;; This function is called by:
 11791 ;;		_I2C_WriteNBytes
 11792 ;;		_rd1RegCompleteHandler
 11793 ;;		_rd2RegCompleteHandler
 11794 ;;		_wr1RegCompleteHandler
 11795 ;;		_wr2RegCompleteHandler
 11796 ;;		_rdBlkRegCompleteHandler
 11797 ;;		_I2C_Read1ByteRegister
 11798 ;;		_I2C_Read2ByteRegister
 11799 ;;		_I2C_Write1ByteRegister
 11800 ;;		_I2C_Write2ByteRegister
 11801 ;;		_I2C_ReadNBytes
 11802 ;;		_I2C_ReadDataBlock
 11803 ;; This function uses a non-reentrant model
 11804 ;;
 11805                           
 11806                           	psect	text81
 11807  00C1DA                     __ptext81:
 11808                           	callstack 0
 11809  00C1DA                     _I2C_SetBuffer:
 11810                           	callstack 26
 11811  00C1DA                     
 11812                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 11813  00C1DA  0101               	movlb	1	; () banked
 11814  00C1DC  A773               	btfss	(_I2C_Status+35)& (0+255),3,b
 11815  00C1DE  EFF3  F060         	goto	u3261
 11816  00C1E2  EFF5  F060         	goto	u3260
 11817  00C1E6                     u3261:
 11818  00C1E6  EFFE  F060         	goto	l282
 11819  00C1EA                     u3260:
 11820  00C1EA                     
 11821                           ; BSR set to: 1
 11822                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 11823  00C1EA  C001  F16D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 11824  00C1EE  C002  F16E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 11825  00C1F2                     
 11826                           ; BSR set to: 1
 11827                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 11828  00C1F2  C003  F16F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 11829  00C1F6  C004  F170         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 11830  00C1FA                     
 11831                           ; BSR set to: 1
 11832                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 11833  00C1FA  9773               	bcf	(_I2C_Status+35)& (0+255),3,b
 11834  00C1FC                     l282:
 11835                           
 11836                           ; BSR set to: 1
 11837  00C1FC  0012               	return		;funcret
 11838  00C1FE                     __end_of_I2C_SetBuffer:
 11839                           	callstack 0
 11840                           
 11841 ;; *************** function _I2C_MasterStop *****************
 11842 ;; Defined at:
 11843 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 11844 ;; Parameters:    Size  Location     Type
 11845 ;;		None
 11846 ;; Auto vars:     Size  Location     Type
 11847 ;;		None
 11848 ;; Return value:  Size  Location     Type
 11849 ;;                  1    wreg      void 
 11850 ;; Registers used:
 11851 ;;		None
 11852 ;; Tracked objects:
 11853 ;;		On entry : 0/0
 11854 ;;		On exit  : 0/0
 11855 ;;		Unchanged: 0/0
 11856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11858 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11860 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11861 ;;Total ram usage:        0 bytes
 11862 ;; Hardware stack levels used: 1
 11863 ;; This function calls:
 11864 ;;		Nothing
 11865 ;; This function is called by:
 11866 ;;		_I2C_DO_SEND_STOP
 11867 ;; This function uses a non-reentrant model
 11868 ;;
 11869                           
 11870                           	psect	text82
 11871  00BFE4                     __ptext82:
 11872                           	callstack 0
 11873  00BFE4                     _I2C_MasterStop:
 11874                           	callstack 20
 11875  00BFE4                     
 11876                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 11877  00BFE4  84C5               	bsf	197,2,c	;volatile
 11878  00BFE6  0012               	return		;funcret
 11879  00BFE8                     __end_of_I2C_MasterStop:
 11880                           	callstack 0
 11881                           
 11882 ;; *************** function _I2C_MasterEnableRestart *****************
 11883 ;; Defined at:
 11884 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 11885 ;; Parameters:    Size  Location     Type
 11886 ;;		None
 11887 ;; Auto vars:     Size  Location     Type
 11888 ;;		None
 11889 ;; Return value:  Size  Location     Type
 11890 ;;                  1    wreg      void 
 11891 ;; Registers used:
 11892 ;;		None
 11893 ;; Tracked objects:
 11894 ;;		On entry : 0/0
 11895 ;;		On exit  : 0/0
 11896 ;;		Unchanged: 0/0
 11897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11898 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11900 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11901 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11902 ;;Total ram usage:        0 bytes
 11903 ;; Hardware stack levels used: 1
 11904 ;; This function calls:
 11905 ;;		Nothing
 11906 ;; This function is called by:
 11907 ;;		_I2C_DO_SEND_RESTART_READ
 11908 ;;		_I2C_DO_SEND_RESTART_WRITE
 11909 ;;		_I2C_DO_SEND_RESTART
 11910 ;;		_I2C_DO_RX_EMPTY
 11911 ;; This function uses a non-reentrant model
 11912 ;;
 11913                           
 11914                           	psect	text83
 11915  00BFE0                     __ptext83:
 11916                           	callstack 0
 11917  00BFE0                     _I2C_MasterEnableRestart:
 11918                           	callstack 20
 11919  00BFE0                     
 11920                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 11921  00BFE0  82C5               	bsf	197,1,c	;volatile
 11922  00BFE2  0012               	return		;funcret
 11923  00BFE4                     __end_of_I2C_MasterEnableRestart:
 11924                           	callstack 0
 11925                           
 11926 ;; *************** function _I2C_MasterStart *****************
 11927 ;; Defined at:
 11928 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 11929 ;; Parameters:    Size  Location     Type
 11930 ;;		None
 11931 ;; Auto vars:     Size  Location     Type
 11932 ;;		None
 11933 ;; Return value:  Size  Location     Type
 11934 ;;                  1    wreg      void 
 11935 ;; Registers used:
 11936 ;;		None
 11937 ;; Tracked objects:
 11938 ;;		On entry : 0/0
 11939 ;;		On exit  : 0/0
 11940 ;;		Unchanged: 0/0
 11941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11942 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11944 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11945 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11946 ;;Total ram usage:        0 bytes
 11947 ;; Hardware stack levels used: 1
 11948 ;; This function calls:
 11949 ;;		Nothing
 11950 ;; This function is called by:
 11951 ;;		_I2C_MasterOperation
 11952 ;; This function uses a non-reentrant model
 11953 ;;
 11954                           
 11955                           	psect	text84
 11956  00BFDC                     __ptext84:
 11957                           	callstack 0
 11958  00BFDC                     _I2C_MasterStart:
 11959                           	callstack 24
 11960  00BFDC                     
 11961                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 11962  00BFDC  80C5               	bsf	197,0,c	;volatile
 11963  00BFDE  0012               	return		;funcret
 11964  00BFE0                     __end_of_I2C_MasterStart:
 11965                           	callstack 0
 11966                           
 11967 ;; *************** function _I2C_Close *****************
 11968 ;; Defined at:
 11969 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 11970 ;; Parameters:    Size  Location     Type
 11971 ;;		None
 11972 ;; Auto vars:     Size  Location     Type
 11973 ;;  returnValue     1    0[COMRAM] enum E355
 11974 ;; Return value:  Size  Location     Type
 11975 ;;                  1    wreg      enum E355
 11976 ;; Registers used:
 11977 ;;		wreg, status,2, cstack
 11978 ;; Tracked objects:
 11979 ;;		On entry : 0/0
 11980 ;;		On exit  : 0/0
 11981 ;;		Unchanged: 0/0
 11982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11984 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11986 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11987 ;;Total ram usage:        1 bytes
 11988 ;; Hardware stack levels used: 1
 11989 ;; Hardware stack levels required when called: 1
 11990 ;; This function calls:
 11991 ;;		_I2C_MasterClearIrq
 11992 ;;		_I2C_MasterClose
 11993 ;;		_I2C_MasterDisableIrq
 11994 ;; This function is called by:
 11995 ;;		_I2C_WriteNBytes
 11996 ;;		_I2C_Read1ByteRegister
 11997 ;;		_I2C_Read2ByteRegister
 11998 ;;		_I2C_Write1ByteRegister
 11999 ;;		_I2C_Write2ByteRegister
 12000 ;;		_I2C_ReadNBytes
 12001 ;;		_I2C_ReadDataBlock
 12002 ;; This function uses a non-reentrant model
 12003 ;;
 12004                           
 12005                           	psect	text85
 12006  00C272                     __ptext85:
 12007                           	callstack 0
 12008  00C272                     _I2C_Close:
 12009                           	callstack 25
 12010  00C272                     
 12011                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 12012  00C272  0E01               	movlw	1
 12013  00C274  6E01               	movwf	I2C_Close@returnValue^0,c
 12014  00C276                     
 12015                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 12016  00C276  0101               	movlb	1	; () banked
 12017  00C278  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
 12018  00C27A  EF41  F061         	goto	u3911
 12019  00C27E  EF43  F061         	goto	u3910
 12020  00C282                     u3911:
 12021  00C282  EF4D  F061         	goto	l5005
 12022  00C286                     u3910:
 12023  00C286                     
 12024                           ; BSR set to: 1
 12025                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 12026  00C286  9573               	bcf	(_I2C_Status+35)& (0+255),2,b
 12027                           
 12028                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 12029  00C288  696C               	setf	(_I2C_Status+28)& (0+255),b
 12030  00C28A                     
 12031                           ; BSR set to: 1
 12032                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 12033  00C28A  ECE8  F05F         	call	_I2C_MasterClearIrq	;wreg free
 12034                           
 12035                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 12036  00C28E  ECEC  F05F         	call	_I2C_MasterDisableIrq	;wreg free
 12037                           
 12038                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 12039  00C292  ECEA  F05F         	call	_I2C_MasterClose	;wreg free
 12040  00C296                     
 12041                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 12042  00C296  C172  F001         	movff	_I2C_Status+34,I2C_Close@returnValue
 12043  00C29A                     l5005:
 12044                           
 12045                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 12046  00C29A  5001               	movf	I2C_Close@returnValue^0,w,c
 12047  00C29C  0012               	return		;funcret
 12048  00C29E                     __end_of_I2C_Close:
 12049                           	callstack 0
 12050                           
 12051 ;; *************** function _I2C_MasterDisableIrq *****************
 12052 ;; Defined at:
 12053 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 12054 ;; Parameters:    Size  Location     Type
 12055 ;;		None
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;		None
 12058 ;; Return value:  Size  Location     Type
 12059 ;;                  1    wreg      void 
 12060 ;; Registers used:
 12061 ;;		None
 12062 ;; Tracked objects:
 12063 ;;		On entry : 0/0
 12064 ;;		On exit  : 0/0
 12065 ;;		Unchanged: 0/0
 12066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12067 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12068 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12070 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12071 ;;Total ram usage:        0 bytes
 12072 ;; Hardware stack levels used: 1
 12073 ;; This function calls:
 12074 ;;		Nothing
 12075 ;; This function is called by:
 12076 ;;		_I2C_Close
 12077 ;;		_I2C_SetTimeOut
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           	psect	text86
 12082  00BFD8                     __ptext86:
 12083                           	callstack 0
 12084  00BFD8                     _I2C_MasterDisableIrq:
 12085                           	callstack 25
 12086  00BFD8                     
 12087                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 12088  00BFD8  969D               	bcf	157,3,c	;volatile
 12089  00BFDA  0012               	return		;funcret
 12090  00BFDC                     __end_of_I2C_MasterDisableIrq:
 12091                           	callstack 0
 12092                           
 12093 ;; *************** function _I2C_MasterClose *****************
 12094 ;; Defined at:
 12095 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 12096 ;; Parameters:    Size  Location     Type
 12097 ;;		None
 12098 ;; Auto vars:     Size  Location     Type
 12099 ;;		None
 12100 ;; Return value:  Size  Location     Type
 12101 ;;                  1    wreg      void 
 12102 ;; Registers used:
 12103 ;;		None
 12104 ;; Tracked objects:
 12105 ;;		On entry : 0/0
 12106 ;;		On exit  : 0/0
 12107 ;;		Unchanged: 0/0
 12108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12109 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12110 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12111 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12112 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12113 ;;Total ram usage:        0 bytes
 12114 ;; Hardware stack levels used: 1
 12115 ;; This function calls:
 12116 ;;		Nothing
 12117 ;; This function is called by:
 12118 ;;		_I2C_Close
 12119 ;; This function uses a non-reentrant model
 12120 ;;
 12121                           
 12122                           	psect	text87
 12123  00BFD4                     __ptext87:
 12124                           	callstack 0
 12125  00BFD4                     _I2C_MasterClose:
 12126                           	callstack 25
 12127  00BFD4                     
 12128                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 12129  00BFD4  9AC6               	bcf	198,5,c	;volatile
 12130  00BFD6  0012               	return		;funcret
 12131  00BFD8                     __end_of_I2C_MasterClose:
 12132                           	callstack 0
 12133                           
 12134 ;; *************** function _I2C_MasterClearIrq *****************
 12135 ;; Defined at:
 12136 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 12137 ;; Parameters:    Size  Location     Type
 12138 ;;		None
 12139 ;; Auto vars:     Size  Location     Type
 12140 ;;		None
 12141 ;; Return value:  Size  Location     Type
 12142 ;;                  1    wreg      void 
 12143 ;; Registers used:
 12144 ;;		None
 12145 ;; Tracked objects:
 12146 ;;		On entry : 0/0
 12147 ;;		On exit  : 0/0
 12148 ;;		Unchanged: 0/0
 12149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12150 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12153 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12154 ;;Total ram usage:        0 bytes
 12155 ;; Hardware stack levels used: 1
 12156 ;; This function calls:
 12157 ;;		Nothing
 12158 ;; This function is called by:
 12159 ;;		_I2C_Open
 12160 ;;		_I2C_Close
 12161 ;;		_I2C_MasterFsm
 12162 ;; This function uses a non-reentrant model
 12163 ;;
 12164                           
 12165                           	psect	text88
 12166  00BFD0                     __ptext88:
 12167                           	callstack 0
 12168  00BFD0                     _I2C_MasterClearIrq:
 12169                           	callstack 25
 12170  00BFD0                     
 12171                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 12172  00BFD0  969E               	bcf	158,3,c	;volatile
 12173  00BFD2  0012               	return		;funcret
 12174  00BFD4                     __end_of_I2C_MasterClearIrq:
 12175                           	callstack 0
 12176                           
 12177 ;; *************** function _I2C_Master_Init *****************
 12178 ;; Defined at:
 12179 ;;		line 118 in file "INA260.c"
 12180 ;; Parameters:    Size  Location     Type
 12181 ;;  c               4   13[COMRAM] const unsigned long 
 12182 ;; Auto vars:     Size  Location     Type
 12183 ;;		None
 12184 ;; Return value:  Size  Location     Type
 12185 ;;                  1    wreg      void 
 12186 ;; Registers used:
 12187 ;;		wreg, status,2, status,0, cstack
 12188 ;; Tracked objects:
 12189 ;;		On entry : 0/0
 12190 ;;		On exit  : 0/0
 12191 ;;		Unchanged: 0/0
 12192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12193 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12194 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12195 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12196 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12197 ;;Total ram usage:        8 bytes
 12198 ;; Hardware stack levels used: 1
 12199 ;; Hardware stack levels required when called: 1
 12200 ;; This function calls:
 12201 ;;		___lldiv
 12202 ;; This function is called by:
 12203 ;;		_main
 12204 ;; This function uses a non-reentrant model
 12205 ;;
 12206                           
 12207                           	psect	text89
 12208  00C6CC                     __ptext89:
 12209                           	callstack 0
 12210  00C6CC                     _I2C_Master_Init:
 12211                           	callstack 29
 12212  00C6CC                     
 12213                           ;INA260.c: 118: void I2C_Master_Init(const unsigned long c);INA260.c: 119: {;INA260.c: 1
      +                          20:   SSPCON1 = 0b00101000;
 12214  00C6CC  0E28               	movlw	40
 12215  00C6CE  6EC6               	movwf	198,c	;volatile
 12216                           
 12217                           ;INA260.c: 121:   SSPCON2 = 0;
 12218  00C6D0  0E00               	movlw	0
 12219  00C6D2  6EC5               	movwf	197,c	;volatile
 12220  00C6D4                     
 12221                           ;INA260.c: 122:   SSPADD = (8000000/(4*c))-1;
 12222  00C6D4  0E00               	movlw	0
 12223  00C6D6  6E01               	movwf	___lldiv@dividend^0,c
 12224  00C6D8  0E12               	movlw	18
 12225  00C6DA  6E02               	movwf	(___lldiv@dividend+1)^0,c
 12226  00C6DC  0E7A               	movlw	122
 12227  00C6DE  6E03               	movwf	(___lldiv@dividend+2)^0,c
 12228  00C6E0  0E00               	movlw	0
 12229  00C6E2  6E04               	movwf	(___lldiv@dividend+3)^0,c
 12230  00C6E4  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 12231  00C6E8  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 12232  00C6EC  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 12233  00C6F0  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 12234  00C6F4  0E02               	movlw	2
 12235  00C6F6                     u5975:
 12236  00C6F6  90D8               	bcf	status,0,c
 12237  00C6F8  3612               	rlcf	??_I2C_Master_Init^0,f,c
 12238  00C6FA  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
 12239  00C6FC  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
 12240  00C6FE  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
 12241  00C700  2EE8               	decfsz	wreg,f,c
 12242  00C702  EF7B  F063         	goto	u5975
 12243  00C706  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
 12244  00C70A  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12245  00C70E  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12246  00C712  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12247  00C716  EC0A  F066         	call	___lldiv	;wreg free
 12248  00C71A  0401               	decf	?___lldiv^0,w,c
 12249  00C71C  6EC8               	movwf	200,c	;volatile
 12250  00C71E                     
 12251                           ;INA260.c: 123:   SSPSTAT = 0;
 12252  00C71E  0E00               	movlw	0
 12253  00C720  6EC7               	movwf	199,c	;volatile
 12254  00C722                     
 12255                           ;INA260.c: 124:   TRISC3 = 1;
 12256  00C722  8694               	bsf	3988,3,c	;volatile
 12257  00C724                     
 12258                           ;INA260.c: 125:   TRISC4 = 1;
 12259  00C724  8894               	bsf	3988,4,c	;volatile
 12260  00C726  0012               	return		;funcret
 12261  00C728                     __end_of_I2C_Master_Init:
 12262                           	callstack 0
 12263                           
 12264 ;; *************** function ___lldiv *****************
 12265 ;; Defined at:
 12266 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\__lldiv.c"
 12267 ;; Parameters:    Size  Location     Type
 12268 ;;  dividend        4    0[COMRAM] unsigned long 
 12269 ;;  divisor         4    4[COMRAM] unsigned long 
 12270 ;; Auto vars:     Size  Location     Type
 12271 ;;  quotient        4    8[COMRAM] unsigned long 
 12272 ;;  counter         1   12[COMRAM] unsigned char 
 12273 ;; Return value:  Size  Location     Type
 12274 ;;                  4    0[COMRAM] unsigned long 
 12275 ;; Registers used:
 12276 ;;		wreg, status,2, status,0
 12277 ;; Tracked objects:
 12278 ;;		On entry : 0/0
 12279 ;;		On exit  : 0/0
 12280 ;;		Unchanged: 0/0
 12281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12282 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12283 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12285 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12286 ;;Total ram usage:       13 bytes
 12287 ;; Hardware stack levels used: 1
 12288 ;; This function calls:
 12289 ;;		Nothing
 12290 ;; This function is called by:
 12291 ;;		_I2C_Master_Init
 12292 ;; This function uses a non-reentrant model
 12293 ;;
 12294                           
 12295                           	psect	text90
 12296  00CC14                     __ptext90:
 12297                           	callstack 0
 12298  00CC14                     ___lldiv:
 12299                           	callstack 29
 12300  00CC14  0E00               	movlw	0
 12301  00CC16  6E09               	movwf	___lldiv@quotient^0,c
 12302  00CC18  0E00               	movlw	0
 12303  00CC1A  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12304  00CC1C  0E00               	movlw	0
 12305  00CC1E  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12306  00CC20  0E00               	movlw	0
 12307  00CC22  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12308  00CC24  5005               	movf	___lldiv@divisor^0,w,c
 12309  00CC26  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12310  00CC28  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12311  00CC2A  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12312  00CC2C  B4D8               	btfsc	status,2,c
 12313  00CC2E  EF1B  F066         	goto	u5791
 12314  00CC32  EF1D  F066         	goto	u5790
 12315  00CC36                     u5791:
 12316  00CC36  EF53  F066         	goto	l888
 12317  00CC3A                     u5790:
 12318  00CC3A  0E01               	movlw	1
 12319  00CC3C  6E0D               	movwf	___lldiv@counter^0,c
 12320  00CC3E  EF27  F066         	goto	l6109
 12321  00CC42                     l6107:
 12322  00CC42  90D8               	bcf	status,0,c
 12323  00CC44  3605               	rlcf	___lldiv@divisor^0,f,c
 12324  00CC46  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12325  00CC48  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12326  00CC4A  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12327  00CC4C  2A0D               	incf	___lldiv@counter^0,f,c
 12328  00CC4E                     l6109:
 12329  00CC4E  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12330  00CC50  EF2C  F066         	goto	u5801
 12331  00CC54  EF2E  F066         	goto	u5800
 12332  00CC58                     u5801:
 12333  00CC58  EF21  F066         	goto	l6107
 12334  00CC5C                     u5800:
 12335  00CC5C                     l6111:
 12336  00CC5C  90D8               	bcf	status,0,c
 12337  00CC5E  3609               	rlcf	___lldiv@quotient^0,f,c
 12338  00CC60  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12339  00CC62  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12340  00CC64  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12341  00CC66  5005               	movf	___lldiv@divisor^0,w,c
 12342  00CC68  5C01               	subwf	___lldiv@dividend^0,w,c
 12343  00CC6A  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12344  00CC6C  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12345  00CC6E  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12346  00CC70  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12347  00CC72  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12348  00CC74  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12349  00CC76  A0D8               	btfss	status,0,c
 12350  00CC78  EF40  F066         	goto	u5811
 12351  00CC7C  EF42  F066         	goto	u5810
 12352  00CC80                     u5811:
 12353  00CC80  EF4B  F066         	goto	l6119
 12354  00CC84                     u5810:
 12355  00CC84  5005               	movf	___lldiv@divisor^0,w,c
 12356  00CC86  5E01               	subwf	___lldiv@dividend^0,f,c
 12357  00CC88  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12358  00CC8A  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12359  00CC8C  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12360  00CC8E  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12361  00CC90  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12362  00CC92  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12363  00CC94  8009               	bsf	___lldiv@quotient^0,0,c
 12364  00CC96                     l6119:
 12365  00CC96  90D8               	bcf	status,0,c
 12366  00CC98  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12367  00CC9A  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12368  00CC9C  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12369  00CC9E  3205               	rrcf	___lldiv@divisor^0,f,c
 12370  00CCA0  2E0D               	decfsz	___lldiv@counter^0,f,c
 12371  00CCA2  EF2E  F066         	goto	l6111
 12372  00CCA6                     l888:
 12373  00CCA6  C009  F001         	movff	___lldiv@quotient,?___lldiv
 12374  00CCAA  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 12375  00CCAE  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 12376  00CCB2  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 12377  00CCB6  0012               	return		;funcret
 12378  00CCB8                     __end_of___lldiv:
 12379                           	callstack 0
 12380                           
 12381 ;; *************** function _I2C_Initialize *****************
 12382 ;; Defined at:
 12383 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 12384 ;; Parameters:    Size  Location     Type
 12385 ;;		None
 12386 ;; Auto vars:     Size  Location     Type
 12387 ;;		None
 12388 ;; Return value:  Size  Location     Type
 12389 ;;                  1    wreg      void 
 12390 ;; Registers used:
 12391 ;;		wreg, status,2
 12392 ;; Tracked objects:
 12393 ;;		On entry : 0/0
 12394 ;;		On exit  : 0/0
 12395 ;;		Unchanged: 0/0
 12396 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12397 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12398 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12399 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12400 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12401 ;;Total ram usage:        0 bytes
 12402 ;; Hardware stack levels used: 1
 12403 ;; This function calls:
 12404 ;;		Nothing
 12405 ;; This function is called by:
 12406 ;;		_main
 12407 ;; This function uses a non-reentrant model
 12408 ;;
 12409                           
 12410                           	psect	text91
 12411  00C0E2                     __ptext91:
 12412                           	callstack 0
 12413  00C0E2                     _I2C_Initialize:
 12414                           	callstack 30
 12415  00C0E2                     
 12416                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
 12417  00C0E2  0E00               	movlw	0
 12418  00C0E4  6EC7               	movwf	199,c	;volatile
 12419                           
 12420                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
 12421  00C0E6  0E08               	movlw	8
 12422  00C0E8  6EC6               	movwf	198,c	;volatile
 12423                           
 12424                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
 12425  00C0EA  0E00               	movlw	0
 12426  00C0EC  6EC5               	movwf	197,c	;volatile
 12427                           
 12428                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
 12429  00C0EE  0E13               	movlw	19
 12430  00C0F0  6EC8               	movwf	200,c	;volatile
 12431  00C0F2                     
 12432                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
 12433  00C0F2  9AC6               	bcf	198,5,c	;volatile
 12434  00C0F4  0012               	return		;funcret
 12435  00C0F6                     __end_of_I2C_Initialize:
 12436                           	callstack 0
 12437                           
 12438 ;; *************** function _Current_ReadRegister *****************
 12439 ;; Defined at:
 12440 ;;		line 46 in file "INA260.c"
 12441 ;; Parameters:    Size  Location     Type
 12442 ;;		None
 12443 ;; Auto vars:     Size  Location     Type
 12444 ;;  temp_d          2   51[COMRAM] unsigned int 
 12445 ;;  temp_c          1   53[COMRAM] unsigned char 
 12446 ;; Return value:  Size  Location     Type
 12447 ;;                  4   45[COMRAM] float 
 12448 ;; Registers used:
 12449 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12450 ;; Tracked objects:
 12451 ;;		On entry : 0/0
 12452 ;;		On exit  : 0/0
 12453 ;;		Unchanged: 0/0
 12454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12455 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12456 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12457 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12458 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12459 ;;Total ram usage:        9 bytes
 12460 ;; Hardware stack levels used: 1
 12461 ;; Hardware stack levels required when called: 2
 12462 ;; This function calls:
 12463 ;;		_I2C_Master_Read
 12464 ;;		_I2C_Master_RepeatedStart
 12465 ;;		_I2C_Master_Start
 12466 ;;		_I2C_Master_Stop
 12467 ;;		_I2C_Master_Write
 12468 ;;		___fldiv
 12469 ;;		___flmul
 12470 ;;		___xxtofl
 12471 ;; This function is called by:
 12472 ;;		_main
 12473 ;; This function uses a non-reentrant model
 12474 ;;
 12475                           
 12476                           	psect	text92
 12477  00D49C                     __ptext92:
 12478                           	callstack 0
 12479  00D49C                     _Current_ReadRegister:
 12480                           	callstack 28
 12481  00D49C                     
 12482                           ;INA260.c: 47:     I2C_Master_Start();
 12483  00D49C  EC08  F060         	call	_I2C_Master_Start	;wreg free
 12484                           
 12485                           ;INA260.c: 48:     I2C_Master_Write(0x80);
 12486  00D4A0  0E00               	movlw	0
 12487  00D4A2  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12488  00D4A4  0E80               	movlw	128
 12489  00D4A6  6E02               	movwf	I2C_Master_Write@d^0,c
 12490  00D4A8  EC34  F060         	call	_I2C_Master_Write	;wreg free
 12491                           
 12492                           ;INA260.c: 49:     I2C_Master_Write(0x01);
 12493  00D4AC  0E00               	movlw	0
 12494  00D4AE  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12495  00D4B0  0E01               	movlw	1
 12496  00D4B2  6E02               	movwf	I2C_Master_Write@d^0,c
 12497  00D4B4  EC34  F060         	call	_I2C_Master_Write	;wreg free
 12498                           
 12499                           ;INA260.c: 50:     I2C_Master_RepeatedStart();
 12500  00D4B8  EC04  F060         	call	_I2C_Master_RepeatedStart	;wreg free
 12501                           
 12502                           ;INA260.c: 51:     I2C_Master_Write(0x81);
 12503  00D4BC  0E00               	movlw	0
 12504  00D4BE  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12505  00D4C0  0E81               	movlw	129
 12506  00D4C2  6E02               	movwf	I2C_Master_Write@d^0,c
 12507  00D4C4  EC34  F060         	call	_I2C_Master_Write	;wreg free
 12508                           
 12509                           ;INA260.c: 52:     char temp_c = I2C_Master_Read(1);
 12510  00D4C8  0E00               	movlw	0
 12511  00D4CA  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
 12512  00D4CC  0E01               	movlw	1
 12513  00D4CE  6E02               	movwf	I2C_Master_Read@a^0,c
 12514  00D4D0  ECD6  F061         	call	_I2C_Master_Read	;wreg free
 12515  00D4D4  5002               	movf	?_I2C_Master_Read^0,w,c
 12516  00D4D6  6E36               	movwf	Current_ReadRegister@temp_c^0,c
 12517                           
 12518                           ;INA260.c: 53:     unsigned int temp_d = temp_c<<8 | I2C_Master_Read(0);
 12519  00D4D8  0E00               	movlw	0
 12520  00D4DA  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
 12521  00D4DC  0E00               	movlw	0
 12522  00D4DE  6E02               	movwf	I2C_Master_Read@a^0,c
 12523  00D4E0  ECD6  F061         	call	_I2C_Master_Read	;wreg free
 12524  00D4E4  5036               	movf	Current_ReadRegister@temp_c^0,w,c
 12525  00D4E6  6E33               	movwf	(??_Current_ReadRegister+1)^0,c
 12526  00D4E8  6A32               	clrf	??_Current_ReadRegister^0,c
 12527  00D4EA  5002               	movf	?_I2C_Master_Read^0,w,c
 12528  00D4EC  1032               	iorwf	??_Current_ReadRegister^0,w,c
 12529  00D4EE  6E34               	movwf	Current_ReadRegister@temp_d^0,c
 12530  00D4F0  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
 12531  00D4F2  1033               	iorwf	(??_Current_ReadRegister+1)^0,w,c
 12532  00D4F4  6E35               	movwf	(Current_ReadRegister@temp_d+1)^0,c
 12533  00D4F6                     
 12534                           ;INA260.c: 54:     current = temp_d *1.25;
 12535  00D4F6  C034  F007         	movff	Current_ReadRegister@temp_d,___xxtofl@val
 12536  00D4FA  C035  F008         	movff	Current_ReadRegister@temp_d+1,___xxtofl@val+1
 12537  00D4FE  6A09               	clrf	(___xxtofl@val+2)^0,c
 12538  00D500  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12539  00D502  0E00               	movlw	0
 12540  00D504  EC22  F06D         	call	___xxtofl
 12541  00D508  C007  F015         	movff	?___xxtofl,___flmul@b
 12542  00D50C  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
 12543  00D510  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
 12544  00D514  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
 12545  00D518  0E00               	movlw	0
 12546  00D51A  6E19               	movwf	___flmul@a^0,c
 12547  00D51C  0E00               	movlw	0
 12548  00D51E  6E1A               	movwf	(___flmul@a+1)^0,c
 12549  00D520  0EA0               	movlw	160
 12550  00D522  6E1B               	movwf	(___flmul@a+2)^0,c
 12551  00D524  0E3F               	movlw	63
 12552  00D526  6E1C               	movwf	(___flmul@a+3)^0,c
 12553  00D528  ECBA  F071         	call	___flmul	;wreg free
 12554  00D52C  C015  F0BA         	movff	?___flmul,_current
 12555  00D530  C016  F0BB         	movff	?___flmul+1,_current+1
 12556  00D534  C017  F0BC         	movff	?___flmul+2,_current+2
 12557  00D538  C018  F0BD         	movff	?___flmul+3,_current+3
 12558  00D53C                     
 12559                           ;INA260.c: 55:     I2C_Master_Stop();
 12560  00D53C  EC0C  F060         	call	_I2C_Master_Stop	;wreg free
 12561  00D540                     
 12562                           ;INA260.c: 56:     current = current/1000;
 12563  00D540  C0BA  F001         	movff	_current,___fldiv@b
 12564  00D544  C0BB  F002         	movff	_current+1,___fldiv@b+1
 12565  00D548  C0BC  F003         	movff	_current+2,___fldiv@b+2
 12566  00D54C  C0BD  F004         	movff	_current+3,___fldiv@b+3
 12567  00D550  0E00               	movlw	0
 12568  00D552  6E05               	movwf	___fldiv@a^0,c
 12569  00D554  0E00               	movlw	0
 12570  00D556  6E06               	movwf	(___fldiv@a+1)^0,c
 12571  00D558  0E7A               	movlw	122
 12572  00D55A  6E07               	movwf	(___fldiv@a+2)^0,c
 12573  00D55C  0E44               	movlw	68
 12574  00D55E  6E08               	movwf	(___fldiv@a+3)^0,c
 12575  00D560  ECED  F06F         	call	___fldiv	;wreg free
 12576  00D564  C001  F0BA         	movff	?___fldiv,_current
 12577  00D568  C002  F0BB         	movff	?___fldiv+1,_current+1
 12578  00D56C  C003  F0BC         	movff	?___fldiv+2,_current+2
 12579  00D570  C004  F0BD         	movff	?___fldiv+3,_current+3
 12580  00D574                     
 12581                           ;INA260.c: 58:     _delay((unsigned long)((600)*(8000000/4000.0)));
 12582  00D574  0E07               	movlw	7
 12583  00D576  6E33               	movwf	(??_Current_ReadRegister+1)^0,c
 12584  00D578  0E17               	movlw	23
 12585  00D57A  6E32               	movwf	??_Current_ReadRegister^0,c
 12586  00D57C  0E6A               	movlw	106
 12587  00D57E                     u6397:
 12588  00D57E  2EE8               	decfsz	wreg,f,c
 12589  00D580  D7FE               	bra	u6397
 12590  00D582  2E32               	decfsz	??_Current_ReadRegister^0,f,c
 12591  00D584  D7FC               	bra	u6397
 12592  00D586  2E33               	decfsz	(??_Current_ReadRegister+1)^0,f,c
 12593  00D588  D7FA               	bra	u6397
 12594  00D58A  D000               	nop2	
 12595  00D58C                     
 12596                           ;INA260.c: 59:     return current;
 12597  00D58C  C0BA  F02E         	movff	_current,?_Current_ReadRegister
 12598  00D590  C0BB  F02F         	movff	_current+1,?_Current_ReadRegister+1
 12599  00D594  C0BC  F030         	movff	_current+2,?_Current_ReadRegister+2
 12600  00D598  C0BD  F031         	movff	_current+3,?_Current_ReadRegister+3
 12601  00D59C  0012               	return		;funcret
 12602  00D59E                     __end_of_Current_ReadRegister:
 12603                           	callstack 0
 12604                           
 12605 ;; *************** function ___xxtofl *****************
 12606 ;; Defined at:
 12607 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\xxtofl.c"
 12608 ;; Parameters:    Size  Location     Type
 12609 ;;  sign            1    wreg     unsigned char 
 12610 ;;  val             4    6[COMRAM] long 
 12611 ;; Auto vars:     Size  Location     Type
 12612 ;;  sign            1   14[COMRAM] unsigned char 
 12613 ;;  arg             4   16[COMRAM] unsigned long 
 12614 ;;  exp             1   15[COMRAM] unsigned char 
 12615 ;; Return value:  Size  Location     Type
 12616 ;;                  4    6[COMRAM] unsigned char 
 12617 ;; Registers used:
 12618 ;;		wreg, status,2, status,0
 12619 ;; Tracked objects:
 12620 ;;		On entry : 0/0
 12621 ;;		On exit  : 0/0
 12622 ;;		Unchanged: 0/0
 12623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12624 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12625 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12626 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12627 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12628 ;;Total ram usage:       14 bytes
 12629 ;; Hardware stack levels used: 1
 12630 ;; This function calls:
 12631 ;;		Nothing
 12632 ;; This function is called by:
 12633 ;;		_Voltage_ReadRegister
 12634 ;;		_Current_ReadRegister
 12635 ;;		_Power_ReadRegister
 12636 ;; This function uses a non-reentrant model
 12637 ;;
 12638                           
 12639                           	psect	text93
 12640  00DA44                     __ptext93:
 12641                           	callstack 0
 12642  00DA44                     ___xxtofl:
 12643                           	callstack 29
 12644                           
 12645                           ;incstack = 0
 12646                           ;___xxtofl@sign stored from wreg
 12647  00DA44  6E0F               	movwf	___xxtofl@sign^0,c
 12648  00DA46  500F               	movf	___xxtofl@sign^0,w,c
 12649  00DA48  B4D8               	btfsc	status,2,c
 12650  00DA4A  EF29  F06D         	goto	u5821
 12651  00DA4E  EF2B  F06D         	goto	u5820
 12652  00DA52                     u5821:
 12653  00DA52  EF4D  F06D         	goto	l1516
 12654  00DA56                     u5820:
 12655  00DA56  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12656  00DA58  EF32  F06D         	goto	u5830
 12657  00DA5C  EF30  F06D         	goto	u5831
 12658  00DA60                     u5831:
 12659  00DA60  EF4D  F06D         	goto	l1516
 12660  00DA64                     u5830:
 12661  00DA64  C007  F00B         	movff	___xxtofl@val,??___xxtofl
 12662  00DA68  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
 12663  00DA6C  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
 12664  00DA70  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
 12665  00DA74  1E0B               	comf	??___xxtofl^0,f,c
 12666  00DA76  1E0C               	comf	(??___xxtofl+1)^0,f,c
 12667  00DA78  1E0D               	comf	(??___xxtofl+2)^0,f,c
 12668  00DA7A  1E0E               	comf	(??___xxtofl+3)^0,f,c
 12669  00DA7C  2A0B               	incf	??___xxtofl^0,f,c
 12670  00DA7E  0E00               	movlw	0
 12671  00DA80  220C               	addwfc	(??___xxtofl+1)^0,f,c
 12672  00DA82  220D               	addwfc	(??___xxtofl+2)^0,f,c
 12673  00DA84  220E               	addwfc	(??___xxtofl+3)^0,f,c
 12674  00DA86  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
 12675  00DA8A  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
 12676  00DA8E  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
 12677  00DA92  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
 12678  00DA96  EF55  F06D         	goto	l6129
 12679  00DA9A                     l1516:
 12680  00DA9A  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
 12681  00DA9E  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12682  00DAA2  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12683  00DAA6  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12684  00DAAA                     l6129:
 12685  00DAAA  5007               	movf	___xxtofl@val^0,w,c
 12686  00DAAC  1008               	iorwf	(___xxtofl@val+1)^0,w,c
 12687  00DAAE  1009               	iorwf	(___xxtofl@val+2)^0,w,c
 12688  00DAB0  100A               	iorwf	(___xxtofl@val+3)^0,w,c
 12689  00DAB2  A4D8               	btfss	status,2,c
 12690  00DAB4  EF5E  F06D         	goto	u5841
 12691  00DAB8  EF60  F06D         	goto	u5840
 12692  00DABC                     u5841:
 12693  00DABC  EF6A  F06D         	goto	l6135
 12694  00DAC0                     u5840:
 12695  00DAC0  0E00               	movlw	0
 12696  00DAC2  6E07               	movwf	?___xxtofl^0,c
 12697  00DAC4  0E00               	movlw	0
 12698  00DAC6  6E08               	movwf	(?___xxtofl+1)^0,c
 12699  00DAC8  0E00               	movlw	0
 12700  00DACA  6E09               	movwf	(?___xxtofl+2)^0,c
 12701  00DACC  0E00               	movlw	0
 12702  00DACE  6E0A               	movwf	(?___xxtofl+3)^0,c
 12703  00DAD0  EFFB  F06D         	goto	l1519
 12704  00DAD4                     l6135:
 12705  00DAD4  0E96               	movlw	150
 12706  00DAD6  6E10               	movwf	___xxtofl@exp^0,c
 12707  00DAD8  EF74  F06D         	goto	l6139
 12708  00DADC                     l6137:
 12709  00DADC  2A10               	incf	___xxtofl@exp^0,f,c
 12710  00DADE  90D8               	bcf	status,0,c
 12711  00DAE0  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12712  00DAE2  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12713  00DAE4  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12714  00DAE6  3211               	rrcf	___xxtofl@arg^0,f,c
 12715  00DAE8                     l6139:
 12716  00DAE8  0E00               	movlw	0
 12717  00DAEA  1411               	andwf	___xxtofl@arg^0,w,c
 12718  00DAEC  6E0B               	movwf	??___xxtofl^0,c
 12719  00DAEE  0E00               	movlw	0
 12720  00DAF0  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12721  00DAF2  6E0C               	movwf	(??___xxtofl+1)^0,c
 12722  00DAF4  0E00               	movlw	0
 12723  00DAF6  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12724  00DAF8  6E0D               	movwf	(??___xxtofl+2)^0,c
 12725  00DAFA  0EFE               	movlw	254
 12726  00DAFC  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12727  00DAFE  6E0E               	movwf	(??___xxtofl+3)^0,c
 12728  00DB00  500B               	movf	??___xxtofl^0,w,c
 12729  00DB02  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12730  00DB04  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12731  00DB06  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12732  00DB08  A4D8               	btfss	status,2,c
 12733  00DB0A  EF89  F06D         	goto	u5851
 12734  00DB0E  EF8B  F06D         	goto	u5850
 12735  00DB12                     u5851:
 12736  00DB12  EF6E  F06D         	goto	l6137
 12737  00DB16                     u5850:
 12738  00DB16  EF99  F06D         	goto	l1523
 12739  00DB1A                     l6141:
 12740  00DB1A  2A10               	incf	___xxtofl@exp^0,f,c
 12741  00DB1C  0E01               	movlw	1
 12742  00DB1E  2611               	addwf	___xxtofl@arg^0,f,c
 12743  00DB20  0E00               	movlw	0
 12744  00DB22  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
 12745  00DB24  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
 12746  00DB26  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
 12747  00DB28  90D8               	bcf	status,0,c
 12748  00DB2A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12749  00DB2C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12750  00DB2E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12751  00DB30  3211               	rrcf	___xxtofl@arg^0,f,c
 12752  00DB32                     l1523:
 12753  00DB32  0E00               	movlw	0
 12754  00DB34  1411               	andwf	___xxtofl@arg^0,w,c
 12755  00DB36  6E0B               	movwf	??___xxtofl^0,c
 12756  00DB38  0E00               	movlw	0
 12757  00DB3A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12758  00DB3C  6E0C               	movwf	(??___xxtofl+1)^0,c
 12759  00DB3E  0E00               	movlw	0
 12760  00DB40  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12761  00DB42  6E0D               	movwf	(??___xxtofl+2)^0,c
 12762  00DB44  0EFF               	movlw	255
 12763  00DB46  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12764  00DB48  6E0E               	movwf	(??___xxtofl+3)^0,c
 12765  00DB4A  500B               	movf	??___xxtofl^0,w,c
 12766  00DB4C  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12767  00DB4E  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12768  00DB50  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12769  00DB52  A4D8               	btfss	status,2,c
 12770  00DB54  EFAE  F06D         	goto	u5861
 12771  00DB58  EFB0  F06D         	goto	u5860
 12772  00DB5C                     u5861:
 12773  00DB5C  EF8D  F06D         	goto	l6141
 12774  00DB60                     u5860:
 12775  00DB60  EFB8  F06D         	goto	l6149
 12776  00DB64                     l6147:
 12777  00DB64  0610               	decf	___xxtofl@exp^0,f,c
 12778  00DB66  90D8               	bcf	status,0,c
 12779  00DB68  3611               	rlcf	___xxtofl@arg^0,f,c
 12780  00DB6A  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
 12781  00DB6C  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
 12782  00DB6E  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
 12783  00DB70                     l6149:
 12784  00DB70  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
 12785  00DB72  EFBD  F06D         	goto	u5871
 12786  00DB76  EFBF  F06D         	goto	u5870
 12787  00DB7A                     u5871:
 12788  00DB7A  EFC7  F06D         	goto	l1530
 12789  00DB7E                     u5870:
 12790  00DB7E  0E02               	movlw	2
 12791  00DB80  6010               	cpfslt	___xxtofl@exp^0,c
 12792  00DB82  EFC5  F06D         	goto	u5881
 12793  00DB86  EFC7  F06D         	goto	u5880
 12794  00DB8A                     u5881:
 12795  00DB8A  EFB2  F06D         	goto	l6147
 12796  00DB8E                     u5880:
 12797  00DB8E                     l1530:
 12798  00DB8E  B010               	btfsc	___xxtofl@exp^0,0,c
 12799  00DB90  EFCC  F06D         	goto	u5891
 12800  00DB94  EFCE  F06D         	goto	u5890
 12801  00DB98                     u5891:
 12802  00DB98  EFCF  F06D         	goto	l6155
 12803  00DB9C                     u5890:
 12804  00DB9C  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
 12805  00DB9E                     l6155:
 12806  00DB9E  90D8               	bcf	status,0,c
 12807  00DBA0  3210               	rrcf	___xxtofl@exp^0,f,c
 12808  00DBA2  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
 12809  00DBA6  6A0C               	clrf	(??___xxtofl+1)^0,c
 12810  00DBA8  6A0D               	clrf	(??___xxtofl+2)^0,c
 12811  00DBAA  6A0E               	clrf	(??___xxtofl+3)^0,c
 12812  00DBAC  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
 12813  00DBB0  6A0D               	clrf	(??___xxtofl+2)^0,c
 12814  00DBB2  6A0C               	clrf	(??___xxtofl+1)^0,c
 12815  00DBB4  6A0B               	clrf	??___xxtofl^0,c
 12816  00DBB6  500B               	movf	??___xxtofl^0,w,c
 12817  00DBB8  1211               	iorwf	___xxtofl@arg^0,f,c
 12818  00DBBA  500C               	movf	(??___xxtofl+1)^0,w,c
 12819  00DBBC  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
 12820  00DBBE  500D               	movf	(??___xxtofl+2)^0,w,c
 12821  00DBC0  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
 12822  00DBC2  500E               	movf	(??___xxtofl+3)^0,w,c
 12823  00DBC4  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
 12824  00DBC6  500F               	movf	___xxtofl@sign^0,w,c
 12825  00DBC8  B4D8               	btfsc	status,2,c
 12826  00DBCA  EFE9  F06D         	goto	u5901
 12827  00DBCE  EFEB  F06D         	goto	u5900
 12828  00DBD2                     u5901:
 12829  00DBD2  EFF3  F06D         	goto	l6165
 12830  00DBD6                     u5900:
 12831  00DBD6  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12832  00DBD8  EFF2  F06D         	goto	u5910
 12833  00DBDC  EFF0  F06D         	goto	u5911
 12834  00DBE0                     u5911:
 12835  00DBE0  EFF3  F06D         	goto	l6165
 12836  00DBE4                     u5910:
 12837  00DBE4  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
 12838  00DBE6                     l6165:
 12839  00DBE6  C011  F007         	movff	___xxtofl@arg,?___xxtofl
 12840  00DBEA  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
 12841  00DBEE  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
 12842  00DBF2  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
 12843  00DBF6                     l1519:
 12844  00DBF6  0012               	return		;funcret
 12845  00DBF8                     __end_of___xxtofl:
 12846                           	callstack 0
 12847                           
 12848 ;; *************** function ___flmul *****************
 12849 ;; Defined at:
 12850 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcmul.c"
 12851 ;; Parameters:    Size  Location     Type
 12852 ;;  b               4   20[COMRAM] unsigned char 
 12853 ;;  a               4   24[COMRAM] unsigned char 
 12854 ;; Auto vars:     Size  Location     Type
 12855 ;;  prod            4   39[COMRAM] struct .
 12856 ;;  grs             4   33[COMRAM] unsigned long 
 12857 ;;  temp            2   43[COMRAM] struct .
 12858 ;;  bexp            1   38[COMRAM] unsigned char 
 12859 ;;  aexp            1   37[COMRAM] unsigned char 
 12860 ;;  sign            1   32[COMRAM] unsigned char 
 12861 ;; Return value:  Size  Location     Type
 12862 ;;                  4   20[COMRAM] unsigned char 
 12863 ;; Registers used:
 12864 ;;		wreg, status,2, status,0, prodl, prodh
 12865 ;; Tracked objects:
 12866 ;;		On entry : 0/0
 12867 ;;		On exit  : 0/0
 12868 ;;		Unchanged: 0/0
 12869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12870 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12871 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12872 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12873 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12874 ;;Total ram usage:       25 bytes
 12875 ;; Hardware stack levels used: 1
 12876 ;; This function calls:
 12877 ;;		Nothing
 12878 ;; This function is called by:
 12879 ;;		_Voltage_ReadRegister
 12880 ;;		_Current_ReadRegister
 12881 ;;		_efgtoa
 12882 ;; This function uses a non-reentrant model
 12883 ;;
 12884                           
 12885                           	psect	text94
 12886  00E374                     __ptext94:
 12887                           	callstack 0
 12888  00E374                     ___flmul:
 12889                           	callstack 26
 12890  00E374  5018               	movf	(___flmul@b+3)^0,w,c
 12891  00E376  0B80               	andlw	128
 12892  00E378  6E21               	movwf	___flmul@sign^0,c
 12893  00E37A  5018               	movf	(___flmul@b+3)^0,w,c
 12894  00E37C  2418               	addwf	(___flmul@b+3)^0,w,c
 12895  00E37E  6E27               	movwf	___flmul@bexp^0,c
 12896  00E380  AE17               	btfss	(___flmul@b+2)^0,7,c
 12897  00E382  EFC5  F071         	goto	u4151
 12898  00E386  EFC7  F071         	goto	u4150
 12899  00E38A                     u4151:
 12900  00E38A  EFC8  F071         	goto	l5159
 12901  00E38E                     u4150:
 12902  00E38E  8027               	bsf	___flmul@bexp^0,0,c
 12903  00E390                     l5159:
 12904  00E390  5027               	movf	___flmul@bexp^0,w,c
 12905  00E392  B4D8               	btfsc	status,2,c
 12906  00E394  EFCE  F071         	goto	u4161
 12907  00E398  EFD0  F071         	goto	u4160
 12908  00E39C                     u4161:
 12909  00E39C  EFE3  F071         	goto	l5167
 12910  00E3A0                     u4160:
 12911  00E3A0  2827               	incf	___flmul@bexp^0,w,c
 12912  00E3A2  A4D8               	btfss	status,2,c
 12913  00E3A4  EFD6  F071         	goto	u4171
 12914  00E3A8  EFD8  F071         	goto	u4170
 12915  00E3AC                     u4171:
 12916  00E3AC  EFE0  F071         	goto	l5165
 12917  00E3B0                     u4170:
 12918  00E3B0  0E00               	movlw	0
 12919  00E3B2  6E15               	movwf	___flmul@b^0,c
 12920  00E3B4  0E00               	movlw	0
 12921  00E3B6  6E16               	movwf	(___flmul@b+1)^0,c
 12922  00E3B8  0E00               	movlw	0
 12923  00E3BA  6E17               	movwf	(___flmul@b+2)^0,c
 12924  00E3BC  0E00               	movlw	0
 12925  00E3BE  6E18               	movwf	(___flmul@b+3)^0,c
 12926  00E3C0                     l5165:
 12927  00E3C0  8E17               	bsf	(___flmul@b+2)^0,7,c
 12928  00E3C2  EFEB  F071         	goto	l5169
 12929  00E3C6                     l5167:
 12930  00E3C6  0E00               	movlw	0
 12931  00E3C8  6E15               	movwf	___flmul@b^0,c
 12932  00E3CA  0E00               	movlw	0
 12933  00E3CC  6E16               	movwf	(___flmul@b+1)^0,c
 12934  00E3CE  0E00               	movlw	0
 12935  00E3D0  6E17               	movwf	(___flmul@b+2)^0,c
 12936  00E3D2  0E00               	movlw	0
 12937  00E3D4  6E18               	movwf	(___flmul@b+3)^0,c
 12938  00E3D6                     l5169:
 12939  00E3D6  501C               	movf	(___flmul@a+3)^0,w,c
 12940  00E3D8  0B80               	andlw	128
 12941  00E3DA  1A21               	xorwf	___flmul@sign^0,f,c
 12942  00E3DC  501C               	movf	(___flmul@a+3)^0,w,c
 12943  00E3DE  241C               	addwf	(___flmul@a+3)^0,w,c
 12944  00E3E0  6E26               	movwf	___flmul@aexp^0,c
 12945  00E3E2  AE1B               	btfss	(___flmul@a+2)^0,7,c
 12946  00E3E4  EFF6  F071         	goto	u4181
 12947  00E3E8  EFF8  F071         	goto	u4180
 12948  00E3EC                     u4181:
 12949  00E3EC  EFF9  F071         	goto	l5177
 12950  00E3F0                     u4180:
 12951  00E3F0  8026               	bsf	___flmul@aexp^0,0,c
 12952  00E3F2                     l5177:
 12953  00E3F2  5026               	movf	___flmul@aexp^0,w,c
 12954  00E3F4  B4D8               	btfsc	status,2,c
 12955  00E3F6  EFFF  F071         	goto	u4191
 12956  00E3FA  EF01  F072         	goto	u4190
 12957  00E3FE                     u4191:
 12958  00E3FE  EF14  F072         	goto	l5185
 12959  00E402                     u4190:
 12960  00E402  2826               	incf	___flmul@aexp^0,w,c
 12961  00E404  A4D8               	btfss	status,2,c
 12962  00E406  EF07  F072         	goto	u4201
 12963  00E40A  EF09  F072         	goto	u4200
 12964  00E40E                     u4201:
 12965  00E40E  EF11  F072         	goto	l5183
 12966  00E412                     u4200:
 12967  00E412  0E00               	movlw	0
 12968  00E414  6E19               	movwf	___flmul@a^0,c
 12969  00E416  0E00               	movlw	0
 12970  00E418  6E1A               	movwf	(___flmul@a+1)^0,c
 12971  00E41A  0E00               	movlw	0
 12972  00E41C  6E1B               	movwf	(___flmul@a+2)^0,c
 12973  00E41E  0E00               	movlw	0
 12974  00E420  6E1C               	movwf	(___flmul@a+3)^0,c
 12975  00E422                     l5183:
 12976  00E422  8E1B               	bsf	(___flmul@a+2)^0,7,c
 12977  00E424  EF1C  F072         	goto	l1475
 12978  00E428                     l5185:
 12979  00E428  0E00               	movlw	0
 12980  00E42A  6E19               	movwf	___flmul@a^0,c
 12981  00E42C  0E00               	movlw	0
 12982  00E42E  6E1A               	movwf	(___flmul@a+1)^0,c
 12983  00E430  0E00               	movlw	0
 12984  00E432  6E1B               	movwf	(___flmul@a+2)^0,c
 12985  00E434  0E00               	movlw	0
 12986  00E436  6E1C               	movwf	(___flmul@a+3)^0,c
 12987  00E438                     l1475:
 12988  00E438  5026               	movf	___flmul@aexp^0,w,c
 12989  00E43A  B4D8               	btfsc	status,2,c
 12990  00E43C  EF22  F072         	goto	u4211
 12991  00E440  EF24  F072         	goto	u4210
 12992  00E444                     u4211:
 12993  00E444  EF2C  F072         	goto	l5189
 12994  00E448                     u4210:
 12995  00E448  5027               	movf	___flmul@bexp^0,w,c
 12996  00E44A  A4D8               	btfss	status,2,c
 12997  00E44C  EF2A  F072         	goto	u4221
 12998  00E450  EF2C  F072         	goto	u4220
 12999  00E454                     u4221:
 13000  00E454  EF36  F072         	goto	l5193
 13001  00E458                     u4220:
 13002  00E458                     l5189:
 13003  00E458  0E00               	movlw	0
 13004  00E45A  6E15               	movwf	?___flmul^0,c
 13005  00E45C  0E00               	movlw	0
 13006  00E45E  6E16               	movwf	(?___flmul+1)^0,c
 13007  00E460  0E00               	movlw	0
 13008  00E462  6E17               	movwf	(?___flmul+2)^0,c
 13009  00E464  0E00               	movlw	0
 13010  00E466  6E18               	movwf	(?___flmul+3)^0,c
 13011  00E468  EFCE  F073         	goto	l1479
 13012  00E46C                     l5193:
 13013  00E46C  501B               	movf	(___flmul@a+2)^0,w,c
 13014  00E46E  0215               	mulwf	___flmul@b^0,c
 13015  00E470  CFF3 F02C          	movff	prodl,___flmul@temp
 13016  00E474  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13017  00E478  502C               	movf	___flmul@temp^0,w,c
 13018  00E47A  6E22               	movwf	___flmul@grs^0,c
 13019  00E47C  6A23               	clrf	(___flmul@grs+1)^0,c
 13020  00E47E  6A24               	clrf	(___flmul@grs+2)^0,c
 13021  00E480  6A25               	clrf	(___flmul@grs+3)^0,c
 13022  00E482  502D               	movf	(___flmul@temp+1)^0,w,c
 13023  00E484  6E28               	movwf	___flmul@prod^0,c
 13024  00E486  6A29               	clrf	(___flmul@prod+1)^0,c
 13025  00E488  6A2A               	clrf	(___flmul@prod+2)^0,c
 13026  00E48A  6A2B               	clrf	(___flmul@prod+3)^0,c
 13027  00E48C  501A               	movf	(___flmul@a+1)^0,w,c
 13028  00E48E  0216               	mulwf	(___flmul@b+1)^0,c
 13029  00E490  CFF3 F02C          	movff	prodl,___flmul@temp
 13030  00E494  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13031  00E498  502C               	movf	___flmul@temp^0,w,c
 13032  00E49A  2622               	addwf	___flmul@grs^0,f,c
 13033  00E49C  0E00               	movlw	0
 13034  00E49E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13035  00E4A0  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13036  00E4A2  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13037  00E4A4  502D               	movf	(___flmul@temp+1)^0,w,c
 13038  00E4A6  2628               	addwf	___flmul@prod^0,f,c
 13039  00E4A8  0E00               	movlw	0
 13040  00E4AA  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13041  00E4AC  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13042  00E4AE  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13043  00E4B0  5019               	movf	___flmul@a^0,w,c
 13044  00E4B2  0217               	mulwf	(___flmul@b+2)^0,c
 13045  00E4B4  CFF3 F02C          	movff	prodl,___flmul@temp
 13046  00E4B8  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13047  00E4BC  502C               	movf	___flmul@temp^0,w,c
 13048  00E4BE  2622               	addwf	___flmul@grs^0,f,c
 13049  00E4C0  0E00               	movlw	0
 13050  00E4C2  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13051  00E4C4  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13052  00E4C6  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13053  00E4C8  502D               	movf	(___flmul@temp+1)^0,w,c
 13054  00E4CA  2628               	addwf	___flmul@prod^0,f,c
 13055  00E4CC  0E00               	movlw	0
 13056  00E4CE  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13057  00E4D0  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13058  00E4D2  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13059  00E4D4  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13060  00E4D8  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13061  00E4DC  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13062  00E4E0  6A22               	clrf	___flmul@grs^0,c
 13063  00E4E2  5019               	movf	___flmul@a^0,w,c
 13064  00E4E4  0216               	mulwf	(___flmul@b+1)^0,c
 13065  00E4E6  CFF3 F02C          	movff	prodl,___flmul@temp
 13066  00E4EA  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13067  00E4EE  502C               	movf	___flmul@temp^0,w,c
 13068  00E4F0  2622               	addwf	___flmul@grs^0,f,c
 13069  00E4F2  502D               	movf	(___flmul@temp+1)^0,w,c
 13070  00E4F4  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13071  00E4F6  0E00               	movlw	0
 13072  00E4F8  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13073  00E4FA  0E00               	movlw	0
 13074  00E4FC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13075  00E4FE  501A               	movf	(___flmul@a+1)^0,w,c
 13076  00E500  0215               	mulwf	___flmul@b^0,c
 13077  00E502  CFF3 F02C          	movff	prodl,___flmul@temp
 13078  00E506  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13079  00E50A  502C               	movf	___flmul@temp^0,w,c
 13080  00E50C  2622               	addwf	___flmul@grs^0,f,c
 13081  00E50E  502D               	movf	(___flmul@temp+1)^0,w,c
 13082  00E510  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13083  00E512  0E00               	movlw	0
 13084  00E514  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13085  00E516  0E00               	movlw	0
 13086  00E518  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13087  00E51A  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13088  00E51E  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13089  00E522  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13090  00E526  6A22               	clrf	___flmul@grs^0,c
 13091  00E528  5019               	movf	___flmul@a^0,w,c
 13092  00E52A  0215               	mulwf	___flmul@b^0,c
 13093  00E52C  CFF3 F02C          	movff	prodl,___flmul@temp
 13094  00E530  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13095  00E534  502C               	movf	___flmul@temp^0,w,c
 13096  00E536  2622               	addwf	___flmul@grs^0,f,c
 13097  00E538  502D               	movf	(___flmul@temp+1)^0,w,c
 13098  00E53A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 13099  00E53C  0E00               	movlw	0
 13100  00E53E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 13101  00E540  0E00               	movlw	0
 13102  00E542  2225               	addwfc	(___flmul@grs+3)^0,f,c
 13103  00E544  501B               	movf	(___flmul@a+2)^0,w,c
 13104  00E546  0216               	mulwf	(___flmul@b+1)^0,c
 13105  00E548  CFF3 F02C          	movff	prodl,___flmul@temp
 13106  00E54C  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13107  00E550  502C               	movf	___flmul@temp^0,w,c
 13108  00E552  2628               	addwf	___flmul@prod^0,f,c
 13109  00E554  502D               	movf	(___flmul@temp+1)^0,w,c
 13110  00E556  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13111  00E558  0E00               	movlw	0
 13112  00E55A  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13113  00E55C  0E00               	movlw	0
 13114  00E55E  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13115  00E560  501A               	movf	(___flmul@a+1)^0,w,c
 13116  00E562  0217               	mulwf	(___flmul@b+2)^0,c
 13117  00E564  CFF3 F02C          	movff	prodl,___flmul@temp
 13118  00E568  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13119  00E56C  502C               	movf	___flmul@temp^0,w,c
 13120  00E56E  2628               	addwf	___flmul@prod^0,f,c
 13121  00E570  502D               	movf	(___flmul@temp+1)^0,w,c
 13122  00E572  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13123  00E574  0E00               	movlw	0
 13124  00E576  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13125  00E578  0E00               	movlw	0
 13126  00E57A  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13127  00E57C  501B               	movf	(___flmul@a+2)^0,w,c
 13128  00E57E  0217               	mulwf	(___flmul@b+2)^0,c
 13129  00E580  CFF3 F02C          	movff	prodl,___flmul@temp
 13130  00E584  CFF4 F02D          	movff	prodh,___flmul@temp+1
 13131  00E588  502C               	movf	___flmul@temp^0,w,c
 13132  00E58A  6E1D               	movwf	??___flmul^0,c
 13133  00E58C  502D               	movf	(___flmul@temp+1)^0,w,c
 13134  00E58E  6E1E               	movwf	(??___flmul+1)^0,c
 13135  00E590  6A1F               	clrf	(??___flmul+2)^0,c
 13136  00E592  6A20               	clrf	(??___flmul+3)^0,c
 13137  00E594  C01F  F020         	movff	??___flmul+2,??___flmul+3
 13138  00E598  C01E  F01F         	movff	??___flmul+1,??___flmul+2
 13139  00E59C  C01D  F01E         	movff	??___flmul,??___flmul+1
 13140  00E5A0  6A1D               	clrf	??___flmul^0,c
 13141  00E5A2  501D               	movf	??___flmul^0,w,c
 13142  00E5A4  2628               	addwf	___flmul@prod^0,f,c
 13143  00E5A6  501E               	movf	(??___flmul+1)^0,w,c
 13144  00E5A8  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13145  00E5AA  501F               	movf	(??___flmul+2)^0,w,c
 13146  00E5AC  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13147  00E5AE  5020               	movf	(??___flmul+3)^0,w,c
 13148  00E5B0  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13149  00E5B2  C022  F01D         	movff	___flmul@grs,??___flmul
 13150  00E5B6  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
 13151  00E5BA  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
 13152  00E5BE  C025  F020         	movff	___flmul@grs+3,??___flmul+3
 13153  00E5C2  0E19               	movlw	25
 13154  00E5C4  EFE9  F072         	goto	u4230
 13155  00E5C8                     u4235:
 13156  00E5C8  90D8               	bcf	status,0,c
 13157  00E5CA  3220               	rrcf	(??___flmul+3)^0,f,c
 13158  00E5CC  321F               	rrcf	(??___flmul+2)^0,f,c
 13159  00E5CE  321E               	rrcf	(??___flmul+1)^0,f,c
 13160  00E5D0  321D               	rrcf	??___flmul^0,f,c
 13161  00E5D2                     u4230:
 13162  00E5D2  2EE8               	decfsz	wreg,f,c
 13163  00E5D4  EFE4  F072         	goto	u4235
 13164  00E5D8  501D               	movf	??___flmul^0,w,c
 13165  00E5DA  2628               	addwf	___flmul@prod^0,f,c
 13166  00E5DC  501E               	movf	(??___flmul+1)^0,w,c
 13167  00E5DE  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13168  00E5E0  501F               	movf	(??___flmul+2)^0,w,c
 13169  00E5E2  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13170  00E5E4  5020               	movf	(??___flmul+3)^0,w,c
 13171  00E5E6  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13172  00E5E8  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 13173  00E5EC  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 13174  00E5F0  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 13175  00E5F4  6A22               	clrf	___flmul@grs^0,c
 13176  00E5F6  5026               	movf	___flmul@aexp^0,w,c
 13177  00E5F8  C027  F01D         	movff	___flmul@bexp,??___flmul
 13178  00E5FC  6A1E               	clrf	(??___flmul+1)^0,c
 13179  00E5FE  261D               	addwf	??___flmul^0,f,c
 13180  00E600  0E00               	movlw	0
 13181  00E602  221E               	addwfc	(??___flmul+1)^0,f,c
 13182  00E604  0E82               	movlw	130
 13183  00E606  241D               	addwf	??___flmul^0,w,c
 13184  00E608  6E2C               	movwf	___flmul@temp^0,c
 13185  00E60A  0EFF               	movlw	255
 13186  00E60C  201E               	addwfc	(??___flmul+1)^0,w,c
 13187  00E60E  6E2D               	movwf	(___flmul@temp+1)^0,c
 13188  00E610  EF1F  F073         	goto	l5241
 13189  00E614                     l5235:
 13190  00E614  90D8               	bcf	status,0,c
 13191  00E616  3628               	rlcf	___flmul@prod^0,f,c
 13192  00E618  3629               	rlcf	(___flmul@prod+1)^0,f,c
 13193  00E61A  362A               	rlcf	(___flmul@prod+2)^0,f,c
 13194  00E61C  362B               	rlcf	(___flmul@prod+3)^0,f,c
 13195  00E61E  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13196  00E620  EF14  F073         	goto	u4241
 13197  00E624  EF16  F073         	goto	u4240
 13198  00E628                     u4241:
 13199  00E628  EF17  F073         	goto	l1482
 13200  00E62C                     u4240:
 13201  00E62C  8028               	bsf	___flmul@prod^0,0,c
 13202  00E62E                     l1482:
 13203  00E62E  90D8               	bcf	status,0,c
 13204  00E630  3622               	rlcf	___flmul@grs^0,f,c
 13205  00E632  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13206  00E634  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13207  00E636  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13208  00E638  062C               	decf	___flmul@temp^0,f,c
 13209  00E63A  A0D8               	btfss	status,0,c
 13210  00E63C  062D               	decf	(___flmul@temp+1)^0,f,c
 13211  00E63E                     l5241:
 13212  00E63E  AE2A               	btfss	(___flmul@prod+2)^0,7,c
 13213  00E640  EF24  F073         	goto	u4251
 13214  00E644  EF26  F073         	goto	u4250
 13215  00E648                     u4251:
 13216  00E648  EF0A  F073         	goto	l5235
 13217  00E64C                     u4250:
 13218  00E64C  0E00               	movlw	0
 13219  00E64E  6E26               	movwf	___flmul@aexp^0,c
 13220  00E650  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13221  00E652  EF2D  F073         	goto	u4261
 13222  00E656  EF2F  F073         	goto	u4260
 13223  00E65A                     u4261:
 13224  00E65A  EF53  F073         	goto	l1484
 13225  00E65E                     u4260:
 13226  00E65E  0EFF               	movlw	255
 13227  00E660  1422               	andwf	___flmul@grs^0,w,c
 13228  00E662  6E1D               	movwf	??___flmul^0,c
 13229  00E664  0EFF               	movlw	255
 13230  00E666  1423               	andwf	(___flmul@grs+1)^0,w,c
 13231  00E668  6E1E               	movwf	(??___flmul+1)^0,c
 13232  00E66A  0EFF               	movlw	255
 13233  00E66C  1424               	andwf	(___flmul@grs+2)^0,w,c
 13234  00E66E  6E1F               	movwf	(??___flmul+2)^0,c
 13235  00E670  0E7F               	movlw	127
 13236  00E672  1425               	andwf	(___flmul@grs+3)^0,w,c
 13237  00E674  6E20               	movwf	(??___flmul+3)^0,c
 13238  00E676  501D               	movf	??___flmul^0,w,c
 13239  00E678  101E               	iorwf	(??___flmul+1)^0,w,c
 13240  00E67A  101F               	iorwf	(??___flmul+2)^0,w,c
 13241  00E67C  1020               	iorwf	(??___flmul+3)^0,w,c
 13242  00E67E  B4D8               	btfsc	status,2,c
 13243  00E680  EF44  F073         	goto	u4271
 13244  00E684  EF46  F073         	goto	u4270
 13245  00E688                     u4271:
 13246  00E688  EF4A  F073         	goto	l1485
 13247  00E68C                     u4270:
 13248  00E68C                     l5249:
 13249  00E68C  0E01               	movlw	1
 13250  00E68E  6E26               	movwf	___flmul@aexp^0,c
 13251  00E690  EF53  F073         	goto	l1484
 13252  00E694                     l1485:
 13253  00E694  A028               	btfss	___flmul@prod^0,0,c
 13254  00E696  EF4F  F073         	goto	u4281
 13255  00E69A  EF51  F073         	goto	u4280
 13256  00E69E                     u4281:
 13257  00E69E  EF53  F073         	goto	l1484
 13258  00E6A2                     u4280:
 13259  00E6A2  EF46  F073         	goto	l5249
 13260  00E6A6                     l1484:
 13261  00E6A6  5026               	movf	___flmul@aexp^0,w,c
 13262  00E6A8  B4D8               	btfsc	status,2,c
 13263  00E6AA  EF59  F073         	goto	u4291
 13264  00E6AE  EF5B  F073         	goto	u4290
 13265  00E6B2                     u4291:
 13266  00E6B2  EF7F  F073         	goto	l5261
 13267  00E6B6                     u4290:
 13268  00E6B6  0E01               	movlw	1
 13269  00E6B8  2628               	addwf	___flmul@prod^0,f,c
 13270  00E6BA  0E00               	movlw	0
 13271  00E6BC  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13272  00E6BE  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13273  00E6C0  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13274  00E6C2  A02B               	btfss	(___flmul@prod+3)^0,0,c
 13275  00E6C4  EF66  F073         	goto	u4301
 13276  00E6C8  EF68  F073         	goto	u4300
 13277  00E6CC                     u4301:
 13278  00E6CC  EF7F  F073         	goto	l5261
 13279  00E6D0                     u4300:
 13280  00E6D0  C028  F01D         	movff	___flmul@prod,??___flmul
 13281  00E6D4  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
 13282  00E6D8  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
 13283  00E6DC  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
 13284  00E6E0  3420               	rlcf	(??___flmul+3)^0,w,c
 13285  00E6E2  3220               	rrcf	(??___flmul+3)^0,f,c
 13286  00E6E4  321F               	rrcf	(??___flmul+2)^0,f,c
 13287  00E6E6  321E               	rrcf	(??___flmul+1)^0,f,c
 13288  00E6E8  321D               	rrcf	??___flmul^0,f,c
 13289  00E6EA  C01D  F028         	movff	??___flmul,___flmul@prod
 13290  00E6EE  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
 13291  00E6F2  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
 13292  00E6F6  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
 13293  00E6FA  4A2C               	infsnz	___flmul@temp^0,f,c
 13294  00E6FC  2A2D               	incf	(___flmul@temp+1)^0,f,c
 13295  00E6FE                     l5261:
 13296  00E6FE  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
 13297  00E700  EF8A  F073         	goto	u4311
 13298  00E704  502D               	movf	(___flmul@temp+1)^0,w,c
 13299  00E706  E108               	bnz	u4310
 13300  00E708  282C               	incf	___flmul@temp^0,w,c
 13301  00E70A  A0D8               	btfss	status,0,c
 13302  00E70C  EF8A  F073         	goto	u4311
 13303  00E710  EF8C  F073         	goto	u4310
 13304  00E714                     u4311:
 13305  00E714  EF96  F073         	goto	l5265
 13306  00E718                     u4310:
 13307  00E718  0E00               	movlw	0
 13308  00E71A  6E28               	movwf	___flmul@prod^0,c
 13309  00E71C  0E00               	movlw	0
 13310  00E71E  6E29               	movwf	(___flmul@prod+1)^0,c
 13311  00E720  0E80               	movlw	128
 13312  00E722  6E2A               	movwf	(___flmul@prod+2)^0,c
 13313  00E724  0E7F               	movlw	127
 13314  00E726  6E2B               	movwf	(___flmul@prod+3)^0,c
 13315  00E728  EFC4  F073         	goto	l5277
 13316  00E72C                     l5265:
 13317  00E72C  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
 13318  00E72E  EFA3  F073         	goto	u4320
 13319  00E732  502D               	movf	(___flmul@temp+1)^0,w,c
 13320  00E734  E106               	bnz	u4321
 13321  00E736  042C               	decf	___flmul@temp^0,w,c
 13322  00E738  B0D8               	btfsc	status,0,c
 13323  00E73A  EFA1  F073         	goto	u4321
 13324  00E73E  EFA3  F073         	goto	u4320
 13325  00E742                     u4321:
 13326  00E742  EFAF  F073         	goto	l1492
 13327  00E746                     u4320:
 13328  00E746  0E00               	movlw	0
 13329  00E748  6E28               	movwf	___flmul@prod^0,c
 13330  00E74A  0E00               	movlw	0
 13331  00E74C  6E29               	movwf	(___flmul@prod+1)^0,c
 13332  00E74E  0E00               	movlw	0
 13333  00E750  6E2A               	movwf	(___flmul@prod+2)^0,c
 13334  00E752  0E00               	movlw	0
 13335  00E754  6E2B               	movwf	(___flmul@prod+3)^0,c
 13336  00E756  0E00               	movlw	0
 13337  00E758  6E21               	movwf	___flmul@sign^0,c
 13338  00E75A  EFC4  F073         	goto	l5277
 13339  00E75E                     l1492:
 13340  00E75E  C02C  F027         	movff	___flmul@temp,___flmul@bexp
 13341  00E762  0EFF               	movlw	255
 13342  00E764  1628               	andwf	___flmul@prod^0,f,c
 13343  00E766  0EFF               	movlw	255
 13344  00E768  1629               	andwf	(___flmul@prod+1)^0,f,c
 13345  00E76A  0E7F               	movlw	127
 13346  00E76C  162A               	andwf	(___flmul@prod+2)^0,f,c
 13347  00E76E  0E00               	movlw	0
 13348  00E770  162B               	andwf	(___flmul@prod+3)^0,f,c
 13349  00E772  A027               	btfss	___flmul@bexp^0,0,c
 13350  00E774  EFBE  F073         	goto	u4331
 13351  00E778  EFC0  F073         	goto	u4330
 13352  00E77C                     u4331:
 13353  00E77C  EFC1  F073         	goto	l5275
 13354  00E780                     u4330:
 13355  00E780  8E2A               	bsf	(___flmul@prod+2)^0,7,c
 13356  00E782                     l5275:
 13357  00E782  90D8               	bcf	status,0,c
 13358  00E784  3027               	rrcf	___flmul@bexp^0,w,c
 13359  00E786  6E2B               	movwf	(___flmul@prod+3)^0,c
 13360  00E788                     l5277:
 13361  00E788  5021               	movf	___flmul@sign^0,w,c
 13362  00E78A  122B               	iorwf	(___flmul@prod+3)^0,f,c
 13363  00E78C  C028  F015         	movff	___flmul@prod,?___flmul
 13364  00E790  C029  F016         	movff	___flmul@prod+1,?___flmul+1
 13365  00E794  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
 13366  00E798  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
 13367  00E79C                     l1479:
 13368  00E79C  0012               	return		;funcret
 13369  00E79E                     __end_of___flmul:
 13370                           	callstack 0
 13371                           
 13372 ;; *************** function ___fldiv *****************
 13373 ;; Defined at:
 13374 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.32\pic\sources\c99\common\sprcdiv.c"
 13375 ;; Parameters:    Size  Location     Type
 13376 ;;  b               4    0[COMRAM] unsigned char 
 13377 ;;  a               4    4[COMRAM] unsigned char 
 13378 ;; Auto vars:     Size  Location     Type
 13379 ;;  grs             4   19[COMRAM] unsigned long 
 13380 ;;  rem             4   12[COMRAM] unsigned long 
 13381 ;;  new_exp         2   17[COMRAM] short 
 13382 ;;  aexp            1   24[COMRAM] unsigned char 
 13383 ;;  bexp            1   23[COMRAM] unsigned char 
 13384 ;;  sign            1   16[COMRAM] unsigned char 
 13385 ;; Return value:  Size  Location     Type
 13386 ;;                  4    0[COMRAM] unsigned char 
 13387 ;; Registers used:
 13388 ;;		wreg, status,2, status,0
 13389 ;; Tracked objects:
 13390 ;;		On entry : 0/0
 13391 ;;		On exit  : 0/0
 13392 ;;		Unchanged: 0/0
 13393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13394 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13395 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13396 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13397 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13398 ;;Total ram usage:       25 bytes
 13399 ;; Hardware stack levels used: 1
 13400 ;; This function calls:
 13401 ;;		Nothing
 13402 ;; This function is called by:
 13403 ;;		_Voltage_ReadRegister
 13404 ;;		_Current_ReadRegister
 13405 ;;		_Power_ReadRegister
 13406 ;;		_efgtoa
 13407 ;; This function uses a non-reentrant model
 13408 ;;
 13409                           
 13410                           	psect	text95
 13411  00DFDA                     __ptext95:
 13412                           	callstack 0
 13413  00DFDA                     ___fldiv:
 13414                           	callstack 26
 13415  00DFDA  5004               	movf	(___fldiv@b+3)^0,w,c
 13416  00DFDC  0B80               	andlw	128
 13417  00DFDE  6E11               	movwf	___fldiv@sign^0,c
 13418  00DFE0  5004               	movf	(___fldiv@b+3)^0,w,c
 13419  00DFE2  2404               	addwf	(___fldiv@b+3)^0,w,c
 13420  00DFE4  6E18               	movwf	___fldiv@bexp^0,c
 13421  00DFE6  AE03               	btfss	(___fldiv@b+2)^0,7,c
 13422  00DFE8  EFF8  F06F         	goto	u3921
 13423  00DFEC  EFFA  F06F         	goto	u3920
 13424  00DFF0                     u3921:
 13425  00DFF0  EFFB  F06F         	goto	l5021
 13426  00DFF4                     u3920:
 13427  00DFF4  8018               	bsf	___fldiv@bexp^0,0,c
 13428  00DFF6                     l5021:
 13429  00DFF6  5018               	movf	___fldiv@bexp^0,w,c
 13430  00DFF8  B4D8               	btfsc	status,2,c
 13431  00DFFA  EF01  F070         	goto	u3931
 13432  00DFFE  EF03  F070         	goto	u3930
 13433  00E002                     u3931:
 13434  00E002  EF18  F070         	goto	l5031
 13435  00E006                     u3930:
 13436  00E006  2818               	incf	___fldiv@bexp^0,w,c
 13437  00E008  A4D8               	btfss	status,2,c
 13438  00E00A  EF09  F070         	goto	u3941
 13439  00E00E  EF0B  F070         	goto	u3940
 13440  00E012                     u3941:
 13441  00E012  EF13  F070         	goto	l5027
 13442  00E016                     u3940:
 13443  00E016  0E00               	movlw	0
 13444  00E018  6E01               	movwf	___fldiv@b^0,c
 13445  00E01A  0E00               	movlw	0
 13446  00E01C  6E02               	movwf	(___fldiv@b+1)^0,c
 13447  00E01E  0E00               	movlw	0
 13448  00E020  6E03               	movwf	(___fldiv@b+2)^0,c
 13449  00E022  0E00               	movlw	0
 13450  00E024  6E04               	movwf	(___fldiv@b+3)^0,c
 13451  00E026                     l5027:
 13452  00E026  8E03               	bsf	(___fldiv@b+2)^0,7,c
 13453  00E028  0E00               	movlw	0
 13454  00E02A  6E04               	movwf	(___fldiv@b+3)^0,c
 13455  00E02C  EF20  F070         	goto	l5033
 13456  00E030                     l5031:
 13457  00E030  0E00               	movlw	0
 13458  00E032  6E01               	movwf	___fldiv@b^0,c
 13459  00E034  0E00               	movlw	0
 13460  00E036  6E02               	movwf	(___fldiv@b+1)^0,c
 13461  00E038  0E00               	movlw	0
 13462  00E03A  6E03               	movwf	(___fldiv@b+2)^0,c
 13463  00E03C  0E00               	movlw	0
 13464  00E03E  6E04               	movwf	(___fldiv@b+3)^0,c
 13465  00E040                     l5033:
 13466  00E040  5008               	movf	(___fldiv@a+3)^0,w,c
 13467  00E042  0B80               	andlw	128
 13468  00E044  1A11               	xorwf	___fldiv@sign^0,f,c
 13469  00E046  5008               	movf	(___fldiv@a+3)^0,w,c
 13470  00E048  2408               	addwf	(___fldiv@a+3)^0,w,c
 13471  00E04A  6E19               	movwf	___fldiv@aexp^0,c
 13472  00E04C  AE07               	btfss	(___fldiv@a+2)^0,7,c
 13473  00E04E  EF2B  F070         	goto	u3951
 13474  00E052  EF2D  F070         	goto	u3950
 13475  00E056                     u3951:
 13476  00E056  EF2E  F070         	goto	l5041
 13477  00E05A                     u3950:
 13478  00E05A  8019               	bsf	___fldiv@aexp^0,0,c
 13479  00E05C                     l5041:
 13480  00E05C  5019               	movf	___fldiv@aexp^0,w,c
 13481  00E05E  B4D8               	btfsc	status,2,c
 13482  00E060  EF34  F070         	goto	u3961
 13483  00E064  EF36  F070         	goto	u3960
 13484  00E068                     u3961:
 13485  00E068  EF4B  F070         	goto	l5051
 13486  00E06C                     u3960:
 13487  00E06C  2819               	incf	___fldiv@aexp^0,w,c
 13488  00E06E  A4D8               	btfss	status,2,c
 13489  00E070  EF3C  F070         	goto	u3971
 13490  00E074  EF3E  F070         	goto	u3970
 13491  00E078                     u3971:
 13492  00E078  EF46  F070         	goto	l5047
 13493  00E07C                     u3970:
 13494  00E07C  0E00               	movlw	0
 13495  00E07E  6E05               	movwf	___fldiv@a^0,c
 13496  00E080  0E00               	movlw	0
 13497  00E082  6E06               	movwf	(___fldiv@a+1)^0,c
 13498  00E084  0E00               	movlw	0
 13499  00E086  6E07               	movwf	(___fldiv@a+2)^0,c
 13500  00E088  0E00               	movlw	0
 13501  00E08A  6E08               	movwf	(___fldiv@a+3)^0,c
 13502  00E08C                     l5047:
 13503  00E08C  8E07               	bsf	(___fldiv@a+2)^0,7,c
 13504  00E08E  0E00               	movlw	0
 13505  00E090  6E08               	movwf	(___fldiv@a+3)^0,c
 13506  00E092  EF53  F070         	goto	l5053
 13507  00E096                     l5051:
 13508  00E096  0E00               	movlw	0
 13509  00E098  6E05               	movwf	___fldiv@a^0,c
 13510  00E09A  0E00               	movlw	0
 13511  00E09C  6E06               	movwf	(___fldiv@a+1)^0,c
 13512  00E09E  0E00               	movlw	0
 13513  00E0A0  6E07               	movwf	(___fldiv@a+2)^0,c
 13514  00E0A2  0E00               	movlw	0
 13515  00E0A4  6E08               	movwf	(___fldiv@a+3)^0,c
 13516  00E0A6                     l5053:
 13517  00E0A6  5005               	movf	___fldiv@a^0,w,c
 13518  00E0A8  1006               	iorwf	(___fldiv@a+1)^0,w,c
 13519  00E0AA  1007               	iorwf	(___fldiv@a+2)^0,w,c
 13520  00E0AC  1008               	iorwf	(___fldiv@a+3)^0,w,c
 13521  00E0AE  A4D8               	btfss	status,2,c
 13522  00E0B0  EF5C  F070         	goto	u3981
 13523  00E0B4  EF5E  F070         	goto	u3980
 13524  00E0B8                     u3981:
 13525  00E0B8  EF76  F070         	goto	l5065
 13526  00E0BC                     u3980:
 13527  00E0BC  0E00               	movlw	0
 13528  00E0BE  6E01               	movwf	___fldiv@b^0,c
 13529  00E0C0  0E00               	movlw	0
 13530  00E0C2  6E02               	movwf	(___fldiv@b+1)^0,c
 13531  00E0C4  0E00               	movlw	0
 13532  00E0C6  6E03               	movwf	(___fldiv@b+2)^0,c
 13533  00E0C8  0E00               	movlw	0
 13534  00E0CA  6E04               	movwf	(___fldiv@b+3)^0,c
 13535  00E0CC  0E80               	movlw	128
 13536  00E0CE  1203               	iorwf	(___fldiv@b+2)^0,f,c
 13537  00E0D0  0E7F               	movlw	127
 13538  00E0D2  1204               	iorwf	(___fldiv@b+3)^0,f,c
 13539  00E0D4                     l5059:
 13540  00E0D4  5011               	movf	___fldiv@sign^0,w,c
 13541  00E0D6  1204               	iorwf	(___fldiv@b+3)^0,f,c
 13542  00E0D8  C001  F001         	movff	___fldiv@b,?___fldiv
 13543  00E0DC  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
 13544  00E0E0  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
 13545  00E0E4  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
 13546  00E0E8  EFB9  F071         	goto	l1443
 13547  00E0EC                     l5065:
 13548  00E0EC  5018               	movf	___fldiv@bexp^0,w,c
 13549  00E0EE  A4D8               	btfss	status,2,c
 13550  00E0F0  EF7C  F070         	goto	u3991
 13551  00E0F4  EF7E  F070         	goto	u3990
 13552  00E0F8                     u3991:
 13553  00E0F8  EF88  F070         	goto	l5073
 13554  00E0FC                     u3990:
 13555  00E0FC  0E00               	movlw	0
 13556  00E0FE  6E01               	movwf	?___fldiv^0,c
 13557  00E100  0E00               	movlw	0
 13558  00E102  6E02               	movwf	(?___fldiv+1)^0,c
 13559  00E104  0E00               	movlw	0
 13560  00E106  6E03               	movwf	(?___fldiv+2)^0,c
 13561  00E108  0E00               	movlw	0
 13562  00E10A  6E04               	movwf	(?___fldiv+3)^0,c
 13563  00E10C  EFB9  F071         	goto	l1443
 13564  00E110                     l5073:
 13565  00E110  5019               	movf	___fldiv@aexp^0,w,c
 13566  00E112  C018  F009         	movff	___fldiv@bexp,??___fldiv
 13567  00E116  6A0A               	clrf	(??___fldiv+1)^0,c
 13568  00E118  5E09               	subwf	??___fldiv^0,f,c
 13569  00E11A  0E00               	movlw	0
 13570  00E11C  5A0A               	subwfb	(??___fldiv+1)^0,f,c
 13571  00E11E  0E7F               	movlw	127
 13572  00E120  2409               	addwf	??___fldiv^0,w,c
 13573  00E122  6E12               	movwf	___fldiv@new_exp^0,c
 13574  00E124  0E00               	movlw	0
 13575  00E126  200A               	addwfc	(??___fldiv+1)^0,w,c
 13576  00E128  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13577  00E12A  C001  F00D         	movff	___fldiv@b,___fldiv@rem
 13578  00E12E  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
 13579  00E132  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
 13580  00E136  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
 13581  00E13A  0E00               	movlw	0
 13582  00E13C  6E01               	movwf	___fldiv@b^0,c
 13583  00E13E  0E00               	movlw	0
 13584  00E140  6E02               	movwf	(___fldiv@b+1)^0,c
 13585  00E142  0E00               	movlw	0
 13586  00E144  6E03               	movwf	(___fldiv@b+2)^0,c
 13587  00E146  0E00               	movlw	0
 13588  00E148  6E04               	movwf	(___fldiv@b+3)^0,c
 13589  00E14A  0E00               	movlw	0
 13590  00E14C  6E14               	movwf	___fldiv@grs^0,c
 13591  00E14E  0E00               	movlw	0
 13592  00E150  6E15               	movwf	(___fldiv@grs+1)^0,c
 13593  00E152  0E00               	movlw	0
 13594  00E154  6E16               	movwf	(___fldiv@grs+2)^0,c
 13595  00E156  0E00               	movlw	0
 13596  00E158  6E17               	movwf	(___fldiv@grs+3)^0,c
 13597  00E15A  0E00               	movlw	0
 13598  00E15C  6E19               	movwf	___fldiv@aexp^0,c
 13599  00E15E  EFE9  F070         	goto	l1445
 13600  00E162                     l5083:
 13601  00E162  5019               	movf	___fldiv@aexp^0,w,c
 13602  00E164  B4D8               	btfsc	status,2,c
 13603  00E166  EFB7  F070         	goto	u4001
 13604  00E16A  EFB9  F070         	goto	u4000
 13605  00E16E                     u4001:
 13606  00E16E  EFD0  F070         	goto	l5091
 13607  00E172                     u4000:
 13608  00E172  90D8               	bcf	status,0,c
 13609  00E174  360D               	rlcf	___fldiv@rem^0,f,c
 13610  00E176  360E               	rlcf	(___fldiv@rem+1)^0,f,c
 13611  00E178  360F               	rlcf	(___fldiv@rem+2)^0,f,c
 13612  00E17A  3610               	rlcf	(___fldiv@rem+3)^0,f,c
 13613  00E17C  90D8               	bcf	status,0,c
 13614  00E17E  3601               	rlcf	___fldiv@b^0,f,c
 13615  00E180  3602               	rlcf	(___fldiv@b+1)^0,f,c
 13616  00E182  3603               	rlcf	(___fldiv@b+2)^0,f,c
 13617  00E184  3604               	rlcf	(___fldiv@b+3)^0,f,c
 13618  00E186  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13619  00E188  EFC8  F070         	goto	u4011
 13620  00E18C  EFCA  F070         	goto	u4010
 13621  00E190                     u4011:
 13622  00E190  EFCB  F070         	goto	l1448
 13623  00E194                     u4010:
 13624  00E194  8001               	bsf	___fldiv@b^0,0,c
 13625  00E196                     l1448:
 13626  00E196  90D8               	bcf	status,0,c
 13627  00E198  3614               	rlcf	___fldiv@grs^0,f,c
 13628  00E19A  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 13629  00E19C  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 13630  00E19E  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 13631  00E1A0                     l5091:
 13632  00E1A0  5005               	movf	___fldiv@a^0,w,c
 13633  00E1A2  5C0D               	subwf	___fldiv@rem^0,w,c
 13634  00E1A4  5006               	movf	(___fldiv@a+1)^0,w,c
 13635  00E1A6  580E               	subwfb	(___fldiv@rem+1)^0,w,c
 13636  00E1A8  5007               	movf	(___fldiv@a+2)^0,w,c
 13637  00E1AA  580F               	subwfb	(___fldiv@rem+2)^0,w,c
 13638  00E1AC  5008               	movf	(___fldiv@a+3)^0,w,c
 13639  00E1AE  5810               	subwfb	(___fldiv@rem+3)^0,w,c
 13640  00E1B0  A0D8               	btfss	status,0,c
 13641  00E1B2  EFDD  F070         	goto	u4021
 13642  00E1B6  EFDF  F070         	goto	u4020
 13643  00E1BA                     u4021:
 13644  00E1BA  EFE8  F070         	goto	l5097
 13645  00E1BE                     u4020:
 13646  00E1BE  8C17               	bsf	(___fldiv@grs+3)^0,6,c
 13647  00E1C0  5005               	movf	___fldiv@a^0,w,c
 13648  00E1C2  5E0D               	subwf	___fldiv@rem^0,f,c
 13649  00E1C4  5006               	movf	(___fldiv@a+1)^0,w,c
 13650  00E1C6  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
 13651  00E1C8  5007               	movf	(___fldiv@a+2)^0,w,c
 13652  00E1CA  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
 13653  00E1CC  5008               	movf	(___fldiv@a+3)^0,w,c
 13654  00E1CE  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
 13655  00E1D0                     l5097:
 13656  00E1D0  2A19               	incf	___fldiv@aexp^0,f,c
 13657  00E1D2                     l1445:
 13658  00E1D2  0E19               	movlw	25
 13659  00E1D4  6419               	cpfsgt	___fldiv@aexp^0,c
 13660  00E1D6  EFEF  F070         	goto	u4031
 13661  00E1DA  EFF1  F070         	goto	u4030
 13662  00E1DE                     u4031:
 13663  00E1DE  EFB1  F070         	goto	l5083
 13664  00E1E2                     u4030:
 13665  00E1E2  500D               	movf	___fldiv@rem^0,w,c
 13666  00E1E4  100E               	iorwf	(___fldiv@rem+1)^0,w,c
 13667  00E1E6  100F               	iorwf	(___fldiv@rem+2)^0,w,c
 13668  00E1E8  1010               	iorwf	(___fldiv@rem+3)^0,w,c
 13669  00E1EA  B4D8               	btfsc	status,2,c
 13670  00E1EC  EFFA  F070         	goto	u4041
 13671  00E1F0  EFFC  F070         	goto	u4040
 13672  00E1F4                     u4041:
 13673  00E1F4  EF14  F071         	goto	l5109
 13674  00E1F8                     u4040:
 13675  00E1F8  8014               	bsf	___fldiv@grs^0,0,c
 13676  00E1FA  EF14  F071         	goto	l5109
 13677  00E1FE                     l5103:
 13678  00E1FE  90D8               	bcf	status,0,c
 13679  00E200  3601               	rlcf	___fldiv@b^0,f,c
 13680  00E202  3602               	rlcf	(___fldiv@b+1)^0,f,c
 13681  00E204  3603               	rlcf	(___fldiv@b+2)^0,f,c
 13682  00E206  3604               	rlcf	(___fldiv@b+3)^0,f,c
 13683  00E208  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13684  00E20A  EF09  F071         	goto	u4051
 13685  00E20E  EF0B  F071         	goto	u4050
 13686  00E212                     u4051:
 13687  00E212  EF0C  F071         	goto	l1454
 13688  00E216                     u4050:
 13689  00E216  8001               	bsf	___fldiv@b^0,0,c
 13690  00E218                     l1454:
 13691  00E218  90D8               	bcf	status,0,c
 13692  00E21A  3614               	rlcf	___fldiv@grs^0,f,c
 13693  00E21C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 13694  00E21E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 13695  00E220  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 13696  00E222  0612               	decf	___fldiv@new_exp^0,f,c
 13697  00E224  A0D8               	btfss	status,0,c
 13698  00E226  0613               	decf	(___fldiv@new_exp+1)^0,f,c
 13699  00E228                     l5109:
 13700  00E228  AE03               	btfss	(___fldiv@b+2)^0,7,c
 13701  00E22A  EF19  F071         	goto	u4061
 13702  00E22E  EF1B  F071         	goto	u4060
 13703  00E232                     u4061:
 13704  00E232  EFFF  F070         	goto	l5103
 13705  00E236                     u4060:
 13706  00E236  0E00               	movlw	0
 13707  00E238  6E19               	movwf	___fldiv@aexp^0,c
 13708  00E23A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13709  00E23C  EF22  F071         	goto	u4071
 13710  00E240  EF24  F071         	goto	u4070
 13711  00E244                     u4071:
 13712  00E244  EF48  F071         	goto	l1456
 13713  00E248                     u4070:
 13714  00E248  0EFF               	movlw	255
 13715  00E24A  1414               	andwf	___fldiv@grs^0,w,c
 13716  00E24C  6E09               	movwf	??___fldiv^0,c
 13717  00E24E  0EFF               	movlw	255
 13718  00E250  1415               	andwf	(___fldiv@grs+1)^0,w,c
 13719  00E252  6E0A               	movwf	(??___fldiv+1)^0,c
 13720  00E254  0EFF               	movlw	255
 13721  00E256  1416               	andwf	(___fldiv@grs+2)^0,w,c
 13722  00E258  6E0B               	movwf	(??___fldiv+2)^0,c
 13723  00E25A  0E7F               	movlw	127
 13724  00E25C  1417               	andwf	(___fldiv@grs+3)^0,w,c
 13725  00E25E  6E0C               	movwf	(??___fldiv+3)^0,c
 13726  00E260  5009               	movf	??___fldiv^0,w,c
 13727  00E262  100A               	iorwf	(??___fldiv+1)^0,w,c
 13728  00E264  100B               	iorwf	(??___fldiv+2)^0,w,c
 13729  00E266  100C               	iorwf	(??___fldiv+3)^0,w,c
 13730  00E268  B4D8               	btfsc	status,2,c
 13731  00E26A  EF39  F071         	goto	u4081
 13732  00E26E  EF3B  F071         	goto	u4080
 13733  00E272                     u4081:
 13734  00E272  EF3F  F071         	goto	l1457
 13735  00E276                     u4080:
 13736  00E276                     l5117:
 13737  00E276  0E01               	movlw	1
 13738  00E278  6E19               	movwf	___fldiv@aexp^0,c
 13739  00E27A  EF48  F071         	goto	l1456
 13740  00E27E                     l1457:
 13741  00E27E  A001               	btfss	___fldiv@b^0,0,c
 13742  00E280  EF44  F071         	goto	u4091
 13743  00E284  EF46  F071         	goto	u4090
 13744  00E288                     u4091:
 13745  00E288  EF48  F071         	goto	l1456
 13746  00E28C                     u4090:
 13747  00E28C  EF3B  F071         	goto	l5117
 13748  00E290                     l1456:
 13749  00E290  5019               	movf	___fldiv@aexp^0,w,c
 13750  00E292  B4D8               	btfsc	status,2,c
 13751  00E294  EF4E  F071         	goto	u4101
 13752  00E298  EF50  F071         	goto	u4100
 13753  00E29C                     u4101:
 13754  00E29C  EF74  F071         	goto	l5129
 13755  00E2A0                     u4100:
 13756  00E2A0  0E01               	movlw	1
 13757  00E2A2  2601               	addwf	___fldiv@b^0,f,c
 13758  00E2A4  0E00               	movlw	0
 13759  00E2A6  2202               	addwfc	(___fldiv@b+1)^0,f,c
 13760  00E2A8  2203               	addwfc	(___fldiv@b+2)^0,f,c
 13761  00E2AA  2204               	addwfc	(___fldiv@b+3)^0,f,c
 13762  00E2AC  A004               	btfss	(___fldiv@b+3)^0,0,c
 13763  00E2AE  EF5B  F071         	goto	u4111
 13764  00E2B2  EF5D  F071         	goto	u4110
 13765  00E2B6                     u4111:
 13766  00E2B6  EF74  F071         	goto	l5129
 13767  00E2BA                     u4110:
 13768  00E2BA  C001  F009         	movff	___fldiv@b,??___fldiv
 13769  00E2BE  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
 13770  00E2C2  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
 13771  00E2C6  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
 13772  00E2CA  340C               	rlcf	(??___fldiv+3)^0,w,c
 13773  00E2CC  320C               	rrcf	(??___fldiv+3)^0,f,c
 13774  00E2CE  320B               	rrcf	(??___fldiv+2)^0,f,c
 13775  00E2D0  320A               	rrcf	(??___fldiv+1)^0,f,c
 13776  00E2D2  3209               	rrcf	??___fldiv^0,f,c
 13777  00E2D4  C009  F001         	movff	??___fldiv,___fldiv@b
 13778  00E2D8  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
 13779  00E2DC  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
 13780  00E2E0  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
 13781  00E2E4  4A12               	infsnz	___fldiv@new_exp^0,f,c
 13782  00E2E6  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
 13783  00E2E8                     l5129:
 13784  00E2E8  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13785  00E2EA  EF7F  F071         	goto	u4121
 13786  00E2EE  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 13787  00E2F0  E108               	bnz	u4120
 13788  00E2F2  2812               	incf	___fldiv@new_exp^0,w,c
 13789  00E2F4  A0D8               	btfss	status,0,c
 13790  00E2F6  EF7F  F071         	goto	u4121
 13791  00E2FA  EF81  F071         	goto	u4120
 13792  00E2FE                     u4121:
 13793  00E2FE  EF8C  F071         	goto	l5133
 13794  00E302                     u4120:
 13795  00E302  0E00               	movlw	0
 13796  00E304  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13797  00E306  6812               	setf	___fldiv@new_exp^0,c
 13798  00E308  0E00               	movlw	0
 13799  00E30A  6E01               	movwf	___fldiv@b^0,c
 13800  00E30C  0E00               	movlw	0
 13801  00E30E  6E02               	movwf	(___fldiv@b+1)^0,c
 13802  00E310  0E00               	movlw	0
 13803  00E312  6E03               	movwf	(___fldiv@b+2)^0,c
 13804  00E314  0E00               	movlw	0
 13805  00E316  6E04               	movwf	(___fldiv@b+3)^0,c
 13806  00E318                     l5133:
 13807  00E318  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13808  00E31A  EF99  F071         	goto	u4130
 13809  00E31E  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 13810  00E320  E106               	bnz	u4131
 13811  00E322  0412               	decf	___fldiv@new_exp^0,w,c
 13812  00E324  B0D8               	btfsc	status,0,c
 13813  00E326  EF97  F071         	goto	u4131
 13814  00E32A  EF99  F071         	goto	u4130
 13815  00E32E                     u4131:
 13816  00E32E  EFA7  F071         	goto	l5137
 13817  00E332                     u4130:
 13818  00E332  0E00               	movlw	0
 13819  00E334  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13820  00E336  0E00               	movlw	0
 13821  00E338  6E12               	movwf	___fldiv@new_exp^0,c
 13822  00E33A  0E00               	movlw	0
 13823  00E33C  6E01               	movwf	___fldiv@b^0,c
 13824  00E33E  0E00               	movlw	0
 13825  00E340  6E02               	movwf	(___fldiv@b+1)^0,c
 13826  00E342  0E00               	movlw	0
 13827  00E344  6E03               	movwf	(___fldiv@b+2)^0,c
 13828  00E346  0E00               	movlw	0
 13829  00E348  6E04               	movwf	(___fldiv@b+3)^0,c
 13830  00E34A  0E00               	movlw	0
 13831  00E34C  6E11               	movwf	___fldiv@sign^0,c
 13832  00E34E                     l5137:
 13833  00E34E  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
 13834  00E352  A018               	btfss	___fldiv@bexp^0,0,c
 13835  00E354  EFAE  F071         	goto	u4141
 13836  00E358  EFB0  F071         	goto	u4140
 13837  00E35C                     u4141:
 13838  00E35C  EFB3  F071         	goto	l5143
 13839  00E360                     u4140:
 13840  00E360  8E03               	bsf	(___fldiv@b+2)^0,7,c
 13841  00E362  EFB4  F071         	goto	l5145
 13842  00E366                     l5143:
 13843  00E366  9E03               	bcf	(___fldiv@b+2)^0,7,c
 13844  00E368                     l5145:
 13845  00E368  90D8               	bcf	status,0,c
 13846  00E36A  3018               	rrcf	___fldiv@bexp^0,w,c
 13847  00E36C  6E04               	movwf	(___fldiv@b+3)^0,c
 13848  00E36E  EF6A  F070         	goto	l5059
 13849  00E372                     l1443:
 13850  00E372  0012               	return		;funcret
 13851  00E374                     __end_of___fldiv:
 13852                           	callstack 0
 13853                           
 13854 ;; *************** function _I2C_Master_Write *****************
 13855 ;; Defined at:
 13856 ;;		line 100 in file "INA260.c"
 13857 ;; Parameters:    Size  Location     Type
 13858 ;;  d               2    1[COMRAM] unsigned int 
 13859 ;; Auto vars:     Size  Location     Type
 13860 ;;		None
 13861 ;; Return value:  Size  Location     Type
 13862 ;;                  1    wreg      void 
 13863 ;; Registers used:
 13864 ;;		wreg, status,2, status,0, cstack
 13865 ;; Tracked objects:
 13866 ;;		On entry : 0/0
 13867 ;;		On exit  : 0/0
 13868 ;;		Unchanged: 0/0
 13869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13870 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13873 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13874 ;;Total ram usage:        2 bytes
 13875 ;; Hardware stack levels used: 1
 13876 ;; Hardware stack levels required when called: 1
 13877 ;; This function calls:
 13878 ;;		_I2C_Master_Wait
 13879 ;; This function is called by:
 13880 ;;		_Voltage_ReadRegister
 13881 ;;		_Current_ReadRegister
 13882 ;;		_Power_ReadRegister
 13883 ;; This function uses a non-reentrant model
 13884 ;;
 13885                           
 13886                           	psect	text96
 13887  00C068                     __ptext96:
 13888                           	callstack 0
 13889  00C068                     _I2C_Master_Write:
 13890                           	callstack 28
 13891  00C068                     
 13892                           ;INA260.c: 100: void I2C_Master_Write(unsigned d);INA260.c: 101: {;INA260.c: 102:   I2C_
      +                          Master_Wait();
 13893  00C068  ECFF  F060         	call	_I2C_Master_Wait	;wreg free
 13894  00C06C                     
 13895                           ;INA260.c: 103:   SSPBUF = d;
 13896  00C06C  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 13897  00C070  0012               	return		;funcret
 13898  00C072                     __end_of_I2C_Master_Write:
 13899                           	callstack 0
 13900                           
 13901 ;; *************** function _I2C_Master_Stop *****************
 13902 ;; Defined at:
 13903 ;;		line 94 in file "INA260.c"
 13904 ;; Parameters:    Size  Location     Type
 13905 ;;		None
 13906 ;; Auto vars:     Size  Location     Type
 13907 ;;		None
 13908 ;; Return value:  Size  Location     Type
 13909 ;;                  1    wreg      void 
 13910 ;; Registers used:
 13911 ;;		wreg, status,2, status,0, cstack
 13912 ;; Tracked objects:
 13913 ;;		On entry : 0/0
 13914 ;;		On exit  : 0/0
 13915 ;;		Unchanged: 0/0
 13916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13917 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13920 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13921 ;;Total ram usage:        0 bytes
 13922 ;; Hardware stack levels used: 1
 13923 ;; Hardware stack levels required when called: 1
 13924 ;; This function calls:
 13925 ;;		_I2C_Master_Wait
 13926 ;; This function is called by:
 13927 ;;		_Voltage_ReadRegister
 13928 ;;		_Current_ReadRegister
 13929 ;;		_Power_ReadRegister
 13930 ;; This function uses a non-reentrant model
 13931 ;;
 13932                           
 13933                           	psect	text97
 13934  00C018                     __ptext97:
 13935                           	callstack 0
 13936  00C018                     _I2C_Master_Stop:
 13937                           	callstack 28
 13938  00C018                     
 13939                           ;INA260.c: 96:   I2C_Master_Wait();
 13940  00C018  ECFF  F060         	call	_I2C_Master_Wait	;wreg free
 13941  00C01C                     
 13942                           ;INA260.c: 97:   PEN = 1;
 13943  00C01C  84C5               	bsf	4037,2,c	;volatile
 13944  00C01E  0012               	return		;funcret
 13945  00C020                     __end_of_I2C_Master_Stop:
 13946                           	callstack 0
 13947                           
 13948 ;; *************** function _I2C_Master_Start *****************
 13949 ;; Defined at:
 13950 ;;		line 82 in file "INA260.c"
 13951 ;; Parameters:    Size  Location     Type
 13952 ;;		None
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;		None
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  1    wreg      void 
 13957 ;; Registers used:
 13958 ;;		wreg, status,2, status,0, cstack
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13965 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13966 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13967 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13968 ;;Total ram usage:        0 bytes
 13969 ;; Hardware stack levels used: 1
 13970 ;; Hardware stack levels required when called: 1
 13971 ;; This function calls:
 13972 ;;		_I2C_Master_Wait
 13973 ;; This function is called by:
 13974 ;;		_Voltage_ReadRegister
 13975 ;;		_Current_ReadRegister
 13976 ;;		_Power_ReadRegister
 13977 ;; This function uses a non-reentrant model
 13978 ;;
 13979                           
 13980                           	psect	text98
 13981  00C010                     __ptext98:
 13982                           	callstack 0
 13983  00C010                     _I2C_Master_Start:
 13984                           	callstack 28
 13985  00C010                     
 13986                           ;INA260.c: 84:   I2C_Master_Wait();
 13987  00C010  ECFF  F060         	call	_I2C_Master_Wait	;wreg free
 13988  00C014                     
 13989                           ;INA260.c: 85:   SEN = 1;
 13990  00C014  80C5               	bsf	4037,0,c	;volatile
 13991  00C016  0012               	return		;funcret
 13992  00C018                     __end_of_I2C_Master_Start:
 13993                           	callstack 0
 13994                           
 13995 ;; *************** function _I2C_Master_RepeatedStart *****************
 13996 ;; Defined at:
 13997 ;;		line 88 in file "INA260.c"
 13998 ;; Parameters:    Size  Location     Type
 13999 ;;		None
 14000 ;; Auto vars:     Size  Location     Type
 14001 ;;		None
 14002 ;; Return value:  Size  Location     Type
 14003 ;;                  1    wreg      void 
 14004 ;; Registers used:
 14005 ;;		wreg, status,2, status,0, cstack
 14006 ;; Tracked objects:
 14007 ;;		On entry : 0/0
 14008 ;;		On exit  : 0/0
 14009 ;;		Unchanged: 0/0
 14010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14014 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14015 ;;Total ram usage:        0 bytes
 14016 ;; Hardware stack levels used: 1
 14017 ;; Hardware stack levels required when called: 1
 14018 ;; This function calls:
 14019 ;;		_I2C_Master_Wait
 14020 ;; This function is called by:
 14021 ;;		_Voltage_ReadRegister
 14022 ;;		_Current_ReadRegister
 14023 ;;		_Power_ReadRegister
 14024 ;; This function uses a non-reentrant model
 14025 ;;
 14026                           
 14027                           	psect	text99
 14028  00C008                     __ptext99:
 14029                           	callstack 0
 14030  00C008                     _I2C_Master_RepeatedStart:
 14031                           	callstack 28
 14032  00C008                     
 14033                           ;INA260.c: 90:   I2C_Master_Wait();
 14034  00C008  ECFF  F060         	call	_I2C_Master_Wait	;wreg free
 14035  00C00C                     
 14036                           ;INA260.c: 91:   RSEN = 1;
 14037  00C00C  82C5               	bsf	4037,1,c	;volatile
 14038  00C00E  0012               	return		;funcret
 14039  00C010                     __end_of_I2C_Master_RepeatedStart:
 14040                           	callstack 0
 14041                           
 14042 ;; *************** function _I2C_Master_Read *****************
 14043 ;; Defined at:
 14044 ;;		line 106 in file "INA260.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;  a               2    1[COMRAM] unsigned short 
 14047 ;; Auto vars:     Size  Location     Type
 14048 ;;  temp            2    3[COMRAM] unsigned short 
 14049 ;; Return value:  Size  Location     Type
 14050 ;;                  2    1[COMRAM] unsigned short 
 14051 ;; Registers used:
 14052 ;;		wreg, status,2, status,0, cstack
 14053 ;; Tracked objects:
 14054 ;;		On entry : 0/0
 14055 ;;		On exit  : 0/0
 14056 ;;		Unchanged: 0/0
 14057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14058 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14059 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14061 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14062 ;;Total ram usage:        4 bytes
 14063 ;; Hardware stack levels used: 1
 14064 ;; Hardware stack levels required when called: 1
 14065 ;; This function calls:
 14066 ;;		_I2C_Master_Wait
 14067 ;; This function is called by:
 14068 ;;		_Voltage_ReadRegister
 14069 ;;		_Current_ReadRegister
 14070 ;;		_Power_ReadRegister
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text100
 14075  00C3AC                     __ptext100:
 14076                           	callstack 0
 14077  00C3AC                     _I2C_Master_Read:
 14078                           	callstack 28
 14079  00C3AC                     
 14080                           ;INA260.c: 106: unsigned short I2C_Master_Read(unsigned short a);INA260.c: 107: {;INA260
      +                          .c: 108:   unsigned short temp;;INA260.c: 109:   I2C_Master_Wait();
 14081  00C3AC  ECFF  F060         	call	_I2C_Master_Wait	;wreg free
 14082  00C3B0                     
 14083                           ;INA260.c: 110:   RCEN = 1;
 14084  00C3B0  86C5               	bsf	4037,3,c	;volatile
 14085                           
 14086                           ;INA260.c: 111:   I2C_Master_Wait();
 14087  00C3B2  ECFF  F060         	call	_I2C_Master_Wait	;wreg free
 14088  00C3B6                     
 14089                           ;INA260.c: 112:   temp = SSPBUF;
 14090  00C3B6  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
 14091  00C3BA  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
 14092                           
 14093                           ;INA260.c: 113:   I2C_Master_Wait();
 14094  00C3BC  ECFF  F060         	call	_I2C_Master_Wait	;wreg free
 14095  00C3C0                     
 14096                           ;INA260.c: 114:   ACKDT = (a)?0:1;
 14097  00C3C0  5002               	movf	I2C_Master_Read@a^0,w,c
 14098  00C3C2  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
 14099  00C3C4  B4D8               	btfsc	status,2,c
 14100  00C3C6  EFE7  F061         	goto	u5771
 14101  00C3CA  EFEA  F061         	goto	u5770
 14102  00C3CE                     u5771:
 14103  00C3CE  8AC5               	bsf	4037,5,c	;volatile
 14104  00C3D0  EFEB  F061         	goto	u5785
 14105  00C3D4                     u5770:
 14106  00C3D4  9AC5               	bcf	4037,5,c	;volatile
 14107  00C3D6                     u5785:
 14108  00C3D6                     
 14109                           ;INA260.c: 115:   ACKEN = 1;
 14110  00C3D6  88C5               	bsf	4037,4,c	;volatile
 14111  00C3D8                     
 14112                           ;INA260.c: 116:   return temp;
 14113  00C3D8  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
 14114  00C3DC  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
 14115  00C3E0  0012               	return		;funcret
 14116  00C3E2                     __end_of_I2C_Master_Read:
 14117                           	callstack 0
 14118                           
 14119 ;; *************** function _I2C_Master_Wait *****************
 14120 ;; Defined at:
 14121 ;;		line 77 in file "INA260.c"
 14122 ;; Parameters:    Size  Location     Type
 14123 ;;		None
 14124 ;; Auto vars:     Size  Location     Type
 14125 ;;		None
 14126 ;; Return value:  Size  Location     Type
 14127 ;;                  1    wreg      void 
 14128 ;; Registers used:
 14129 ;;		wreg, status,2, status,0
 14130 ;; Tracked objects:
 14131 ;;		On entry : 0/0
 14132 ;;		On exit  : 0/0
 14133 ;;		Unchanged: 0/0
 14134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 14135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14137 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14138 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 14139 ;;Total ram usage:        1 bytes
 14140 ;; Hardware stack levels used: 1
 14141 ;; This function calls:
 14142 ;;		Nothing
 14143 ;; This function is called by:
 14144 ;;		_I2C_Master_Start
 14145 ;;		_I2C_Master_RepeatedStart
 14146 ;;		_I2C_Master_Stop
 14147 ;;		_I2C_Master_Write
 14148 ;;		_I2C_Master_Read
 14149 ;; This function uses a non-reentrant model
 14150 ;;
 14151                           
 14152                           	psect	text101
 14153  00C1FE                     __ptext101:
 14154                           	callstack 0
 14155  00C1FE                     _I2C_Master_Wait:
 14156                           	callstack 28
 14157  00C1FE                     l837:
 14158  00C1FE  B4C7               	btfsc	199,2,c	;volatile
 14159  00C200  EF04  F061         	goto	u5601
 14160  00C204  EF06  F061         	goto	u5600
 14161  00C208                     u5601:
 14162  00C208  EFFF  F060         	goto	l837
 14163  00C20C                     u5600:
 14164  00C20C  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
 14165  00C210  0E1F               	movlw	31
 14166  00C212  1601               	andwf	??_I2C_Master_Wait^0,f,c
 14167  00C214  A4D8               	btfss	status,2,c
 14168  00C216  EF0F  F061         	goto	u5611
 14169  00C21A  EF11  F061         	goto	u5610
 14170  00C21E                     u5611:
 14171  00C21E  EFFF  F060         	goto	l837
 14172  00C222                     u5610:
 14173  00C222  0012               	return		;funcret
 14174  00C224                     __end_of_I2C_Master_Wait:
 14175                           	callstack 0
 14176                           
 14177                           	psect	text102
 14178  000000                     __ptext102:
 14179                           	callstack 0
 14180  000000                     
 14181                           	psect	rparam
 14182  0000                     
 14183                           	psect	idloc
 14184                           
 14185                           ;Config register IDLOC0 @ 0x200000
 14186                           ;	unspecified, using default values
 14187  200000                     	org	2097152
 14188  200000  FF                 	db	255
 14189                           
 14190                           ;Config register IDLOC1 @ 0x200001
 14191                           ;	unspecified, using default values
 14192  200001                     	org	2097153
 14193  200001  FF                 	db	255
 14194                           
 14195                           ;Config register IDLOC2 @ 0x200002
 14196                           ;	unspecified, using default values
 14197  200002                     	org	2097154
 14198  200002  FF                 	db	255
 14199                           
 14200                           ;Config register IDLOC3 @ 0x200003
 14201                           ;	unspecified, using default values
 14202  200003                     	org	2097155
 14203  200003  FF                 	db	255
 14204                           
 14205                           ;Config register IDLOC4 @ 0x200004
 14206                           ;	unspecified, using default values
 14207  200004                     	org	2097156
 14208  200004  FF                 	db	255
 14209                           
 14210                           ;Config register IDLOC5 @ 0x200005
 14211                           ;	unspecified, using default values
 14212  200005                     	org	2097157
 14213  200005  FF                 	db	255
 14214                           
 14215                           ;Config register IDLOC6 @ 0x200006
 14216                           ;	unspecified, using default values
 14217  200006                     	org	2097158
 14218  200006  FF                 	db	255
 14219                           
 14220                           ;Config register IDLOC7 @ 0x200007
 14221                           ;	unspecified, using default values
 14222  200007                     	org	2097159
 14223  200007  FF                 	db	255
 14224                           
 14225                           	psect	config
 14226                           
 14227                           ;Config register CONFIG1L @ 0x300000
 14228                           ;	VREG Sleep Enable bit
 14229                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 14230                           ;	LF-INTOSC Low-power Enable bit
 14231                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 14232                           ;	SOSC Power Selection and mode Configuration bits
 14233                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 14234                           ;	Extended Instruction Set
 14235                           ;	XINST = OFF, Disabled
 14236  300000                     	org	3145728
 14237  300000  15                 	db	21
 14238                           
 14239                           ;Config register CONFIG1H @ 0x300001
 14240                           ;	Oscillator
 14241                           ;	FOSC = INTIO2, Internal RC oscillator
 14242                           ;	PLL x4 Enable bit
 14243                           ;	PLLCFG = OFF, Disabled
 14244                           ;	Fail-Safe Clock Monitor
 14245                           ;	FCMEN = OFF, Disabled
 14246                           ;	Internal External Oscillator Switch Over Mode
 14247                           ;	IESO = OFF, Disabled
 14248  300001                     	org	3145729
 14249  300001  08                 	db	8
 14250                           
 14251                           ;Config register CONFIG2L @ 0x300002
 14252                           ;	Power Up Timer
 14253                           ;	PWRTEN = OFF, Disabled
 14254                           ;	Brown Out Detect
 14255                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 14256                           ;	Brown-out Reset Voltage bits
 14257                           ;	BORV = 3, 1.8V
 14258                           ;	BORMV Power level
 14259                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 14260  300002                     	org	3145730
 14261  300002  7F                 	db	127
 14262                           
 14263                           ;Config register CONFIG2H @ 0x300003
 14264                           ;	Watchdog Timer
 14265                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 14266                           ;	Watchdog Postscaler
 14267                           ;	WDTPS = 1048576, 1:1048576
 14268  300003                     	org	3145731
 14269  300003  7C                 	db	124
 14270                           
 14271                           ; Padding undefined space
 14272  300004                     	org	3145732
 14273  300004  FF                 	db	255
 14274                           
 14275                           ;Config register CONFIG3H @ 0x300005
 14276                           ;	ECAN Mux bit
 14277                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 14278                           ;	MSSP address masking
 14279                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 14280                           ;	Master Clear Enable
 14281                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 14282  300005                     	org	3145733
 14283  300005  89                 	db	137
 14284                           
 14285                           ;Config register CONFIG4L @ 0x300006
 14286                           ;	Stack Overflow Reset
 14287                           ;	STVREN = ON, Enabled
 14288                           ;	Boot Block Size
 14289                           ;	BBSIZ = BB2K, 2K word Boot Block size
 14290  300006                     	org	3145734
 14291  300006  91                 	db	145
 14292                           
 14293                           ; Padding undefined space
 14294  300007                     	org	3145735
 14295  300007  FF                 	db	255
 14296                           
 14297                           ;Config register CONFIG5L @ 0x300008
 14298                           ;	Code Protect 00800-03FFF
 14299                           ;	CP0 = OFF, Disabled
 14300                           ;	Code Protect 04000-07FFF
 14301                           ;	CP1 = OFF, Disabled
 14302                           ;	Code Protect 08000-0BFFF
 14303                           ;	CP2 = OFF, Disabled
 14304                           ;	Code Protect 0C000-0FFFF
 14305                           ;	CP3 = OFF, Disabled
 14306  300008                     	org	3145736
 14307  300008  0F                 	db	15
 14308                           
 14309                           ;Config register CONFIG5H @ 0x300009
 14310                           ;	Code Protect Boot
 14311                           ;	CPB = OFF, Disabled
 14312                           ;	Data EE Read Protect
 14313                           ;	CPD = OFF, Disabled
 14314  300009                     	org	3145737
 14315  300009  C0                 	db	192
 14316                           
 14317                           ;Config register CONFIG6L @ 0x30000A
 14318                           ;	Table Write Protect 00800-03FFF
 14319                           ;	WRT0 = OFF, Disabled
 14320                           ;	Table Write Protect 04000-07FFF
 14321                           ;	WRT1 = OFF, Disabled
 14322                           ;	Table Write Protect 08000-0BFFF
 14323                           ;	WRT2 = OFF, Disabled
 14324                           ;	Table Write Protect 0C000-0FFFF
 14325                           ;	WRT3 = OFF, Disabled
 14326  30000A                     	org	3145738
 14327  30000A  0F                 	db	15
 14328                           
 14329                           ;Config register CONFIG6H @ 0x30000B
 14330                           ;	Config. Write Protect
 14331                           ;	WRTC = OFF, Disabled
 14332                           ;	Table Write Protect Boot
 14333                           ;	WRTB = OFF, Disabled
 14334                           ;	Data EE Write Protect
 14335                           ;	WRTD = OFF, Disabled
 14336  30000B                     	org	3145739
 14337  30000B  E0                 	db	224
 14338                           
 14339                           ;Config register CONFIG7L @ 0x30000C
 14340                           ;	Table Read Protect 00800-03FFF
 14341                           ;	EBTR0 = OFF, Disabled
 14342                           ;	Table Read Protect 04000-07FFF
 14343                           ;	EBTR1 = OFF, Disabled
 14344                           ;	Table Read Protect 08000-0BFFF
 14345                           ;	EBTR2 = OFF, Disabled
 14346                           ;	Table Read Protect 0C000-0FFFF
 14347                           ;	EBTR3 = OFF, Disabled
 14348  30000C                     	org	3145740
 14349  30000C  0F                 	db	15
 14350                           
 14351                           ;Config register CONFIG7H @ 0x30000D
 14352                           ;	Table Read Protect Boot
 14353                           ;	EBTRB = OFF, Disabled
 14354  30000D                     	org	3145741
 14355  30000D  40                 	db	64
 14356                           tosu	equ	0xFFF
 14357                           tosh	equ	0xFFE
 14358                           tosl	equ	0xFFD
 14359                           stkptr	equ	0xFFC
 14360                           pclatu	equ	0xFFB
 14361                           pclath	equ	0xFFA
 14362                           pcl	equ	0xFF9
 14363                           tblptru	equ	0xFF8
 14364                           tblptrh	equ	0xFF7
 14365                           tblptrl	equ	0xFF6
 14366                           tablat	equ	0xFF5
 14367                           prodh	equ	0xFF4
 14368                           prodl	equ	0xFF3
 14369                           indf0	equ	0xFEF
 14370                           postinc0	equ	0xFEE
 14371                           postdec0	equ	0xFED
 14372                           preinc0	equ	0xFEC
 14373                           plusw0	equ	0xFEB
 14374                           fsr0h	equ	0xFEA
 14375                           fsr0l	equ	0xFE9
 14376                           wreg	equ	0xFE8
 14377                           indf1	equ	0xFE7
 14378                           postinc1	equ	0xFE6
 14379                           postdec1	equ	0xFE5
 14380                           preinc1	equ	0xFE4
 14381                           plusw1	equ	0xFE3
 14382                           fsr1h	equ	0xFE2
 14383                           fsr1l	equ	0xFE1
 14384                           bsr	equ	0xFE0
 14385                           indf2	equ	0xFDF
 14386                           postinc2	equ	0xFDE
 14387                           postdec2	equ	0xFDD
 14388                           preinc2	equ	0xFDC
 14389                           plusw2	equ	0xFDB
 14390                           fsr2h	equ	0xFDA
 14391                           fsr2l	equ	0xFD9
 14392                           status	equ	0xFD8

Data Sizes:
    Strings     80
    Constant    640
    Data        0
    BSS         2309
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     78     143
    BANK1           256      0     196
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2659$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2665$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2671$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2677$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2676	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2671	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2670	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2665	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2664	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2659	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2658	const PTR FTN()enum E12577 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_20(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_11(CODE[4]), STR_10(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2055_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    Oled_WriteString@characters	PTR unsigned char  size(2) Largest target is 18
		 -> STR_9(CODE[11]), STR_8(CODE[11]), STR_7(CODE[9]), STR_6(CODE[18]), 
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), STR_2(CODE[4]), 
		 -> STR_1(CODE[3]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E360 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E360[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E12577[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 2
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _Voltage_ReadRegister->___flmul
    _Power_ReadRegister->___fldiv
    _Oled_WriteString->_Oled_WriteCharacter
    _Oled_WriteCharacter->_Oled_Data
    _Oled_SelectPage->_Oled_Command
    _Oled_Init->_Oled_Command
    _Oled_Command->_I2C_WriteNBytes
    _Oled_Clear->_Oled_Data
    _Oled_Data->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_Master_Init->___lldiv
    _Current_ReadRegister->___flmul
    ___xxtofl->___wmul
    ___flmul->___xxtofl
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  425751
                                             93 COMRAM     2     2      0
               _Current_ReadRegister
                     _I2C_Initialize
                    _I2C_Master_Init
                         _Oled_Clear
                          _Oled_Init
                    _Oled_SelectPage
                   _Oled_WriteString
                 _Power_ReadRegister
                  _SYSTEM_Initialize
               _Voltage_ReadRegister
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   31892
                                             62 BANK0     16     8      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   31231
                                             91 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   30859
                                             69 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   23608
                                             57 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             45 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     790
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1212
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3104
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Voltage_ReadRegister                                 9     5      4    7226
                                             45 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_ReadRegister                                   9     5      4    6529
                                             25 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2263
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Oled_WriteString                                     2     0      2   93689
                                             32 COMRAM     2     0      2
                _Oled_WriteCharacter
 ---------------------------------------------------------------------------------
 (2) _Oled_WriteCharacter                                  7     7      0   92960
                                             25 COMRAM     7     7      0
                          _Oled_Data
 ---------------------------------------------------------------------------------
 (1) _Oled_SelectPage                                      2     2      0   92915
                                             25 COMRAM     2     2      0
                       _Oled_Command
 ---------------------------------------------------------------------------------
 (1) _Oled_Init                                            0     0      0   92870
                       _Oled_Command
 ---------------------------------------------------------------------------------
 (2) _Oled_Command                                         3     3      0   92870
                                             22 COMRAM     3     3      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (1) _Oled_Clear                                           2     2      0   92916
                                             25 COMRAM     2     2      0
                          _Oled_Data
 ---------------------------------------------------------------------------------
 (3) _Oled_Data                                            3     3      0   92870
                                             22 COMRAM     3     3      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      5     1      4   92798
                                             17 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              5 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0      46
                                              0 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0   88620
                                             15 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterFsm                                        2     2      0   88574
                                             13 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX                                            2     2      0   22149
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX                                            2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2    4390
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              5 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      5     1      4     914
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        4     0      4    1868
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     488
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Current_ReadRegister                                 9     5      4    7226
                                             45 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2960
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     706
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2     501
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Current_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
   _I2C_Initialize
   _I2C_Master_Init
     ___lldiv
   _Oled_Clear
     _Oled_Data
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                 _I2C_DO_RX_NACK_STOP *
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                   _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                   _I2C_DO_SEND_STOP *
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                   _rd2RegCompleteHandler *
                   _rdBlkRegCompleteHandler *
                   _wr1RegCompleteHandler *
                   _wr2RegCompleteHandler *
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
   _Oled_Init
     _Oled_Command
       _I2C_WriteNBytes
   _Oled_SelectPage
     _Oled_Command
   _Oled_WriteString
     _Oled_WriteCharacter
       _Oled_Data
   _Power_ReadRegister
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___fldiv
     ___wmul
     ___xxtofl
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Voltage_ReadRegister
     _I2C_Master_Read
     _I2C_Master_RepeatedStart
     _I2C_Master_Start
     _I2C_Master_Stop
     _I2C_Master_Write
     ___fldiv
     ___flmul
     ___xxtofl
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
           ___flmul
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
         _isdigit
         _isupper
         _strncmp
         _tolower

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0     800      35       56.1%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C4       8       76.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     4E      8F       5       89.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B2       6        0.0%
DATA                 0      0     9B2       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Aug 11 23:08:50 2021

             __end_of_Oled_SelectPage C156                ??_I2C_DO_SEND_ADR_READ 0001  
         __size_of_I2C_MasterSendNack 0006                    __size_of_I2C_Close 002C  
                        ___fldiv@aexp 0019                          ___fldiv@bexp 0018  
          Current_ReadRegister@temp_c 0036            Current_ReadRegister@temp_d 0034  
                        ___fldiv@sign 0011               ??_I2C_DO_SEND_ADR_WRITE 0002  
                         _SSPSTATbits 000FC7                                    l90 C2F4  
                                  l93 C320                                    l69 C6CA  
                                  l96 C34C                                    l99 C2C8  
                        ___awdiv@sign 0006                                    _oi 0100  
                 ___wmul@multiplicand 0003                   __size_of_I2C_Poller 001E  
               ??_I2C_DO_SEND_RESTART 0001          __size_of_I2C_MasterOperation 0044  
                                 l102 C4FE                                   l120 C0E0  
                                 l117 C07A                                   l302 CA6A  
                                 l312 C980         __size_of_I2C_MasterSendTxData 0008  
                                 l321 C0BE                                   l145 C270  
                                 l411 BFEA                                   l315 C086  
                                 l403 C910                                   l324 CF42  
                                 l340 CCEE                                   l308 C172  
                                 l341 CD5C                                   l414 BFEE  
                                 l430 BFF6                                   l318 C0AE  
                                 l255 C0F4                                   l263 C29C  
                                 l327 CF7A                                   l352 C092  
                                 l424 C194                                   l433 C026  
                                 l282 C1FC                                   l442 BFF2  
                                 l427 BFD6                                   l451 C108  
                                 l275 C066                                   l259 CB74  
                                 l291 C138                                   l436 BFE2  
                                 l445 BFDE                                   l285 C120  
                                 l269 C542                                   l454 C006  
                                 l358 CAE6                                   l382 C03E  
                                 l710 C1B6                                   l391 C056  
                                 l472 BFDA                                   l448 BFE6  
                                 l376 C02E                                   l457 C000  
                                 l385 C046                                   l481 C0C0  
                                 l713 CC12                                   l394 C05E  
                                 l475 BFD2                                   l379 C036  
                                 l707 C1D8                                   l388 C04E  
                                 l732 C378                                   l740 C154  
                                 l724 C9F0                                   l397 C09E  
                                 l485 C0CE                                   l478 BFFA  
                                 l831 D59C                                   l719 C846  
                                 l840 C222                                   l834 D39C  
                                 l843 C016                                   l852 C070  
                                 l828 D69E                                   l837 C1FE  
                                 l861 C248                                   l846 C00E  
                                 l855 C3E0                                   l849 C01E  
                                 l858 C726                                   l895 CCB6  
                                 l888 CCA6                                   _IPL FD2F  
                                 _PEN 007E2A                                   _SEN 007E28  
                                 _pad D040                fp__I2C_DO_RX_NACK_STOP 0000  
              _I2C_MasterWaitForEvent C0C0                          ___awmod@sign 0006  
                                 prod 000FF3                                   tosl 000FFD  
                                 wreg 000FE8                            _TXSTA1bits 000FAC  
                        ___flmul@aexp 0026                          ___flmul@bexp 0027  
         __end_of_Oled_WriteCharacter C9F2          ??_I2C_SetAddressNackCallback 000A  
                        ___flmul@sign 0021                          ___flmul@temp 002C  
                        ___flmul@prod 0028              ??_I2C_CallbackReturnStop 000C  
                        _I2C_DO_RESET C094                          ___fltol@exp1 000A  
                                l1120 CE06                                  l1105 CEB6  
                                l1131 D7A2               ??_rd2RegCompleteHandler 000C  
                                l1126 D75C                                  l1135 C486  
                                l1092 D03E                                  l1406 EF1E  
                                l1158 D8A8                                  l1415 EFEE  
                                l1431 C5CC                                  l1416 EFDC  
                                l1530 DB8E                                  l1443 E372  
                                l1523 DB32                                  l1603 FD2C  
                                l1516 DA9A                                  l1445 E1D2  
                                l1621 F4C2                                  l1454 E218  
                                l1390 EDF2                                  l1702 EB5A  
                                l1519 DBF6                                  l1391 EDB8  
                                l1456 E290                                  l1448 E196  
                                l1457 E27E                                  l5001 C28A  
                                l1482 E62E                                  l1475 E438  
                                l5003 C296                                  l5011 C240  
                                l1539 C670                                  l1492 E75E  
                                l1484 E6A6                                  l1804 C586  
                                l1580 D086                                  l1708 C8A2  
                                l5101 E1F8                                  l5021 DFF6  
                                l1485 E694                                  l5005 C29A  
                                l1389 EE04                                  l1813 C784  
                                l1709 C8AA                                  l1398 F0D4  
                                l5111 E236                                  l5103 E1FE  
                                l5023 E006                                  l5031 E030  
                                l5015 DFDA                                  l1479 E79C  
                                l1751 DA42                                  l1719 D49A  
                                l1807 BFCE                                  l1583 D0C8  
                                l1823 D2AA                                  l1760 DF1C  
                                l5121 E2A0                                  l5113 E23A  
                                l5105 E208                                  l5041 E05C  
                                l5033 E040                                  l5025 E016  
                                l5017 DFE6                                  l5201 E4A4  
                                l4401 C322                                  l5009 C224  
                                l1585 D104                                  l1833 C7DC  
                                l1649 F902                                  l5131 E302  
                                l5123 E2AC                                  l5115 E248  
                                l5107 E216                                  l5043 E06C  
                                l5051 E096                                  l5035 E046  
                                l5027 E026                                  l5019 DFF4  
                                l5211 E4EE                                  l5203 E4BC  
                                l4411 C2B2                                  l4403 C336  
                                l1819 C416                                  l6011 EAF6  
                                l6003 EA46                                  l1748 DA3A  
                                l5141 E360                                  l5133 E318  
                                l5125 E2BA                                  l5117 E276  
                                l5109 E228                                  l5061 E0D8  
                                l5053 E0A6                                  l5045 E07C  
                                l5037 E04C                                  l5029 E028  
                                l5221 E544                                  l5213 E4FE  
                                l5205 E4C8                                  l6101 CC14  
                                l4413 C2C6                                  l4405 C34A  
                                l4421 C4FC                                  l5301 CFB0  
                                l1757 DFD8                                  l1781 C4BE  
                                l6021 EB94                                  l6013 EB2A  
                                l6005 EA74                                  l1838 C7E4  
                                l5143 E366                                  l5135 E332  
                                l5127 E2E4                                  l5055 E0BC  
                                l5047 E08C                                  l5039 E05A  
                                l5231 E5E8                                  l5223 E560  
                                l5215 E50A                                  l5207 E4D4  
                                l6111 CC5C                                  l6103 CC24  
                                l4503 C0B0                                  l4511 CEB8  
                                l4431 C028                                  l1767 C44E  
                                l1775 C61E                                  l5311 CFDE  
                                l5303 CFB4                                  l6031 EBD0  
                                l6023 EBA2                                  l1695 EC14  
                                l5145 E368                                  l5137 E34E  
                                l5129 E2E8                                  l5081 E15A  
                                l5073 E110                                  l5057 E0CC  
                                l5065 E0EC                                  l5049 E08E  
                                l5241 E63E                                  l5233 E5F6  
                                l5225 E56C                                  l5217 E51A  
                                l5209 E4E2                                  l5161 E3A0  
                                l5153 E374                                  l6121 CCA0  
                                l6113 CC66                                  l6105 CC3A  
                                l4409 C29E                                  l4417 C4C0  
                                l4425 C0F6                                  l4505 C0B4  
                                l4433 C02C                                  l6201 C148  
                                l5321 D012                                  l5313 CFEC  
                                l5305 CFBC                                  l5401 D79A  
                                l6025 EBB6                                  l6009 EAE4  
                                l5139 E352                                  l5091 E1A0  
                                l5083 E162                                  l5075 E12A  
                                l5067 E0FC                                  l5059 E0D4  
                                l5243 E64C                                  l5235 E614  
                                l5227 E588                                  l5219 E534  
                                l5171 E3DC                                  l5163 E3B0  
                                l5155 E380                                  l6131 DAC0  
                                l6123 DA46                                  l6115 CC84  
                                l6107 CC42                                  l4371 C1DA  
                                l4363 C9F4                                  l4419 C4E8  
                                l4603 CA8E                                  l4507 C0BC  
                                l4531 CF46                                  l4523 CEE0  
                                l4515 CED0                                  l4443 C040  
                                l4611 C048                                  l6051 C1BA  
                                l6203 C14E                                  l6211 C814  
                                l6043 C24A                                  l5323 D018  
                                l5315 CFF2                                  l5307 CFCE  
                                l5403 D7A0                                  l5411 C476  
                                l6019 EB6E                                  l6035 EBDC  
                                l1796 D1CE                                  l5093 E1BE  
                                l5085 E172                                  l5077 E13A  
                                l5069 E0FC                                  l5253 E6B6  
                                l5261 E6FE                                  l5245 E650  
                                l5237 E61E                                  l5229 E5B2  
                                l5181 E412                                  l5173 E3E2  
                                l5165 E3C0                                  l5157 E38E  
                                l6141 DB1A                                  l6125 DA56  
                                l6117 CC94                                  l6109 CC4E  
                                l6221 C724                                  l6213 C6CC  
                                l4381 BFE4                                  l4373 C1EA  
                                l4365 CA06                                  l4453 C002  
                                l4429 C022                                  l4533 CF58  
                                l4437 C030                                  l4445 C044  
                                l4613 C04C                                  l4461 C050  
                                l4621 C09C                                  l4701 C518  
                                l6053 C1BE                                  l6205 C7E6  
                                l6045 C25A                                  l5317 D008  
                                l5309 CFD6                                  l5325 D01E  
                                l5341 CE26                                  l5333 CE08  
                                l5421 D7CE                                  l6037 EC02  
                                l6029 EBC2                                  ?_pad 0011  
                                l6071 C010                                  l5095 E1C0  
                                l5087 E186                                  l5079 E14A  
                                l5271 E772                                  l5263 E718  
                                l5255 E6C2                                  l5247 E65E  
                                l5239 E62C                                  l5183 E422  
                                l5175 E3F0                                  l5167 E3C6  
                                l5159 E390                                  l6151 DB7E  
                                l6143 DB1C                                  l6135 DAD4  
                                l6127 DA64                                  l6119 CC96  
                                l6215 C6D4                                  l4375 C1F2  
                                l4367 CA3A                                  l4383 BFFC  
                                l4535 CF72                                  l4519 CED8  
                                l4551 CCE4                                  l4439 C034  
                                l4471 C03C                                  l4463 C054  
                                l4455 C058                                  l4711 C53C  
                                l4703 C51C                                  l6055 C1C2  
                                l6063 C98C                                  l6207 C7EA  
                                l6047 C26E                                  l6231 D676  
                                l6223 D59E                                  l5327 D02E  
                                l5319 D010                                  l5351 CE5E  
                                l5343 CE34                                  l5335 CE0C  
                                l5407 C450                                  l5431 D81C  
                                l5423 D7F8                                  l5415 D7A4  
                                l5503 C728                                  l5511 C7BC  
                                l6081 C00C                                  l6073 C014  
                                l5097 E1D0                                  l5089 E194  
                                l5273 E780                                  l5265 E72C  
                                l5257 E6D0                                  l5249 E68C  
                                l5193 E46C                                  l5185 E428  
                                l5177 E3F2                                  l5169 E3D6  
                                l6161 DBD6                                  l6153 DB9C  
                                l6145 DB28                                  l6137 DADC  
                                l6129 DAAA                                  l6241 D53C  
                                l6217 C71E                                  l4377 C1FA  
                                l4369 C10A                                  l4385 C2CA  
                                l4393 C2F6                                  l4481 BFEC  
                                l4449 BFF4                                  l4537 CF78  
                                l4529 CEE8                                  l4553 CCE8  
                                l4545 CCB8                                  l4457 C05C  
                                l4617 C094                                  l4633 C8C0  
                                l4625 C8AC                                  l4705 C52C  
                                l4713 C540                                  l6065 C9CA  
                                l6057 C984                                  l6209 C810  
                                l6049 C0D0                                  l6233 D68E  
                                l6225 D5F8                                  l5329 D036  
                                l5353 CE6C                                  l5361 CE96  
                                l5345 CE3C                                  l5337 CE1A  
                                l5409 C466                                  l4801 EDA0  
                                l4721 EC30                                  l5441 D848  
                                l5425 D7FA                                  l5417 D7BA  
                                l5521 DE3E                                  l5505 C738  
                                l5513 C7CE                                  l5601 F18A  
                                l6091 C3D6                                  l6083 C3AC  
                                l6075 C068                                  l5099 E1E2  
                                l5275 E782                                  l5267 E746  
                                l5259 E6FA                                  l5195 E478  
                                l5187 E448                                  l5179 E402  
                                l6163 DBE4                                  l6155 DB9E  
                                l6147 DB64                                  l6139 DAE8  
                                l6243 D540                                  l6219 C722  
                                l4379 BFE0                                  l4387 C2DE  
                                l4395 C30A                                  l4467 BFF0  
                                l4475 BFF8                                  l4491 C084  
                                l4563 CCFC                                  l4547 CCC6  
                                l4619 C098                                  l4627 C8B0  
                                l4651 C916                                  l4707 C534  
                                l6067 C9CE                                  l6251 D2AC  
                                l6227 D63E                                  l5291 CF80  
                                l5363 CEA6                                  l5355 CE82  
                                l5347 CE4E                                  l5339 CE22  
                                l5371 CD8C                                  l4811 EDE4  
                                l4803 EDB0                                  l4731 EC64  
                                l4723 EC32                                  l5283 C588  
                                l5451 D878                                  l5427 D80A  
                                l5531 DF0C                                  l5523 DE52  
                                l5507 C786                                  l5611 F1FE  
                                l5603 F190                                  l6171 C850  
                                l6093 C3D8                                  l6085 C3B0  
                                l6077 C06C                                  l5269 E762  
                                l5277 E788                                  l5197 E482  
                                l5189 E458                                  l6165 DBE6  
                                l6157 DBA2                                  l6149 DB70  
                                l6245 D574                                  l6237 D49C  
                                l6181 C0F2                                  l4485 BFD0  
                                l4389 C2F2                                  l4397 C31E  
                                l4477 BFE8                                  l4549 CCCC  
                                l4581 C090                                  l4469 C038  
                                l4629 C8B8                                  l4653 C926  
                                l4661 C156                                  l4709 C538  
                                l6069 C9EA                                  l6261 D38C  
                                l6253 D306                                  l6229 D642  
                                l5293 CF8E                                  l5365 CEAE  
                                l5357 CE8A                                  l5349 CE56  
                                l5381 CE04                                  l5373 CD9C  
                                l4901 F094                                  l4813 EDE6  
                                l4805 EDC6                                  l4741 EC96  
                                l4725 EC42                                  l4733 EC6C  
                                l4717 EC16                                  l5285 C598  
                                l5453 D888                                  l5437 D834  
                                l5429 D80E                                  l5541 DFC8  
                                l5525 DE60                                  l5533 DF40  
                                l5517 DDC8                                  l5461 D050  
                                l5701 F5AE                                  l5613 F21A  
                                l5605 F1B6                                  l5621 F264  
                                l6173 C85E                                  l6501 DD08  
                                l6087 C3B6                                  l6079 C008  
                                l5279 E78C                                  l5199 E498  
                                l6159 DBC6                                  l6247 D58C  
                                l6239 D4F6                                  l4591 CA7C  
                                l4487 C07C                                  l4495 C0A0  
                                l4559 CCF4                                  l4639 C8C8  
                                l4655 C93A                                  l4663 C15A  
                                l6191 C356                                  l6183 CB76  
                                l6255 D33C                                  l5551 C5D2  
                                l5295 CF96                                  l5359 CE90  
                                l5375 CDCA                                  l5391 D70C  
                                l4911 F0B4                                  l4903 F098  
                                l4831 EE6E                                  l4823 EE36  
                                l4815 EDF0                                  l4807 EDD2  
                                l4751 ECCC                                  l4743 EC9C  
                                l4735 EC7C                                  l4727 EC52  
                                l4719 EC22                                  l5455 D898  
                                l5447 D85C                                  l5439 D83E  
                                l5535 DF7C                                  l5519 DDE8  
                                l4671 D118                                  l5471 D0A6  
                                l5463 D064                                  l5711 F5F8  
                                l5703 F5C6                                  l5631 F2EE  
                                l5623 F28A                                  l5615 F232  
                                l6175 C884                                  l6271 C642  
                                l6511 DD56                                  l6503 DD20  
                                l6089 C3C0                                  l6097 C018  
                                l4593 CA80                                  l4585 CA6C  
                                l4489 C080                                  l4497 C0A4  
                                l4569 CD04                                  l4577 C088  
                                l4657 C940                                  l4649 C912  
                                l4665 C15E                                  l5561 C674  
                                l6193 C35C                                  l6185 C34E  
                                l6257 D340                                  l6177 C072  
                                l5545 C418                                  l5553 C5E6  
                                l5297 CF9A                                  l5289 CF7C  
                                l5377 CDDA                                  l5369 CD5E  
                                l5393 D71C                                  l5385 D6A0  
                                l4913 F0C2                                  l4905 F0A6  
                                l4833 EE72                                  l4825 EE46  
                                l4817 EE12                                  l4841 EE92  
                                l4809 EDD6                                  l4761 ED08  
                                l4753 ECDC                                  l4745 ECAA  
                                l4737 EC82                                  l4729 EC62  
                                l5449 D868                                  l5481 D39E  
                                l5537 DF90                                  l5529 DED0  
                                l4673 D12A                                  l4921 C550  
                                l5473 D0AA                                  l5465 D072  
                                l5801 FAF4                                  l5713 F60C  
                                l5721 F702                                  l5705 F5D8  
                                l5641 F324                                  l5617 F23C  
                                l5609 F1EC                                  l6169 C848  
                                l6273 C65E                                  l6265 C620  
                                l6521 DD92                                  l6513 DD5C  
                                l6505 DD26                                  l6099 C01C  
                                l6179 C0E2                                  l4691 BFD8  
                                l4659 BFDC                                  l4587 CA74  
                                l4499 C0AC                                  l4579 C08C  
                                l4667 C162                                  l4683 C174  
                                l5571 C6B6                                  l5563 C674  
                                l6195 C360                                  l6259 D374  
                                l5555 C614                                  l5299 CFA8  
                                l5379 CDFE                                  l5395 D72A  
                                l5387 D6CE                                  l4915 F0C4  
                                l4907 F0AC                                  l4843 EEB8  
                                l4851 EF0E                                  l4835 EE80  
                                l4827 EE54                                  l4819 EE22  
                                l4771 ED26                                  l4763 ED16  
                                l4755 ECDE                                  l4747 ECAC  
                                l4739 EC94                                  l5483 D3BE  
                                l5539 DFB8                                  l4675 D134  
                                l4923 C562                                  l4931 C3F2  
                                l5475 D0D8                                  l5467 D07E  
                                l5459 D040                                  l5811 FB52  
                                l5803 FAF8                                  l5731 F7CE  
                                l5723 F720                                  l5715 F670  
                                l5707 F5E0                                  l5651 F3EE  
                                l5627 F2C0                                  l6267 C632  
                                l6523 DD9E                                  l6515 DD68  
                                l6507 DD32                                  l4693 BFD4  
                                l4597 CA86                                  l4685 C182  
                                l4941 CAEA                                  l5565 C68A  
                                l6197 C13C                                  l5557 C618  
                                l5549 C5CE                                  l5901 D944  
                                l5397 D73C                                  l5389 D6DE  
                                l4909 F0AE                                  l4861 EF62  
                                l4853 EF34                                  l4845 EEEC  
                                l4837 EE82                                  l4829 EE62  
                                l4781 ED3A                                  l4773 ED2A  
                                l4765 ED1A                                  l4749 ECBC  
                                l4757 ECE6                                  l5485 D3FC  
                                l5493 D43C                                  l4677 D152  
                                l4669 D106                                  l4925 C566  
                                l4933 C40A                                  l5477 D0EC  
                                l5469 D092                                  l5821 FB90  
                                l5813 FB62                                  l5805 FB16  
                                l5741 F87E                                  l5733 F7DE  
                                l5725 F754                                  l5717 F6C8  
                                l5709 F5E8                                  l5661 F470  
                                l5653 F422                                  l5645 F35A  
                                l5629 F2D2                                  l5581 F106  
                                l5573 F0D6                                  l6269 C63A  
                                l6525 DDAA                                  l6517 DD74  
                                l6509 DD3E                                  l4695 C502  
                                l4687 C192                                  l4951 CB06  
                                l4943 CAEE                                  l5567 C69E  
                                l6199 C142                                  l5903 D94C  
                                l5399 D74A                                  l4871 EF8C  
                                l4863 EF70                                  l4855 EF44  
                                l4847 EEEE                                  l4839 EE8C  
                                l4791 ED4E                                  l4783 ED3E  
                                l4775 ED2E                                  l4767 ED1E  
                                l4759 ECF6                                  l5495 D44E  
                                l5487 D424                                  l4679 D188  
                                l4919 C544                                  l4927 C3E2  
                                l5831 FBC6                                  l5823 FBA0  
                                l5815 FB66                                  l5807 FB32  
                                l5751 F8EE                                  l5743 F8B2  
                                l5735 F7EE                                  l5727 F786  
                                l5719 F6FC                                  l5663 F482  
                                l5671 F4CE                                  l5655 F42A  
                                l5647 F38E                                  l5639 F30A  
                                l5591 F15C                                  l5583 F12A  
                                l5575 F0E0                                  l6519 DD8C  
                                l6471 DC08                                  l4697 C506  
                                l4961 CB1E                                  l4953 CB08  
                                l4945 CAFE                                  l5569 C6B2  
                                l5913 D9FA                                  l5905 D982  
                                l4881 EFBE                                  l4873 EF9C  
                                l4865 EF72                                  l4849 EEFE  
                                l4793 ED52                                  l4785 ED42  
                                l4777 ED32                                  l4769 ED22  
                                l5489 D430                                  l4929 C3EE  
                                l4937 C488                                  l5841 FC22  
                                l5833 FBD2                                  l5825 FBA8  
                                l5817 FB76                                  l5809 FB44  
                                l5761 F9A4                                  l5753 F8FA  
                                l5745 F8C6                                  l5737 F822  
                                l5729 F79C                                  l5681 F50E  
                                l5665 F494                                  l5649 F394  
                                l5657 F45C                                  l5593 F16E  
                                l5585 F134                                  l5577 F0F0  
                                l6481 DC30                                  l6473 DC0E  
                                l6465 DBF8                                  l6731 CAC0  
                                l4699 C516                                  l4971 CB46  
                                l4963 CB26                                  l4955 CB0C  
                                l4947 CB02                                  l5915 DA0C  
                                l6723 D96C                                  l4891 F018  
                                l4883 EFD4                                  l4867 EF80  
                                l4859 EF58                                  l4875 EF9E  
                                l4787 ED46                                  l4779 ED36  
                                l4795 ED56                                  l5499 D492  
                                l5851 FC6C                                  l5835 FBD8  
                                l5843 FC28                                  l5827 FBB6  
                                l5819 FB88                                  l5771 F9EC  
                                l5763 F9B6                                  l5755 F91E  
                                l5739 F878                                  l5747 F8CA  
                                l5691 F56A                                  l5683 F544  
                                l5667 F49C                                  l5659 F46C  
                                l5595 F17A                                  l5587 F13C  
                                l5579 F0FE                                  l5931 D214  
                                l5923 D1D0                                  l6491 DC84  
                                l6483 DC34                                  l6475 DC1A  
                                l6467 DC00                                  l6725 C8FA  
                                l4981 CB6A                                  l4973 CB4E  
                                l4965 CB2E                                  l4957 CB14  
                                l4949 CB04                                  l5917 DA1E  
                                l5909 D9BA                                  l4893 F052  
                                l4869 EF88                                  l4877 EFAC  
                                l4797 ED5A                                  l4789 ED4A  
                                l5861 FC9C                                  l5853 FC78  
                                l5845 FC3A                                  l5837 FBFE  
                                l5829 FBBE                                  l5781 FA22  
                                l5773 F9FC                                  l5765 F9C4  
                                l5757 F982                                  l5749 F8DA  
                                l5693 F57C                                  l5685 F54C  
                                l5677 F4E0                                  l5669 F4B6  
                                l5597 F182                                  l5589 F14E  
                                l5933 D22C                                  l5925 D1FA  
                                l6493 DCAA                                  l6485 DC48  
                                l6477 DC1E                                  l6469 DC04  
                                l5951 C20C                                  l6727 CD36  
                                l4991 C060                                  l4983 CB6E  
                                l4975 CB56                                  l4967 CB36  
                                l4959 CB16                                  l5943 C198  
                                l4887 EFFE                                  l4895 F054  
                                l4879 EFB0                                  l4799 ED84  
                                l5871 FCF6                                  l5855 FC80  
                                l5847 FC54                                  l5839 FC1A  
                                l5791 FA56                                  l5783 FA26  
                                l5775 FA00                                  l5759 F992  
                                l5767 F9CC                                  l5695 F58A  
                                l5679 F4F2                                  l5687 F550  
                                l5599 F186                                  l5935 D24A  
                                l6495 DCD0                                  l6487 DC5C  
                                l6479 DC24                                  l6729 CF1C  
                                l4977 CB5E                                  l4969 CB3E  
                                l4985 CB72                                  l5945 C19C  
                                l5881 D8AA                                  l4897 F064  
                                l4889 F00A                                  l5873 FD06  
                                l5865 FCD0                                  l5857 FC90  
                                l5849 FC5A                                  l5793 FA5A  
                                l5785 FA2C                                  l5777 FA06  
                                l5769 F9DE                                  l5697 F58E  
                                l5689 F558                                  l5937 D25C  
                                l5929 D206                                  l5961 E7E8  
                                l5953 E79E                                  l6497 DCF6  
                                l6489 DC70                                  l4995 C272  
                                l4979 CB66                                  l5947 C1A0  
                                l5891 D91C                                  l5883 D8BE  
                                l4899 F074                                  l5875 FD0C  
                                l5867 FCE2                                  l5859 FC96  
                                l5779 FA12                                  l5787 FA32  
                                l5795 FA60                                  l5699 F5A0  
                                l5939 D286                                  l5971 E884  
                                l5963 E80E                                  l5955 E7C4  
                                l6499 DCFC                                  l5949 C1FE  
                                l4997 C276                                  l4989 C122  
                                l5893 D920                                  l5885 D8C2  
                                l5869 FCEE                                  l5797 FAB8  
                                l5789 FA44                                  l5973 E8A4  
                                l5965 E816                                  l5981 E90C  
                                l5957 E7D2                                  l4999 C286  
                                l5887 D8C6                                  l5799 FAEC  
                                l5991 E9B2                                  l5983 E92E  
                                l5975 E8B2                                  l5967 E824  
                                l5959 E7E4                                  l5897 D926  
                                l5889 D8E4                                  l5993 E9C4  
                                l5985 E93E                                  l5969 E84A  
                                l5899 D93C                                  l5995 E9DC  
                                l5987 E970                                  l5979 E8FA  
                                l5997 E9EA                                  l5989 E980  
                                l5999 EA1A                                  STR_1 FFFC  
                                STR_2 FFF5                                  STR_3 FFE0  
                                STR_4 FFE0                                  STR_5 FFE0  
                                STR_6 FFAF                                  STR_7 FFD7  
                                STR_8 FFCC                                  STR_9 FFC1  
                                _LATA 000F89                                  _LATB 000F8A  
                                _LATC 000F8B                                  u4000 E172  
                                u4001 E16E                                  u4010 E194  
                                u4011 E190                                  u4100 E2A0  
                                u4020 E1BE                                  u3300 CF72  
                                u4101 E29C                                  u4021 E1BA  
                                u3301 CF6E                                  u4110 E2BA  
                                u4030 E1E2                                  u3310 CCE4  
                                u4111 E2B6                                  u4031 E1DE  
                                u3311 CCE0                                  u4120 E302  
                                u4040 E1F8                                  u4200 E412  
                                u3400 D118                                  u5000 F1E6  
                                u4121 E2FE                                  u4041 E1F4  
                                u4201 E40E                                  u3401 D114  
                                u4130 E332                                  u4050 E216  
                                u4210 E448                                  u3250 CA06  
                                u3410 D12A                                  u5010 F1FE  
                                u4131 E32E                                  u4051 E212  
                                u4211 E444                                  u3251 CA02  
                                u3411 D126                                  u5011 F1FA  
                                u4140 E360                                  u4060 E236  
                                u4300 E6D0                                  u4220 E458  
                                u3260 C1EA                                  u3500 EC94  
                                u3420 D152                                  u5100 F494  
                                u5020 F28A                                  u4141 E35C  
                                u4061 E232                                  u4301 E6CC  
                                u4221 E454                                  u3261 C1E6  
                                u3501 EC90                                  u3421 D14E  
                                u5101 F490                                  u5021 F286  
                                u4070 E248                                  u4310 E718  
                                u4230 E5D2                                  u4150 E38E  
                                u3270 C106                                  u3350 C0CE  
                                u3510 ECAA                                  u3430 D188  
                                u5110 F4B6                                  u5030 F2B8  
                                u4071 E244                                  u4311 E714  
                                u4151 E38A                                  u3271 C100  
                                u3351 C0CA                                  u3511 ECA6  
                                u3431 D184                                  u5111 F4B2  
                                u5031 F2B2                                  u4080 E276  
                                u4320 E746                                  u4240 E62C  
                                u4160 E3A0                                  u3280 CECC  
                                u3328 CD12                                  u3360 C926  
                                u3440 C182                                  u4400 CE1A  
                                u3600 EDE4                                  u3520 ECBC  
                                u5200 F5AE                                  u5120 F4DC  
                                u5040 F2BA                                  u4081 E272  
                                u4321 E742                                  u4241 E628  
                                u4161 E39C                                  u3281 CEC8  
                                u3329 CD24                                  u3361 C922  
                                u3441 C17E                                  u4401 CE16  
                                u3601 EDE0                                  u3521 ECB8  
                                u5201 F5AA                                  u5121 F4D8  
                                u4090 E28C                                  u4330 E780  
                                u4250 E64C                                  u4170 E3B0  
                                u3338 CA9C                                  u3370 C93A  
                                u3450 C516                                  u4410 CE34  
                                u3610 EE04                                  u3530 ECCC  
                                u5210 F5D8                                  u5130 F4F2  
                                u5050 F2D2                                  u4091 E288  
                                u4331 E77C                                  u4251 E648  
                                u4235 E5C8                                  u4171 E3AC  
                                u3339 CAAE                                  u3371 C936  
                                u3451 C512                                  u4411 CE30  
                                u3611 EE00                                  u3531 ECC8  
                                u5211 F5D4                                  u5131 F4EE  
                                u5051 F2CE                                  u4260 E65E  
                                u4180 E3F0                                  u3276 C108  
                                u3348 C8D6                                  u3460 C52C  
                                u4340 CF8E                                  u4420 CE4E  
                                u4500 D70C                                  u3700 EF44  
                                u3620 EE12                                  u3540 ED08  
                                u5300 F9A4                                  u5220 F720  
                                u5140 F50E                                  u5060 F356  
                                u4261 E65A                                  u4181 E3EC  
                                u3349 C8E8                                  u3461 C528  
                                u4341 CF8A                                  u4421 CE4A  
                                u4501 D708                                  u3701 EF40  
                                u3621 EE0E                                  u3541 ED04  
                                u5301 F9A0                                  u5221 F71C  
                                u5141 F50A                                  u5061 F352  
                                u4270 E68C                                  u4190 E402  
                                u3390 C172                                  u4350 CFA8  
                                u4430 CE6C                                  u4510 D72A  
                                u3710 EF70                                  u3630 EE22  
                                u3550 ED16                                  u3470 EC30  
                                u5310 F9B6                                  u5230 F786  
                                u5150 F544                                  u5070 F3EA  
                                u4271 E688                                  u4191 E3FE  
                                u3391 C16E                                  u4351 CFA4  
                                u4431 CE68                                  u4511 D726  
                                u3711 EF6C                                  u3631 EE1E  
                                u3551 ED12                                  u3471 EC2C  
                                u5311 F9B2                                  u5231 F782  
                                u5151 F540                                  u5071 F3E6  
                                u4280 E6A2                                  u4360 CFCE  
                                u4440 CE82                                  u4520 D74A  
                                u3800 F052                                  u3720 EF80  
                                u3640 EE54                                  u3560 ED84  
                                u3480 EC42                                  u4600 D878  
                                u5400 FB88                                  u5320 F9C4  
                                u5240 F7CE                                  u5160 F56A  
                                u5080 F45C                                  u4281 E69E  
                                u4361 CFCA                                  u4441 CE7E  
                                u4521 D746                                  u3801 F04E  
                                u3721 EF7C                                  u3641 EE50  
                                u3561 ED80                                  u3481 EC3E  
                                u4601 D874                                  u5401 FB84  
                                u5321 F9C0                                  u5241 F7CA  
                                u5161 F566                                  u5081 F458  
                                u4290 E6B6                                  u3298 CEF6  
                                u4370 CFEC                                  u4450 CEA6  
                                u4530 D79A                                  u3810 F064  
                                u3730 EF9C                                  u3650 EE62  
                                u3570 ED9C                                  u3490 EC52  
                                u4610 D888                                  u5410 FBB6  
                                u5330 F9DE                                  u5250 F7DE  
                                u5170 F57C                                  u5090 F482  
                                u4291 E6B2                                  u3299 CF0A  
                                u4371 CFE8                                  u4451 CEA2  
                                u4531 D796                                  u3811 F060  
                                u3731 EF98                                  u3651 EE5E  
                                u3571 ED96                                  u3491 EC4E  
                                u4611 D884                                  u5411 FBB2  
                                u5331 F9DA                                  u5251 F7DA  
                                u5171 F578                                  u5091 F47E  
                                u3388 C96A                                  u3900 CAFE  
                                u5500 D938                                  u4380 D008  
                                u4460 CD8C                                  u4540 C466  
                                u3820 F074                                  u3740 EFAC  
                                u3660 EE80                                  u3580 ED9E  
                                u4620 D050                                  u5420 FC3A  
                                u5340 F9EC                                  u5260 F878  
                                u5180 F58A                                  u3389 C97C  
                                u3901 CAFA                                  u5501 D934  
                                u4381 D004                                  u4461 CD88  
                                u4541 C462                                  u3821 F070  
                                u3741 EFA8                                  u3661 EE7C  
                                u4621 D04C                                  u5421 FC36  
                                u5341 F9E8                                  u5261 F874  
                                u5181 F586                                  u3910 C286  
                                u5510 D9F4                                  u4390 D02E  
                                u4470 CDCA                                  u3830 F094  
                                u3750 EFBE                                  u3670 EEB8  
                                u3590 EDC6                                  u4550 D7BA  
                                u4710 D488                                  u4630 D072  
                                u5430 FC54                                  u5350 FA44  
                                u5270 F8C6                                  u5190 F5A0  
                                u3911 C282                                  u5511 D9EE  
                                u4391 D02A                                  u4471 CDC6  
                                u3831 F090                                  u3751 EFBA  
                                u3671 EEB4                                  u3591 EDC2  
                                u4551 D7B6                                  u4711 D482  
                                u4631 D06E                                  u5431 FC50  
                                u5351 FA40                                  u5271 F8C2  
                                u5191 F59C                                  u5600 C20C  
                                u3920 DFF4                                  u5520 D9F6  
                                u4480 CDFE                                  u3840 F0A6  
                                u3760 EFD4                                  u3680 EEFE  
                                u4560 D7EE                                  u4720 D48A  
                                u4800 DE60                                  u4640 D0C8  
                                u5440 FC6C                                  u5360 FB16  
                                u5280 F8EE                                  u5601 C208  
                                u3921 DFF0                                  u4481 CDFA  
                                u3841 F0A2                                  u3761 EFD0  
                                u3681 EEFA                                  u4705 D460  
                                u4801 DE5C                                  u4641 D0C4  
                                u5441 FC68                                  u5361 FB12  
                                u5281 F8EA                                  u5610 C222  
                                u3930 E006                                  u5530 DA0C  
                                u4490 D6CE                                  u3850 F0C2  
                                u3770 EFEA                                  u3690 EF34  
                                u4570 D81C                                  u4650 D0D8  
                                u4730 C772                                  u5450 FCCA  
                                u5370 FB32                                  u5290 F992  
                                u5611 C21E                                  u3931 E002  
                                u5531 DA08                                  u4491 D6CA  
                                u3851 F0BE                                  u3771 EFE6  
                                u3691 EF30                                  u4571 D818  
                                u4651 D0D4                                  u5451 FCC4  
                                u5371 FB2E                                  u5291 F98E  
                                u3940 E016                                  u4900 C5E6  
                                u5540 DA1E                                  u3780 EFFE  
                                u4580 D830                                  u4660 D3DE  
                                u4820 DECC                                  u3860 C586  
                                u4740 C784                                  u5460 FCCC  
                                u5380 FB44                                  u5700 E9C4  
                                u5620 E7C4                                  _RCEN 007E2B  
                                u3941 E012                                  u4901 C5E2  
                                u5541 DA1A                                  u3781 EFFA  
                                u4581 D82C                                  u4565 D7E4  
                                u4821 DEC8                                  u3861 C582  
                                u4741 C780                                  u5381 FB40  
                                u5701 E9C0                                  u5621 E7C0  
                                u3950 E05A                                  u4910 C614  
                                u3790 F018                                  u4590 D858  
                                u4670 D3FC                                  u4830 DEF0  
                                u3870 C40A                                  u4750 C7B6  
                                u5470 FCE2                                  u5390 FB52  
                                u5550 D1FA                                  u5710 EA74  
                                u5630 E80E                                  u3951 E056  
                                u4911 C610                                  u3791 F014  
                                u4591 D854                                  u4671 D3F8  
                                u4815 DE74                                  u3871 C406  
                                u4751 C7B0                                  u5471 FCDE  
                                u5391 FB4E                                  u5551 D1F6  
                                u5711 EA70                                  u5631 E80A  
                                u3960 E06C                                  u5800 CC5C  
                                u4920 C68A                                  u5480 D8E4  
                                u4680 D424                                  u4840 DF0C  
                                u4816 DE7E                                  u3880 C4B8  
                                u4760 C7B8                                  u5560 D22C  
                                u5720 EADE                                  u5640 E84A  
                                u3961 E068                                  u5801 CC58  
                                u4921 C686                                  u5481 D8E0  
                                u4681 D420                                  u4665 D3D4  
                                u4841 DF08                                  u4817 DE8E  
                                u4737 C768                                  u3881 C4B2  
                                u5561 D228                                  u5721 EAD8  
                                u5641 E846                                  u6337 DD12  
                                u3970 E07C                                  u5810 CC84  
                                u4930 C6CA                                  u5490 D91C  
                                u4690 D44E                                  u4850 DF60  
                                u3890 C4BA                                  u4770 C7CE  
                                u5570 D24A                                  u5730 EAE0  
                                u5650 E8F4                                  u3971 E078  
                                u5811 CC80                                  u4931 C6C6  
                                u5491 D918                                  u4691 D44A  
                                u4835 DEE6                                  u4771 C7CA  
                                u5571 D246                                  u5651 E8EE  
                                u6347 DD48                                  u3980 E0BC  
                                u5900 DBD6                                  u5820 DA56  
                                u4860 DF7C                                  u4780 DE10  
                                u4940 F0FE                                  u5580 D25C  
                                u5740 EAF6                                  u5660 E8F6  
                                u3981 E0B8                                  u5901 DBD2  
                                u5821 DA52                                  u4861 DF78  
                                u4941 F0FA                                  u5581 D258  
                                u5741 EAF2                                  u6357 DD7E  
                                u3990 E0FC                                  u5910 DBE4  
                                u5830 DA64                                  u4870 DFB8  
                                u4790 DE3E                                  u4950 F14E  
                                u5590 D286                                  u5750 EB94  
                                u5670 E90C                                  u3991 E0F8  
                                u5911 DBE0                                  u5831 DA60  
                                u4871 DFB4                                  u4855 DF56  
                                u4791 DE3A                                  u4951 F14A  
                                u5591 D282                                  u5751 EB90  
                                u5671 E908                                  u6367 DDB4  
                                u5840 DAC0                                  u5760 C9EA  
                                u4880 C448                                  u4960 F15C  
                                u5680 E93E                                  u5920 C8A2  
                                u5841 DABC                                  u5761 C9E6  
                                u6377 D680                                  u4881 C442  
                                u4785 DE06                                  u4961 F158  
                                u5681 E93A                                  u5921 C89E  
                                u5770 C3D4                                  u5850 DB16  
                                u5930 C378                                  u4890 C44A  
                                u4970 F16E                                  u5690 E980  
                                u5771 C3CE                                  u5851 DB12  
                                u5931 C374                                  u6387 D37E  
                                u4971 F16A                                  u5691 E97C  
                                u5860 DB60                                  u5940 C80C  
                                u4980 F1B6                                  u5861 DB5C  
                                u6397 D57E                                  u4981 F1B2  
                                u5870 DB7E                                  u5790 CC3A  
                                u5950 C836                                  u4990 F1E4  
                                u5871 DB7A                                  u5791 CC36  
                                u4991 F1DE                                  u5880 DB8E  
                                u5960 C846                                  u5785 C3D6  
                                u5881 DB8A                                  u5961 C842  
                                u5890 DB9C                                  u5891 DB98  
                                u5947 C802                                  u5957 C82C  
                                u5975 C6F6                  Oled_WriteCharacter@i 001F  
                                _RSEN 007E29                                  _WPUB 000F5B  
             ??_wr2RegCompleteHandler 000C                                  _dbuf 0174  
    __end_of_I2C_Master_RepeatedStart C010                                  _atoi D8AA  
                                _main DBF8              ?_I2C_CallbackReturnReset 000A  
                                _prec 00D2                                  _nout 00CE  
                                pad@i 0018                                  pad@p 0015  
                                fsr0h 000FEA                                  fsr1h 000FE2  
                                indf0 000FEF                                  fsr2h 000FDA  
                                fsr0l 000FE9                                  indf2 000FDF  
                                fsr1l 000FE1                                  pad@w 001A  
                                fsr2l 000FD9                      __end_of_I2C_Open CB76  
                       ___fpclassifyf D39E                                  prodh 000FF4  
                                prodl 000FF3                                  start 0000  
                     ___fldiv@new_exp 0012          fp__I2C_DO_SEND_RESTART_WRITE 0000  
                        _tolower$2338 000D                           _voltage_str 00E9  
                        ___param_bank 000000      __size_of_rdBlkRegCompleteHandler 0040  
                               ??_pad 0017                      ?_I2C_MasterClose 0001  
                  _Power_ReadRegister D2AC                       _I2C_WriteNBytes C672  
                    ?_I2C_Master_Init 000E                      ?_I2C_Master_Read 0002  
                    ?_I2C_Master_Wait 0001   __size_of_I2C_SetAddressNackCallback 0018  
                    ?_I2C_Master_Stop 0001        __size_of_OSCILLATOR_Initialize 0012  
                    ?_I2C_MasterStart 0001                         _I2C_DO_RX_ACK C048  
                    ?_I2C_MasterWrite 0001         __end_of_OSCILLATOR_Initialize C0E2  
                       ___fltol@sign1 0009                                 ?_atoi 0008  
                     __end_of___fladd F0D6                                 ?_main 0001  
                               _ACKEN 007E2C                                 _ACKDT 007E2D  
                     __end_of___fldiv E374                       __end_of___awdiv D040  
                     __end_of___flneg C488                                 _EEADR 000F74  
                               STR_10 FFE5                                 STR_11 FFED  
                               STR_20 FFF9                                 STR_14 FFE9  
                               STR_15 FFF1                                 STR_18 FFF9  
                     __end_of___awmod CEB8                       __end_of___flmul E79E  
                     __end_of___flsub C5CE                       __end_of___fltol D8AA  
                               _ASCII FDCF                       __end_of___lldiv CCB8  
                     ___awdiv@divisor 0003                       ___awdiv@counter 0005  
        __size_of_I2C_DO_RX_NACK_STOP 0008                          vfpfcnvrt@fmt 0048  
                   ??_I2C_DO_TX_EMPTY 000C                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                 ?_Power_ReadRegister 001A                                 _Power 00C2  
                   __end_of_I2C_DO_RX CD5E                     __end_of_I2C_DO_TX CF7C  
                               _flags 00D4                                 _fputc D106  
                   __end_of_I2C_Close C29E                                 _fputs C544  
                     __end_of_isdigit C450                __size_of_I2C_MasterFsm 0070  
      I2C_MasterOperation@returnValue 0011                                 atoi@n 0015  
                               pad@fp 0011                                 atoi@s 0008  
                               _power 00B6                                 _width 00D0  
                               _putch BFCE               _I2C_MasterEnableRestart BFE0  
                     __end_of_isspace C620                       __end_of_isupper C4C0  
                               pclath 000FFA                                 tablat 000FF5  
                    ?_I2C_SetCallback 0001          I2C_SetAddressNackCallback@cb 0006  
                               status 000FD8                       __end_of_sprintf C672  
                      ?___fpclassifyf 0001                       __end_of_tolower C7E6  
                   ?_I2C_DO_SEND_STOP 0001                __size_of_I2C_SetBuffer 0024  
                     __end_of_strncmp D2AC    _EUSART1_DefaultFramingErrorHandler 000000  
                ??_Power_ReadRegister 001E                    ??_I2C_DO_SEND_STOP 0001  
                       ?_Oled_Command 0001              fp__rd1RegCompleteHandler 0000  
                     __initialization C37A                          __end_of_atoi DA44  
                        __end_of_main DDC8                      ?_Oled_SelectPage 0001  
            fp__wr1RegCompleteHandler 0000     __size_of_I2C_DO_SEND_RESTART_READ 0008  
           ?_I2C_DO_SEND_RESTART_READ 0001                        ?_I2C_DO_RX_ACK 0001  
                          _Oled_Clear C34E                                ??_atoi 000A  
                              ??_main 005E               Oled_SelectPage@page_num 001A  
                   ?_I2C_MasterIsNack 0001                         __activetblptr 000003  
            Power_ReadRegister@temp_e 0022              Power_ReadRegister@temp_f 0020  
                   ?_I2C_MasterSetIrq 0001                    ??_I2C_MasterIsNack 0001  
                         Oled_Clear@i 001A                     ?_I2C_Master_Start 0001  
                   ?_I2C_Master_Write 0002                    ??_I2C_MasterSetIrq 0001  
                  ??_I2C_Master_Start 0002                    ??_I2C_Master_Write 0004  
     __end_of_I2C_CallbackReturnReset BFF0                                ?_fputc 0001  
                              ?_fputs 000A                                _EEADRH 000F75  
                              _EEDATA 000F73                                _EECON2 000F7E  
                              _ANCON0 000F5D                                _ANCON1 000F5C  
     __size_of_I2C_CallbackReturnStop 0004                      ___awdiv@dividend 0001  
       I2C_SetDataCompleteCallback@cb 0006                                ?_putch 0001  
                        ??_I2C_Poller 0010                                _TABLAT 000FF5  
                              _RCREG1 000FAE                                _RCSTA1 000FAB  
                              _OSCCON 000FD3                                _SPBRG1 000FAF  
                              _SSPADD 000FC8                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _SSPBUF 000FC9  
                              _TXREG1 000FAD                      __end_of___xxtofl DBF8  
                              _TXSTA1 000FAC                    __size_of_Oled_Data 0022  
                  __size_of_Oled_Init 009E                        ??_Oled_Command 0017  
                 _I2C_MasterGetRxData BFF4               __end_of_I2C_WriteNBytes C6CC  
            _I2C_Master_RepeatedStart C008              __end_of_Oled_WriteString C848  
                   Oled_Data@data_I2C 0018                          vfprintf@cfmt 005C  
                              ___flge D6A0                                ___fleq CD5E  
                           ??___fladd 0009                                ___wmul C224  
                           ??___fldiv 0009                         _I2C_MasterFsm C912  
                           ??___awdiv 0005                             ??___flneg 0005  
                           ??___awmod 0005                             ??___flmul 001D  
                           ??___flsub 0036                             ??___fltol 0005  
                           ??___lldiv 0009                                _efgtoa F0D6  
                              _buffer 01C4                                _floorf DDC8  
                              clear_0 C382                                clear_1 C394  
                              clear_2 C3A0                     I2C_SetCallback@cb 0001  
                    ___awdiv@quotient 0007               fp__I2C_DO_SEND_ADR_READ 0000  
                     ___awmod@divisor 0003               __size_of_I2C_MasterOpen 0022  
                              isa$std 000001               __size_of_I2C_MasterStop 0004  
                     ___awmod@counter 0005               __size_of_I2C_Initialize 0014  
                              pad@buf 0013                         _I2C_SetBuffer C1DA  
                  __end_of_I2C_Poller C174                                _strcpy C728  
                              _strlen C3E2          __end_of_I2C_MasterDisableIrq BFDC  
       __size_of_Current_ReadRegister 0102                                fputc@c 0001  
                              fputs@c 000E                   _I2C_DO_ADDRESS_NACK C8AC  
                              fputs@i 000F                                fputs@s 000A  
                           ??_isdigit 0003                  ?_I2C_MasterGetRxData 0001  
                           ?_I2C_Open 0001    __end_of_I2C_SetAddressNackCallback C13A  
          _I2C_SetAddressNackCallback C122                       ___fpclassifyf@e 0009  
                     ___fpclassifyf@u 000B                       ___fpclassifyf@x 0001  
                        __mediumconst FD2E                             ??_isspace 0003  
                              tblptrh 000FF7                             ??_isupper 0003  
                              tblptrl 000FF6                                tblptru 000FF8  
           ??_I2C_MasterEnableRestart 0001                                putch@c 0001  
                    __end_of_vfprintf C8AC                             ??_sprintf 005E  
                           ??_tolower 0009                             ??_strncmp 0007  
                          ___flge@ff1 002E                            ___flge@ff2 0032  
                     ??___fpclassifyf 0005                          ___xxtofl@arg 0011  
                        ___xxtofl@exp 0010                     _SYSTEM_Initialize C072  
                        ___xxtofl@val 0007                            ___fleq@ff1 0001  
                          ___fleq@ff2 0005                            __accesstop 0060  
             __end_of__initialization C3A6                            ___flneg@f1 0001  
                 _I2C_MasterOperation C500                    ?_SYSTEM_Initialize 0001  
                       __end_of_ASCII FFAF                         ___rparam_used 000001  
                ?_I2C_DO_ADDRESS_NACK 0001                            ___fltol@f1 0001  
        __end_of_Voltage_ReadRegister D6A0               _rdBlkRegCompleteHandler C4C0  
          fp__rdBlkRegCompleteHandler 0000                        __pcstackCOMRAM 0001  
                      ?_I2C_MasterFsm 0001                       ??_I2C_DO_RX_ACK 0001  
              _I2C_CallbackReturnStop BFE8                   ??_SYSTEM_Initialize 0001  
                       __end_of_fputc D1D0                         __end_of_fputs C588  
                       __end_of_putch BFD0                        Oled_Data@value 0017  
                         ?_Oled_Clear 0001                        ?_I2C_SetBuffer 0001  
             ?_I2C_MasterWaitForEvent 0001        __size_of_I2C_DO_SEND_ADR_WRITE 0010  
  __size_of_I2C_DO_SEND_RESTART_WRITE 0008         __end_of_I2C_DO_SEND_ADR_WRITE C0C0  
          ?_I2C_DO_SEND_RESTART_WRITE 0001                  ?_I2C_MasterOperation 0001  
               ??_I2C_MasterGetRxData 0001                            ??_I2C_Open 0001  
                   __end_of_Oled_Data C1B8                     __end_of_Oled_Init CC14  
          __end_of_I2C_MasterClearIrq BFD4                               ??_fputc 0005  
           __end_of_SYSTEM_Initialize C07C                               ??_fputs 000E  
                             ??_putch 0001                     _I2C_MasterSendAck C002  
                          __pbssBANK0 00AE                            __pbssBANK1 0100  
                       ??_I2C_DO_IDLE 0001        __size_of_rd2RegCompleteHandler 002C  
                       ??_I2C_DO_RCEN 0001         __end_of_rd2RegCompleteHandler C322  
        __end_of_I2C_MasterSendTxData C028                    ?_I2C_MasterSendAck 0001  
                   _I2C_MasterStartRx BFF0        __size_of_wr2RegCompleteHandler 002C  
               ??_I2C_DO_ADDRESS_NACK 000C         __end_of_wr2RegCompleteHandler C2CA  
                 _I2C_DO_RX_NACK_STOP C050                 _rd1RegCompleteHandler C2CA  
                  ?_I2C_MasterStartRx 0001            __end_of_I2C_MasterSendNack C002  
        Oled_WriteCharacter@character 001E                      ?_I2C_WriteNBytes 0012  
              I2C_WriteNBytes@address 0016                 _wr1RegCompleteHandler C322  
                 ??_I2C_MasterSendAck 0001              rd1RegCompleteHandler@ptr 000A  
                             ?___flge 002E                               ?___fleq 0001  
         __end_of_I2C_DO_SEND_RESTART C040                       _I2C_DO_TX_EMPTY CA6C  
                 I2C_SetBuffer@buffer 0001                               ?___wmul 0001  
                             ?_efgtoa 003A        __end_of_I2C_MasterWaitForEvent C0D0  
                 ??_I2C_MasterStartRx 0001         __size_of_I2C_DO_SEND_ADR_READ 0010  
                             ?_floorf 001A      __size_of_I2C_CallbackReturnReset 0004  
               ??_I2C_MasterOperation 0010        I2C_SetDataCompleteCallback@ptr 0008  
                             ?_strcpy 0001                               ?_strlen 0001  
            ??_I2C_DO_RX_NACK_RESTART 0001     __end_of_I2C_DO_SEND_RESTART_WRITE C038  
                ?_I2C_DO_RX_NACK_STOP 0001                             ?___xxtofl 0007  
                             _REFOCON 000F9A                  __end_of_Oled_Command C1DA  
                             _OSCCON2 000FD2                    __size_of_vfpfcnvrt 0478  
                             _TBLPTRH 000FF7                               _TBLPTRL 000FF6  
                             _TBLPTRU 000FF8             __end_of_I2C_MasterSendAck C008  
                             _OSCTUNE 000F9B                               _SPBRGH1 000F7D  
                             _SSPCON1 000FC6                               _SSPCON2 000FC5  
                             _SSPSTAT 000FC7             __end_of_I2C_MasterStartRx BFF4  
                I2C_Close@returnValue 0001          ?_I2C_SetDataCompleteCallback 0006  
                           _I2C_DO_RX CCB8                             _I2C_DO_TX CEB8  
    __end_of_I2C_DO_SEND_RESTART_READ C030          __size_of_Oled_WriteCharacter 0070  
                           _I2C_Close C272                   __size_of_Oled_Clear 002C  
           ??_rdBlkRegCompleteHandler 000C                               _Current 00C6  
                _I2C_MasterDisableIrq BFD8                       ??_I2C_MasterFsm 000E  
                             __Hparam 0000                               __Lparam 0000  
                 __end_of_I2C_DO_IDLE C088                   __end_of_I2C_DO_RCEN C094  
                     __size_of___flge 0104                       __size_of___fleq 00AA  
                             ___fladd EC16                               ___fldiv DFDA  
                             ___awdiv CF7C                               ___flneg C450  
                             ___awmod CE08                               ___flmul E374  
                             _Voltage 00CA                               ___flsub C588  
                             ___fltol D7A4                               ___lldiv CC14  
                     ??_I2C_SetBuffer 0005                       __size_of___wmul 0026  
                           ?_vfprintf 0098               I2C_SetBuffer@bufferSize 0003  
                     __size_of_efgtoa 0C58                        _I2C_MasterOpen C174  
                     __size_of_floorf 0212                               __pcinit C37A  
                      _I2C_MasterStop BFE4                        _I2C_Initialize C0E2  
                             __ramtop 0F00             __size_of_I2C_DO_SEND_STOP 0008  
                             __ptext0 DBF8                               __ptext1 C620  
                             __ptext2 C848                               __ptext3 E79E  
                             __ptext4 D1D0                               __ptext5 F0D6  
                             __ptext6 C786                               __ptext7 C488  
                             __ptext8 C728                               __ptext9 D040  
               ??_I2C_DO_RX_NACK_STOP 0001                       __size_of_strcpy 005E  
                     __size_of_strlen 0036                 _OSCILLATOR_Initialize C0D0  
                             _current 00BA                          __size_of_pad 00C6  
                             _isdigit C418                            ??___xxtofl 000B  
                    ___awmod@dividend 0001                    I2C_SetCallback@idx 0005  
            __size_of_I2C_MasterClose 0004              ??_PIN_MANAGER_Initialize 0001  
       I2C_CallbackReturnReset@funPtr 000A                               _isspace C5CE  
                  I2C_SetCallback@ptr 0003              wr1RegCompleteHandler@ptr 000A  
                             _isupper C488              __size_of_I2C_Master_Init 005C  
            __size_of_I2C_Master_Read 0036                               efgtoa@c 0040  
                             efgtoa@d 0078                               efgtoa@e 0090  
                             efgtoa@f 003C                               efgtoa@g 008C  
                             efgtoa@h 0082                               efgtoa@i 008A  
                _Voltage_ReadRegister D59E                               efgtoa@l 0086  
                             efgtoa@m 0072                               efgtoa@n 0092  
                             efgtoa@p 007C                               efgtoa@t 006C  
                             efgtoa@u 0094                               efgtoa@w 007E  
            __size_of_I2C_Master_Wait 0026              fp__I2C_DO_SEND_ADR_WRITE 0000  
            __size_of_I2C_Master_Stop 0008              __size_of_I2C_MasterStart 0004  
            __size_of_I2C_MasterWrite 0008                               atoi@neg 000E  
          __size_of_SYSTEM_Initialize 000A                               _sprintf C620  
                             _tolower C786                               _voltage 00BE  
                             _strncmp D1D0                  end_of_initialization C3A6  
                             floorf@e 0028                               floorf@m 0024  
                             floorf@u 002A                               floorf@x 001A  
          ??_I2C_Master_RepeatedStart 0002                            ?_I2C_DO_RX 0001  
                          ?_I2C_DO_TX 0001             __size_of_I2C_MasterIsNack 0014  
                             fputc@fp 0003                            ?_I2C_Close 0001  
         _EUSART1_OverrunErrorHandler 00D8                               fputs@fp 000C  
              ?_rd1RegCompleteHandler 000A               __end_of_I2C_DO_TX_EMPTY CAE8  
           __size_of_I2C_MasterSetIrq 0004                 ?_I2C_MasterDisableIrq 0001  
              ?_wr1RegCompleteHandler 000A             __size_of_I2C_Master_Start 0008  
           __size_of_I2C_Master_Write 000A                       ___lldiv@divisor 0005  
         __size_of_Power_ReadRegister 00F2                       ___lldiv@counter 000D  
            fp__rd2RegCompleteHandler 0000              __size_of_I2C_SetCallback 007A  
                   __end_of_vfpfcnvrt EC16                            efgtoa@mode 0081  
                          efgtoa@sign 007A                     ?_Oled_WriteString 0021  
                    I2C_Master_Init@c 000E                      I2C_Master_Read@a 0002  
                             postdec1 000FE5                               postdec2 000FDD  
              __end_of_I2C_MasterOpen C196              fp__wr2RegCompleteHandler 0000  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                __end_of_I2C_MasterStop BFE8  
              __end_of_I2C_Initialize C0F6                            ??_vfprintf 005C  
           fp__I2C_CallbackReturnStop 0000                    ??_Oled_WriteString 0023  
                             strcpy@d 0009                               strlen@a 0003  
                             strcpy@s 0007                               strlen@s 0001  
     __end_of_rdBlkRegCompleteHandler C500                  _I2C_MasterSendTxData C020  
                     fp__I2C_DO_RESET 0000              __size_of_Oled_SelectPage 001C  
     __size_of_I2C_DO_RX_NACK_RESTART 0008                           ___fladd@grs 0010  
               ?_Voltage_ReadRegister 002E                         ___xxtofl@sign 000F  
         ?_I2C_SetAddressNackCallback 0006            __size_of_I2C_MasterSendAck 0006  
                         ___fldiv@grs 0014                           ___fldiv@rem 000D  
                   __size_of_I2C_Open 008E            __size_of_I2C_MasterStartRx 0004  
                         ___flmul@grs 0022                           _I2C_DO_IDLE C07C  
          Oled_WriteString@characters 0021                           _I2C_DO_RCEN C088  
        __end_of_Current_ReadRegister D59E            rdBlkRegCompleteHandler@ptr 000A  
               Oled_SelectPage@Result 001B               ?_I2C_CallbackReturnStop 000A  
            _I2C_DO_SEND_RESTART_READ C028           fp__I2C_DO_SEND_RESTART_READ 0000  
        I2C_CallbackReturnStop@funPtr 000A                       ?_I2C_MasterOpen 0001  
                     ?_I2C_MasterStop 0001                       ?_I2C_Initialize 0001  
             _I2C_CallbackReturnReset BFEC            fp__I2C_CallbackReturnReset 0000  
                      __end_of___flge D7A4                        __end_of___fleq CE08  
                         vfpfcnvrt@ap 004A                           vfpfcnvrt@ct 0058  
                         vfpfcnvrt@fp 0046                        __end_of___wmul C24A  
__size_of_I2C_SetDataCompleteCallback 0018                          ??_Oled_Clear 001A  
                      __end_of_efgtoa FD2E                 __size_of_Oled_Command 0022  
                      __end_of_floorf DFDA                 ?_I2C_MasterSendTxData 0001  
              ?_OSCILLATOR_Initialize 0001                            floorf@F527 00AE  
         ??_I2C_DO_SEND_RESTART_WRITE 0001                        __end_of_strcpy C786  
                      __end_of_strlen C418                   start_initialization C37A  
                         __end_of_IPL FDAF       __size_of_PIN_MANAGER_Initialize 0028  
                         __end_of_pad D106                         ?_I2C_DO_RESET 0001  
                           _Oled_Data C196                             _Oled_Init CB76  
                         ??_I2C_DO_RX 000C                           ??_I2C_DO_TX 000C  
                   ??_I2C_MasterClose 0001                     ??_I2C_Master_Init 0012  
                   ??_I2C_Master_Read 0004                     ??_I2C_Master_Wait 0001  
              ??_I2C_MasterDisableIrq 0001                           ??_I2C_Close 0001  
                   ??_I2C_Master_Stop 0002                     ??_I2C_MasterStart 0001  
               __end_of___fpclassifyf D49C                     ??_I2C_MasterWrite 0012  
      __end_of_I2C_CallbackReturnStop BFEC                _I2C_DO_RX_NACK_RESTART C058  
                    ?_I2C_DO_TX_EMPTY 0001                    __end_of_Oled_Clear C37A  
                  _I2C_MasterClearIrq BFD0                          _Oled_Command C1B8  
                         vfprintf@fmt 009A                              ??___flge 0036  
                            ??___fleq 0009                              ??___wmul 0005  
                 ?_I2C_MasterClearIrq 0001                              ??_efgtoa 0041  
         __end_of_I2C_MasterGetRxData BFF8                              ??_floorf 001E  
               __end_of_I2C_DO_RX_ACK C050                      _I2C_DO_SEND_STOP C040  
                   ??_I2C_SetCallback 0005                   _Oled_WriteCharacter C982  
                 I2C_Open@returnValue 0002                              ??_strcpy 0005  
                  _I2C_MasterSendNack BFFC                              ??_strlen 0003  
            ?_I2C_MasterEnableRestart 0001                             ___fladd@a 0005  
                           ___fladd@b 0001                     _i2c_fsmStateTable FDAF  
              fp__I2C_DO_SEND_RESTART 0000                ??_Voltage_ReadRegister 0032  
                           ___fldiv@a 0005                             ___fldiv@b 0001  
                         __pbssBIGRAM 01C4                 _I2C_DO_SEND_ADR_WRITE C0B0  
                           ___flmul@a 0019                             ___flmul@b 0015  
                           ___flsub@a 0032                             ___flsub@b 002E  
                       __pcstackBANK0 0060                        ??_I2C_DO_RESET 0001  
                 ?_I2C_MasterSendNack 0001                     __size_of___xxtofl 01B4  
        __end_of_I2C_DO_SEND_ADR_READ C0B0                  ??_I2C_MasterClearIrq 0001  
                          ?_Oled_Data 0001           __end_of_I2C_DO_ADDRESS_NACK C912  
                   ??_Oled_SelectPage 001A                            ?_Oled_Init 0001  
                    _I2C_MasterIsNack C0F6                  ?_Oled_WriteCharacter 0001  
           _I2C_DO_SEND_RESTART_WRITE C030                      _I2C_MasterSetIrq BFF8  
                           _atoi$2244 0010                             _atoi$2245 0014  
                           _atoi$2246 0012                      _I2C_Master_Start C010  
               _rd2RegCompleteHandler C2F6                      _I2C_Master_Write C068  
                         _efgtoa$2180 0060                           _efgtoa$2181 0062  
                         _efgtoa$2190 0066                           _efgtoa$2191 0068  
                         _efgtoa$2192 006A                           _efgtoa$2186 0064  
                      _SSD1306_Buffer 05C4                _PIN_MANAGER_Initialize C24A  
               _wr2RegCompleteHandler C29E             ??_I2C_CallbackReturnReset 000C  
         __end_of_I2C_MasterOperation C544                  ??_I2C_MasterSendNack 0001  
            rd2RegCompleteHandler@ptr 000A                         __pmediumconst FD2E  
                            ?___fladd 0001                              ?___fldiv 0001  
                            ?___awdiv 0001                             __ptext100 C3AC  
                           __ptext101 C1FE                             __ptext102 0000  
                            ?___flneg 0001                              ?___awmod 0001  
                            ?___flmul 0015                              ?___flsub 002E  
                            ?___fltol 0001                              ?___lldiv 0001  
              ??_I2C_MasterSendTxData 0001             __end_of_i2c_fsmStateTable FDCF  
            __size_of_I2C_WriteNBytes 005A                     __size_of_vfprintf 0064  
                        fp__I2C_DO_RX 0000                          fp__I2C_DO_TX 0000  
        __size_of_I2C_DO_SEND_RESTART 0008                  _Current_ReadRegister D49C  
                            _BAUDCON1 000FA7    _EUSART1_DefaultOverrunErrorHandler 000000  
                            ?_isdigit 0001               I2C_MasterOperation@read 0010  
                            _I2C_Open CAE8                  _EUSART1_ErrorHandler 00D6  
                            ?_isspace 0001                              ?_isupper 0001  
                            ?_sprintf 009E                              ?_tolower 0007  
                      __size_of_fputc 00CA                        __size_of_fputs 0044  
             ??_rd1RegCompleteHandler 000C                              ?_strncmp 0001  
                      __size_of_putch 0002                 ??_Oled_WriteCharacter 001A  
             ??_wr1RegCompleteHandler 000C            Voltage_ReadRegister@temp_a 0036  
          Voltage_ReadRegister@temp_b 0034                        ___wmul@product 0005  
                            _PIE1bits 000F9D                              _PIR1bits 000F9E  
                            _PIR2bits 000FA1                              _PIR4bits 000FB7  
               __end_of_I2C_MasterFsm C982           __end_of_I2C_DO_RX_NACK_STOP C058  
     __end_of_I2C_MasterEnableRestart BFE4                        fp__I2C_DO_IDLE 0000  
                      fp__I2C_DO_RCEN 0000                             _vfpfcnvrt E79E  
               __end_of_I2C_SetBuffer C1FE                             _power_str 00DD  
                   ___wmul@multiplier 0001                 ?_Current_ReadRegister 002E  
              ?_I2C_DO_SEND_ADR_WRITE 0001              I2C_MasterSendTxData@data 0001  
           __size_of_Oled_WriteString 0062              wr2RegCompleteHandler@ptr 000A  
                        _isspace$2275 0007                            vfpfcnvrt@c 005B  
                          vfpfcnvrt@f 0054                   I2C_Master_Read@temp 0004  
                         ??_Oled_Data 0017                           _INTCON2bits 000FF1  
                         ??_Oled_Init 001A            ??_I2C_DO_SEND_RESTART_READ 0001  
            ?_rdBlkRegCompleteHandler 000A                            _I2C_Poller C156  
                          _I2C_Status 0150                          ?_I2C_DO_IDLE 0001  
                        ?_I2C_DO_RCEN 0001            __end_of_Power_ReadRegister D39E  
              ?_rd2RegCompleteHandler 000A                            _EECON1bits 000F7F  
                 I2C_WriteNBytes@data 0012                      ??_I2C_MasterOpen 0001  
              ?_wr2RegCompleteHandler 000A                      ??_I2C_MasterStop 0001  
            ??_I2C_MasterWaitForEvent 0001                      ??_I2C_Initialize 0001  
           fp__I2C_DO_RX_NACK_RESTART 0000                              __Hrparam 0000  
                          vfprintf@ap 009C                              __Lrparam 0000  
                          vfprintf@fp 0098                  __end_of_I2C_DO_RESET C0A0  
             ??_OSCILLATOR_Initialize 0001     __size_of_I2C_Master_RepeatedStart 0008  
                    __size_of___fladd 04C0                      __size_of___fldiv 039A  
                    __size_of___awdiv 00C4                  _I2C_DO_SEND_ADR_READ C0A0  
                    __size_of___flneg 0038                      __size_of___awmod 00B0  
                    __size_of___flmul 042A             ?_I2C_Master_RepeatedStart 0001  
                    __size_of___flsub 0046                      __size_of___fltol 0106  
                    __size_of___lldiv 00A4                            ?_vfpfcnvrt 0046  
                  ___fpclassifyf@F465 00B2                       _I2C_MasterClose BFD4  
         _EUSART1_DefaultErrorHandler 000000         I2C_SetAddressNackCallback@ptr 0008  
                          sprintf@fmt 00A0                       I2C_Open@address 0001  
                     _I2C_Master_Init C6CC                       _I2C_Master_Read C3AC  
                            ___xxtofl DA44                       _I2C_Master_Wait C1FE  
                         _current_str 00E3                   fp__I2C_DO_SEND_STOP 0000  
                     _I2C_Master_Stop C018                       _I2C_MasterStart BFDC  
                     _I2C_MasterWrite C060                      __size_of_isdigit 0038  
                   ??_I2C_WriteNBytes 0016                      __size_of_isspace 0052  
                            __ptext10 C3E2                              __ptext11 C544  
                            __ptext20 D6A0                              __ptext12 D106  
                            __ptext21 CD5E                              __ptext13 BFCE  
                            __ptext30 C0D0                              __ptext22 CE08  
                            __ptext14 DDC8                              __ptext31 D2AC  
                            __ptext23 CF7C                              __ptext15 D39E  
                            __ptext40 C672                              __ptext32 C224  
                            __ptext24 D8AA                              __ptext16 D7A4  
                            __ptext41 C122                              __ptext33 C7E6  
                            __ptext25 C5CE                              __ptext17 C588  
                            __ptext50 C094                              __ptext42 CAE8  
                            __ptext34 C982                              __ptext26 C418  
                            __ptext18 EC16                              __ptext51 C058  
                            __ptext43 C174                              __ptext35 C13A  
                            __ptext27 D59E                              __ptext19 C450  
                            __ptext60 CEB8                              __ptext52 C050  
                            __ptext44 C060                              __ptext36 CB76  
                            __ptext28 C072                              __ptext61 C0B0  
                            __ptext53 C048                              __ptext45 C500  
                            __ptext37 C1B8                              __ptext29 C24A  
                            __ptext70 BFFC                              __ptext62 C0A0  
                            __ptext54 C040                              __ptext46 C156  
                            __ptext38 C34E                              __ptext71 BFF0  
                            __ptext63 C07C                              __ptext55 C038  
                            __ptext47 C0C0                              __ptext39 C196  
                            __ptext80 C9F2                              __ptext72 BFEC  
                            __ptext64 CA6C                              __ptext56 C030  
                            __ptext48 C912                              __ptext81 C1DA  
                            __ptext73 BFE8                              __ptext65 BFF8  
                            __ptext57 C028                              __ptext49 C8AC  
                            __ptext90 CC14                              __ptext82 BFE4  
                            __ptext74 C4C0                              __ptext66 C0F6  
                            __ptext58 C088                              __ptext91 C0E2  
                            __ptext83 BFE0                              __ptext75 C322  
                            __ptext67 C020                              __ptext59 CCB8  
                            __ptext92 D49C                              __ptext84 BFDC  
                            __ptext76 C2F6                              __ptext68 C002  
                            __ptext93 DA44                              __ptext85 C272  
                            __ptext77 C2CA                              __ptext69 BFF4  
                            __ptext94 E374                              __ptext86 BFD8  
                            __ptext78 C29E                              __ptext95 DFDA  
                            __ptext87 BFD4                              __ptext79 C10A  
                            __ptext96 C068                              __ptext88 BFD0  
                            __ptext97 C018                              __ptext89 C6CC  
                            __ptext98 C010                              __ptext99 C008  
                    __size_of_isupper 0038   __end_of_I2C_SetDataCompleteCallback C122  
         _I2C_SetDataCompleteCallback C10A               ?_I2C_DO_RX_NACK_RESTART 0001  
                    __size_of_sprintf 0052                      __size_of_tolower 0060  
                          strcpy@dest 0001                      __size_of_strncmp 00DC  
            __end_of_I2C_DO_SEND_STOP C048                         __size_of_atoi 019A  
                       __size_of_main 01D0                  Oled_Command@data_I2C 0018  
                     _I2C_SetCallback C9F2         ??_I2C_SetDataCompleteCallback 000A  
                            efgtoa@fp 003A                              efgtoa@ne 0070  
                            efgtoa@pp 006E                              efgtoa@ou 0074  
                            isa$xinst 000000                 ?_I2C_DO_SEND_ADR_READ 0001  
                            _vfprintf C848                ??_Current_ReadRegister 0032  
         _EUSART1_FramingErrorHandler 00DA              __end_of_I2C_MasterIsNack C10A  
                     _Oled_SelectPage C13A              __end_of_I2C_MasterSetIrq BFFC  
                      _vfpfcnvrt$2210 0052              __end_of_I2C_Master_Start C018  
                      _vfpfcnvrt$2206 0050              __end_of_I2C_Master_Write C072  
                          _INTCONbits 000FF2                    I2C_WriteNBytes@len 0014  
                            isdigit@c 0001        __end_of_I2C_DO_RX_NACK_RESTART C060  
                         ?_I2C_Poller 0001                             sprintf@ap 00A6  
    __size_of_I2C_MasterEnableRestart 0004                              isspace@c 0001  
                    ___lldiv@dividend 0001               ?_PIN_MANAGER_Initialize 0001  
                 _I2C_DO_SEND_RESTART C038                             strcpy@src 0003  
                          _RCSTA1bits 000FAB         __size_of_I2C_MasterDisableIrq 0004  
                            isupper@c 0001                fp__I2C_DO_ADDRESS_NACK 0000  
                           strncmp@_l 0001                             strncmp@_r 0003  
     __size_of_I2C_MasterWaitForEvent 0010                   Oled_Command@command 0017  
                         efgtoa@nmode 0080               __end_of_I2C_MasterClose BFD8  
            __size_of_I2C_DO_TX_EMPTY 007C                    fp__I2C_DO_TX_EMPTY 0000  
             __end_of_I2C_Master_Init C728               __end_of_I2C_Master_Read C3E2  
             __end_of_I2C_Master_Wait C224               __end_of_I2C_Master_Stop C020  
                         ??_vfpfcnvrt 004C               __end_of_I2C_MasterStart BFE0  
             __end_of_I2C_MasterWrite C068                    _eusart1RxLastError 00DC  
                ?_I2C_DO_SEND_RESTART 0001                              sprintf@f 00A8  
                            tolower@c 0007                              sprintf@s 009E  
              __size_of___fpclassifyf 00FE                      ___lldiv@quotient 0009  
                   I2C_Master_Write@d 0002          __size_of_I2C_MasterGetRxData 0004  
                            strncmp@l 0008                              strncmp@n 0005  
                            strncmp@r 000A                      _Oled_WriteString C7E6  
       __size_of_Voltage_ReadRegister 0102                           _SSPCON1bits 000FC6  
                         _SSPCON2bits 000FC5                         ___fladd@signs 000D  
         __size_of_I2C_MasterClearIrq 0004               __end_of_I2C_SetCallback CA6C  
      __end_of_PIN_MANAGER_Initialize C272        __size_of_rd1RegCompleteHandler 002C  
       __end_of_rd1RegCompleteHandler C2F6                __size_of_I2C_DO_RX_ACK 0008  
                    fp__I2C_DO_RX_ACK 0000                          ___fladd@aexp 000E  
                        ___fladd@bexp 000F        __size_of_wr1RegCompleteHandler 002C  
               __size_of_I2C_DO_RESET 000C         __end_of_wr1RegCompleteHandler C34E  
        __size_of_I2C_DO_ADDRESS_NACK 0066                  __size_of_I2C_DO_IDLE 000C  
                __size_of_I2C_DO_RCEN 000C                    __size_of_I2C_DO_RX 00A6  
                  __size_of_I2C_DO_TX 00C4  
