

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Aug 10 18:23:59 2021

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F26K80
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=3
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=3
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=3
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    27                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    28                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    31                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text27,global,reloc=2,class=CODE,delta=1
    39                           	psect	text28,global,reloc=2,class=CODE,delta=1
    40                           	psect	text29,global,reloc=2,class=CODE,delta=1
    41                           	psect	text30,global,reloc=2,class=CODE,delta=1
    42                           	psect	text31,global,reloc=2,class=CODE,delta=1
    43                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text33,global,reloc=2,class=CODE,delta=1
    45                           	psect	text34,global,reloc=2,class=CODE,delta=1
    46                           	psect	text35,global,reloc=2,class=CODE,delta=1
    47                           	psect	text36,global,reloc=2,class=CODE,delta=1
    48                           	psect	text37,global,reloc=2,class=CODE,delta=1
    49                           	psect	text38,global,reloc=2,class=CODE,delta=1
    50                           	psect	text39,global,reloc=2,class=CODE,delta=1
    51                           	psect	text40,global,reloc=2,class=CODE,delta=1
    52                           	psect	text41,global,reloc=2,class=CODE,delta=1
    53                           	psect	text42,global,reloc=2,class=CODE,delta=1
    54                           	psect	text43,global,reloc=2,class=CODE,delta=1,inline
    55                           	psect	text44,global,reloc=2,class=CODE,delta=1
    56                           	psect	text45,global,reloc=2,class=CODE,delta=1
    57                           	psect	text46,global,reloc=2,class=CODE,delta=1
    58                           	psect	text47,global,reloc=2,class=CODE,delta=1,inline
    59                           	psect	text48,global,reloc=2,class=CODE,delta=1,inline
    60                           	psect	text49,global,reloc=2,class=CODE,delta=1
    61                           	psect	text50,global,reloc=2,class=CODE,delta=1
    62                           	psect	text51,global,reloc=2,class=CODE,delta=1
    63                           	psect	text52,global,reloc=2,class=CODE,delta=1
    64                           	psect	text53,global,reloc=2,class=CODE,delta=1
    65                           	psect	text54,global,reloc=2,class=CODE,delta=1
    66                           	psect	text55,global,reloc=2,class=CODE,delta=1
    67                           	psect	text56,global,reloc=2,class=CODE,delta=1
    68                           	psect	text57,global,reloc=2,class=CODE,delta=1
    69                           	psect	text58,global,reloc=2,class=CODE,delta=1
    70                           	psect	text59,global,reloc=2,class=CODE,delta=1
    71                           	psect	text60,global,reloc=2,class=CODE,delta=1
    72                           	psect	text61,global,reloc=2,class=CODE,delta=1
    73                           	psect	text62,global,reloc=2,class=CODE,delta=1
    74                           	psect	text63,global,reloc=2,class=CODE,delta=1
    75                           	psect	text64,global,reloc=2,class=CODE,delta=1
    76                           	psect	text65,global,reloc=2,class=CODE,delta=1,inline
    77                           	psect	text66,global,reloc=2,class=CODE,delta=1,inline
    78                           	psect	text67,global,reloc=2,class=CODE,delta=1,inline
    79                           	psect	text68,global,reloc=2,class=CODE,delta=1,inline
    80                           	psect	text69,global,reloc=2,class=CODE,delta=1,inline
    81                           	psect	text70,global,reloc=2,class=CODE,delta=1,inline
    82                           	psect	text71,global,reloc=2,class=CODE,delta=1,inline
    83                           	psect	text72,global,reloc=2,class=CODE,delta=1
    84                           	psect	text73,global,reloc=2,class=CODE,delta=1
    85                           	psect	text74,global,reloc=2,class=CODE,delta=1
    86                           	psect	text75,global,reloc=2,class=CODE,delta=1
    87                           	psect	text76,global,reloc=2,class=CODE,delta=1
    88                           	psect	text77,global,reloc=2,class=CODE,delta=1
    89                           	psect	text78,global,reloc=2,class=CODE,delta=1
    90                           	psect	text79,global,reloc=2,class=CODE,delta=1
    91                           	psect	text80,global,reloc=2,class=CODE,delta=1
    92                           	psect	text81,global,reloc=2,class=CODE,delta=1
    93                           	psect	text82,global,reloc=2,class=CODE,delta=1,inline
    94                           	psect	text83,global,reloc=2,class=CODE,delta=1,inline
    95                           	psect	text84,global,reloc=2,class=CODE,delta=1,inline
    96                           	psect	text85,global,reloc=2,class=CODE,delta=1
    97                           	psect	text86,global,reloc=2,class=CODE,delta=1,inline
    98                           	psect	text87,global,reloc=2,class=CODE,delta=1,inline
    99                           	psect	text88,global,reloc=2,class=CODE,delta=1,inline
   100                           	psect	text89,global,reloc=2,class=CODE,delta=1
   101                           	psect	text90,global,reloc=2,class=CODE,delta=1,group=2
   102                           	psect	text91,global,reloc=2,class=CODE,delta=1
   103                           	psect	text92,global,reloc=2,class=CODE,delta=1
   104                           	psect	text93,global,reloc=2,class=CODE,delta=1,group=2
   105                           	psect	text94,global,reloc=2,class=CODE,delta=1,group=2
   106                           	psect	text95,global,reloc=2,class=CODE,delta=1,group=2
   107                           	psect	text96,global,reloc=2,class=CODE,delta=1
   108                           	psect	text97,global,reloc=2,class=CODE,delta=1
   109                           	psect	text98,global,reloc=2,class=CODE,delta=1
   110                           	psect	text99,global,reloc=2,class=CODE,delta=1
   111                           	psect	text100,global,reloc=2,class=CODE,delta=1
   112                           	psect	text101,global,reloc=2,class=CODE,delta=1
   113                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   114                           	psect	text102,global,reloc=2,class=CODE,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   116                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
   117                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
   118  0000                     
   119                           ; Version 2.20
   120                           ; Generated 05/05/2020 GMT
   121                           ; 
   122                           ; Copyright © 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   123                           ; All rights reserved.
   124                           ; 
   125                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   126                           ; 
   127                           ; Redistribution and use in source and binary forms, with or without modification, are
   128                           ; permitted provided that the following conditions are met:
   129                           ; 
   130                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   131                           ;        conditions and the following disclaimer.
   132                           ; 
   133                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   134                           ;        of conditions and the following disclaimer in the documentation and/or other
   135                           ;        materials provided with the distribution.
   136                           ; 
   137                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   138                           ;        software without specific prior written permission.
   139                           ; 
   140                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   141                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   142                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   143                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   144                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   145                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   146                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   147                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   148                           ; 
   149                           ; 
   150                           ; Code-generator required, PIC18F26K80 Definitions
   151                           ; 
   152                           ; SFR Addresses
   153  0000                     
   154 ;; Function _EUSART1_DefaultFramingErrorHandler is unused but had its address taken
   155  0000                     
   156 ;; Function _EUSART1_DefaultOverrunErrorHandler is unused but had its address taken
   157  0000                     
   158 ;; Function _EUSART1_DefaultErrorHandler is unused but had its address taken
   159  0000                     
   160                           	psect	mediumconst
   161  00FDC0                     __pmediumconst:
   162                           	callstack 0
   163  00FDC0  00                 	db	0
   164  00FDC1                     _i2c_fsmStateTable:
   165                           	callstack 0
   166  00FDC1  7E                 	db	low _I2C_DO_IDLE
   167  00FDC2  C1                 	db	high _I2C_DO_IDLE
   168  00FDC3  A2                 	db	low _I2C_DO_SEND_ADR_READ
   169  00FDC4  C1                 	db	high _I2C_DO_SEND_ADR_READ
   170  00FDC5  B2                 	db	low _I2C_DO_SEND_ADR_WRITE
   171  00FDC6  C1                 	db	high _I2C_DO_SEND_ADR_WRITE
   172  00FDC7  A6                 	db	low _I2C_DO_TX
   173  00FDC8  CF                 	db	high _I2C_DO_TX
   174  00FDC9  A6                 	db	low _I2C_DO_RX
   175  00FDCA  CD                 	db	high _I2C_DO_RX
   176  00FDCB  8A                 	db	low _I2C_DO_RCEN
   177  00FDCC  C1                 	db	high _I2C_DO_RCEN
   178  00FDCD  5A                 	db	low _I2C_DO_TX_EMPTY
   179  00FDCE  CB                 	db	high _I2C_DO_TX_EMPTY
   180  00FDCF  2A                 	db	low _I2C_DO_SEND_RESTART_READ
   181  00FDD0  C1                 	db	high _I2C_DO_SEND_RESTART_READ
   182  00FDD1  32                 	db	low _I2C_DO_SEND_RESTART_WRITE
   183  00FDD2  C1                 	db	high _I2C_DO_SEND_RESTART_WRITE
   184  00FDD3  3A                 	db	low _I2C_DO_SEND_RESTART
   185  00FDD4  C1                 	db	high _I2C_DO_SEND_RESTART
   186  00FDD5  42                 	db	low _I2C_DO_SEND_STOP
   187  00FDD6  C1                 	db	high _I2C_DO_SEND_STOP
   188  00FDD7  4A                 	db	low _I2C_DO_RX_ACK
   189  00FDD8  C1                 	db	high _I2C_DO_RX_ACK
   190  00FDD9  52                 	db	low _I2C_DO_RX_NACK_STOP
   191  00FDDA  C1                 	db	high _I2C_DO_RX_NACK_STOP
   192  00FDDB  5A                 	db	low _I2C_DO_RX_NACK_RESTART
   193  00FDDC  C1                 	db	high _I2C_DO_RX_NACK_RESTART
   194  00FDDD  96                 	db	low _I2C_DO_RESET
   195  00FDDE  C1                 	db	high _I2C_DO_RESET
   196  00FDDF  9A                 	db	low _I2C_DO_ADDRESS_NACK
   197  00FDE0  C9                 	db	high _I2C_DO_ADDRESS_NACK
   198  00FDE1                     __end_of_i2c_fsmStateTable:
   199                           	callstack 0
   200  00FDE1                     _ASCII:
   201                           	callstack 0
   202  00FDE1  00                 	db	0
   203  00FDE2  00                 	db	0
   204  00FDE3  00                 	db	0
   205  00FDE4  00                 	db	0
   206  00FDE5  00                 	db	0
   207  00FDE6  00                 	db	0
   208  00FDE7  00                 	db	0
   209  00FDE8  5F                 	db	95
   210  00FDE9  00                 	db	0
   211  00FDEA  00                 	db	0
   212  00FDEB  00                 	db	0
   213  00FDEC  07                 	db	7
   214  00FDED  00                 	db	0
   215  00FDEE  07                 	db	7
   216  00FDEF  00                 	db	0
   217  00FDF0  14                 	db	20
   218  00FDF1  7F                 	db	127
   219  00FDF2  14                 	db	20
   220  00FDF3  7F                 	db	127
   221  00FDF4  14                 	db	20
   222  00FDF5  24                 	db	36
   223  00FDF6  2A                 	db	42
   224  00FDF7  7F                 	db	127
   225  00FDF8  2A                 	db	42
   226  00FDF9  12                 	db	18
   227  00FDFA  23                 	db	35
   228  00FDFB  13                 	db	19
   229  00FDFC  08                 	db	8
   230  00FDFD  64                 	db	100
   231  00FDFE  62                 	db	98
   232  00FDFF  36                 	db	54
   233  00FE00  49                 	db	73
   234  00FE01  55                 	db	85
   235  00FE02  22                 	db	34
   236  00FE03  50                 	db	80
   237  00FE04  00                 	db	0
   238  00FE05  05                 	db	5
   239  00FE06  03                 	db	3
   240  00FE07  00                 	db	0
   241  00FE08  00                 	db	0
   242  00FE09  00                 	db	0
   243  00FE0A  1C                 	db	28
   244  00FE0B  22                 	db	34
   245  00FE0C  41                 	db	65
   246  00FE0D  00                 	db	0
   247  00FE0E  00                 	db	0
   248  00FE0F  41                 	db	65
   249  00FE10  22                 	db	34
   250  00FE11  1C                 	db	28
   251  00FE12  00                 	db	0
   252  00FE13  14                 	db	20
   253  00FE14  08                 	db	8
   254  00FE15  3E                 	db	62
   255  00FE16  08                 	db	8
   256  00FE17  14                 	db	20
   257  00FE18  08                 	db	8
   258  00FE19  08                 	db	8
   259  00FE1A  3E                 	db	62
   260  00FE1B  08                 	db	8
   261  00FE1C  08                 	db	8
   262  00FE1D  00                 	db	0
   263  00FE1E  50                 	db	80
   264  00FE1F  30                 	db	48
   265  00FE20  00                 	db	0
   266  00FE21  00                 	db	0
   267  00FE22  08                 	db	8
   268  00FE23  08                 	db	8
   269  00FE24  08                 	db	8
   270  00FE25  08                 	db	8
   271  00FE26  08                 	db	8
   272  00FE27  00                 	db	0
   273  00FE28  60                 	db	96
   274  00FE29  60                 	db	96
   275  00FE2A  00                 	db	0
   276  00FE2B  00                 	db	0
   277  00FE2C  20                 	db	32
   278  00FE2D  10                 	db	16
   279  00FE2E  08                 	db	8
   280  00FE2F  04                 	db	4
   281  00FE30  02                 	db	2
   282  00FE31  3E                 	db	62
   283  00FE32  51                 	db	81
   284  00FE33  49                 	db	73
   285  00FE34  45                 	db	69
   286  00FE35  3E                 	db	62
   287  00FE36  00                 	db	0
   288  00FE37  42                 	db	66
   289  00FE38  7F                 	db	127
   290  00FE39  40                 	db	64
   291  00FE3A  00                 	db	0
   292  00FE3B  42                 	db	66
   293  00FE3C  61                 	db	97
   294  00FE3D  51                 	db	81
   295  00FE3E  49                 	db	73
   296  00FE3F  46                 	db	70
   297  00FE40  21                 	db	33
   298  00FE41  41                 	db	65
   299  00FE42  45                 	db	69
   300  00FE43  4B                 	db	75
   301  00FE44  31                 	db	49
   302  00FE45  18                 	db	24
   303  00FE46  14                 	db	20
   304  00FE47  12                 	db	18
   305  00FE48  7F                 	db	127
   306  00FE49  10                 	db	16
   307  00FE4A  27                 	db	39
   308  00FE4B  45                 	db	69
   309  00FE4C  45                 	db	69
   310  00FE4D  45                 	db	69
   311  00FE4E  39                 	db	57
   312  00FE4F  3C                 	db	60
   313  00FE50  4A                 	db	74
   314  00FE51  49                 	db	73
   315  00FE52  49                 	db	73
   316  00FE53  30                 	db	48
   317  00FE54  01                 	db	1
   318  00FE55  71                 	db	113
   319  00FE56  09                 	db	9
   320  00FE57  05                 	db	5
   321  00FE58  03                 	db	3
   322  00FE59  36                 	db	54
   323  00FE5A  49                 	db	73
   324  00FE5B  49                 	db	73
   325  00FE5C  49                 	db	73
   326  00FE5D  36                 	db	54
   327  00FE5E  06                 	db	6
   328  00FE5F  49                 	db	73
   329  00FE60  49                 	db	73
   330  00FE61  29                 	db	41
   331  00FE62  1E                 	db	30
   332  00FE63  00                 	db	0
   333  00FE64  36                 	db	54
   334  00FE65  36                 	db	54
   335  00FE66  00                 	db	0
   336  00FE67  00                 	db	0
   337  00FE68  00                 	db	0
   338  00FE69  56                 	db	86
   339  00FE6A  36                 	db	54
   340  00FE6B  00                 	db	0
   341  00FE6C  00                 	db	0
   342  00FE6D  08                 	db	8
   343  00FE6E  14                 	db	20
   344  00FE6F  22                 	db	34
   345  00FE70  41                 	db	65
   346  00FE71  00                 	db	0
   347  00FE72  14                 	db	20
   348  00FE73  14                 	db	20
   349  00FE74  14                 	db	20
   350  00FE75  14                 	db	20
   351  00FE76  14                 	db	20
   352  00FE77  00                 	db	0
   353  00FE78  41                 	db	65
   354  00FE79  22                 	db	34
   355  00FE7A  14                 	db	20
   356  00FE7B  08                 	db	8
   357  00FE7C  02                 	db	2
   358  00FE7D  01                 	db	1
   359  00FE7E  51                 	db	81
   360  00FE7F  09                 	db	9
   361  00FE80  06                 	db	6
   362  00FE81  32                 	db	50
   363  00FE82  49                 	db	73
   364  00FE83  79                 	db	121
   365  00FE84  41                 	db	65
   366  00FE85  3E                 	db	62
   367  00FE86  7E                 	db	126
   368  00FE87  11                 	db	17
   369  00FE88  11                 	db	17
   370  00FE89  11                 	db	17
   371  00FE8A  7E                 	db	126
   372  00FE8B  7F                 	db	127
   373  00FE8C  49                 	db	73
   374  00FE8D  49                 	db	73
   375  00FE8E  49                 	db	73
   376  00FE8F  36                 	db	54
   377  00FE90  3E                 	db	62
   378  00FE91  41                 	db	65
   379  00FE92  41                 	db	65
   380  00FE93  41                 	db	65
   381  00FE94  22                 	db	34
   382  00FE95  7F                 	db	127
   383  00FE96  41                 	db	65
   384  00FE97  41                 	db	65
   385  00FE98  22                 	db	34
   386  00FE99  1C                 	db	28
   387  00FE9A  7F                 	db	127
   388  00FE9B  49                 	db	73
   389  00FE9C  49                 	db	73
   390  00FE9D  49                 	db	73
   391  00FE9E  41                 	db	65
   392  00FE9F  7F                 	db	127
   393  00FEA0  09                 	db	9
   394  00FEA1  09                 	db	9
   395  00FEA2  09                 	db	9
   396  00FEA3  01                 	db	1
   397  00FEA4  3E                 	db	62
   398  00FEA5  41                 	db	65
   399  00FEA6  49                 	db	73
   400  00FEA7  49                 	db	73
   401  00FEA8  7A                 	db	122
   402  00FEA9  7F                 	db	127
   403  00FEAA  08                 	db	8
   404  00FEAB  08                 	db	8
   405  00FEAC  08                 	db	8
   406  00FEAD  7F                 	db	127
   407  00FEAE  00                 	db	0
   408  00FEAF  41                 	db	65
   409  00FEB0  7F                 	db	127
   410  00FEB1  41                 	db	65
   411  00FEB2  00                 	db	0
   412  00FEB3  20                 	db	32
   413  00FEB4  40                 	db	64
   414  00FEB5  41                 	db	65
   415  00FEB6  3F                 	db	63
   416  00FEB7  01                 	db	1
   417  00FEB8  7F                 	db	127
   418  00FEB9  08                 	db	8
   419  00FEBA  14                 	db	20
   420  00FEBB  22                 	db	34
   421  00FEBC  41                 	db	65
   422  00FEBD  7F                 	db	127
   423  00FEBE  40                 	db	64
   424  00FEBF  40                 	db	64
   425  00FEC0  40                 	db	64
   426  00FEC1  40                 	db	64
   427  00FEC2  7F                 	db	127
   428  00FEC3  02                 	db	2
   429  00FEC4  0C                 	db	12
   430  00FEC5  02                 	db	2
   431  00FEC6  7F                 	db	127
   432  00FEC7  7F                 	db	127
   433  00FEC8  04                 	db	4
   434  00FEC9  08                 	db	8
   435  00FECA  10                 	db	16
   436  00FECB  7F                 	db	127
   437  00FECC  3E                 	db	62
   438  00FECD  41                 	db	65
   439  00FECE  41                 	db	65
   440  00FECF  41                 	db	65
   441  00FED0  3E                 	db	62
   442  00FED1  7F                 	db	127
   443  00FED2  09                 	db	9
   444  00FED3  09                 	db	9
   445  00FED4  09                 	db	9
   446  00FED5  06                 	db	6
   447  00FED6  3E                 	db	62
   448  00FED7  41                 	db	65
   449  00FED8  51                 	db	81
   450  00FED9  21                 	db	33
   451  00FEDA  5E                 	db	94
   452  00FEDB  7F                 	db	127
   453  00FEDC  09                 	db	9
   454  00FEDD  19                 	db	25
   455  00FEDE  29                 	db	41
   456  00FEDF  46                 	db	70
   457  00FEE0  46                 	db	70
   458  00FEE1  49                 	db	73
   459  00FEE2  49                 	db	73
   460  00FEE3  49                 	db	73
   461  00FEE4  31                 	db	49
   462  00FEE5  01                 	db	1
   463  00FEE6  01                 	db	1
   464  00FEE7  7F                 	db	127
   465  00FEE8  01                 	db	1
   466  00FEE9  01                 	db	1
   467  00FEEA  3F                 	db	63
   468  00FEEB  40                 	db	64
   469  00FEEC  40                 	db	64
   470  00FEED  40                 	db	64
   471  00FEEE  3F                 	db	63
   472  00FEEF  1F                 	db	31
   473  00FEF0  20                 	db	32
   474  00FEF1  40                 	db	64
   475  00FEF2  20                 	db	32
   476  00FEF3  1F                 	db	31
   477  00FEF4  3F                 	db	63
   478  00FEF5  40                 	db	64
   479  00FEF6  38                 	db	56
   480  00FEF7  40                 	db	64
   481  00FEF8  3F                 	db	63
   482  00FEF9  63                 	db	99
   483  00FEFA  14                 	db	20
   484  00FEFB  08                 	db	8
   485  00FEFC  14                 	db	20
   486  00FEFD  63                 	db	99
   487  00FEFE  07                 	db	7
   488  00FEFF  08                 	db	8
   489  00FF00  70                 	db	112
   490  00FF01  08                 	db	8
   491  00FF02  07                 	db	7
   492  00FF03  61                 	db	97
   493  00FF04  51                 	db	81
   494  00FF05  49                 	db	73
   495  00FF06  45                 	db	69
   496  00FF07  43                 	db	67
   497  00FF08  00                 	db	0
   498  00FF09  7F                 	db	127
   499  00FF0A  41                 	db	65
   500  00FF0B  41                 	db	65
   501  00FF0C  00                 	db	0
   502  00FF0D  02                 	db	2
   503  00FF0E  04                 	db	4
   504  00FF0F  08                 	db	8
   505  00FF10  10                 	db	16
   506  00FF11  20                 	db	32
   507  00FF12  00                 	db	0
   508  00FF13  41                 	db	65
   509  00FF14  41                 	db	65
   510  00FF15  7F                 	db	127
   511  00FF16  00                 	db	0
   512  00FF17  04                 	db	4
   513  00FF18  02                 	db	2
   514  00FF19  01                 	db	1
   515  00FF1A  02                 	db	2
   516  00FF1B  04                 	db	4
   517  00FF1C  40                 	db	64
   518  00FF1D  40                 	db	64
   519  00FF1E  40                 	db	64
   520  00FF1F  40                 	db	64
   521  00FF20  40                 	db	64
   522  00FF21  00                 	db	0
   523  00FF22  01                 	db	1
   524  00FF23  02                 	db	2
   525  00FF24  04                 	db	4
   526  00FF25  00                 	db	0
   527  00FF26  20                 	db	32
   528  00FF27  54                 	db	84
   529  00FF28  54                 	db	84
   530  00FF29  54                 	db	84
   531  00FF2A  78                 	db	120
   532  00FF2B  7F                 	db	127
   533  00FF2C  48                 	db	72
   534  00FF2D  44                 	db	68
   535  00FF2E  44                 	db	68
   536  00FF2F  38                 	db	56
   537  00FF30  38                 	db	56
   538  00FF31  44                 	db	68
   539  00FF32  44                 	db	68
   540  00FF33  44                 	db	68
   541  00FF34  20                 	db	32
   542  00FF35  38                 	db	56
   543  00FF36  44                 	db	68
   544  00FF37  44                 	db	68
   545  00FF38  48                 	db	72
   546  00FF39  7F                 	db	127
   547  00FF3A  38                 	db	56
   548  00FF3B  54                 	db	84
   549  00FF3C  54                 	db	84
   550  00FF3D  54                 	db	84
   551  00FF3E  18                 	db	24
   552  00FF3F  08                 	db	8
   553  00FF40  7E                 	db	126
   554  00FF41  09                 	db	9
   555  00FF42  01                 	db	1
   556  00FF43  02                 	db	2
   557  00FF44  0C                 	db	12
   558  00FF45  52                 	db	82
   559  00FF46  52                 	db	82
   560  00FF47  52                 	db	82
   561  00FF48  3E                 	db	62
   562  00FF49  7F                 	db	127
   563  00FF4A  08                 	db	8
   564  00FF4B  04                 	db	4
   565  00FF4C  04                 	db	4
   566  00FF4D  78                 	db	120
   567  00FF4E  00                 	db	0
   568  00FF4F  44                 	db	68
   569  00FF50  7D                 	db	125
   570  00FF51  40                 	db	64
   571  00FF52  00                 	db	0
   572  00FF53  20                 	db	32
   573  00FF54  40                 	db	64
   574  00FF55  44                 	db	68
   575  00FF56  3D                 	db	61
   576  00FF57  00                 	db	0
   577  00FF58  7F                 	db	127
   578  00FF59  10                 	db	16
   579  00FF5A  28                 	db	40
   580  00FF5B  44                 	db	68
   581  00FF5C  00                 	db	0
   582  00FF5D  00                 	db	0
   583  00FF5E  41                 	db	65
   584  00FF5F  7F                 	db	127
   585  00FF60  40                 	db	64
   586  00FF61  00                 	db	0
   587  00FF62  7C                 	db	124
   588  00FF63  04                 	db	4
   589  00FF64  18                 	db	24
   590  00FF65  04                 	db	4
   591  00FF66  78                 	db	120
   592  00FF67  7C                 	db	124
   593  00FF68  08                 	db	8
   594  00FF69  04                 	db	4
   595  00FF6A  04                 	db	4
   596  00FF6B  78                 	db	120
   597  00FF6C  38                 	db	56
   598  00FF6D  44                 	db	68
   599  00FF6E  44                 	db	68
   600  00FF6F  44                 	db	68
   601  00FF70  38                 	db	56
   602  00FF71  7C                 	db	124
   603  00FF72  14                 	db	20
   604  00FF73  14                 	db	20
   605  00FF74  14                 	db	20
   606  00FF75  08                 	db	8
   607  00FF76  08                 	db	8
   608  00FF77  14                 	db	20
   609  00FF78  14                 	db	20
   610  00FF79  18                 	db	24
   611  00FF7A  7C                 	db	124
   612  00FF7B  7C                 	db	124
   613  00FF7C  08                 	db	8
   614  00FF7D  04                 	db	4
   615  00FF7E  04                 	db	4
   616  00FF7F  08                 	db	8
   617  00FF80  48                 	db	72
   618  00FF81  54                 	db	84
   619  00FF82  54                 	db	84
   620  00FF83  54                 	db	84
   621  00FF84  20                 	db	32
   622  00FF85  04                 	db	4
   623  00FF86  3F                 	db	63
   624  00FF87  44                 	db	68
   625  00FF88  40                 	db	64
   626  00FF89  20                 	db	32
   627  00FF8A  3C                 	db	60
   628  00FF8B  40                 	db	64
   629  00FF8C  40                 	db	64
   630  00FF8D  20                 	db	32
   631  00FF8E  7C                 	db	124
   632  00FF8F  1C                 	db	28
   633  00FF90  20                 	db	32
   634  00FF91  40                 	db	64
   635  00FF92  20                 	db	32
   636  00FF93  1C                 	db	28
   637  00FF94  3C                 	db	60
   638  00FF95  40                 	db	64
   639  00FF96  30                 	db	48
   640  00FF97  40                 	db	64
   641  00FF98  3C                 	db	60
   642  00FF99  44                 	db	68
   643  00FF9A  28                 	db	40
   644  00FF9B  10                 	db	16
   645  00FF9C  28                 	db	40
   646  00FF9D  44                 	db	68
   647  00FF9E  0C                 	db	12
   648  00FF9F  50                 	db	80
   649  00FFA0  50                 	db	80
   650  00FFA1  50                 	db	80
   651  00FFA2  3C                 	db	60
   652  00FFA3  44                 	db	68
   653  00FFA4  64                 	db	100
   654  00FFA5  54                 	db	84
   655  00FFA6  4C                 	db	76
   656  00FFA7  44                 	db	68
   657  00FFA8  00                 	db	0
   658  00FFA9  08                 	db	8
   659  00FFAA  36                 	db	54
   660  00FFAB  41                 	db	65
   661  00FFAC  00                 	db	0
   662  00FFAD  00                 	db	0
   663  00FFAE  00                 	db	0
   664  00FFAF  7F                 	db	127
   665  00FFB0  00                 	db	0
   666  00FFB1  00                 	db	0
   667  00FFB2  00                 	db	0
   668  00FFB3  41                 	db	65
   669  00FFB4  36                 	db	54
   670  00FFB5  08                 	db	8
   671  00FFB6  00                 	db	0
   672  00FFB7  10                 	db	16
   673  00FFB8  08                 	db	8
   674  00FFB9  08                 	db	8
   675  00FFBA  10                 	db	16
   676  00FFBB  08                 	db	8
   677  00FFBC  78                 	db	120
   678  00FFBD  46                 	db	70
   679  00FFBE  41                 	db	65
   680  00FFBF  46                 	db	70
   681  00FFC0  78                 	db	120
   682  00FFC1                     __end_of_ASCII:
   683                           	callstack 0
   684  0000                     _WPUB	set	3931
   685  0000                     _ANCON1	set	3932
   686  0000                     _ANCON0	set	3933
   687  0000                     _TXREG1	set	4013
   688  0000                     _RCREG1	set	4014
   689  0000                     _RCSTA1bits	set	4011
   690  0000                     _TXSTA1bits	set	4012
   691  0000                     _SPBRGH1	set	3965
   692  0000                     _SPBRG1	set	4015
   693  0000                     _TXSTA1	set	4012
   694  0000                     _RCSTA1	set	4011
   695  0000                     _BAUDCON1	set	4007
   696  0000                     _PIR4bits	set	4023
   697  0000                     _EEDATA	set	3955
   698  0000                     _EEADR	set	3956
   699  0000                     _EEADRH	set	3957
   700  0000                     _EECON2	set	3966
   701  0000                     _EECON1bits	set	3967
   702  0000                     _TABLAT	set	4085
   703  0000                     _TBLPTRL	set	4086
   704  0000                     _TBLPTRH	set	4087
   705  0000                     _TBLPTRU	set	4088
   706  0000                     _PIR1bits	set	3998
   707  0000                     _PIE1bits	set	3997
   708  0000                     _SSPSTATbits	set	4039
   709  0000                     _PIR2bits	set	4001
   710  0000                     _SSPCON2bits	set	4037
   711  0000                     _SSPBUF	set	4041
   712  0000                     _SSPCON1bits	set	4038
   713  0000                     _SSPADD	set	4040
   714  0000                     _SSPCON2	set	4037
   715  0000                     _SSPCON1	set	4038
   716  0000                     _SSPSTAT	set	4039
   717  0000                     _INTCONbits	set	4082
   718  0000                     _INTCON2bits	set	4081
   719  0000                     _TRISC	set	3988
   720  0000                     _TRISB	set	3987
   721  0000                     _TRISA	set	3986
   722  0000                     _LATC	set	3979
   723  0000                     _LATB	set	3978
   724  0000                     _LATA	set	3977
   725  0000                     _REFOCON	set	3994
   726  0000                     _OSCTUNE	set	3995
   727  0000                     _OSCCON2	set	4050
   728  0000                     _OSCCON	set	4051
   729  0000                     _TRISC4	set	31908
   730  0000                     _TRISC3	set	31907
   731  0000                     _ACKEN	set	32300
   732  0000                     _ACKDT	set	32301
   733  0000                     _RCEN	set	32299
   734  0000                     _PEN	set	32298
   735  0000                     _RSEN	set	32297
   736  0000                     _SEN	set	32296
   737  00FFC1                     STR_8:
   738  00FFC1  50                 	db	80	;'P'
   739  00FFC2  6F                 	db	111	;'o'
   740  00FFC3  74                 	db	116	;'t'
   741  00FFC4  65                 	db	101	;'e'
   742  00FFC5  6E                 	db	110	;'n'
   743  00FFC6  63                 	db	99	;'c'
   744  00FFC7  69                 	db	105	;'i'
   745  00FFC8  61                 	db	97	;'a'
   746  00FFC9  3A                 	db	58	;':'
   747  00FFCA  20                 	db	32
   748  00FFCB  00                 	db	0
   749  00FFCC                     STR_7:
   750  00FFCC  43                 	db	67	;'C'
   751  00FFCD  6F                 	db	111	;'o'
   752  00FFCE  72                 	db	114	;'r'
   753  00FFCF  72                 	db	114	;'r'
   754  00FFD0  65                 	db	101	;'e'
   755  00FFD1  6E                 	db	110	;'n'
   756  00FFD2  74                 	db	116	;'t'
   757  00FFD3  65                 	db	101	;'e'
   758  00FFD4  3A                 	db	58	;':'
   759  00FFD5  20                 	db	32
   760  00FFD6  00                 	db	0
   761  00FFD7                     STR_6:
   762  00FFD7  54                 	db	84	;'T'
   763  00FFD8  65                 	db	101	;'e'
   764  00FFD9  6E                 	db	110	;'n'
   765  00FFDA  73                 	db	115	;'s'
   766  00FFDB  61                 	db	97	;'a'
   767  00FFDC  6F                 	db	111	;'o'
   768  00FFDD  3A                 	db	58	;':'
   769  00FFDE  20                 	db	32
   770  00FFDF  00                 	db	0
   771  00FFE0                     STR_3:
   772  00FFE0  25                 	db	37
   773  00FFE1  2E                 	db	46
   774  00FFE2  32                 	db	50	;'2'
   775  00FFE3  66                 	db	102	;'f'
   776  00FFE4  00                 	db	0
   777  00FFE5                     STR_9:
   778  00FFE5  49                 	db	73	;'I'
   779  00FFE6  4E                 	db	78	;'N'
   780  00FFE7  46                 	db	70	;'F'
   781  00FFE8  00                 	db	0
   782  00FFE9                     STR_13:
   783  00FFE9  4E                 	db	78	;'N'
   784  00FFEA  41                 	db	65	;'A'
   785  00FFEB  4E                 	db	78	;'N'
   786  00FFEC  00                 	db	0
   787  00FFED                     STR_10:
   788  00FFED  69                 	db	105	;'i'
   789  00FFEE  6E                 	db	110	;'n'
   790  00FFEF  66                 	db	102	;'f'
   791  00FFF0  00                 	db	0
   792  00FFF1                     STR_14:
   793  00FFF1  6E                 	db	110	;'n'
   794  00FFF2  61                 	db	97	;'a'
   795  00FFF3  6E                 	db	110	;'n'
   796  00FFF4  00                 	db	0
   797  00FFF5                     STR_2:
   798  00FFF5  4F                 	db	79	;'O'
   799  00FFF6  4C                 	db	76	;'L'
   800  00FFF7  41                 	db	65	;'A'
   801  00FFF8  00                 	db	0
   802  00FFF9                     STR_17:
   803  00FFF9  6C                 	db	108	;'l'
   804  00FFFA  66                 	db	102	;'f'
   805  00FFFB  00                 	db	0
   806  00FFFC                     STR_1:
   807  00FFFC  4F                 	db	79	;'O'
   808  00FFFD  49                 	db	73	;'I'
   809  00FFFE  00                 	db	0
   810  00FFFF  00                 	db	0	; dummy byte at the end
   811  0000                     
   812                           ; #config settings
   813                           
   814                           	psect	cinit
   815  00C276                     __pcinit:
   816                           	callstack 0
   817  00C276                     start_initialization:
   818                           	callstack 0
   819  00C276                     __initialization:
   820                           	callstack 0
   821                           
   822                           ; Clear objects allocated to BANK1 (196 bytes)
   823  00C276  EE01  F000         	lfsr	0,__pbssBANK1
   824  00C27A  0EC4               	movlw	196
   825  00C27C                     clear_0:
   826  00C27C  6AEE               	clrf	postinc0,c
   827  00C27E  06E8               	decf	wreg,f,c
   828  00C280  E1FD               	bnz	clear_0
   829                           
   830                           ; Clear objects allocated to BANK0 (65 bytes)
   831  00C282  EE00  F0B0         	lfsr	0,__pbssBANK0
   832  00C286  0E41               	movlw	65
   833  00C288                     clear_1:
   834  00C288  6AEE               	clrf	postinc0,c
   835  00C28A  06E8               	decf	wreg,f,c
   836  00C28C  E1FD               	bnz	clear_1
   837  00C28E                     end_of_initialization:
   838                           	callstack 0
   839  00C28E                     __end_of__initialization:
   840                           	callstack 0
   841  00C28E  0100               	movlb	0
   842  00C290  EF94  F06E         	goto	_main	;jump to C main() function
   843                           
   844                           	psect	bssBANK0
   845  0000B0                     __pbssBANK0:
   846                           	callstack 0
   847  0000B0                     floorf@F524:
   848                           	callstack 0
   849  0000B0                     	ds	4
   850  0000B4                     ___fpclassifyf@F463:
   851                           	callstack 0
   852  0000B4                     	ds	4
   853  0000B8                     _power:
   854                           	callstack 0
   855  0000B8                     	ds	4
   856  0000BC                     _current:
   857                           	callstack 0
   858  0000BC                     	ds	4
   859  0000C0                     _voltage:
   860                           	callstack 0
   861  0000C0                     	ds	4
   862  0000C4                     _Power:
   863                           	callstack 0
   864  0000C4                     	ds	4
   865  0000C8                     _Current:
   866                           	callstack 0
   867  0000C8                     	ds	4
   868  0000CC                     _Voltage:
   869                           	callstack 0
   870  0000CC                     	ds	4
   871  0000D0                     _nout:
   872                           	callstack 0
   873  0000D0                     	ds	2
   874  0000D2                     _width:
   875                           	callstack 0
   876  0000D2                     	ds	2
   877  0000D4                     _prec:
   878                           	callstack 0
   879  0000D4                     	ds	2
   880  0000D6                     _flags:
   881                           	callstack 0
   882  0000D6                     	ds	2
   883  0000D8                     _EUSART1_ErrorHandler:
   884                           	callstack 0
   885  0000D8                     	ds	2
   886  0000DA                     _EUSART1_OverrunErrorHandler:
   887                           	callstack 0
   888  0000DA                     	ds	2
   889  0000DC                     _EUSART1_FramingErrorHandler:
   890                           	callstack 0
   891  0000DC                     	ds	2
   892  0000DE                     _eusart1RxLastError:
   893                           	callstack 0
   894  0000DE                     	ds	1
   895  0000DF                     _power_str:
   896                           	callstack 0
   897  0000DF                     	ds	6
   898  0000E5                     _current_str:
   899                           	callstack 0
   900  0000E5                     	ds	6
   901  0000EB                     _voltage_str:
   902                           	callstack 0
   903  0000EB                     	ds	6
   904                           
   905                           	psect	bssBANK1
   906  000100                     __pbssBANK1:
   907                           	callstack 0
   908  000100                     _oi:
   909                           	callstack 0
   910  000100                     	ds	80
   911  000150                     _I2C_Status:
   912                           	callstack 0
   913  000150                     	ds	36
   914  000174                     _dbuf:
   915                           	callstack 0
   916  000174                     	ds	80
   917                           
   918                           	psect	cstackBANK0
   919  000060                     __pcstackBANK0:
   920                           	callstack 0
   921  000060                     efgtoa@ou:
   922                           	callstack 0
   923                           
   924                           ; 4 bytes @ 0x0
   925  000060                     	ds	4
   926  000064                     _efgtoa$2154:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x4
   930  000064                     	ds	2
   931  000066                     _efgtoa$2155:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x6
   935  000066                     	ds	2
   936  000068                     _efgtoa$2160:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x8
   940  000068                     	ds	2
   941  00006A                     _efgtoa$2164:
   942                           	callstack 0
   943                           
   944                           ; 2 bytes @ 0xA
   945  00006A                     	ds	2
   946  00006C                     _efgtoa$2165:
   947                           	callstack 0
   948                           
   949                           ; 2 bytes @ 0xC
   950  00006C                     	ds	2
   951  00006E                     _efgtoa$2166:
   952                           	callstack 0
   953                           
   954                           ; 2 bytes @ 0xE
   955  00006E                     	ds	2
   956  000070                     efgtoa@t:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x10
   960  000070                     	ds	2
   961  000072                     efgtoa@pp:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x12
   965  000072                     	ds	2
   966  000074                     efgtoa@m:
   967                           	callstack 0
   968                           
   969                           ; 2 bytes @ 0x14
   970  000074                     	ds	2
   971  000076                     efgtoa@ne:
   972                           	callstack 0
   973                           
   974                           ; 2 bytes @ 0x16
   975  000076                     	ds	2
   976  000078                     efgtoa@d:
   977                           	callstack 0
   978                           
   979                           ; 2 bytes @ 0x18
   980  000078                     	ds	2
   981  00007A                     efgtoa@sign:
   982                           	callstack 0
   983                           
   984                           ; 2 bytes @ 0x1A
   985  00007A                     	ds	2
   986  00007C                     efgtoa@p:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0x1C
   990  00007C                     	ds	2
   991  00007E                     efgtoa@nmode:
   992                           	callstack 0
   993                           
   994                           ; 1 bytes @ 0x1E
   995  00007E                     	ds	1
   996  00007F                     efgtoa@w:
   997                           	callstack 0
   998                           
   999                           ; 2 bytes @ 0x1F
  1000  00007F                     	ds	2
  1001  000081                     efgtoa@mode:
  1002                           	callstack 0
  1003                           
  1004                           ; 1 bytes @ 0x21
  1005  000081                     	ds	1
  1006  000082                     efgtoa@h:
  1007                           	callstack 0
  1008                           
  1009                           ; 4 bytes @ 0x22
  1010  000082                     	ds	4
  1011  000086                     efgtoa@l:
  1012                           	callstack 0
  1013                           
  1014                           ; 4 bytes @ 0x26
  1015  000086                     	ds	4
  1016  00008A                     efgtoa@i:
  1017                           	callstack 0
  1018                           
  1019                           ; 2 bytes @ 0x2A
  1020  00008A                     	ds	2
  1021  00008C                     efgtoa@g:
  1022                           	callstack 0
  1023                           
  1024                           ; 4 bytes @ 0x2C
  1025  00008C                     	ds	4
  1026  000090                     efgtoa@e:
  1027                           	callstack 0
  1028                           
  1029                           ; 2 bytes @ 0x30
  1030  000090                     	ds	2
  1031  000092                     efgtoa@n:
  1032                           	callstack 0
  1033                           
  1034                           ; 2 bytes @ 0x32
  1035  000092                     	ds	2
  1036  000094                     efgtoa@u:
  1037                           	callstack 0
  1038                           
  1039                           ; 4 bytes @ 0x34
  1040  000094                     	ds	4
  1041  000098                     ?_vfprintf:
  1042                           	callstack 0
  1043  000098                     vfprintf@fp:
  1044                           	callstack 0
  1045                           
  1046                           ; 2 bytes @ 0x38
  1047  000098                     	ds	2
  1048  00009A                     vfprintf@fmt:
  1049                           	callstack 0
  1050                           
  1051                           ; 2 bytes @ 0x3A
  1052  00009A                     	ds	2
  1053  00009C                     vfprintf@ap:
  1054                           	callstack 0
  1055                           
  1056                           ; 2 bytes @ 0x3C
  1057  00009C                     	ds	2
  1058  00009E                     ?_sprintf:
  1059                           	callstack 0
  1060  00009E                     sprintf@s:
  1061                           	callstack 0
  1062                           
  1063                           ; 2 bytes @ 0x3E
  1064  00009E                     	ds	2
  1065  0000A0                     sprintf@fmt:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x40
  1069  0000A0                     	ds	8
  1070  0000A8                     sprintf@ap:
  1071                           	callstack 0
  1072                           
  1073                           ; 2 bytes @ 0x48
  1074  0000A8                     	ds	2
  1075  0000AA                     sprintf@f:
  1076                           	callstack 0
  1077                           
  1078                           ; 6 bytes @ 0x4A
  1079  0000AA                     	ds	6
  1080                           
  1081                           	psect	cstackCOMRAM
  1082  000001                     __pcstackCOMRAM:
  1083                           	callstack 0
  1084  000001                     ??_I2C_Master_Wait:
  1085  000001                     ?_strlen:
  1086                           	callstack 0
  1087  000001                     ?___fpclassifyf:
  1088                           	callstack 0
  1089  000001                     ?_isupper:
  1090                           	callstack 0
  1091  000001                     ?_isdigit:
  1092                           	callstack 0
  1093  000001                     ?_strncmp:
  1094                           	callstack 0
  1095  000001                     ?_isspace:
  1096                           	callstack 0
  1097  000001                     ?___wmul:
  1098                           	callstack 0
  1099  000001                     ?___awdiv:
  1100                           	callstack 0
  1101  000001                     ?___awmod:
  1102                           	callstack 0
  1103  000001                     ?___fladd:
  1104                           	callstack 0
  1105  000001                     ?___fldiv:
  1106                           	callstack 0
  1107  000001                     ?___lldiv:
  1108                           	callstack 0
  1109  000001                     ?___flneg:
  1110                           	callstack 0
  1111  000001                     ?___fltol:
  1112                           	callstack 0
  1113  000001                     I2C_Open@address:
  1114                           	callstack 0
  1115  000001                     I2C_Close@returnValue:
  1116                           	callstack 0
  1117  000001                     I2C_MasterSendTxData@data:
  1118                           	callstack 0
  1119  000001                     I2C_SetBuffer@buffer:
  1120                           	callstack 0
  1121  000001                     I2C_SetCallback@cb:
  1122                           	callstack 0
  1123  000001                     ___wmul@multiplier:
  1124                           	callstack 0
  1125  000001                     ___awdiv@dividend:
  1126                           	callstack 0
  1127  000001                     ___awmod@dividend:
  1128                           	callstack 0
  1129  000001                     isdigit@c:
  1130                           	callstack 0
  1131  000001                     isspace@c:
  1132                           	callstack 0
  1133  000001                     isupper@c:
  1134                           	callstack 0
  1135  000001                     fputc@c:
  1136                           	callstack 0
  1137  000001                     strcpy@dest:
  1138                           	callstack 0
  1139  000001                     strlen@s:
  1140                           	callstack 0
  1141  000001                     strncmp@_l:
  1142                           	callstack 0
  1143  000001                     ___lldiv@dividend:
  1144                           	callstack 0
  1145  000001                     ___fleq@ff1:
  1146                           	callstack 0
  1147  000001                     ___flneg@f1:
  1148                           	callstack 0
  1149  000001                     ___fltol@f1:
  1150                           	callstack 0
  1151  000001                     ___fladd@b:
  1152                           	callstack 0
  1153  000001                     ___fldiv@b:
  1154                           	callstack 0
  1155  000001                     ___fpclassifyf@x:
  1156                           	callstack 0
  1157                           
  1158                           ; 4 bytes @ 0x0
  1159  000001                     	ds	1
  1160  000002                     ?_I2C_Master_Read:
  1161                           	callstack 0
  1162  000002                     I2C_Open@returnValue:
  1163                           	callstack 0
  1164  000002                     I2C_Master_Write@d:
  1165                           	callstack 0
  1166  000002                     I2C_Master_Read@a:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x1
  1170  000002                     	ds	1
  1171  000003                     ??_isupper:
  1172  000003                     ??_isdigit:
  1173  000003                     ??_isspace:
  1174  000003                     I2C_SetBuffer@bufferSize:
  1175                           	callstack 0
  1176  000003                     I2C_SetCallback@ptr:
  1177                           	callstack 0
  1178  000003                     ___wmul@multiplicand:
  1179                           	callstack 0
  1180  000003                     ___awdiv@divisor:
  1181                           	callstack 0
  1182  000003                     ___awmod@divisor:
  1183                           	callstack 0
  1184  000003                     fputc@fp:
  1185                           	callstack 0
  1186  000003                     strcpy@src:
  1187                           	callstack 0
  1188  000003                     strlen@a:
  1189                           	callstack 0
  1190  000003                     strncmp@_r:
  1191                           	callstack 0
  1192                           
  1193                           ; 2 bytes @ 0x2
  1194  000003                     	ds	1
  1195  000004                     I2C_Master_Read@temp:
  1196                           	callstack 0
  1197                           
  1198                           ; 2 bytes @ 0x3
  1199  000004                     	ds	1
  1200  000005                     ??_fputc:
  1201  000005                     ??___fpclassifyf:
  1202  000005                     ??_strcpy:
  1203  000005                     ??___fltol:
  1204  000005                     I2C_SetCallback@idx:
  1205                           	callstack 0
  1206  000005                     ___awdiv@counter:
  1207                           	callstack 0
  1208  000005                     ___awmod@counter:
  1209                           	callstack 0
  1210  000005                     ___wmul@product:
  1211                           	callstack 0
  1212  000005                     strncmp@n:
  1213                           	callstack 0
  1214  000005                     ___lldiv@divisor:
  1215                           	callstack 0
  1216  000005                     ___fleq@ff2:
  1217                           	callstack 0
  1218  000005                     ___fladd@a:
  1219                           	callstack 0
  1220  000005                     ___fldiv@a:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x4
  1224  000005                     	ds	1
  1225  000006                     ___awdiv@sign:
  1226                           	callstack 0
  1227  000006                     ___awmod@sign:
  1228                           	callstack 0
  1229  000006                     I2C_SetDataCompleteCallback@cb:
  1230                           	callstack 0
  1231  000006                     I2C_SetAddressNackCallback@cb:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x5
  1235  000006                     	ds	1
  1236  000007                     ??_strncmp:
  1237  000007                     ?_tolower:
  1238                           	callstack 0
  1239  000007                     ?___xxtofl:
  1240                           	callstack 0
  1241  000007                     _isspace$2249:
  1242                           	callstack 0
  1243  000007                     ___awdiv@quotient:
  1244                           	callstack 0
  1245  000007                     strcpy@s:
  1246                           	callstack 0
  1247  000007                     tolower@c:
  1248                           	callstack 0
  1249  000007                     ___xxtofl@val:
  1250                           	callstack 0
  1251                           
  1252                           ; 4 bytes @ 0x6
  1253  000007                     	ds	1
  1254  000008                     ?_atoi:
  1255                           	callstack 0
  1256  000008                     I2C_SetDataCompleteCallback@ptr:
  1257                           	callstack 0
  1258  000008                     I2C_SetAddressNackCallback@ptr:
  1259                           	callstack 0
  1260  000008                     atoi@s:
  1261                           	callstack 0
  1262  000008                     strncmp@l:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x7
  1266  000008                     	ds	1
  1267  000009                     ??___fladd:
  1268  000009                     ??___fldiv:
  1269  000009                     ??_tolower:
  1270  000009                     ??___fleq:
  1271  000009                     ___fltol@sign1:
  1272                           	callstack 0
  1273  000009                     ___fpclassifyf@e:
  1274                           	callstack 0
  1275  000009                     strcpy@d:
  1276                           	callstack 0
  1277  000009                     ___lldiv@quotient:
  1278                           	callstack 0
  1279                           
  1280                           ; 4 bytes @ 0x8
  1281  000009                     	ds	1
  1282  00000A                     ??_atoi:
  1283  00000A                     ___fltol@exp1:
  1284                           	callstack 0
  1285  00000A                     rd1RegCompleteHandler@ptr:
  1286                           	callstack 0
  1287  00000A                     rd2RegCompleteHandler@ptr:
  1288                           	callstack 0
  1289  00000A                     wr1RegCompleteHandler@ptr:
  1290                           	callstack 0
  1291  00000A                     wr2RegCompleteHandler@ptr:
  1292                           	callstack 0
  1293  00000A                     rdBlkRegCompleteHandler@ptr:
  1294                           	callstack 0
  1295  00000A                     I2C_CallbackReturnReset@funPtr:
  1296                           	callstack 0
  1297  00000A                     fputs@s:
  1298                           	callstack 0
  1299  00000A                     strncmp@r:
  1300                           	callstack 0
  1301                           
  1302                           ; 2 bytes @ 0x9
  1303  00000A                     	ds	1
  1304  00000B                     ??___xxtofl:
  1305  00000B                     ___fpclassifyf@u:
  1306                           	callstack 0
  1307                           
  1308                           ; 4 bytes @ 0xA
  1309  00000B                     	ds	1
  1310  00000C                     ??_I2C_DO_TX:
  1311  00000C                     ??_I2C_DO_RX:
  1312  00000C                     ??_I2C_DO_TX_EMPTY:
  1313  00000C                     ??_I2C_DO_ADDRESS_NACK:
  1314  00000C                     fputs@fp:
  1315                           	callstack 0
  1316                           
  1317                           ; 2 bytes @ 0xB
  1318  00000C                     	ds	1
  1319  00000D                     ___lldiv@counter:
  1320                           	callstack 0
  1321  00000D                     ___fladd@signs:
  1322                           	callstack 0
  1323  00000D                     _tolower$2312:
  1324                           	callstack 0
  1325  00000D                     ___fldiv@rem:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0xC
  1329  00000D                     	ds	1
  1330  00000E                     ??_I2C_MasterFsm:
  1331  00000E                     ___fladd@aexp:
  1332                           	callstack 0
  1333  00000E                     fputs@c:
  1334                           	callstack 0
  1335  00000E                     atoi@neg:
  1336                           	callstack 0
  1337  00000E                     I2C_Master_Init@c:
  1338                           	callstack 0
  1339                           
  1340                           ; 4 bytes @ 0xD
  1341  00000E                     	ds	1
  1342  00000F                     ___fladd@bexp:
  1343                           	callstack 0
  1344  00000F                     ___xxtofl@sign:
  1345                           	callstack 0
  1346  00000F                     fputs@i:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0xE
  1350  00000F                     	ds	1
  1351  000010                     I2C_MasterOperation@read:
  1352                           	callstack 0
  1353  000010                     ___fladd@grs:
  1354                           	callstack 0
  1355  000010                     ___xxtofl@exp:
  1356                           	callstack 0
  1357  000010                     _atoi$2218:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0xF
  1361  000010                     	ds	1
  1362  000011                     ?_pad:
  1363                           	callstack 0
  1364  000011                     I2C_MasterOperation@returnValue:
  1365                           	callstack 0
  1366  000011                     ___fldiv@sign:
  1367                           	callstack 0
  1368  000011                     pad@fp:
  1369                           	callstack 0
  1370  000011                     ___xxtofl@arg:
  1371                           	callstack 0
  1372                           
  1373                           ; 4 bytes @ 0x10
  1374  000011                     	ds	1
  1375  000012                     ??_I2C_Master_Init:
  1376  000012                     I2C_WriteNBytes@data:
  1377                           	callstack 0
  1378  000012                     ___fldiv@new_exp:
  1379                           	callstack 0
  1380  000012                     _atoi$2220:
  1381                           	callstack 0
  1382                           
  1383                           ; 2 bytes @ 0x11
  1384  000012                     	ds	1
  1385  000013                     pad@buf:
  1386                           	callstack 0
  1387                           
  1388                           ; 2 bytes @ 0x12
  1389  000013                     	ds	1
  1390  000014                     _atoi$2219:
  1391                           	callstack 0
  1392  000014                     I2C_WriteNBytes@len:
  1393                           	callstack 0
  1394  000014                     ___fldiv@grs:
  1395                           	callstack 0
  1396                           
  1397                           ; 4 bytes @ 0x13
  1398  000014                     	ds	1
  1399  000015                     ?___flmul:
  1400                           	callstack 0
  1401  000015                     pad@p:
  1402                           	callstack 0
  1403  000015                     atoi@n:
  1404                           	callstack 0
  1405  000015                     ___flmul@b:
  1406                           	callstack 0
  1407                           
  1408                           ; 4 bytes @ 0x14
  1409  000015                     	ds	1
  1410  000016                     I2C_WriteNBytes@address:
  1411                           	callstack 0
  1412                           
  1413                           ; 1 bytes @ 0x15
  1414  000016                     	ds	1
  1415  000017                     ??_pad:
  1416  000017                     Oled_Command@command:
  1417                           	callstack 0
  1418  000017                     Oled_Data@value:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x16
  1422  000017                     	ds	1
  1423  000018                     ___fldiv@bexp:
  1424                           	callstack 0
  1425  000018                     Oled_Command@data_I2C:
  1426                           	callstack 0
  1427  000018                     Oled_Data@data_I2C:
  1428                           	callstack 0
  1429  000018                     pad@i:
  1430                           	callstack 0
  1431                           
  1432                           ; 2 bytes @ 0x17
  1433  000018                     	ds	1
  1434  000019                     ___fldiv@aexp:
  1435                           	callstack 0
  1436  000019                     ___flmul@a:
  1437                           	callstack 0
  1438                           
  1439                           ; 4 bytes @ 0x18
  1440  000019                     	ds	1
  1441  00001A                     ??_Oled_WriteCharacter:
  1442  00001A                     ?_Power_ReadRegister:
  1443                           	callstack 0
  1444  00001A                     ?_floorf:
  1445                           	callstack 0
  1446  00001A                     Oled_SelectPage@page_num:
  1447                           	callstack 0
  1448  00001A                     Oled_Clear@i:
  1449                           	callstack 0
  1450  00001A                     pad@w:
  1451                           	callstack 0
  1452  00001A                     floorf@x:
  1453                           	callstack 0
  1454                           
  1455                           ; 4 bytes @ 0x19
  1456  00001A                     	ds	1
  1457  00001B                     Oled_SelectPage@Result:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x1A
  1461  00001B                     	ds	2
  1462  00001D                     ??___flmul:
  1463                           
  1464                           ; 1 bytes @ 0x1C
  1465  00001D                     	ds	1
  1466  00001E                     ??_Power_ReadRegister:
  1467  00001E                     ??_floorf:
  1468  00001E                     Oled_WriteCharacter@character:
  1469                           	callstack 0
  1470                           
  1471                           ; 1 bytes @ 0x1D
  1472  00001E                     	ds	1
  1473  00001F                     Oled_WriteCharacter@i:
  1474                           	callstack 0
  1475                           
  1476                           ; 2 bytes @ 0x1E
  1477  00001F                     	ds	1
  1478  000020                     Power_ReadRegister@temp_f:
  1479                           	callstack 0
  1480                           
  1481                           ; 2 bytes @ 0x1F
  1482  000020                     	ds	1
  1483  000021                     ___flmul@sign:
  1484                           	callstack 0
  1485  000021                     Oled_WriteString@characters:
  1486                           	callstack 0
  1487                           
  1488                           ; 2 bytes @ 0x20
  1489  000021                     	ds	1
  1490  000022                     Power_ReadRegister@temp_e:
  1491                           	callstack 0
  1492  000022                     ___flmul@grs:
  1493                           	callstack 0
  1494                           
  1495                           ; 4 bytes @ 0x21
  1496  000022                     	ds	1
  1497  000023                     
  1498                           ; 1 bytes @ 0x22
  1499  000023                     	ds	1
  1500  000024                     floorf@m:
  1501                           	callstack 0
  1502                           
  1503                           ; 4 bytes @ 0x23
  1504  000024                     	ds	2
  1505  000026                     ___flmul@aexp:
  1506                           	callstack 0
  1507                           
  1508                           ; 1 bytes @ 0x25
  1509  000026                     	ds	1
  1510  000027                     ___flmul@bexp:
  1511                           	callstack 0
  1512                           
  1513                           ; 1 bytes @ 0x26
  1514  000027                     	ds	1
  1515  000028                     floorf@e:
  1516                           	callstack 0
  1517  000028                     ___flmul@prod:
  1518                           	callstack 0
  1519                           
  1520                           ; 4 bytes @ 0x27
  1521  000028                     	ds	2
  1522  00002A                     floorf@u:
  1523                           	callstack 0
  1524                           
  1525                           ; 4 bytes @ 0x29
  1526  00002A                     	ds	2
  1527  00002C                     ___flmul@temp:
  1528                           	callstack 0
  1529                           
  1530                           ; 2 bytes @ 0x2B
  1531  00002C                     	ds	2
  1532  00002E                     ?_Voltage_ReadRegister:
  1533                           	callstack 0
  1534  00002E                     ?_Current_ReadRegister:
  1535                           	callstack 0
  1536  00002E                     ?___flsub:
  1537                           	callstack 0
  1538  00002E                     ___flge@ff1:
  1539                           	callstack 0
  1540  00002E                     ___flsub@b:
  1541                           	callstack 0
  1542                           
  1543                           ; 4 bytes @ 0x2D
  1544  00002E                     	ds	4
  1545  000032                     ??_Voltage_ReadRegister:
  1546  000032                     ??_Current_ReadRegister:
  1547  000032                     ___flge@ff2:
  1548                           	callstack 0
  1549  000032                     ___flsub@a:
  1550                           	callstack 0
  1551                           
  1552                           ; 4 bytes @ 0x31
  1553  000032                     	ds	2
  1554  000034                     Voltage_ReadRegister@temp_b:
  1555                           	callstack 0
  1556  000034                     Current_ReadRegister@temp_d:
  1557                           	callstack 0
  1558                           
  1559                           ; 2 bytes @ 0x33
  1560  000034                     	ds	2
  1561  000036                     ??___flge:
  1562  000036                     Voltage_ReadRegister@temp_a:
  1563                           	callstack 0
  1564  000036                     Current_ReadRegister@temp_c:
  1565                           	callstack 0
  1566                           
  1567                           ; 1 bytes @ 0x35
  1568  000036                     	ds	4
  1569  00003A                     ?_efgtoa:
  1570                           	callstack 0
  1571  00003A                     efgtoa@fp:
  1572                           	callstack 0
  1573                           
  1574                           ; 2 bytes @ 0x39
  1575  00003A                     	ds	2
  1576  00003C                     efgtoa@f:
  1577                           	callstack 0
  1578                           
  1579                           ; 4 bytes @ 0x3B
  1580  00003C                     	ds	4
  1581  000040                     efgtoa@c:
  1582                           	callstack 0
  1583                           
  1584                           ; 1 bytes @ 0x3F
  1585  000040                     	ds	1
  1586  000041                     ??_efgtoa:
  1587                           
  1588                           ; 1 bytes @ 0x40
  1589  000041                     	ds	5
  1590  000046                     ?_vfpfcnvrt:
  1591                           	callstack 0
  1592  000046                     vfpfcnvrt@fp:
  1593                           	callstack 0
  1594                           
  1595                           ; 2 bytes @ 0x45
  1596  000046                     	ds	2
  1597  000048                     vfpfcnvrt@fmt:
  1598                           	callstack 0
  1599                           
  1600                           ; 2 bytes @ 0x47
  1601  000048                     	ds	2
  1602  00004A                     vfpfcnvrt@ap:
  1603                           	callstack 0
  1604                           
  1605                           ; 2 bytes @ 0x49
  1606  00004A                     	ds	2
  1607  00004C                     ??_vfpfcnvrt:
  1608                           
  1609                           ; 1 bytes @ 0x4B
  1610  00004C                     	ds	4
  1611  000050                     _vfpfcnvrt$2180:
  1612                           	callstack 0
  1613                           
  1614                           ; 2 bytes @ 0x4F
  1615  000050                     	ds	2
  1616  000052                     _vfpfcnvrt$2184:
  1617                           	callstack 0
  1618                           
  1619                           ; 2 bytes @ 0x51
  1620  000052                     	ds	2
  1621  000054                     vfpfcnvrt@f:
  1622                           	callstack 0
  1623                           
  1624                           ; 4 bytes @ 0x53
  1625  000054                     	ds	4
  1626  000058                     vfpfcnvrt@ct:
  1627                           	callstack 0
  1628                           
  1629                           ; 3 bytes @ 0x57
  1630  000058                     	ds	3
  1631  00005B                     vfpfcnvrt@c:
  1632                           	callstack 0
  1633                           
  1634                           ; 1 bytes @ 0x5A
  1635  00005B                     	ds	1
  1636  00005C                     vfprintf@cfmt:
  1637                           	callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x5B
  1640  00005C                     	ds	2
  1641  00005E                     ??_main:
  1642                           
  1643                           ; 1 bytes @ 0x5D
  1644  00005E                     	ds	2
  1645                           
  1646 ;;
  1647 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1648 ;;
  1649 ;; *************** function _main *****************
  1650 ;; Defined at:
  1651 ;;		line 58 in file "main.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;		None
  1654 ;; Auto vars:     Size  Location     Type
  1655 ;;		None
  1656 ;; Return value:  Size  Location     Type
  1657 ;;                  1    wreg      void 
  1658 ;; Registers used:
  1659 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  1660 ;; Tracked objects:
  1661 ;;		On entry : 0/0
  1662 ;;		On exit  : 0/0
  1663 ;;		Unchanged: 0/0
  1664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1665 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1667 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1668 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1669 ;;Total ram usage:        2 bytes
  1670 ;; Hardware stack levels required when called:   12
  1671 ;; This function calls:
  1672 ;;		_Current_ReadRegister
  1673 ;;		_I2C_Initialize
  1674 ;;		_I2C_Master_Init
  1675 ;;		_Oled_Clear
  1676 ;;		_Oled_Init
  1677 ;;		_Oled_SelectPage
  1678 ;;		_Oled_WriteString
  1679 ;;		_Power_ReadRegister
  1680 ;;		_SYSTEM_Initialize
  1681 ;;		_Voltage_ReadRegister
  1682 ;;		_sprintf
  1683 ;; This function is called by:
  1684 ;;		Startup code after reset
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text0
  1689  00DD28                     __ptext0:
  1690                           	callstack 0
  1691  00DD28                     _main:
  1692                           	callstack 19
  1693  00DD28                     
  1694                           ;main.c: 61:     SYSTEM_Initialize();
  1695  00DD28  ECBA  F060         	call	_SYSTEM_Initialize	;wreg free
  1696                           
  1697                           ;main.c: 78:     I2C_Initialize();
  1698  00DD2C  ECF2  F060         	call	_I2C_Initialize	;wreg free
  1699  00DD30                     
  1700                           ;main.c: 81:     Oled_Init();
  1701  00DD30  EC32  F066         	call	_Oled_Init	;wreg free
  1702  00DD34                     
  1703                           ;main.c: 82:     Oled_Clear();
  1704  00DD34  EC37  F062         	call	_Oled_Clear	;wreg free
  1705  00DD38                     
  1706                           ;main.c: 83:     Oled_SelectPage(0);
  1707  00DD38  0E00               	movlw	0
  1708  00DD3A  EC1E  F061         	call	_Oled_SelectPage
  1709  00DD3E                     
  1710                           ;main.c: 84:     Oled_WriteString("OI");
  1711  00DD3E  0EFC               	movlw	low STR_1
  1712  00DD40  6E21               	movwf	Oled_WriteString@characters^0,c
  1713  00DD42  0EFF               	movlw	high STR_1
  1714  00DD44  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1715  00DD46  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1716  00DD4A                     
  1717                           ;main.c: 85:     Oled_Clear();
  1718  00DD4A  EC37  F062         	call	_Oled_Clear	;wreg free
  1719  00DD4E                     
  1720                           ;main.c: 86:     Oled_SelectPage(1);
  1721  00DD4E  0E01               	movlw	1
  1722  00DD50  EC1E  F061         	call	_Oled_SelectPage
  1723  00DD54                     
  1724                           ;main.c: 87:     Oled_WriteString("OLA");
  1725  00DD54  0EF5               	movlw	low STR_2
  1726  00DD56  6E21               	movwf	Oled_WriteString@characters^0,c
  1727  00DD58  0EFF               	movlw	high STR_2
  1728  00DD5A  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1729  00DD5C  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1730  00DD60                     
  1731                           ;main.c: 89:     _delay((unsigned long)((600)*(8000000/4000.0)));
  1732  00DD60  0E07               	movlw	7
  1733  00DD62  6E5F               	movwf	(??_main+1)^0,c
  1734  00DD64  0E17               	movlw	23
  1735  00DD66  6E5E               	movwf	??_main^0,c
  1736  00DD68  0E6A               	movlw	106
  1737  00DD6A                     u5927:
  1738  00DD6A  2EE8               	decfsz	wreg,f,c
  1739  00DD6C  D7FE               	bra	u5927
  1740  00DD6E  2E5E               	decfsz	??_main^0,f,c
  1741  00DD70  D7FC               	bra	u5927
  1742  00DD72  2E5F               	decfsz	(??_main+1)^0,f,c
  1743  00DD74  D7FA               	bra	u5927
  1744  00DD76  D000               	nop2	
  1745  00DD78                     l6312:
  1746                           
  1747                           ;main.c: 91:     I2C_Master_Init(400000);
  1748  00DD78  0E80               	movlw	128
  1749  00DD7A  6E0E               	movwf	I2C_Master_Init@c^0,c
  1750  00DD7C  0E1A               	movlw	26
  1751  00DD7E  6E0F               	movwf	(I2C_Master_Init@c+1)^0,c
  1752  00DD80  0E06               	movlw	6
  1753  00DD82  6E10               	movwf	(I2C_Master_Init@c+2)^0,c
  1754  00DD84  0E00               	movlw	0
  1755  00DD86  6E11               	movwf	(I2C_Master_Init@c+3)^0,c
  1756  00DD88  ECDD  F063         	call	_I2C_Master_Init	;wreg free
  1757  00DD8C                     
  1758                           ;main.c: 93:     {;main.c: 94:        Voltage = Voltage_ReadRegister();
  1759  00DD8C  EC61  F06C         	call	_Voltage_ReadRegister	;wreg free
  1760  00DD90  C02E  F0CC         	movff	?_Voltage_ReadRegister,_Voltage
  1761  00DD94  C02F  F0CD         	movff	?_Voltage_ReadRegister+1,_Voltage+1
  1762  00DD98  C030  F0CE         	movff	?_Voltage_ReadRegister+2,_Voltage+2
  1763  00DD9C  C031  F0CF         	movff	?_Voltage_ReadRegister+3,_Voltage+3
  1764  00DDA0                     
  1765                           ;main.c: 95:        Current = Current_ReadRegister();
  1766  00DDA0  ECD5  F06B         	call	_Current_ReadRegister	;wreg free
  1767  00DDA4  C02E  F0C8         	movff	?_Current_ReadRegister,_Current
  1768  00DDA8  C02F  F0C9         	movff	?_Current_ReadRegister+1,_Current+1
  1769  00DDAC  C030  F0CA         	movff	?_Current_ReadRegister+2,_Current+2
  1770  00DDB0  C031  F0CB         	movff	?_Current_ReadRegister+3,_Current+3
  1771  00DDB4                     
  1772                           ;main.c: 96:        Power = Power_ReadRegister();
  1773  00DDB4  EC51  F06B         	call	_Power_ReadRegister	;wreg free
  1774  00DDB8  C01A  F0C4         	movff	?_Power_ReadRegister,_Power
  1775  00DDBC  C01B  F0C5         	movff	?_Power_ReadRegister+1,_Power+1
  1776  00DDC0  C01C  F0C6         	movff	?_Power_ReadRegister+2,_Power+2
  1777  00DDC4  C01D  F0C7         	movff	?_Power_ReadRegister+3,_Power+3
  1778  00DDC8                     
  1779                           ;main.c: 97:        sprintf(voltage_str, "%.2f",Voltage);
  1780  00DDC8  0EEB               	movlw	low _voltage_str
  1781  00DDCA  0100               	movlb	0	; () banked
  1782  00DDCC  6F9E               	movwf	sprintf@s& (0+255),b
  1783  00DDCE  0E00               	movlw	high _voltage_str
  1784  00DDD0  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1785  00DDD2  0EE0               	movlw	low STR_3
  1786  00DDD4  6FA0               	movwf	sprintf@fmt& (0+255),b
  1787  00DDD6  0EFF               	movlw	high STR_3
  1788  00DDD8  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1789  00DDDA  C0CC  F0A2         	movff	_Voltage,?_sprintf+4
  1790  00DDDE  C0CD  F0A3         	movff	_Voltage+1,?_sprintf+5
  1791  00DDE2  C0CE  F0A4         	movff	_Voltage+2,?_sprintf+6
  1792  00DDE6  C0CF  F0A5         	movff	_Voltage+3,?_sprintf+7
  1793  00DDEA  EC87  F063         	call	_sprintf	;wreg free
  1794  00DDEE                     
  1795                           ;main.c: 98:        sprintf(current_str, "%.2f",Current);
  1796  00DDEE  0EE5               	movlw	low _current_str
  1797  00DDF0  0100               	movlb	0	; () banked
  1798  00DDF2  6F9E               	movwf	sprintf@s& (0+255),b
  1799  00DDF4  0E00               	movlw	high _current_str
  1800  00DDF6  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1801  00DDF8  0EE0               	movlw	low STR_3
  1802  00DDFA  6FA0               	movwf	sprintf@fmt& (0+255),b
  1803  00DDFC  0EFF               	movlw	high STR_3
  1804  00DDFE  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1805  00DE00  C0C8  F0A2         	movff	_Current,?_sprintf+4
  1806  00DE04  C0C9  F0A3         	movff	_Current+1,?_sprintf+5
  1807  00DE08  C0CA  F0A4         	movff	_Current+2,?_sprintf+6
  1808  00DE0C  C0CB  F0A5         	movff	_Current+3,?_sprintf+7
  1809  00DE10  EC87  F063         	call	_sprintf	;wreg free
  1810  00DE14                     
  1811                           ;main.c: 99:        sprintf(power_str, "%.2f",Power);
  1812  00DE14  0EDF               	movlw	low _power_str
  1813  00DE16  0100               	movlb	0	; () banked
  1814  00DE18  6F9E               	movwf	sprintf@s& (0+255),b
  1815  00DE1A  0E00               	movlw	high _power_str
  1816  00DE1C  6F9F               	movwf	(sprintf@s+1)& (0+255),b
  1817  00DE1E  0EE0               	movlw	low STR_3
  1818  00DE20  6FA0               	movwf	sprintf@fmt& (0+255),b
  1819  00DE22  0EFF               	movlw	high STR_3
  1820  00DE24  6FA1               	movwf	(sprintf@fmt+1)& (0+255),b
  1821  00DE26  C0C4  F0A2         	movff	_Power,?_sprintf+4
  1822  00DE2A  C0C5  F0A3         	movff	_Power+1,?_sprintf+5
  1823  00DE2E  C0C6  F0A4         	movff	_Power+2,?_sprintf+6
  1824  00DE32  C0C7  F0A5         	movff	_Power+3,?_sprintf+7
  1825  00DE36  EC87  F063         	call	_sprintf	;wreg free
  1826  00DE3A                     
  1827                           ;main.c: 100:        _delay((unsigned long)((600)*(8000000/4000.0)));
  1828  00DE3A  0E07               	movlw	7
  1829  00DE3C  6E5F               	movwf	(??_main+1)^0,c
  1830  00DE3E  0E17               	movlw	23
  1831  00DE40  6E5E               	movwf	??_main^0,c
  1832  00DE42  0E6A               	movlw	106
  1833  00DE44                     u5937:
  1834  00DE44  2EE8               	decfsz	wreg,f,c
  1835  00DE46  D7FE               	bra	u5937
  1836  00DE48  2E5E               	decfsz	??_main^0,f,c
  1837  00DE4A  D7FC               	bra	u5937
  1838  00DE4C  2E5F               	decfsz	(??_main+1)^0,f,c
  1839  00DE4E  D7FA               	bra	u5937
  1840  00DE50  D000               	nop2	
  1841  00DE52                     
  1842                           ;main.c: 101:        Oled_Clear();
  1843  00DE52  EC37  F062         	call	_Oled_Clear	;wreg free
  1844  00DE56                     
  1845                           ;main.c: 102:        Oled_SelectPage(0);
  1846  00DE56  0E00               	movlw	0
  1847  00DE58  EC1E  F061         	call	_Oled_SelectPage
  1848  00DE5C                     
  1849                           ;main.c: 103:        Oled_WriteString("Tensao: ");
  1850  00DE5C  0ED7               	movlw	low STR_6
  1851  00DE5E  6E21               	movwf	Oled_WriteString@characters^0,c
  1852  00DE60  0EFF               	movlw	high STR_6
  1853  00DE62  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1854  00DE64  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1855  00DE68                     
  1856                           ;main.c: 104:        Oled_WriteString(voltage_str);
  1857  00DE68  0EEB               	movlw	low _voltage_str
  1858  00DE6A  6E21               	movwf	Oled_WriteString@characters^0,c
  1859  00DE6C  0E00               	movlw	high _voltage_str
  1860  00DE6E  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1861  00DE70  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1862  00DE74                     
  1863                           ;main.c: 105:        _delay((unsigned long)((600)*(8000000/4000.0)));
  1864  00DE74  0E07               	movlw	7
  1865  00DE76  6E5F               	movwf	(??_main+1)^0,c
  1866  00DE78  0E17               	movlw	23
  1867  00DE7A  6E5E               	movwf	??_main^0,c
  1868  00DE7C  0E6A               	movlw	106
  1869  00DE7E                     u5947:
  1870  00DE7E  2EE8               	decfsz	wreg,f,c
  1871  00DE80  D7FE               	bra	u5947
  1872  00DE82  2E5E               	decfsz	??_main^0,f,c
  1873  00DE84  D7FC               	bra	u5947
  1874  00DE86  2E5F               	decfsz	(??_main+1)^0,f,c
  1875  00DE88  D7FA               	bra	u5947
  1876  00DE8A  D000               	nop2	
  1877  00DE8C                     
  1878                           ;main.c: 106:        Oled_SelectPage(1);
  1879  00DE8C  0E01               	movlw	1
  1880  00DE8E  EC1E  F061         	call	_Oled_SelectPage
  1881  00DE92                     
  1882                           ;main.c: 107:        Oled_WriteString("Corrente: ");
  1883  00DE92  0ECC               	movlw	low STR_7
  1884  00DE94  6E21               	movwf	Oled_WriteString@characters^0,c
  1885  00DE96  0EFF               	movlw	high STR_7
  1886  00DE98  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1887  00DE9A  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1888  00DE9E                     
  1889                           ;main.c: 108:        Oled_WriteString(current_str);
  1890  00DE9E  0EE5               	movlw	low _current_str
  1891  00DEA0  6E21               	movwf	Oled_WriteString@characters^0,c
  1892  00DEA2  0E00               	movlw	high _current_str
  1893  00DEA4  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1894  00DEA6  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1895  00DEAA                     
  1896                           ;main.c: 109:        _delay((unsigned long)((600)*(8000000/4000.0)));
  1897  00DEAA  0E07               	movlw	7
  1898  00DEAC  6E5F               	movwf	(??_main+1)^0,c
  1899  00DEAE  0E17               	movlw	23
  1900  00DEB0  6E5E               	movwf	??_main^0,c
  1901  00DEB2  0E6A               	movlw	106
  1902  00DEB4                     u5957:
  1903  00DEB4  2EE8               	decfsz	wreg,f,c
  1904  00DEB6  D7FE               	bra	u5957
  1905  00DEB8  2E5E               	decfsz	??_main^0,f,c
  1906  00DEBA  D7FC               	bra	u5957
  1907  00DEBC  2E5F               	decfsz	(??_main+1)^0,f,c
  1908  00DEBE  D7FA               	bra	u5957
  1909  00DEC0  D000               	nop2	
  1910  00DEC2                     
  1911                           ;main.c: 110:        Oled_SelectPage(2);
  1912  00DEC2  0E02               	movlw	2
  1913  00DEC4  EC1E  F061         	call	_Oled_SelectPage
  1914  00DEC8                     
  1915                           ;main.c: 111:        Oled_WriteString("Potencia: ");
  1916  00DEC8  0EC1               	movlw	low STR_8
  1917  00DECA  6E21               	movwf	Oled_WriteString@characters^0,c
  1918  00DECC  0EFF               	movlw	high STR_8
  1919  00DECE  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1920  00DED0  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1921  00DED4                     
  1922                           ;main.c: 112:        Oled_WriteString(power_str);
  1923  00DED4  0EDF               	movlw	low _power_str
  1924  00DED6  6E21               	movwf	Oled_WriteString@characters^0,c
  1925  00DED8  0E00               	movlw	high _power_str
  1926  00DEDA  6E22               	movwf	(Oled_WriteString@characters+1)^0,c
  1927  00DEDC  EC6A  F064         	call	_Oled_WriteString	;wreg free
  1928  00DEE0                     
  1929                           ;main.c: 113:        _delay((unsigned long)((6000)*(8000000/4000.0)));
  1930  00DEE0  0E3D               	movlw	61
  1931  00DEE2  6E5F               	movwf	(??_main+1)^0,c
  1932  00DEE4  0EE1               	movlw	225
  1933  00DEE6  6E5E               	movwf	??_main^0,c
  1934  00DEE8  0E40               	movlw	64
  1935  00DEEA                     u5967:
  1936  00DEEA  2EE8               	decfsz	wreg,f,c
  1937  00DEEC  D7FE               	bra	u5967
  1938  00DEEE  2E5E               	decfsz	??_main^0,f,c
  1939  00DEF0  D7FC               	bra	u5967
  1940  00DEF2  2E5F               	decfsz	(??_main+1)^0,f,c
  1941  00DEF4  D7FA               	bra	u5967
  1942  00DEF6                     
  1943                           ;main.c: 114:        Oled_Clear();
  1944  00DEF6  EC37  F062         	call	_Oled_Clear	;wreg free
  1945  00DEFA  EFBC  F06E         	goto	l6312
  1946  00DEFE  EF00  F000         	goto	start
  1947  00DF02                     __end_of_main:
  1948                           	callstack 0
  1949                           
  1950 ;; *************** function _sprintf *****************
  1951 ;; Defined at:
  1952 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  1953 ;; Parameters:    Size  Location     Type
  1954 ;;  s               2   62[BANK0 ] PTR unsigned char 
  1955 ;;		 -> power_str(6), current_str(6), voltage_str(6), 
  1956 ;;  fmt             2   64[BANK0 ] PTR const unsigned char 
  1957 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  1958 ;; Auto vars:     Size  Location     Type
  1959 ;;  f               6   74[BANK0 ] struct _IO_FILE
  1960 ;;  ap              2   72[BANK0 ] PTR void [1]
  1961 ;;		 -> ?_sprintf(2), 
  1962 ;;  ret             2    0        int 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2   62[BANK0 ] int 
  1965 ;; Registers used:
  1966 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1972 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1973 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1974 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1975 ;;      Totals:         0      18       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;Total ram usage:       18 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    7
  1979 ;; This function calls:
  1980 ;;		_vfprintf
  1981 ;; This function is called by:
  1982 ;;		_main
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           	psect	text1
  1987  00C70E                     __ptext1:
  1988                           	callstack 0
  1989  00C70E                     _sprintf:
  1990                           	callstack 23
  1991  00C70E  0EA2               	movlw	low (?_sprintf+4)
  1992  00C710  0100               	movlb	0	; () banked
  1993  00C712  6FA8               	movwf	sprintf@ap& (0+255),b
  1994  00C714  0E00               	movlw	high (?_sprintf+4)
  1995  00C716  6FA9               	movwf	(sprintf@ap+1)& (0+255),b
  1996  00C718  C09E  F0AA         	movff	sprintf@s,sprintf@f
  1997  00C71C  C09F  F0AB         	movff	sprintf@s+1,sprintf@f+1
  1998  00C720                     
  1999                           ; BSR set to: 0
  2000  00C720  0E00               	movlw	0
  2001  00C722  6FAD               	movwf	(sprintf@f+3)& (0+255),b
  2002  00C724  0E00               	movlw	0
  2003  00C726  6FAC               	movwf	(sprintf@f+2)& (0+255),b
  2004  00C728                     
  2005                           ; BSR set to: 0
  2006  00C728  0E00               	movlw	0
  2007  00C72A  6FAF               	movwf	(sprintf@f+5)& (0+255),b
  2008  00C72C  0E00               	movlw	0
  2009  00C72E  6FAE               	movwf	(sprintf@f+4)& (0+255),b
  2010  00C730                     
  2011                           ; BSR set to: 0
  2012  00C730  0EAA               	movlw	low sprintf@f
  2013  00C732  6F98               	movwf	vfprintf@fp& (0+255),b
  2014  00C734  0E00               	movlw	high sprintf@f
  2015  00C736  6F99               	movwf	(vfprintf@fp+1)& (0+255),b
  2016  00C738  C0A0  F09A         	movff	sprintf@fmt,vfprintf@fmt
  2017  00C73C  C0A1  F09B         	movff	sprintf@fmt+1,vfprintf@fmt+1
  2018  00C740  0EA8               	movlw	low sprintf@ap
  2019  00C742  6F9C               	movwf	vfprintf@ap& (0+255),b
  2020  00C744  0E00               	movlw	high sprintf@ap
  2021  00C746  6F9D               	movwf	(vfprintf@ap+1)& (0+255),b
  2022  00C748  EC9B  F064         	call	_vfprintf	;wreg free
  2023  00C74C  0100               	movlb	0	; () banked
  2024  00C74E  51AC               	movf	(sprintf@f+2)& (0+255),w,b
  2025  00C750  259E               	addwf	sprintf@s& (0+255),w,b
  2026  00C752  6ED9               	movwf	fsr2l,c
  2027  00C754  51AD               	movf	(sprintf@f+3)& (0+255),w,b
  2028  00C756  219F               	addwfc	(sprintf@s+1)& (0+255),w,b
  2029  00C758  6EDA               	movwf	fsr2h,c
  2030  00C75A  0E00               	movlw	0
  2031  00C75C  6EDF               	movwf	indf2,c
  2032  00C75E                     
  2033                           ; BSR set to: 0
  2034  00C75E  0012               	return		;funcret
  2035  00C760                     __end_of_sprintf:
  2036                           	callstack 0
  2037                           
  2038 ;; *************** function _vfprintf *****************
  2039 ;; Defined at:
  2040 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2041 ;; Parameters:    Size  Location     Type
  2042 ;;  fp              2   56[BANK0 ] PTR struct _IO_FILE
  2043 ;;		 -> sprintf@f(6), 
  2044 ;;  fmt             2   58[BANK0 ] PTR const unsigned char 
  2045 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2046 ;;  ap              2   60[BANK0 ] PTR PTR void 
  2047 ;;		 -> sprintf@ap(2), 
  2048 ;; Auto vars:     Size  Location     Type
  2049 ;;  cfmt            2   91[COMRAM] PTR unsigned char 
  2050 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  2051 ;; Return value:  Size  Location     Type
  2052 ;;                  2   56[BANK0 ] int 
  2053 ;; Registers used:
  2054 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2055 ;; Tracked objects:
  2056 ;;		On entry : 0/0
  2057 ;;		On exit  : 0/0
  2058 ;;		Unchanged: 0/0
  2059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2061 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2063 ;;      Totals:         2       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2064 ;;Total ram usage:        8 bytes
  2065 ;; Hardware stack levels used:    1
  2066 ;; Hardware stack levels required when called:    6
  2067 ;; This function calls:
  2068 ;;		_vfpfcnvrt
  2069 ;; This function is called by:
  2070 ;;		_sprintf
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text2
  2075  00C936                     __ptext2:
  2076                           	callstack 0
  2077  00C936                     _vfprintf:
  2078                           	callstack 23
  2079  00C936                     
  2080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  2081  00C936  C09A  F05C         	movff	vfprintf@fmt,vfprintf@cfmt
  2082  00C93A  C09B  F05D         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  2083  00C93E                     
  2084                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  2085  00C93E  0E00               	movlw	0
  2086  00C940  0100               	movlb	0	; () banked
  2087  00C942  6FD1               	movwf	(_nout+1)& (0+255),b
  2088  00C944  0E00               	movlw	0
  2089  00C946  6FD0               	movwf	_nout& (0+255),b
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2092  00C948  EFB9  F064         	goto	l6026
  2093  00C94C                     l6024:
  2094                           
  2095                           ; BSR set to: 0
  2096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  2097  00C94C  C098  F046         	movff	vfprintf@fp,vfpfcnvrt@fp
  2098  00C950  C099  F047         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  2099  00C954  0E5C               	movlw	low vfprintf@cfmt
  2100  00C956  6E48               	movwf	vfpfcnvrt@fmt^0,c
  2101  00C958  0E00               	movlw	high vfprintf@cfmt
  2102  00C95A  6E49               	movwf	(vfpfcnvrt@fmt+1)^0,c
  2103  00C95C  C09C  F04A         	movff	vfprintf@ap,vfpfcnvrt@ap
  2104  00C960  C09D  F04B         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  2105  00C964  EC6C  F074         	call	_vfpfcnvrt	;wreg free
  2106  00C968  5046               	movf	?_vfpfcnvrt^0,w,c
  2107  00C96A  0100               	movlb	0	; () banked
  2108  00C96C  27D0               	addwf	_nout& (0+255),f,b
  2109  00C96E  5047               	movf	(?_vfpfcnvrt+1)^0,w,c
  2110  00C970  23D1               	addwfc	(_nout+1)& (0+255),f,b
  2111  00C972                     l6026:
  2112                           
  2113                           ; BSR set to: 0
  2114                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  2115  00C972  C05C  FFF6         	movff	vfprintf@cfmt,tblptrl
  2116  00C976  C05D  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  2117  00C97A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2118  00C97A  6AF8               	clrf	tblptru,c
  2119  00C97C                     	endif
  2120  00C97C                     	if	0	;tblptru may be non-zero
  2121  00C97C                     	endif
  2122  00C97C  0008               	tblrd		*
  2123  00C97E  50F5               	movf	tablat,w,c
  2124  00C980  0900               	iorlw	0
  2125  00C982  A4D8               	btfss	status,2,c
  2126  00C984  EFC6  F064         	goto	u5691
  2127  00C988  EFC8  F064         	goto	u5690
  2128  00C98C                     u5691:
  2129  00C98C  EFA6  F064         	goto	l6024
  2130  00C990                     u5690:
  2131  00C990                     
  2132                           ; BSR set to: 0
  2133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  2134  00C990  C0D0  F098         	movff	_nout,?_vfprintf
  2135  00C994  C0D1  F099         	movff	_nout+1,?_vfprintf+1
  2136  00C998                     
  2137                           ; BSR set to: 0
  2138  00C998  0012               	return		;funcret
  2139  00C99A                     __end_of_vfprintf:
  2140                           	callstack 0
  2141                           
  2142 ;; *************** function _vfpfcnvrt *****************
  2143 ;; Defined at:
  2144 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  fp              2   69[COMRAM] PTR struct _IO_FILE
  2147 ;;		 -> sprintf@f(6), 
  2148 ;;  fmt             2   71[COMRAM] PTR PTR unsigned char 
  2149 ;;		 -> vfprintf@cfmt(2), 
  2150 ;;  ap              2   73[COMRAM] PTR PTR void 
  2151 ;;		 -> sprintf@ap(2), 
  2152 ;; Auto vars:     Size  Location     Type
  2153 ;;  llu             8    0        unsigned long long 
  2154 ;;  ll              8    0        long long 
  2155 ;;  f               4   83[COMRAM] long long 
  2156 ;;  ct              3   87[COMRAM] unsigned char [3]
  2157 ;;  vp              3    0        PTR void 
  2158 ;;  cp              3    0        PTR unsigned char 
  2159 ;;  i               2    0        int 
  2160 ;;  done            2    0        int 
  2161 ;;  c               1   90[COMRAM] unsigned char 
  2162 ;; Return value:  Size  Location     Type
  2163 ;;                  2   69[COMRAM] int 
  2164 ;; Registers used:
  2165 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2166 ;; Tracked objects:
  2167 ;;		On entry : 0/0
  2168 ;;		On exit  : 0/0
  2169 ;;		Unchanged: 0/0
  2170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2171 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2173 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2174 ;;      Totals:        22       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2175 ;;Total ram usage:       22 bytes
  2176 ;; Hardware stack levels used:    1
  2177 ;; Hardware stack levels required when called:    5
  2178 ;; This function calls:
  2179 ;;		_atoi
  2180 ;;		_efgtoa
  2181 ;;		_fputc
  2182 ;;		_isdigit
  2183 ;;		_isupper
  2184 ;;		_strncmp
  2185 ;;		_tolower
  2186 ;; This function is called by:
  2187 ;;		_vfprintf
  2188 ;; This function uses a non-reentrant model
  2189 ;;
  2190                           
  2191                           	psect	text3
  2192  00E8D8                     __ptext3:
  2193                           	callstack 0
  2194  00E8D8                     _vfpfcnvrt:
  2195                           	callstack 23
  2196  00E8D8                     
  2197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  2198  00E8D8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2199  00E8DC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2200  00E8E0  CFDE FFF6          	movff	postinc2,tblptrl
  2201  00E8E4  CFDD FFF7          	movff	postdec2,tblptrh
  2202  00E8E8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2203  00E8E8  6AF8               	clrf	tblptru,c
  2204  00E8EA                     	endif
  2205  00E8EA                     	if	0	;tblptru may be non-zero
  2206  00E8EA                     	endif
  2207  00E8EA  0008               	tblrd		*
  2208  00E8EC  50F5               	movf	tablat,w,c
  2209  00E8EE  0A25               	xorlw	37
  2210  00E8F0  A4D8               	btfss	status,2,c
  2211  00E8F2  EF7D  F074         	goto	u5391
  2212  00E8F6  EF7F  F074         	goto	u5390
  2213  00E8FA                     u5391:
  2214  00E8FA  EF8B  F076         	goto	l5886
  2215  00E8FE                     u5390:
  2216  00E8FE                     
  2217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  2218  00E8FE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2219  00E902  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2220  00E906  2ADE               	incf	postinc2,f,c
  2221  00E908  0E00               	movlw	0
  2222  00E90A  22DD               	addwfc	postdec2,f,c
  2223  00E90C                     
  2224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  2225  00E90C  0E00               	movlw	0
  2226  00E90E  0100               	movlb	0	; () banked
  2227  00E910  6FD3               	movwf	(_width+1)& (0+255),b
  2228  00E912  0E00               	movlw	0
  2229  00E914  6FD2               	movwf	_width& (0+255),b
  2230  00E916  C0D2  F0D6         	movff	_width,_flags
  2231  00E91A  C0D3  F0D7         	movff	_width+1,_flags+1
  2232  00E91E                     
  2233                           ; BSR set to: 0
  2234                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  2235  00E91E  69D4               	setf	_prec& (0+255),b
  2236  00E920  69D5               	setf	(_prec+1)& (0+255),b
  2237  00E922                     
  2238                           ; BSR set to: 0
  2239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  2240  00E922  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2241  00E926  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2242  00E92A  CFDE FFF6          	movff	postinc2,tblptrl
  2243  00E92E  CFDD FFF7          	movff	postdec2,tblptrh
  2244  00E932                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2245  00E932  6AF8               	clrf	tblptru,c
  2246  00E934                     	endif
  2247  00E934                     	if	0	;tblptru may be non-zero
  2248  00E934                     	endif
  2249  00E934  0008               	tblrd		*
  2250  00E936  50F5               	movf	tablat,w,c
  2251  00E938  0A2E               	xorlw	46
  2252  00E93A  A4D8               	btfss	status,2,c
  2253  00E93C  EFA2  F074         	goto	u5401
  2254  00E940  EFA4  F074         	goto	u5400
  2255  00E944                     u5401:
  2256  00E944  EF23  F075         	goto	l5832
  2257  00E948                     u5400:
  2258  00E948                     
  2259                           ; BSR set to: 0
  2260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  2261  00E948  0E00               	movlw	0
  2262  00E94A  6FD5               	movwf	(_prec+1)& (0+255),b
  2263  00E94C  0E00               	movlw	0
  2264  00E94E  6FD4               	movwf	_prec& (0+255),b
  2265  00E950                     
  2266                           ; BSR set to: 0
  2267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  2268  00E950  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2269  00E954  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2270  00E958  2ADE               	incf	postinc2,f,c
  2271  00E95A  0E00               	movlw	0
  2272  00E95C  22DD               	addwfc	postdec2,f,c
  2273  00E95E                     
  2274                           ; BSR set to: 0
  2275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  2276  00E95E  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2277  00E962  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2278  00E966  CFDE FFF6          	movff	postinc2,tblptrl
  2279  00E96A  CFDD FFF7          	movff	postdec2,tblptrh
  2280  00E96E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2281  00E96E  6AF8               	clrf	tblptru,c
  2282  00E970                     	endif
  2283  00E970                     	if	0	;tblptru may be non-zero
  2284  00E970                     	endif
  2285  00E970  0008               	tblrd		*
  2286  00E972  50F5               	movf	tablat,w,c
  2287  00E974  0A2A               	xorlw	42
  2288  00E976  A4D8               	btfss	status,2,c
  2289  00E978  EFC0  F074         	goto	u5411
  2290  00E97C  EFC2  F074         	goto	u5410
  2291  00E980                     u5411:
  2292  00E980  EFDF  F074         	goto	l5822
  2293  00E984                     u5410:
  2294  00E984                     
  2295                           ; BSR set to: 0
  2296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  2297  00E984  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2298  00E988  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2299  00E98C  2ADE               	incf	postinc2,f,c
  2300  00E98E  0E00               	movlw	0
  2301  00E990  22DD               	addwfc	postdec2,f,c
  2302                           
  2303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  2304  00E992  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2305  00E996  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2306  00E99A  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2307  00E99E  0E02               	movlw	2
  2308  00E9A0  26DE               	addwf	postinc2,f,c
  2309  00E9A2  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2310  00E9A6  0E00               	movlw	0
  2311  00E9A8  22DD               	addwfc	postdec2,f,c
  2312  00E9AA  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2313  00E9AE  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2314  00E9B2  CFDE F0D4          	movff	postinc2,_prec
  2315  00E9B6  CFDD F0D5          	movff	postdec2,_prec+1
  2316                           
  2317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  2318  00E9BA  EF23  F075         	goto	l5832
  2319  00E9BE                     l5822:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  2323  00E9BE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2324  00E9C2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2325  00E9C6  CFDE F008          	movff	postinc2,atoi@s
  2326  00E9CA  CFDD F009          	movff	postdec2,atoi@s+1
  2327  00E9CE  ECED  F06C         	call	_atoi	;wreg free
  2328  00E9D2  C008  F0D4         	movff	?_atoi,_prec
  2329  00E9D6  C009  F0D5         	movff	?_atoi+1,_prec+1
  2330                           
  2331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  2332  00E9DA  EFF6  F074         	goto	l5826
  2333  00E9DE                     l5824:
  2334                           
  2335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  2336  00E9DE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2337  00E9E2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2338  00E9E6  2ADE               	incf	postinc2,f,c
  2339  00E9E8  0E00               	movlw	0
  2340  00E9EA  22DD               	addwfc	postdec2,f,c
  2341  00E9EC                     l5826:
  2342  00E9EC  0ED0               	movlw	208
  2343  00E9EE  6E4C               	movwf	??_vfpfcnvrt^0,c
  2344  00E9F0  0EFF               	movlw	255
  2345  00E9F2  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  2346  00E9F4  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2347  00E9F8  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2348  00E9FC  CFDE FFF6          	movff	postinc2,tblptrl
  2349  00EA00  CFDD FFF7          	movff	postdec2,tblptrh
  2350  00EA04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2351  00EA04  6AF8               	clrf	tblptru,c
  2352  00EA06                     	endif
  2353  00EA06                     	if	0	;tblptru may be non-zero
  2354  00EA06                     	endif
  2355  00EA06  0008               	tblrd		*
  2356  00EA08  50F5               	movf	tablat,w,c
  2357  00EA0A  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  2358  00EA0C  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  2359  00EA0E  504C               	movf	??_vfpfcnvrt^0,w,c
  2360  00EA10  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2361  00EA12  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2362  00EA14  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2363  00EA16  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2364  00EA18  E10A               	bnz	u5420
  2365  00EA1A  0E0A               	movlw	10
  2366  00EA1C  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2367  00EA1E  A0D8               	btfss	status,0,c
  2368  00EA20  EF14  F075         	goto	u5421
  2369  00EA24  EF17  F075         	goto	u5420
  2370  00EA28                     u5421:
  2371  00EA28  0E01               	movlw	1
  2372  00EA2A  EF18  F075         	goto	u5430
  2373  00EA2E                     u5420:
  2374  00EA2E  0E00               	movlw	0
  2375  00EA30                     u5430:
  2376  00EA30  6E50               	movwf	_vfpfcnvrt$2180^0,c
  2377  00EA32  6A51               	clrf	(_vfpfcnvrt$2180+1)^0,c
  2378  00EA34  5050               	movf	_vfpfcnvrt$2180^0,w,c
  2379  00EA36  1051               	iorwf	(_vfpfcnvrt$2180+1)^0,w,c
  2380  00EA38  A4D8               	btfss	status,2,c
  2381  00EA3A  EF21  F075         	goto	u5441
  2382  00EA3E  EF23  F075         	goto	u5440
  2383  00EA42                     u5441:
  2384  00EA42  EFEF  F074         	goto	l5824
  2385  00EA46                     u5440:
  2386  00EA46                     l5832:
  2387                           
  2388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  2389  00EA46  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2390  00EA4A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2391  00EA4E  CFDE FFF6          	movff	postinc2,tblptrl
  2392  00EA52  CFDD FFF7          	movff	postdec2,tblptrh
  2393  00EA56                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2394  00EA56  6AF8               	clrf	tblptru,c
  2395  00EA58                     	endif
  2396  00EA58                     	if	0	;tblptru may be non-zero
  2397  00EA58                     	endif
  2398  00EA58  0008               	tblrd		*
  2399  00EA5A  50F5               	movf	tablat,w,c
  2400  00EA5C  6E07               	movwf	tolower@c^0,c
  2401  00EA5E  6A08               	clrf	(tolower@c+1)^0,c
  2402  00EA60  EC3A  F064         	call	_tolower	;wreg free
  2403  00EA64  5007               	movf	?_tolower^0,w,c
  2404  00EA66  6E58               	movwf	vfpfcnvrt@ct^0,c
  2405  00EA68                     
  2406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  2407  00EA68  5058               	movf	vfpfcnvrt@ct^0,w,c
  2408  00EA6A  B4D8               	btfsc	status,2,c
  2409  00EA6C  EF3A  F075         	goto	u5451
  2410  00EA70  EF3C  F075         	goto	u5450
  2411  00EA74                     u5451:
  2412  00EA74  EF76  F075         	goto	l5842
  2413  00EA78                     u5450:
  2414  00EA78                     
  2415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  2416  00EA78  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2417  00EA7C  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2418  00EA80  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2419  00EA84  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2420  00EA88  0E01               	movlw	1
  2421  00EA8A  264C               	addwf	??_vfpfcnvrt^0,f,c
  2422  00EA8C  0E00               	movlw	0
  2423  00EA8E  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2424  00EA90  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2425  00EA94  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2426  00EA98                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2427  00EA98  6AF8               	clrf	tblptru,c
  2428  00EA9A                     	endif
  2429  00EA9A                     	if	0	;tblptru may be non-zero
  2430  00EA9A                     	endif
  2431  00EA9A  0008               	tblrd		*
  2432  00EA9C  50F5               	movf	tablat,w,c
  2433  00EA9E  6E07               	movwf	tolower@c^0,c
  2434  00EAA0  6A08               	clrf	(tolower@c+1)^0,c
  2435  00EAA2  EC3A  F064         	call	_tolower	;wreg free
  2436  00EAA6  5007               	movf	?_tolower^0,w,c
  2437  00EAA8  6E59               	movwf	(vfpfcnvrt@ct+1)^0,c
  2438  00EAAA                     
  2439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  2440  00EAAA  5059               	movf	(vfpfcnvrt@ct+1)^0,w,c
  2441  00EAAC  B4D8               	btfsc	status,2,c
  2442  00EAAE  EF5B  F075         	goto	u5461
  2443  00EAB2  EF5D  F075         	goto	u5460
  2444  00EAB6                     u5461:
  2445  00EAB6  EF76  F075         	goto	l5842
  2446  00EABA                     u5460:
  2447  00EABA                     
  2448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  2449  00EABA  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2450  00EABE  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2451  00EAC2  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2452  00EAC6  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2453  00EACA  0E02               	movlw	2
  2454  00EACC  264C               	addwf	??_vfpfcnvrt^0,f,c
  2455  00EACE  0E00               	movlw	0
  2456  00EAD0  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2457  00EAD2  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2458  00EAD6  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2459  00EADA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2460  00EADA  6AF8               	clrf	tblptru,c
  2461  00EADC                     	endif
  2462  00EADC                     	if	0	;tblptru may be non-zero
  2463  00EADC                     	endif
  2464  00EADC  0008               	tblrd		*
  2465  00EADE  50F5               	movf	tablat,w,c
  2466  00EAE0  6E07               	movwf	tolower@c^0,c
  2467  00EAE2  6A08               	clrf	(tolower@c+1)^0,c
  2468  00EAE4  EC3A  F064         	call	_tolower	;wreg free
  2469  00EAE8  5007               	movf	?_tolower^0,w,c
  2470  00EAEA  6E5A               	movwf	(vfpfcnvrt@ct+2)^0,c
  2471  00EAEC                     l5842:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  2474  00EAEC  0E66               	movlw	102
  2475  00EAEE  1858               	xorwf	vfpfcnvrt@ct^0,w,c
  2476  00EAF0  A4D8               	btfss	status,2,c
  2477  00EAF2  EF7D  F075         	goto	u5471
  2478  00EAF6  EF7F  F075         	goto	u5470
  2479  00EAFA                     u5471:
  2480  00EAFA  EFC0  F075         	goto	l5854
  2481  00EAFE                     u5470:
  2482  00EAFE                     
  2483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  2484  00EAFE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2485  00EB02  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2486  00EB06  CFDE FFF6          	movff	postinc2,tblptrl
  2487  00EB0A  CFDD FFF7          	movff	postdec2,tblptrh
  2488  00EB0E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2489  00EB0E  6AF8               	clrf	tblptru,c
  2490  00EB10                     	endif
  2491  00EB10                     	if	0	;tblptru may be non-zero
  2492  00EB10                     	endif
  2493  00EB10  0008               	tblrd		*
  2494  00EB12  CFF5 F05B          	movff	tablat,vfpfcnvrt@c
  2495  00EB16                     
  2496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  2497  00EB16  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2498  00EB1A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2499  00EB1E  2ADE               	incf	postinc2,f,c
  2500  00EB20  0E00               	movlw	0
  2501  00EB22  22DD               	addwfc	postdec2,f,c
  2502  00EB24                     
  2503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2504  00EB24  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2505  00EB28  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2506  00EB2C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2507  00EB30  0E04               	movlw	4
  2508  00EB32  26DE               	addwf	postinc2,f,c
  2509  00EB34  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2510  00EB38  0E00               	movlw	0
  2511  00EB3A  22DD               	addwfc	postdec2,f,c
  2512  00EB3C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2513  00EB40  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2514  00EB44  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2515  00EB48  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2516  00EB4C  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2517  00EB50  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2518  00EB54                     l5850:
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  2521  00EB54  C046  F03A         	movff	vfpfcnvrt@fp,efgtoa@fp
  2522  00EB58  C047  F03B         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  2523  00EB5C  C054  F03C         	movff	vfpfcnvrt@f,efgtoa@f
  2524  00EB60  C055  F03D         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  2525  00EB64  C056  F03E         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  2526  00EB68  C057  F03F         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  2527  00EB6C  C05B  F040         	movff	vfpfcnvrt@c,efgtoa@c
  2528  00EB70  EC08  F079         	call	_efgtoa	;wreg free
  2529  00EB74  C03A  F046         	movff	?_efgtoa,?_vfpfcnvrt
  2530  00EB78  C03B  F047         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  2531  00EB7C  EFA7  F076         	goto	l1648
  2532  00EB80                     l5854:
  2533                           
  2534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  2535  00EB80  0E58               	movlw	low vfpfcnvrt@ct
  2536  00EB82  6E01               	movwf	strncmp@_l^0,c
  2537  00EB84  0E00               	movlw	high vfpfcnvrt@ct
  2538  00EB86  6E02               	movwf	(strncmp@_l+1)^0,c
  2539  00EB88  0EF9               	movlw	low STR_17
  2540  00EB8A  6E03               	movwf	strncmp@_r^0,c
  2541  00EB8C  0EFF               	movlw	high STR_17
  2542  00EB8E  6E04               	movwf	(strncmp@_r+1)^0,c
  2543  00EB90  0E00               	movlw	0
  2544  00EB92  6E06               	movwf	(strncmp@n+1)^0,c
  2545  00EB94  0E02               	movlw	2
  2546  00EB96  6E05               	movwf	strncmp@n^0,c
  2547  00EB98  EC5F  F069         	call	_strncmp	;wreg free
  2548  00EB9C  5001               	movf	?_strncmp^0,w,c
  2549  00EB9E  1002               	iorwf	(?_strncmp+1)^0,w,c
  2550  00EBA0  A4D8               	btfss	status,2,c
  2551  00EBA2  EFD5  F075         	goto	u5481
  2552  00EBA6  EFD7  F075         	goto	u5480
  2553  00EBAA                     u5481:
  2554  00EBAA  EF54  F076         	goto	l5870
  2555  00EBAE                     u5480:
  2556  00EBAE                     
  2557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  2558  00EBAE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2559  00EBB2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2560  00EBB6  CFDE F04C          	movff	postinc2,??_vfpfcnvrt
  2561  00EBBA  CFDD F04D          	movff	postdec2,??_vfpfcnvrt+1
  2562  00EBBE  0E01               	movlw	1
  2563  00EBC0  264C               	addwf	??_vfpfcnvrt^0,f,c
  2564  00EBC2  0E00               	movlw	0
  2565  00EBC4  224D               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  2566  00EBC6  C04C  FFF6         	movff	??_vfpfcnvrt,tblptrl
  2567  00EBCA  C04D  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  2568  00EBCE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2569  00EBCE  6AF8               	clrf	tblptru,c
  2570  00EBD0                     	endif
  2571  00EBD0                     	if	0	;tblptru may be non-zero
  2572  00EBD0                     	endif
  2573  00EBD0  0008               	tblrd		*
  2574  00EBD2  CFF5 F05B          	movff	tablat,vfpfcnvrt@c
  2575  00EBD6  0EBF               	movlw	191
  2576  00EBD8  6E4C               	movwf	??_vfpfcnvrt^0,c
  2577  00EBDA  0EFF               	movlw	255
  2578  00EBDC  6E4D               	movwf	(??_vfpfcnvrt+1)^0,c
  2579  00EBDE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2580  00EBE2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2581  00EBE6  CFDE FFF6          	movff	postinc2,tblptrl
  2582  00EBEA  CFDD FFF7          	movff	postdec2,tblptrh
  2583  00EBEE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2584  00EBEE  6AF8               	clrf	tblptru,c
  2585  00EBF0                     	endif
  2586  00EBF0                     	if	0	;tblptru may be non-zero
  2587  00EBF0                     	endif
  2588  00EBF0  0008               	tblrd		*
  2589  00EBF2  50F5               	movf	tablat,w,c
  2590  00EBF4  6E4E               	movwf	(??_vfpfcnvrt+2)^0,c
  2591  00EBF6  6A4F               	clrf	(??_vfpfcnvrt+3)^0,c
  2592  00EBF8  504C               	movf	??_vfpfcnvrt^0,w,c
  2593  00EBFA  264E               	addwf	(??_vfpfcnvrt+2)^0,f,c
  2594  00EBFC  504D               	movf	(??_vfpfcnvrt+1)^0,w,c
  2595  00EBFE  224F               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  2596  00EC00  504F               	movf	(??_vfpfcnvrt+3)^0,w,c
  2597  00EC02  E10A               	bnz	u5490
  2598  00EC04  0E1A               	movlw	26
  2599  00EC06  5C4E               	subwf	(??_vfpfcnvrt+2)^0,w,c
  2600  00EC08  A0D8               	btfss	status,0,c
  2601  00EC0A  EF09  F076         	goto	u5491
  2602  00EC0E  EF0C  F076         	goto	u5490
  2603  00EC12                     u5491:
  2604  00EC12  0E01               	movlw	1
  2605  00EC14  EF0D  F076         	goto	u5500
  2606  00EC18                     u5490:
  2607  00EC18  0E00               	movlw	0
  2608  00EC1A                     u5500:
  2609  00EC1A  6E52               	movwf	_vfpfcnvrt$2184^0,c
  2610  00EC1C  6A53               	clrf	(_vfpfcnvrt$2184+1)^0,c
  2611  00EC1E  5052               	movf	_vfpfcnvrt$2184^0,w,c
  2612  00EC20  1053               	iorwf	(_vfpfcnvrt$2184+1)^0,w,c
  2613  00EC22  B4D8               	btfsc	status,2,c
  2614  00EC24  EF16  F076         	goto	u5511
  2615  00EC28  EF18  F076         	goto	u5510
  2616  00EC2C                     u5511:
  2617  00EC2C  EF32  F076         	goto	l5864
  2618  00EC30                     u5510:
  2619  00EC30                     
  2620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  2621  00EC30  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2622  00EC34  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2623  00EC38  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2624  00EC3C  0E04               	movlw	4
  2625  00EC3E  26DE               	addwf	postinc2,f,c
  2626  00EC40  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2627  00EC44  0E00               	movlw	0
  2628  00EC46  22DD               	addwfc	postdec2,f,c
  2629  00EC48  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2630  00EC4C  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2631  00EC50  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2632  00EC54  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2633  00EC58  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2634  00EC5C  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2635                           
  2636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  2637  00EC60  EF4A  F076         	goto	l1655
  2638  00EC64                     l5864:
  2639                           
  2640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  2641  00EC64  C04A  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  2642  00EC68  C04B  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  2643  00EC6C  CFDF F04C          	movff	indf2,??_vfpfcnvrt
  2644  00EC70  0E04               	movlw	4
  2645  00EC72  26DE               	addwf	postinc2,f,c
  2646  00EC74  CFDF F04D          	movff	indf2,??_vfpfcnvrt+1
  2647  00EC78  0E00               	movlw	0
  2648  00EC7A  22DD               	addwfc	postdec2,f,c
  2649  00EC7C  C04C  FFD9         	movff	??_vfpfcnvrt,fsr2l
  2650  00EC80  C04D  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  2651  00EC84  CFDE F054          	movff	postinc2,vfpfcnvrt@f
  2652  00EC88  CFDE F055          	movff	postinc2,vfpfcnvrt@f+1
  2653  00EC8C  CFDE F056          	movff	postinc2,vfpfcnvrt@f+2
  2654  00EC90  CFDE F057          	movff	postinc2,vfpfcnvrt@f+3
  2655  00EC94                     l1655:
  2656                           
  2657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  2658  00EC94  0E02               	movlw	2
  2659  00EC96  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2660  00EC9A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2661  00EC9E  26DE               	addwf	postinc2,f,c
  2662  00ECA0  0E00               	movlw	0
  2663  00ECA2  22DD               	addwfc	postdec2,f,c
  2664  00ECA4  EFAA  F075         	goto	l5850
  2665  00ECA8                     l5870:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  2668  00ECA8  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2669  00ECAC  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2670  00ECB0  CFDE FFF6          	movff	postinc2,tblptrl
  2671  00ECB4  CFDD FFF7          	movff	postdec2,tblptrh
  2672  00ECB8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2673  00ECB8  6AF8               	clrf	tblptru,c
  2674  00ECBA                     	endif
  2675  00ECBA                     	if	0	;tblptru may be non-zero
  2676  00ECBA                     	endif
  2677  00ECBA  0008               	tblrd		*
  2678  00ECBC  50F5               	movf	tablat,w,c
  2679  00ECBE  0A25               	xorlw	37
  2680  00ECC0  A4D8               	btfss	status,2,c
  2681  00ECC2  EF65  F076         	goto	u5521
  2682  00ECC6  EF67  F076         	goto	u5520
  2683  00ECCA                     u5521:
  2684  00ECCA  EF7E  F076         	goto	l5880
  2685  00ECCE                     u5520:
  2686  00ECCE                     
  2687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  2688  00ECCE  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2689  00ECD2  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2690  00ECD6  2ADE               	incf	postinc2,f,c
  2691  00ECD8  0E00               	movlw	0
  2692  00ECDA  22DD               	addwfc	postdec2,f,c
  2693  00ECDC                     
  2694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  2695  00ECDC  0E00               	movlw	0
  2696  00ECDE  6E02               	movwf	(fputc@c+1)^0,c
  2697  00ECE0  0E25               	movlw	37
  2698  00ECE2  6E01               	movwf	fputc@c^0,c
  2699  00ECE4  C046  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2700  00ECE8  C047  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2701  00ECEC  ECFA  F068         	call	_fputc	;wreg free
  2702  00ECF0                     l5876:
  2703                           
  2704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  2705  00ECF0  0E00               	movlw	0
  2706  00ECF2  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  2707  00ECF4  0E01               	movlw	1
  2708  00ECF6  6E46               	movwf	?_vfpfcnvrt^0,c
  2709  00ECF8  EFA7  F076         	goto	l1648
  2710  00ECFC                     l5880:
  2711                           
  2712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  2713  00ECFC  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2714  00ED00  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2715  00ED04  2ADE               	incf	postinc2,f,c
  2716  00ED06  0E00               	movlw	0
  2717  00ED08  22DD               	addwfc	postdec2,f,c
  2718  00ED0A                     
  2719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  2720  00ED0A  0E00               	movlw	0
  2721  00ED0C  6E47               	movwf	(?_vfpfcnvrt+1)^0,c
  2722  00ED0E  0E00               	movlw	0
  2723  00ED10  6E46               	movwf	?_vfpfcnvrt^0,c
  2724  00ED12  EFA7  F076         	goto	l1648
  2725  00ED16                     l5886:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  2728  00ED16  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2729  00ED1A  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2730  00ED1E  CFDE FFF6          	movff	postinc2,tblptrl
  2731  00ED22  CFDD FFF7          	movff	postdec2,tblptrh
  2732  00ED26                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2733  00ED26  6AF8               	clrf	tblptru,c
  2734  00ED28                     	endif
  2735  00ED28                     	if	0	;tblptru may be non-zero
  2736  00ED28                     	endif
  2737  00ED28  0008               	tblrd		*
  2738  00ED2A  50F5               	movf	tablat,w,c
  2739  00ED2C  6E01               	movwf	fputc@c^0,c
  2740  00ED2E  6A02               	clrf	(fputc@c+1)^0,c
  2741  00ED30  C046  F003         	movff	vfpfcnvrt@fp,fputc@fp
  2742  00ED34  C047  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  2743  00ED38  ECFA  F068         	call	_fputc	;wreg free
  2744  00ED3C                     
  2745                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  2746  00ED3C  C048  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  2747  00ED40  C049  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  2748  00ED44  2ADE               	incf	postinc2,f,c
  2749  00ED46  0E00               	movlw	0
  2750  00ED48  22DD               	addwfc	postdec2,f,c
  2751  00ED4A  EF78  F076         	goto	l5876
  2752  00ED4E                     l1648:
  2753  00ED4E  0012               	return		;funcret
  2754  00ED50                     __end_of_vfpfcnvrt:
  2755                           	callstack 0
  2756                           
  2757 ;; *************** function _strncmp *****************
  2758 ;; Defined at:
  2759 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  2760 ;; Parameters:    Size  Location     Type
  2761 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  2762 ;;		 -> vfpfcnvrt@ct(3), 
  2763 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  2764 ;;		 -> STR_19(3), 
  2765 ;;  n               2    4[COMRAM] unsigned int 
  2766 ;; Auto vars:     Size  Location     Type
  2767 ;;  r               2    9[COMRAM] PTR const unsigned char 
  2768 ;;		 -> STR_19(3), 
  2769 ;;  l               2    7[COMRAM] PTR const unsigned char 
  2770 ;;		 -> vfpfcnvrt@ct(3), 
  2771 ;; Return value:  Size  Location     Type
  2772 ;;                  2    0[COMRAM] int 
  2773 ;; Registers used:
  2774 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  2775 ;; Tracked objects:
  2776 ;;		On entry : 0/0
  2777 ;;		On exit  : 0/0
  2778 ;;		Unchanged: 0/0
  2779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2780 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2781 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2782 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2783 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2784 ;;Total ram usage:       11 bytes
  2785 ;; Hardware stack levels used:    1
  2786 ;; This function calls:
  2787 ;;		Nothing
  2788 ;; This function is called by:
  2789 ;;		_vfpfcnvrt
  2790 ;; This function uses a non-reentrant model
  2791 ;;
  2792                           
  2793                           	psect	text4
  2794  00D2BE                     __ptext4:
  2795                           	callstack 0
  2796  00D2BE                     _strncmp:
  2797                           	callstack 27
  2798  00D2BE  C001  F008         	movff	strncmp@_l,strncmp@l
  2799  00D2C2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  2800  00D2C6  C003  F00A         	movff	strncmp@_r,strncmp@r
  2801  00D2CA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  2802  00D2CE  0605               	decf	strncmp@n^0,f,c
  2803  00D2D0  A0D8               	btfss	status,0,c
  2804  00D2D2  0606               	decf	(strncmp@n+1)^0,f,c
  2805  00D2D4  2805               	incf	strncmp@n^0,w,c
  2806  00D2D6  E106               	bnz	u5321
  2807  00D2D8  2806               	incf	(strncmp@n+1)^0,w,c
  2808  00D2DA  A4D8               	btfss	status,2,c
  2809  00D2DC  EF72  F069         	goto	u5321
  2810  00D2E0  EF74  F069         	goto	u5320
  2811  00D2E4                     u5321:
  2812  00D2E4  EF81  F069         	goto	l5782
  2813  00D2E8                     u5320:
  2814  00D2E8  0E00               	movlw	0
  2815  00D2EA  6E02               	movwf	(?_strncmp+1)^0,c
  2816  00D2EC  0E00               	movlw	0
  2817  00D2EE  6E01               	movwf	?_strncmp^0,c
  2818  00D2F0  EFCC  F069         	goto	l1776
  2819  00D2F4                     l5780:
  2820  00D2F4  4A08               	infsnz	strncmp@l^0,f,c
  2821  00D2F6  2A09               	incf	(strncmp@l+1)^0,f,c
  2822  00D2F8  4A0A               	infsnz	strncmp@r^0,f,c
  2823  00D2FA  2A0B               	incf	(strncmp@r+1)^0,f,c
  2824  00D2FC  0605               	decf	strncmp@n^0,f,c
  2825  00D2FE  A0D8               	btfss	status,0,c
  2826  00D300  0606               	decf	(strncmp@n+1)^0,f,c
  2827  00D302                     l5782:
  2828  00D302  C008  FFD9         	movff	strncmp@l,fsr2l
  2829  00D306  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2830  00D30A  50DF               	movf	indf2,w,c
  2831  00D30C  B4D8               	btfsc	status,2,c
  2832  00D30E  EF8B  F069         	goto	u5331
  2833  00D312  EF8D  F069         	goto	u5330
  2834  00D316                     u5331:
  2835  00D316  EFBA  F069         	goto	l5790
  2836  00D31A                     u5330:
  2837  00D31A  C00A  FFF6         	movff	strncmp@r,tblptrl
  2838  00D31E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2839  00D322                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2840  00D322  6AF8               	clrf	tblptru,c
  2841  00D324                     	endif
  2842  00D324                     	if	0	;tblptru may be non-zero
  2843  00D324                     	endif
  2844  00D324  0008               	tblrd		*
  2845  00D326  50F5               	movf	tablat,w,c
  2846  00D328  0900               	iorlw	0
  2847  00D32A  B4D8               	btfsc	status,2,c
  2848  00D32C  EF9A  F069         	goto	u5341
  2849  00D330  EF9C  F069         	goto	u5340
  2850  00D334                     u5341:
  2851  00D334  EFBA  F069         	goto	l5790
  2852  00D338                     u5340:
  2853  00D338  5005               	movf	strncmp@n^0,w,c
  2854  00D33A  1006               	iorwf	(strncmp@n+1)^0,w,c
  2855  00D33C  B4D8               	btfsc	status,2,c
  2856  00D33E  EFA3  F069         	goto	u5351
  2857  00D342  EFA5  F069         	goto	u5350
  2858  00D346                     u5351:
  2859  00D346  EFBA  F069         	goto	l5790
  2860  00D34A                     u5350:
  2861  00D34A  C008  FFD9         	movff	strncmp@l,fsr2l
  2862  00D34E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2863  00D352  50DF               	movf	indf2,w,c
  2864  00D354  6E07               	movwf	??_strncmp^0,c
  2865  00D356  C00A  FFF6         	movff	strncmp@r,tblptrl
  2866  00D35A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2867  00D35E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2868  00D35E  6AF8               	clrf	tblptru,c
  2869  00D360                     	endif
  2870  00D360                     	if	0	;tblptru may be non-zero
  2871  00D360                     	endif
  2872  00D360  0008               	tblrd		*
  2873  00D362  50F5               	movf	tablat,w,c
  2874  00D364  1807               	xorwf	??_strncmp^0,w,c
  2875  00D366  B4D8               	btfsc	status,2,c
  2876  00D368  EFB8  F069         	goto	u5361
  2877  00D36C  EFBA  F069         	goto	u5360
  2878  00D370                     u5361:
  2879  00D370  EF7A  F069         	goto	l5780
  2880  00D374                     u5360:
  2881  00D374                     l5790:
  2882  00D374  C008  FFD9         	movff	strncmp@l,fsr2l
  2883  00D378  C009  FFDA         	movff	strncmp@l+1,fsr2h
  2884  00D37C  50DF               	movf	indf2,w,c
  2885  00D37E  6E07               	movwf	??_strncmp^0,c
  2886  00D380  C00A  FFF6         	movff	strncmp@r,tblptrl
  2887  00D384  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  2888  00D388                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2889  00D388  6AF8               	clrf	tblptru,c
  2890  00D38A                     	endif
  2891  00D38A                     	if	0	;tblptru may be non-zero
  2892  00D38A                     	endif
  2893  00D38A  0008               	tblrd		*
  2894  00D38C  50F5               	movf	tablat,w,c
  2895  00D38E  5C07               	subwf	??_strncmp^0,w,c
  2896  00D390  6E01               	movwf	?_strncmp^0,c
  2897  00D392  6A02               	clrf	(?_strncmp+1)^0,c
  2898  00D394  A0D8               	btfss	status,0,c
  2899  00D396  0602               	decf	(?_strncmp+1)^0,f,c
  2900  00D398                     l1776:
  2901  00D398  0012               	return		;funcret
  2902  00D39A                     __end_of_strncmp:
  2903                           	callstack 0
  2904                           
  2905 ;; *************** function _efgtoa *****************
  2906 ;; Defined at:
  2907 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  2908 ;; Parameters:    Size  Location     Type
  2909 ;;  fp              2   57[COMRAM] PTR struct _IO_FILE
  2910 ;;		 -> sprintf@f(6), 
  2911 ;;  f               4   59[COMRAM] PTR struct _IO_FILE
  2912 ;;  c               1   63[COMRAM] unsigned char 
  2913 ;; Auto vars:     Size  Location     Type
  2914 ;;  u               4   52[BANK0 ] unsigned char 
  2915 ;;  g               4   44[BANK0 ] unsigned char 
  2916 ;;  l               4   38[BANK0 ] unsigned char 
  2917 ;;  h               4   34[BANK0 ] unsigned char 
  2918 ;;  ou              4    0[BANK0 ] unsigned char 
  2919 ;;  n               2   50[BANK0 ] int 
  2920 ;;  e               2   48[BANK0 ] int 
  2921 ;;  i               2   42[BANK0 ] int 
  2922 ;;  w               2   31[BANK0 ] int 
  2923 ;;  p               2   28[BANK0 ] int 
  2924 ;;  sign            2   26[BANK0 ] int 
  2925 ;;  d               2   24[BANK0 ] int 
  2926 ;;  ne              2   22[BANK0 ] int 
  2927 ;;  m               2   20[BANK0 ] int 
  2928 ;;  pp              2   18[BANK0 ] int 
  2929 ;;  t               2   16[BANK0 ] int 
  2930 ;;  mode            1   33[BANK0 ] unsigned char 
  2931 ;;  nmode           1   30[BANK0 ] unsigned char 
  2932 ;; Return value:  Size  Location     Type
  2933 ;;                  2   57[COMRAM] int 
  2934 ;; Registers used:
  2935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2936 ;; Tracked objects:
  2937 ;;		On entry : 0/0
  2938 ;;		On exit  : 0/0
  2939 ;;		Unchanged: 0/0
  2940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2941 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2942 ;;      Locals:         0      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2943 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2944 ;;      Totals:        12      56       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2945 ;;Total ram usage:       68 bytes
  2946 ;; Hardware stack levels used:    1
  2947 ;; Hardware stack levels required when called:    4
  2948 ;; This function calls:
  2949 ;;		___awdiv
  2950 ;;		___awmod
  2951 ;;		___fladd
  2952 ;;		___fldiv
  2953 ;;		___fleq
  2954 ;;		___flge
  2955 ;;		___flmul
  2956 ;;		___flneg
  2957 ;;		___flsub
  2958 ;;		___fltol
  2959 ;;		___fpclassifyf
  2960 ;;		_floorf
  2961 ;;		_isupper
  2962 ;;		_pad
  2963 ;;		_strcpy
  2964 ;;		_tolower
  2965 ;; This function is called by:
  2966 ;;		_vfpfcnvrt
  2967 ;; This function uses a non-reentrant model
  2968 ;;
  2969                           
  2970                           	psect	text5
  2971  00F210                     __ptext5:
  2972                           	callstack 0
  2973  00F210                     _efgtoa:
  2974                           	callstack 23
  2975  00F210                     
  2976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  2977  00F210  0E00               	movlw	0
  2978  00F212  0100               	movlb	0	; () banked
  2979  00F214  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  2980  00F216  0E00               	movlw	0
  2981  00F218  6F7A               	movwf	efgtoa@sign& (0+255),b
  2982  00F21A                     
  2983                           ; BSR set to: 0
  2984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  2985  00F21A  C03C  F08C         	movff	efgtoa@f,efgtoa@g
  2986  00F21E  C03D  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  2987  00F222  C03E  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  2988  00F226  C03F  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  2989  00F22A                     
  2990                           ; BSR set to: 0
  2991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  2992  00F22A  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  2993  00F22C  EF1C  F079         	goto	u4730
  2994  00F230  EF1A  F079         	goto	u4731
  2995  00F234                     u4731:
  2996  00F234  EF32  F079         	goto	l5444
  2997  00F238                     u4730:
  2998  00F238                     
  2999                           ; BSR set to: 0
  3000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  3001  00F238  0E00               	movlw	0
  3002  00F23A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  3003  00F23C  0E01               	movlw	1
  3004  00F23E  6F7A               	movwf	efgtoa@sign& (0+255),b
  3005  00F240                     
  3006                           ; BSR set to: 0
  3007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  3008  00F240  C08C  F001         	movff	efgtoa@g,___flneg@f1
  3009  00F244  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3010  00F248  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3011  00F24C  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3012  00F250  EC9F  F062         	call	___flneg	;wreg free
  3013  00F254  C001  F08C         	movff	?___flneg,efgtoa@g
  3014  00F258  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  3015  00F25C  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  3016  00F260  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  3017  00F264                     l5444:
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  3020  00F264  0E00               	movlw	0
  3021  00F266  0100               	movlb	0	; () banked
  3022  00F268  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  3023  00F26A  0E00               	movlw	0
  3024  00F26C  6F92               	movwf	efgtoa@n& (0+255),b
  3025  00F26E                     
  3026                           ; BSR set to: 0
  3027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  3028  00F26E  C0D2  F07F         	movff	_width,efgtoa@w
  3029  00F272  C0D3  F080         	movff	_width+1,efgtoa@w+1
  3030  00F276                     
  3031                           ; BSR set to: 0
  3032                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  3033  00F276  517A               	movf	efgtoa@sign& (0+255),w,b
  3034  00F278  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3035  00F27A  A4D8               	btfss	status,2,c
  3036  00F27C  EF42  F079         	goto	u4741
  3037  00F280  EF44  F079         	goto	u4740
  3038  00F284                     u4741:
  3039  00F284  EF4B  F079         	goto	l5452
  3040  00F288                     u4740:
  3041  00F288                     
  3042                           ; BSR set to: 0
  3043  00F288  A5D6               	btfss	_flags& (0+255),2,b
  3044  00F28A  EF49  F079         	goto	u4751
  3045  00F28E  EF4B  F079         	goto	u4750
  3046  00F292                     u4751:
  3047  00F292  EF65  F079         	goto	l5464
  3048  00F296                     u4750:
  3049  00F296                     l5452:
  3050                           
  3051                           ; BSR set to: 0
  3052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  3053  00F296  517A               	movf	efgtoa@sign& (0+255),w,b
  3054  00F298  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  3055  00F29A  A4D8               	btfss	status,2,c
  3056  00F29C  EF52  F079         	goto	u4761
  3057  00F2A0  EF54  F079         	goto	u4760
  3058  00F2A4                     u4761:
  3059  00F2A4  EF5A  F079         	goto	l5456
  3060  00F2A8                     u4760:
  3061  00F2A8                     
  3062                           ; BSR set to: 0
  3063  00F2A8  0E00               	movlw	0
  3064  00F2AA  6F65               	movwf	(_efgtoa$2154+1)& (0+255),b
  3065  00F2AC  0E2B               	movlw	43
  3066  00F2AE  6F64               	movwf	_efgtoa$2154& (0+255),b
  3067  00F2B0  EF5E  F079         	goto	l5458
  3068  00F2B4                     l5456:
  3069                           
  3070                           ; BSR set to: 0
  3071  00F2B4  0E00               	movlw	0
  3072  00F2B6  6F65               	movwf	(_efgtoa$2154+1)& (0+255),b
  3073  00F2B8  0E2D               	movlw	45
  3074  00F2BA  6F64               	movwf	_efgtoa$2154& (0+255),b
  3075  00F2BC                     l5458:
  3076                           
  3077                           ; BSR set to: 0
  3078  00F2BC  C064  F174         	movff	_efgtoa$2154,_dbuf
  3079  00F2C0                     
  3080                           ; BSR set to: 0
  3081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  3082  00F2C0  4B92               	infsnz	efgtoa@n& (0+255),f,b
  3083  00F2C2  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  3084  00F2C4                     
  3085                           ; BSR set to: 0
  3086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  3087  00F2C4  077F               	decf	efgtoa@w& (0+255),f,b
  3088  00F2C6  A0D8               	btfss	status,0,c
  3089  00F2C8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  3090  00F2CA                     l5464:
  3091                           
  3092                           ; BSR set to: 0
  3093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3094  00F2CA  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3095  00F2CE  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3096  00F2D2  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3097  00F2D6  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3098  00F2DA  ECCD  F069         	call	___fpclassifyf	;wreg free
  3099  00F2DE  0401               	decf	?___fpclassifyf^0,w,c
  3100  00F2E0  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3101  00F2E2  A4D8               	btfss	status,2,c
  3102  00F2E4  EF76  F079         	goto	u4771
  3103  00F2E8  EF78  F079         	goto	u4770
  3104  00F2EC                     u4771:
  3105  00F2EC  EFCF  F079         	goto	l5482
  3106  00F2F0                     u4770:
  3107  00F2F0  0EBF               	movlw	191
  3108  00F2F2  6E41               	movwf	??_efgtoa^0,c
  3109  00F2F4  0EFF               	movlw	255
  3110  00F2F6  6E42               	movwf	(??_efgtoa+1)^0,c
  3111  00F2F8  5040               	movf	efgtoa@c^0,w,c
  3112  00F2FA  6E43               	movwf	(??_efgtoa+2)^0,c
  3113  00F2FC  6A44               	clrf	(??_efgtoa+3)^0,c
  3114  00F2FE  5041               	movf	??_efgtoa^0,w,c
  3115  00F300  2643               	addwf	(??_efgtoa+2)^0,f,c
  3116  00F302  5042               	movf	(??_efgtoa+1)^0,w,c
  3117  00F304  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3118  00F306  5044               	movf	(??_efgtoa+3)^0,w,c
  3119  00F308  E10A               	bnz	u4780
  3120  00F30A  0E1A               	movlw	26
  3121  00F30C  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3122  00F30E  A0D8               	btfss	status,0,c
  3123  00F310  EF8C  F079         	goto	u4781
  3124  00F314  EF8F  F079         	goto	u4780
  3125  00F318                     u4781:
  3126  00F318  0E01               	movlw	1
  3127  00F31A  EF90  F079         	goto	u4790
  3128  00F31E                     u4780:
  3129  00F31E  0E00               	movlw	0
  3130  00F320                     u4790:
  3131  00F320  0100               	movlb	0	; () banked
  3132  00F322  6F66               	movwf	_efgtoa$2155& (0+255),b
  3133  00F324  6B67               	clrf	(_efgtoa$2155+1)& (0+255),b
  3134  00F326                     
  3135                           ; BSR set to: 0
  3136  00F326  5166               	movf	_efgtoa$2155& (0+255),w,b
  3137  00F328  1167               	iorwf	(_efgtoa$2155+1)& (0+255),w,b
  3138  00F32A  B4D8               	btfsc	status,2,c
  3139  00F32C  EF9A  F079         	goto	u4801
  3140  00F330  EF9C  F079         	goto	u4800
  3141  00F334                     u4801:
  3142  00F334  EFAA  F079         	goto	l5474
  3143  00F338                     u4800:
  3144  00F338                     
  3145                           ; BSR set to: 0
  3146                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  3147  00F338  0E74               	movlw	low _dbuf
  3148  00F33A  2592               	addwf	efgtoa@n& (0+255),w,b
  3149  00F33C  6E01               	movwf	strcpy@dest^0,c
  3150  00F33E  0E01               	movlw	high _dbuf
  3151  00F340  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3152  00F342  6E02               	movwf	(strcpy@dest+1)^0,c
  3153  00F344  0EE5               	movlw	low STR_9
  3154  00F346  6E03               	movwf	strcpy@src^0,c
  3155  00F348  0EFF               	movlw	high STR_9
  3156  00F34A  6E04               	movwf	(strcpy@src+1)^0,c
  3157  00F34C  EC0B  F064         	call	_strcpy	;wreg free
  3158                           
  3159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  3160  00F350  EFB6  F079         	goto	l5476
  3161  00F354                     l5474:
  3162                           
  3163                           ; BSR set to: 0
  3164                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  3165  00F354  0E74               	movlw	low _dbuf
  3166  00F356  2592               	addwf	efgtoa@n& (0+255),w,b
  3167  00F358  6E01               	movwf	strcpy@dest^0,c
  3168  00F35A  0E01               	movlw	high _dbuf
  3169  00F35C  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3170  00F35E  6E02               	movwf	(strcpy@dest+1)^0,c
  3171  00F360  0EED               	movlw	low STR_10
  3172  00F362  6E03               	movwf	strcpy@src^0,c
  3173  00F364  0EFF               	movlw	high STR_10
  3174  00F366  6E04               	movwf	(strcpy@src+1)^0,c
  3175  00F368  EC0B  F064         	call	_strcpy	;wreg free
  3176  00F36C                     l5476:
  3177                           
  3178                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  3179  00F36C  0100               	movlb	0	; () banked
  3180  00F36E  0EFD               	movlw	253
  3181  00F370  277F               	addwf	efgtoa@w& (0+255),f,b
  3182  00F372  0EFF               	movlw	255
  3183  00F374  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  3184  00F376                     l5478:
  3185                           
  3186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  3187  00F376  C03A  F011         	movff	efgtoa@fp,pad@fp
  3188  00F37A  C03B  F012         	movff	efgtoa@fp+1,pad@fp+1
  3189  00F37E  0E74               	movlw	low _dbuf
  3190  00F380  6E13               	movwf	pad@buf^0,c
  3191  00F382  0E01               	movlw	high _dbuf
  3192  00F384  6E14               	movwf	(pad@buf+1)^0,c
  3193  00F386  C07F  F015         	movff	efgtoa@w,pad@p
  3194  00F38A  C080  F016         	movff	efgtoa@w+1,pad@p+1
  3195  00F38E  EC97  F068         	call	_pad	;wreg free
  3196  00F392  C011  F03A         	movff	?_pad,?_efgtoa
  3197  00F396  C012  F03B         	movff	?_pad+1,?_efgtoa+1
  3198  00F39A  EFDF  F07E         	goto	l1558
  3199  00F39E                     l5482:
  3200                           
  3201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  3202  00F39E  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  3203  00F3A2  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3204  00F3A6  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3205  00F3AA  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3206  00F3AE  ECCD  F069         	call	___fpclassifyf	;wreg free
  3207  00F3B2  5001               	movf	?___fpclassifyf^0,w,c
  3208  00F3B4  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3209  00F3B6  A4D8               	btfss	status,2,c
  3210  00F3B8  EFE0  F079         	goto	u4811
  3211  00F3BC  EFE2  F079         	goto	u4810
  3212  00F3C0                     u4811:
  3213  00F3C0  EF22  F07A         	goto	l5500
  3214  00F3C4                     u4810:
  3215  00F3C4  0EBF               	movlw	191
  3216  00F3C6  6E41               	movwf	??_efgtoa^0,c
  3217  00F3C8  0EFF               	movlw	255
  3218  00F3CA  6E42               	movwf	(??_efgtoa+1)^0,c
  3219  00F3CC  5040               	movf	efgtoa@c^0,w,c
  3220  00F3CE  6E43               	movwf	(??_efgtoa+2)^0,c
  3221  00F3D0  6A44               	clrf	(??_efgtoa+3)^0,c
  3222  00F3D2  5041               	movf	??_efgtoa^0,w,c
  3223  00F3D4  2643               	addwf	(??_efgtoa+2)^0,f,c
  3224  00F3D6  5042               	movf	(??_efgtoa+1)^0,w,c
  3225  00F3D8  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3226  00F3DA  5044               	movf	(??_efgtoa+3)^0,w,c
  3227  00F3DC  E10A               	bnz	u4820
  3228  00F3DE  0E1A               	movlw	26
  3229  00F3E0  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3230  00F3E2  A0D8               	btfss	status,0,c
  3231  00F3E4  EFF6  F079         	goto	u4821
  3232  00F3E8  EFF9  F079         	goto	u4820
  3233  00F3EC                     u4821:
  3234  00F3EC  0E01               	movlw	1
  3235  00F3EE  EFFA  F079         	goto	u4830
  3236  00F3F2                     u4820:
  3237  00F3F2  0E00               	movlw	0
  3238  00F3F4                     u4830:
  3239  00F3F4  0100               	movlb	0	; () banked
  3240  00F3F6  6F68               	movwf	_efgtoa$2160& (0+255),b
  3241  00F3F8  6B69               	clrf	(_efgtoa$2160+1)& (0+255),b
  3242  00F3FA                     
  3243                           ; BSR set to: 0
  3244  00F3FA  5168               	movf	_efgtoa$2160& (0+255),w,b
  3245  00F3FC  1169               	iorwf	(_efgtoa$2160+1)& (0+255),w,b
  3246  00F3FE  B4D8               	btfsc	status,2,c
  3247  00F400  EF04  F07A         	goto	u4841
  3248  00F404  EF06  F07A         	goto	u4840
  3249  00F408                     u4841:
  3250  00F408  EF14  F07A         	goto	l5492
  3251  00F40C                     u4840:
  3252  00F40C                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  3255  00F40C  0E74               	movlw	low _dbuf
  3256  00F40E  2592               	addwf	efgtoa@n& (0+255),w,b
  3257  00F410  6E01               	movwf	strcpy@dest^0,c
  3258  00F412  0E01               	movlw	high _dbuf
  3259  00F414  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3260  00F416  6E02               	movwf	(strcpy@dest+1)^0,c
  3261  00F418  0EE9               	movlw	low STR_13
  3262  00F41A  6E03               	movwf	strcpy@src^0,c
  3263  00F41C  0EFF               	movlw	high STR_13
  3264  00F41E  6E04               	movwf	(strcpy@src+1)^0,c
  3265  00F420  EC0B  F064         	call	_strcpy	;wreg free
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  3268  00F424  EFB6  F079         	goto	l5476
  3269  00F428                     l5492:
  3270                           
  3271                           ; BSR set to: 0
  3272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  3273  00F428  0E74               	movlw	low _dbuf
  3274  00F42A  2592               	addwf	efgtoa@n& (0+255),w,b
  3275  00F42C  6E01               	movwf	strcpy@dest^0,c
  3276  00F42E  0E01               	movlw	high _dbuf
  3277  00F430  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  3278  00F432  6E02               	movwf	(strcpy@dest+1)^0,c
  3279  00F434  0EF1               	movlw	low STR_14
  3280  00F436  6E03               	movwf	strcpy@src^0,c
  3281  00F438  0EFF               	movlw	high STR_14
  3282  00F43A  6E04               	movwf	(strcpy@src+1)^0,c
  3283  00F43C  EC0B  F064         	call	_strcpy	;wreg free
  3284  00F440  EFB6  F079         	goto	l5476
  3285  00F444                     l5500:
  3286                           
  3287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  3288  00F444  0E00               	movlw	0
  3289  00F446  0100               	movlb	0	; () banked
  3290  00F448  6F94               	movwf	efgtoa@u& (0+255),b
  3291  00F44A  0E00               	movlw	0
  3292  00F44C  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3293  00F44E  0E80               	movlw	128
  3294  00F450  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3295  00F452  0E3F               	movlw	63
  3296  00F454  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3297                           
  3298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  3299  00F456  0E00               	movlw	0
  3300  00F458  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3301  00F45A  0E00               	movlw	0
  3302  00F45C  6F90               	movwf	efgtoa@e& (0+255),b
  3303  00F45E                     
  3304                           ; BSR set to: 0
  3305                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  3306  00F45E  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  3307  00F462  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  3308  00F466  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  3309  00F46A  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  3310  00F46E  0E00               	movlw	0
  3311  00F470  6E05               	movwf	___fleq@ff2^0,c
  3312  00F472  0E00               	movlw	0
  3313  00F474  6E06               	movwf	(___fleq@ff2+1)^0,c
  3314  00F476  0E00               	movlw	0
  3315  00F478  6E07               	movwf	(___fleq@ff2+2)^0,c
  3316  00F47A  0E00               	movlw	0
  3317  00F47C  6E08               	movwf	(___fleq@ff2+3)^0,c
  3318  00F47E  EC26  F067         	call	___fleq	;wreg free
  3319  00F482  B0D8               	btfsc	status,0,c
  3320  00F484  EF46  F07A         	goto	u4851
  3321  00F488  EF48  F07A         	goto	u4850
  3322  00F48C                     u4851:
  3323  00F48C  EFCB  F07A         	goto	l5518
  3324  00F490                     u4850:
  3325  00F490  EF67  F07A         	goto	l5510
  3326  00F494                     l5506:
  3327                           
  3328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  3329  00F494  C094  F015         	movff	efgtoa@u,___flmul@b
  3330  00F498  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3331  00F49C  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3332  00F4A0  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3333  00F4A4  0E00               	movlw	0
  3334  00F4A6  6E19               	movwf	___flmul@a^0,c
  3335  00F4A8  0E00               	movlw	0
  3336  00F4AA  6E1A               	movwf	(___flmul@a+1)^0,c
  3337  00F4AC  0E20               	movlw	32
  3338  00F4AE  6E1B               	movwf	(___flmul@a+2)^0,c
  3339  00F4B0  0E41               	movlw	65
  3340  00F4B2  6E1C               	movwf	(___flmul@a+3)^0,c
  3341  00F4B4  EC57  F072         	call	___flmul	;wreg free
  3342  00F4B8  C015  F094         	movff	?___flmul,efgtoa@u
  3343  00F4BC  C016  F095         	movff	?___flmul+1,efgtoa@u+1
  3344  00F4C0  C017  F096         	movff	?___flmul+2,efgtoa@u+2
  3345  00F4C4  C018  F097         	movff	?___flmul+3,efgtoa@u+3
  3346  00F4C8                     
  3347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  3348  00F4C8  0100               	movlb	0	; () banked
  3349  00F4CA  4B90               	infsnz	efgtoa@e& (0+255),f,b
  3350  00F4CC  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  3351  00F4CE                     l5510:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  3354  00F4CE  C08C  F02E         	movff	efgtoa@g,___flge@ff1
  3355  00F4D2  C08D  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3356  00F4D6  C08E  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3357  00F4DA  C08F  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3358  00F4DE  0E00               	movlw	0
  3359  00F4E0  6E19               	movwf	___flmul@a^0,c
  3360  00F4E2  0E00               	movlw	0
  3361  00F4E4  6E1A               	movwf	(___flmul@a+1)^0,c
  3362  00F4E6  0E20               	movlw	32
  3363  00F4E8  6E1B               	movwf	(___flmul@a+2)^0,c
  3364  00F4EA  0E41               	movlw	65
  3365  00F4EC  6E1C               	movwf	(___flmul@a+3)^0,c
  3366  00F4EE  C094  F015         	movff	efgtoa@u,___flmul@b
  3367  00F4F2  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3368  00F4F6  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3369  00F4FA  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3370  00F4FE  EC57  F072         	call	___flmul	;wreg free
  3371  00F502  C015  F032         	movff	?___flmul,___flge@ff2
  3372  00F506  C016  F033         	movff	?___flmul+1,___flge@ff2+1
  3373  00F50A  C017  F034         	movff	?___flmul+2,___flge@ff2+2
  3374  00F50E  C018  F035         	movff	?___flmul+3,___flge@ff2+3
  3375  00F512  EC4C  F06A         	call	___flge	;wreg free
  3376  00F516  B0D8               	btfsc	status,0,c
  3377  00F518  EF90  F07A         	goto	u4861
  3378  00F51C  EF92  F07A         	goto	u4860
  3379  00F520                     u4861:
  3380  00F520  EF4A  F07A         	goto	l5506
  3381  00F524                     u4860:
  3382  00F524  EFB2  F07A         	goto	l5516
  3383  00F528                     l5512:
  3384                           
  3385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  3386  00F528  C094  F001         	movff	efgtoa@u,___fldiv@b
  3387  00F52C  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3388  00F530  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3389  00F534  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3390  00F538  0E00               	movlw	0
  3391  00F53A  6E05               	movwf	___fldiv@a^0,c
  3392  00F53C  0E00               	movlw	0
  3393  00F53E  6E06               	movwf	(___fldiv@a+1)^0,c
  3394  00F540  0E20               	movlw	32
  3395  00F542  6E07               	movwf	(___fldiv@a+2)^0,c
  3396  00F544  0E41               	movlw	65
  3397  00F546  6E08               	movwf	(___fldiv@a+3)^0,c
  3398  00F548  EC8A  F070         	call	___fldiv	;wreg free
  3399  00F54C  C001  F094         	movff	?___fldiv,efgtoa@u
  3400  00F550  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3401  00F554  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3402  00F558  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3403  00F55C                     
  3404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  3405  00F55C  0100               	movlb	0	; () banked
  3406  00F55E  0790               	decf	efgtoa@e& (0+255),f,b
  3407  00F560  A0D8               	btfss	status,0,c
  3408  00F562  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  3409  00F564                     l5516:
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  3412  00F564  C08C  F02E         	movff	efgtoa@g,___flge@ff1
  3413  00F568  C08D  F02F         	movff	efgtoa@g+1,___flge@ff1+1
  3414  00F56C  C08E  F030         	movff	efgtoa@g+2,___flge@ff1+2
  3415  00F570  C08F  F031         	movff	efgtoa@g+3,___flge@ff1+3
  3416  00F574  C094  F032         	movff	efgtoa@u,___flge@ff2
  3417  00F578  C095  F033         	movff	efgtoa@u+1,___flge@ff2+1
  3418  00F57C  C096  F034         	movff	efgtoa@u+2,___flge@ff2+2
  3419  00F580  C097  F035         	movff	efgtoa@u+3,___flge@ff2+3
  3420  00F584  EC4C  F06A         	call	___flge	;wreg free
  3421  00F588  A0D8               	btfss	status,0,c
  3422  00F58A  EFC9  F07A         	goto	u4871
  3423  00F58E  EFCB  F07A         	goto	u4870
  3424  00F592                     u4871:
  3425  00F592  EF94  F07A         	goto	l5512
  3426  00F596                     u4870:
  3427  00F596                     l5518:
  3428                           
  3429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  3430  00F596  C040  F007         	movff	efgtoa@c,tolower@c
  3431  00F59A  6A08               	clrf	(tolower@c+1)^0,c
  3432  00F59C  EC3A  F064         	call	_tolower	;wreg free
  3433  00F5A0  5007               	movf	?_tolower^0,w,c
  3434  00F5A2  0100               	movlb	0	; () banked
  3435  00F5A4  6F81               	movwf	efgtoa@mode& (0+255),b
  3436  00F5A6                     
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  3439  00F5A6  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  3440  00F5AA                     
  3441                           ; BSR set to: 0
  3442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  3443  00F5AA  0E67               	movlw	103
  3444  00F5AC  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3445  00F5AE  A4D8               	btfss	status,2,c
  3446  00F5B0  EFDC  F07A         	goto	u4881
  3447  00F5B4  EFDE  F07A         	goto	u4880
  3448  00F5B8                     u4881:
  3449  00F5B8  EF04  F07B         	goto	l5532
  3450  00F5BC                     u4880:
  3451  00F5BC                     
  3452                           ; BSR set to: 0
  3453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  3454  00F5BC  51D4               	movf	_prec& (0+255),w,b
  3455  00F5BE  11D5               	iorwf	(_prec+1)& (0+255),w,b
  3456  00F5C0  A4D8               	btfss	status,2,c
  3457  00F5C2  EFE5  F07A         	goto	u4891
  3458  00F5C6  EFE7  F07A         	goto	u4890
  3459  00F5CA                     u4891:
  3460  00F5CA  EFEB  F07A         	goto	l5528
  3461  00F5CE                     u4890:
  3462  00F5CE                     
  3463                           ; BSR set to: 0
  3464                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  3465  00F5CE  0E00               	movlw	0
  3466  00F5D0  6FD5               	movwf	(_prec+1)& (0+255),b
  3467  00F5D2  0E01               	movlw	1
  3468  00F5D4  6FD4               	movwf	_prec& (0+255),b
  3469  00F5D6                     l5528:
  3470                           
  3471                           ; BSR set to: 0
  3472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  3473  00F5D6  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  3474  00F5D8  EFF8  F07A         	goto	u4900
  3475  00F5DC  51D5               	movf	(_prec+1)& (0+255),w,b
  3476  00F5DE  E106               	bnz	u4901
  3477  00F5E0  05D4               	decf	_prec& (0+255),w,b
  3478  00F5E2  B0D8               	btfsc	status,0,c
  3479  00F5E4  EFF6  F07A         	goto	u4901
  3480  00F5E8  EFF8  F07A         	goto	u4900
  3481  00F5EC                     u4901:
  3482  00F5EC  EFFE  F07A         	goto	l1576
  3483  00F5F0                     u4900:
  3484  00F5F0                     l5530:
  3485                           
  3486                           ; BSR set to: 0
  3487  00F5F0  0E00               	movlw	0
  3488  00F5F2  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  3489  00F5F4  0E06               	movlw	6
  3490  00F5F6  6F7C               	movwf	efgtoa@p& (0+255),b
  3491  00F5F8  EF0D  F07B         	goto	l5538
  3492  00F5FC                     l1576:
  3493                           
  3494                           ; BSR set to: 0
  3495  00F5FC  C0D4  F07C         	movff	_prec,efgtoa@p
  3496  00F600  C0D5  F07D         	movff	_prec+1,efgtoa@p+1
  3497  00F604  EF0D  F07B         	goto	l5538
  3498  00F608                     l5532:
  3499                           
  3500                           ; BSR set to: 0
  3501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  3502  00F608  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  3503  00F60A  EF09  F07B         	goto	u4911
  3504  00F60E  EF0B  F07B         	goto	u4910
  3505  00F612                     u4911:
  3506  00F612  EFF8  F07A         	goto	l5530
  3507  00F616                     u4910:
  3508  00F616  EFFE  F07A         	goto	l1576
  3509  00F61A                     l5538:
  3510                           
  3511                           ; BSR set to: 0
  3512                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  3513  00F61A  0E67               	movlw	103
  3514  00F61C  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3515  00F61E  A4D8               	btfss	status,2,c
  3516  00F620  EF14  F07B         	goto	u4921
  3517  00F624  EF16  F07B         	goto	u4920
  3518  00F628                     u4921:
  3519  00F628  EF45  F07B         	goto	l5548
  3520  00F62C                     u4920:
  3521  00F62C                     
  3522                           ; BSR set to: 0
  3523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  3524  00F62C  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  3525  00F62E  EF24  F07B         	goto	u4930
  3526  00F632  0EFC               	movlw	252
  3527  00F634  5D90               	subwf	efgtoa@e& (0+255),w,b
  3528  00F636  0EFF               	movlw	255
  3529  00F638  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  3530  00F63A  A0D8               	btfss	status,0,c
  3531  00F63C  EF22  F07B         	goto	u4931
  3532  00F640  EF24  F07B         	goto	u4930
  3533  00F644                     u4931:
  3534  00F644  EF43  F07B         	goto	l5546
  3535  00F648                     u4930:
  3536  00F648                     
  3537                           ; BSR set to: 0
  3538  00F648  0EFF               	movlw	255
  3539  00F64A  6E41               	movwf	??_efgtoa^0,c
  3540  00F64C  0EFF               	movlw	255
  3541  00F64E  6E42               	movwf	(??_efgtoa+1)^0,c
  3542  00F650  C07C  F043         	movff	efgtoa@p,??_efgtoa+2
  3543  00F654  C07D  F044         	movff	efgtoa@p+1,??_efgtoa+3
  3544  00F658  5041               	movf	??_efgtoa^0,w,c
  3545  00F65A  2643               	addwf	(??_efgtoa+2)^0,f,c
  3546  00F65C  5042               	movf	(??_efgtoa+1)^0,w,c
  3547  00F65E  2244               	addwfc	(??_efgtoa+3)^0,f,c
  3548  00F660  5190               	movf	efgtoa@e& (0+255),w,b
  3549  00F662  5C43               	subwf	(??_efgtoa+2)^0,w,c
  3550  00F664  5044               	movf	(??_efgtoa+3)^0,w,c
  3551  00F666  0A80               	xorlw	128
  3552  00F668  6E45               	movwf	(??_efgtoa+4)^0,c
  3553  00F66A  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3554  00F66C  0A80               	xorlw	128
  3555  00F66E  5845               	subwfb	(??_efgtoa+4)^0,w,c
  3556  00F670  A0D8               	btfss	status,0,c
  3557  00F672  EF3D  F07B         	goto	u4941
  3558  00F676  EF3F  F07B         	goto	u4940
  3559  00F67A                     u4941:
  3560  00F67A  EF43  F07B         	goto	l5546
  3561  00F67E                     u4940:
  3562  00F67E                     
  3563                           ; BSR set to: 0
  3564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  3565  00F67E  0E66               	movlw	102
  3566  00F680  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3567                           
  3568                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  3569  00F682  EF45  F07B         	goto	l5548
  3570  00F686                     l5546:
  3571                           
  3572                           ; BSR set to: 0
  3573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  3574  00F686  0E65               	movlw	101
  3575  00F688  6F7E               	movwf	efgtoa@nmode& (0+255),b
  3576  00F68A                     l5548:
  3577                           
  3578                           ; BSR set to: 0
  3579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  3580  00F68A  C07C  F074         	movff	efgtoa@p,efgtoa@m
  3581  00F68E  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  3582  00F692                     
  3583                           ; BSR set to: 0
  3584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  3585  00F692  0E67               	movlw	103
  3586  00F694  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3587  00F696  A4D8               	btfss	status,2,c
  3588  00F698  EF50  F07B         	goto	u4951
  3589  00F69C  EF52  F07B         	goto	u4950
  3590  00F6A0                     u4951:
  3591  00F6A0  EF62  F07B         	goto	l5556
  3592  00F6A4                     u4950:
  3593  00F6A4                     
  3594                           ; BSR set to: 0
  3595  00F6A4  0E66               	movlw	102
  3596  00F6A6  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3597  00F6A8  A4D8               	btfss	status,2,c
  3598  00F6AA  EF59  F07B         	goto	u4961
  3599  00F6AE  EF5B  F07B         	goto	u4960
  3600  00F6B2                     u4961:
  3601  00F6B2  EF64  F07B         	goto	l5558
  3602  00F6B6                     u4960:
  3603  00F6B6                     
  3604                           ; BSR set to: 0
  3605  00F6B6  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3606  00F6B8  EF62  F07B         	goto	u4970
  3607  00F6BC  EF60  F07B         	goto	u4971
  3608  00F6C0                     u4971:
  3609  00F6C0  EF64  F07B         	goto	l5558
  3610  00F6C4                     u4970:
  3611  00F6C4                     l5556:
  3612                           
  3613                           ; BSR set to: 0
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  3615  00F6C4  4B74               	infsnz	efgtoa@m& (0+255),f,b
  3616  00F6C6  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  3617  00F6C8                     l5558:
  3618                           
  3619                           ; BSR set to: 0
  3620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  3621  00F6C8  0E66               	movlw	102
  3622  00F6CA  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3623  00F6CC  A4D8               	btfss	status,2,c
  3624  00F6CE  EF6B  F07B         	goto	u4981
  3625  00F6D2  EF6D  F07B         	goto	u4980
  3626  00F6D6                     u4981:
  3627  00F6D6  EF8D  F07B         	goto	l5568
  3628  00F6DA                     u4980:
  3629  00F6DA                     
  3630                           ; BSR set to: 0
  3631                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  3632  00F6DA  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  3633  00F6DC  EF74  F07B         	goto	u4990
  3634  00F6E0  EF72  F07B         	goto	u4991
  3635  00F6E4                     u4991:
  3636  00F6E4  EF80  F07B         	goto	l5564
  3637  00F6E8                     u4990:
  3638  00F6E8                     
  3639                           ; BSR set to: 0
  3640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  3641  00F6E8  0E00               	movlw	0
  3642  00F6EA  6F94               	movwf	efgtoa@u& (0+255),b
  3643  00F6EC  0E00               	movlw	0
  3644  00F6EE  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  3645  00F6F0  0E80               	movlw	128
  3646  00F6F2  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  3647  00F6F4  0E3F               	movlw	63
  3648  00F6F6  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  3649                           
  3650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  3651  00F6F8  0E00               	movlw	0
  3652  00F6FA  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  3653  00F6FC  0E00               	movlw	0
  3654  00F6FE  6F90               	movwf	efgtoa@e& (0+255),b
  3655  00F700                     l5564:
  3656                           
  3657                           ; BSR set to: 0
  3658                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  3659  00F700  0E67               	movlw	103
  3660  00F702  1981               	xorwf	efgtoa@mode& (0+255),w,b
  3661  00F704  B4D8               	btfsc	status,2,c
  3662  00F706  EF87  F07B         	goto	u5001
  3663  00F70A  EF89  F07B         	goto	u5000
  3664  00F70E                     u5001:
  3665  00F70E  EF8D  F07B         	goto	l5568
  3666  00F712                     u5000:
  3667  00F712                     
  3668                           ; BSR set to: 0
  3669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  3670  00F712  5190               	movf	efgtoa@e& (0+255),w,b
  3671  00F714  2774               	addwf	efgtoa@m& (0+255),f,b
  3672  00F716  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  3673  00F718  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  3674  00F71A                     l5568:
  3675                           
  3676                           ; BSR set to: 0
  3677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  3678  00F71A  0E00               	movlw	0
  3679  00F71C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3680  00F71E  0E00               	movlw	0
  3681  00F720  6F8A               	movwf	efgtoa@i& (0+255),b
  3682  00F722                     
  3683                           ; BSR set to: 0
  3684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  3685  00F722  C08C  F082         	movff	efgtoa@g,efgtoa@h
  3686  00F726  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  3687  00F72A  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  3688  00F72E  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  3689  00F732                     
  3690                           ; BSR set to: 0
  3691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  3692  00F732  C094  F060         	movff	efgtoa@u,efgtoa@ou
  3693  00F736  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  3694  00F73A  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  3695  00F73E  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  3696                           
  3697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3698  00F742  EF1E  F07C         	goto	l5582
  3699  00F746                     l5574:
  3700                           
  3701                           ; BSR set to: 0
  3702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  3703  00F746  C082  F001         	movff	efgtoa@h,___fldiv@b
  3704  00F74A  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3705  00F74E  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3706  00F752  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3707  00F756  C094  F005         	movff	efgtoa@u,___fldiv@a
  3708  00F75A  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3709  00F75E  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3710  00F762  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3711  00F766  EC8A  F070         	call	___fldiv	;wreg free
  3712  00F76A  C001  F01A         	movff	?___fldiv,floorf@x
  3713  00F76E  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3714  00F772  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3715  00F776  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3716  00F77A  EC81  F06F         	call	_floorf	;wreg free
  3717  00F77E  C01A  F086         	movff	?_floorf,efgtoa@l
  3718  00F782  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3719  00F786  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3720  00F78A  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3721                           
  3722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  3723  00F78E  C086  F001         	movff	efgtoa@l,___fltol@f1
  3724  00F792  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3725  00F796  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3726  00F79A  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3727  00F79E  ECCE  F06A         	call	___fltol	;wreg free
  3728  00F7A2  C001  F078         	movff	?___fltol,efgtoa@d
  3729  00F7A6  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3730  00F7AA                     
  3731                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  3732  00F7AA  C082  F02E         	movff	efgtoa@h,___flsub@b
  3733  00F7AE  C083  F02F         	movff	efgtoa@h+1,___flsub@b+1
  3734  00F7B2  C084  F030         	movff	efgtoa@h+2,___flsub@b+2
  3735  00F7B6  C085  F031         	movff	efgtoa@h+3,___flsub@b+3
  3736  00F7BA  C094  F019         	movff	efgtoa@u,___flmul@a
  3737  00F7BE  C095  F01A         	movff	efgtoa@u+1,___flmul@a+1
  3738  00F7C2  C096  F01B         	movff	efgtoa@u+2,___flmul@a+2
  3739  00F7C6  C097  F01C         	movff	efgtoa@u+3,___flmul@a+3
  3740  00F7CA  C086  F015         	movff	efgtoa@l,___flmul@b
  3741  00F7CE  C087  F016         	movff	efgtoa@l+1,___flmul@b+1
  3742  00F7D2  C088  F017         	movff	efgtoa@l+2,___flmul@b+2
  3743  00F7D6  C089  F018         	movff	efgtoa@l+3,___flmul@b+3
  3744  00F7DA  EC57  F072         	call	___flmul	;wreg free
  3745  00F7DE  C015  F032         	movff	?___flmul,___flsub@a
  3746  00F7E2  C016  F033         	movff	?___flmul+1,___flsub@a+1
  3747  00F7E6  C017  F034         	movff	?___flmul+2,___flsub@a+2
  3748  00F7EA  C018  F035         	movff	?___flmul+3,___flsub@a+3
  3749  00F7EE  EC3B  F063         	call	___flsub	;wreg free
  3750  00F7F2  C02E  F082         	movff	?___flsub,efgtoa@h
  3751  00F7F6  C02F  F083         	movff	?___flsub+1,efgtoa@h+1
  3752  00F7FA  C030  F084         	movff	?___flsub+2,efgtoa@h+2
  3753  00F7FE  C031  F085         	movff	?___flsub+3,efgtoa@h+3
  3754  00F802                     
  3755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  3756  00F802  C094  F001         	movff	efgtoa@u,___fldiv@b
  3757  00F806  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  3758  00F80A  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  3759  00F80E  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  3760  00F812  0E00               	movlw	0
  3761  00F814  6E05               	movwf	___fldiv@a^0,c
  3762  00F816  0E00               	movlw	0
  3763  00F818  6E06               	movwf	(___fldiv@a+1)^0,c
  3764  00F81A  0E20               	movlw	32
  3765  00F81C  6E07               	movwf	(___fldiv@a+2)^0,c
  3766  00F81E  0E41               	movlw	65
  3767  00F820  6E08               	movwf	(___fldiv@a+3)^0,c
  3768  00F822  EC8A  F070         	call	___fldiv	;wreg free
  3769  00F826  C001  F094         	movff	?___fldiv,efgtoa@u
  3770  00F82A  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  3771  00F82E  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  3772  00F832  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  3773  00F836                     
  3774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  3775  00F836  0100               	movlb	0	; () banked
  3776  00F838  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  3777  00F83A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  3778  00F83C                     l5582:
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  3782  00F83C  5174               	movf	efgtoa@m& (0+255),w,b
  3783  00F83E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  3784  00F840  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  3785  00F842  0A80               	xorlw	128
  3786  00F844  6E41               	movwf	??_efgtoa^0,c
  3787  00F846  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  3788  00F848  0A80               	xorlw	128
  3789  00F84A  5841               	subwfb	??_efgtoa^0,w,c
  3790  00F84C  A0D8               	btfss	status,0,c
  3791  00F84E  EF2B  F07C         	goto	u5011
  3792  00F852  EF2D  F07C         	goto	u5010
  3793  00F856                     u5011:
  3794  00F856  EFA3  F07B         	goto	l5574
  3795  00F85A                     u5010:
  3796  00F85A                     
  3797                           ; BSR set to: 0
  3798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  3799  00F85A  C094  F015         	movff	efgtoa@u,___flmul@b
  3800  00F85E  C095  F016         	movff	efgtoa@u+1,___flmul@b+1
  3801  00F862  C096  F017         	movff	efgtoa@u+2,___flmul@b+2
  3802  00F866  C097  F018         	movff	efgtoa@u+3,___flmul@b+3
  3803  00F86A  0E00               	movlw	0
  3804  00F86C  6E19               	movwf	___flmul@a^0,c
  3805  00F86E  0E00               	movlw	0
  3806  00F870  6E1A               	movwf	(___flmul@a+1)^0,c
  3807  00F872  0EA0               	movlw	160
  3808  00F874  6E1B               	movwf	(___flmul@a+2)^0,c
  3809  00F876  0E40               	movlw	64
  3810  00F878  6E1C               	movwf	(___flmul@a+3)^0,c
  3811  00F87A  EC57  F072         	call	___flmul	;wreg free
  3812  00F87E  C015  F086         	movff	?___flmul,efgtoa@l
  3813  00F882  C016  F087         	movff	?___flmul+1,efgtoa@l+1
  3814  00F886  C017  F088         	movff	?___flmul+2,efgtoa@l+2
  3815  00F88A  C018  F089         	movff	?___flmul+3,efgtoa@l+3
  3816  00F88E                     
  3817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  3818  00F88E  C082  F02E         	movff	efgtoa@h,___flge@ff1
  3819  00F892  C083  F02F         	movff	efgtoa@h+1,___flge@ff1+1
  3820  00F896  C084  F030         	movff	efgtoa@h+2,___flge@ff1+2
  3821  00F89A  C085  F031         	movff	efgtoa@h+3,___flge@ff1+3
  3822  00F89E  C086  F032         	movff	efgtoa@l,___flge@ff2
  3823  00F8A2  C087  F033         	movff	efgtoa@l+1,___flge@ff2+1
  3824  00F8A6  C088  F034         	movff	efgtoa@l+2,___flge@ff2+2
  3825  00F8AA  C089  F035         	movff	efgtoa@l+3,___flge@ff2+3
  3826  00F8AE  EC4C  F06A         	call	___flge	;wreg free
  3827  00F8B2  B0D8               	btfsc	status,0,c
  3828  00F8B4  EF5E  F07C         	goto	u5021
  3829  00F8B8  EF60  F07C         	goto	u5020
  3830  00F8BC                     u5021:
  3831  00F8BC  EF6B  F07C         	goto	l5590
  3832  00F8C0                     u5020:
  3833  00F8C0                     
  3834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  3835  00F8C0  0E00               	movlw	0
  3836  00F8C2  0100               	movlb	0	; () banked
  3837  00F8C4  6F86               	movwf	efgtoa@l& (0+255),b
  3838  00F8C6  0E00               	movlw	0
  3839  00F8C8  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3840  00F8CA  0E00               	movlw	0
  3841  00F8CC  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3842  00F8CE  0E00               	movlw	0
  3843  00F8D0  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3844                           
  3845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  3846  00F8D2  EF94  F07C         	goto	l5596
  3847  00F8D6                     l5590:
  3848                           
  3849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  3850  00F8D6  C082  F001         	movff	efgtoa@h,___fleq@ff1
  3851  00F8DA  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  3852  00F8DE  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  3853  00F8E2  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  3854  00F8E6  C086  F005         	movff	efgtoa@l,___fleq@ff2
  3855  00F8EA  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  3856  00F8EE  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  3857  00F8F2  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  3858  00F8F6  EC26  F067         	call	___fleq	;wreg free
  3859  00F8FA  A0D8               	btfss	status,0,c
  3860  00F8FC  EF82  F07C         	goto	u5031
  3861  00F900  EF84  F07C         	goto	u5030
  3862  00F904                     u5031:
  3863  00F904  EF94  F07C         	goto	l5596
  3864  00F908                     u5030:
  3865  00F908  0100               	movlb	0	; () banked
  3866  00F90A  B178               	btfsc	efgtoa@d& (0+255),0,b
  3867  00F90C  EF8A  F07C         	goto	u5041
  3868  00F910  EF8C  F07C         	goto	u5040
  3869  00F914                     u5041:
  3870  00F914  EF94  F07C         	goto	l5596
  3871  00F918                     u5040:
  3872  00F918                     
  3873                           ; BSR set to: 0
  3874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  3875  00F918  0E00               	movlw	0
  3876  00F91A  6F86               	movwf	efgtoa@l& (0+255),b
  3877  00F91C  0E00               	movlw	0
  3878  00F91E  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  3879  00F920  0E00               	movlw	0
  3880  00F922  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  3881  00F924  0E00               	movlw	0
  3882  00F926  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  3883  00F928                     l5596:
  3884                           
  3885                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  3886  00F928  C08C  F001         	movff	efgtoa@g,___fladd@b
  3887  00F92C  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  3888  00F930  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  3889  00F934  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  3890  00F938  C086  F005         	movff	efgtoa@l,___fladd@a
  3891  00F93C  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  3892  00F940  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  3893  00F944  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  3894  00F948  ECA8  F076         	call	___fladd	;wreg free
  3895  00F94C  C001  F082         	movff	?___fladd,efgtoa@h
  3896  00F950  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  3897  00F954  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  3898  00F958  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  3899  00F95C                     
  3900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  3901  00F95C  C060  F094         	movff	efgtoa@ou,efgtoa@u
  3902  00F960  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  3903  00F964  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  3904  00F968  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  3905  00F96C                     
  3906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  3907  00F96C  0E65               	movlw	101
  3908  00F96E  0100               	movlb	0	; () banked
  3909  00F970  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  3910  00F972  B4D8               	btfsc	status,2,c
  3911  00F974  EFBE  F07C         	goto	u5051
  3912  00F978  EFC0  F07C         	goto	u5050
  3913  00F97C                     u5051:
  3914  00F97C  EFC6  F07C         	goto	l5604
  3915  00F980                     u5050:
  3916  00F980                     
  3917                           ; BSR set to: 0
  3918  00F980  C090  F076         	movff	efgtoa@e,efgtoa@ne
  3919  00F984  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  3920  00F988  EFCA  F07C         	goto	l1602
  3921  00F98C                     l5604:
  3922                           
  3923                           ; BSR set to: 0
  3924  00F98C  0E00               	movlw	0
  3925  00F98E  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  3926  00F990  0E00               	movlw	0
  3927  00F992  6F76               	movwf	efgtoa@ne& (0+255),b
  3928  00F994                     l1602:
  3929                           
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  3932  00F994  0E00               	movlw	0
  3933  00F996  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  3934  00F998  0E00               	movlw	0
  3935  00F99A  6F72               	movwf	efgtoa@pp& (0+255),b
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  3938  00F99C  0E00               	movlw	0
  3939  00F99E  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  3940  00F9A0  0E00               	movlw	0
  3941  00F9A2  6F70               	movwf	efgtoa@t& (0+255),b
  3942                           
  3943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  3944  00F9A4  0E00               	movlw	0
  3945  00F9A6  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  3946  00F9A8  0E00               	movlw	0
  3947  00F9AA  6F8A               	movwf	efgtoa@i& (0+255),b
  3948                           
  3949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  3950  00F9AC  EFC5  F07D         	goto	l5654
  3951  00F9B0                     l5606:
  3952                           
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  3955  00F9B0  C082  F001         	movff	efgtoa@h,___fldiv@b
  3956  00F9B4  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  3957  00F9B8  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  3958  00F9BC  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  3959  00F9C0  C094  F005         	movff	efgtoa@u,___fldiv@a
  3960  00F9C4  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  3961  00F9C8  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  3962  00F9CC  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  3963  00F9D0  EC8A  F070         	call	___fldiv	;wreg free
  3964  00F9D4  C001  F01A         	movff	?___fldiv,floorf@x
  3965  00F9D8  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  3966  00F9DC  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  3967  00F9E0  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  3968  00F9E4  EC81  F06F         	call	_floorf	;wreg free
  3969  00F9E8  C01A  F086         	movff	?_floorf,efgtoa@l
  3970  00F9EC  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  3971  00F9F0  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  3972  00F9F4  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  3973                           
  3974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  3975  00F9F8  C086  F001         	movff	efgtoa@l,___fltol@f1
  3976  00F9FC  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  3977  00FA00  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  3978  00FA04  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  3979  00FA08  ECCE  F06A         	call	___fltol	;wreg free
  3980  00FA0C  C001  F078         	movff	?___fltol,efgtoa@d
  3981  00FA10  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  3982  00FA14                     
  3983                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  3984  00FA14  0100               	movlb	0	; () banked
  3985  00FA16  B9D6               	btfsc	_flags& (0+255),4,b
  3986  00FA18  EF10  F07D         	goto	u5061
  3987  00FA1C  EF12  F07D         	goto	u5060
  3988  00FA20                     u5061:
  3989  00FA20  EF2F  F07D         	goto	l5618
  3990  00FA24                     u5060:
  3991  00FA24                     
  3992                           ; BSR set to: 0
  3993  00FA24  5178               	movf	efgtoa@d& (0+255),w,b
  3994  00FA26  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  3995  00FA28  A4D8               	btfss	status,2,c
  3996  00FA2A  EF19  F07D         	goto	u5071
  3997  00FA2E  EF1B  F07D         	goto	u5070
  3998  00FA32                     u5071:
  3999  00FA32  EF2F  F07D         	goto	l5618
  4000  00FA36                     u5070:
  4001  00FA36                     
  4002                           ; BSR set to: 0
  4003  00FA36  0E67               	movlw	103
  4004  00FA38  1981               	xorwf	efgtoa@mode& (0+255),w,b
  4005  00FA3A  A4D8               	btfss	status,2,c
  4006  00FA3C  EF22  F07D         	goto	u5081
  4007  00FA40  EF24  F07D         	goto	u5080
  4008  00FA44                     u5081:
  4009  00FA44  EF2F  F07D         	goto	l5618
  4010  00FA48                     u5080:
  4011  00FA48                     
  4012                           ; BSR set to: 0
  4013  00FA48  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4014  00FA4A  EF2B  F07D         	goto	u5090
  4015  00FA4E  EF29  F07D         	goto	u5091
  4016  00FA52                     u5091:
  4017  00FA52  EF2F  F07D         	goto	l5618
  4018  00FA56                     u5090:
  4019  00FA56                     
  4020                           ; BSR set to: 0
  4021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  4022  00FA56  4B70               	infsnz	efgtoa@t& (0+255),f,b
  4023  00FA58  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  4024                           
  4025                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  4026  00FA5A  EF79  F07D         	goto	l5646
  4027  00FA5E                     l5618:
  4028                           
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  4031  00FA5E  5172               	movf	efgtoa@pp& (0+255),w,b
  4032  00FA60  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4033  00FA62  A4D8               	btfss	status,2,c
  4034  00FA64  EF36  F07D         	goto	u5101
  4035  00FA68  EF38  F07D         	goto	u5100
  4036  00FA6C                     u5101:
  4037  00FA6C  EF62  F07D         	goto	l5638
  4038  00FA70                     u5100:
  4039  00FA70                     
  4040                           ; BSR set to: 0
  4041  00FA70  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4042  00FA72  EF3F  F07D         	goto	u5110
  4043  00FA76  EF3D  F07D         	goto	u5111
  4044  00FA7A                     u5111:
  4045  00FA7A  EF62  F07D         	goto	l5638
  4046  00FA7E                     u5110:
  4047  00FA7E                     
  4048                           ; BSR set to: 0
  4049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  4050  00FA7E  0E74               	movlw	low _dbuf
  4051  00FA80  2592               	addwf	efgtoa@n& (0+255),w,b
  4052  00FA82  6ED9               	movwf	fsr2l,c
  4053  00FA84  0E01               	movlw	high _dbuf
  4054  00FA86  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4055  00FA88  6EDA               	movwf	fsr2h,c
  4056  00FA8A  0E2E               	movlw	46
  4057  00FA8C  6EDF               	movwf	indf2,c
  4058  00FA8E                     
  4059                           ; BSR set to: 0
  4060  00FA8E  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4061  00FA90  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4062  00FA92                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  4065  00FA92  077F               	decf	efgtoa@w& (0+255),f,b
  4066  00FA94  A0D8               	btfss	status,0,c
  4067  00FA96  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4068  00FA98                     
  4069                           ; BSR set to: 0
  4070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  4071  00FA98  0E00               	movlw	0
  4072  00FA9A  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  4073  00FA9C  0E01               	movlw	1
  4074  00FA9E  6F72               	movwf	efgtoa@pp& (0+255),b
  4075  00FAA0  EF62  F07D         	goto	l5638
  4076  00FAA4                     l5630:
  4077                           
  4078                           ; BSR set to: 0
  4079                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  4080  00FAA4  0E74               	movlw	low _dbuf
  4081  00FAA6  2592               	addwf	efgtoa@n& (0+255),w,b
  4082  00FAA8  6ED9               	movwf	fsr2l,c
  4083  00FAAA  0E01               	movlw	high _dbuf
  4084  00FAAC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4085  00FAAE  6EDA               	movwf	fsr2h,c
  4086  00FAB0  0E30               	movlw	48
  4087  00FAB2  6EDF               	movwf	indf2,c
  4088  00FAB4                     
  4089                           ; BSR set to: 0
  4090  00FAB4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4091  00FAB6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4092  00FAB8                     
  4093                           ; BSR set to: 0
  4094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  4095  00FAB8  077F               	decf	efgtoa@w& (0+255),f,b
  4096  00FABA  A0D8               	btfss	status,0,c
  4097  00FABC  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4098  00FABE                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  4101  00FABE  0770               	decf	efgtoa@t& (0+255),f,b
  4102  00FAC0  A0D8               	btfss	status,0,c
  4103  00FAC2  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  4104  00FAC4                     l5638:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  4108  00FAC4  5170               	movf	efgtoa@t& (0+255),w,b
  4109  00FAC6  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4110  00FAC8  A4D8               	btfss	status,2,c
  4111  00FACA  EF69  F07D         	goto	u5121
  4112  00FACE  EF6B  F07D         	goto	u5120
  4113  00FAD2                     u5121:
  4114  00FAD2  EF52  F07D         	goto	l5630
  4115  00FAD6                     u5120:
  4116  00FAD6                     
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  4119  00FAD6  0E74               	movlw	low _dbuf
  4120  00FAD8  2592               	addwf	efgtoa@n& (0+255),w,b
  4121  00FADA  6ED9               	movwf	fsr2l,c
  4122  00FADC  0E01               	movlw	high _dbuf
  4123  00FADE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4124  00FAE0  6EDA               	movwf	fsr2h,c
  4125  00FAE2  5178               	movf	efgtoa@d& (0+255),w,b
  4126  00FAE4  0F30               	addlw	48
  4127  00FAE6  6EDF               	movwf	indf2,c
  4128  00FAE8                     
  4129                           ; BSR set to: 0
  4130  00FAE8  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4131  00FAEA  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4132  00FAEC                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  4135  00FAEC  077F               	decf	efgtoa@w& (0+255),f,b
  4136  00FAEE  A0D8               	btfss	status,0,c
  4137  00FAF0  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4138  00FAF2                     l5646:
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  4142  00FAF2  C082  F02E         	movff	efgtoa@h,___flsub@b
  4143  00FAF6  C083  F02F         	movff	efgtoa@h+1,___flsub@b+1
  4144  00FAFA  C084  F030         	movff	efgtoa@h+2,___flsub@b+2
  4145  00FAFE  C085  F031         	movff	efgtoa@h+3,___flsub@b+3
  4146  00FB02  C094  F019         	movff	efgtoa@u,___flmul@a
  4147  00FB06  C095  F01A         	movff	efgtoa@u+1,___flmul@a+1
  4148  00FB0A  C096  F01B         	movff	efgtoa@u+2,___flmul@a+2
  4149  00FB0E  C097  F01C         	movff	efgtoa@u+3,___flmul@a+3
  4150  00FB12  C086  F015         	movff	efgtoa@l,___flmul@b
  4151  00FB16  C087  F016         	movff	efgtoa@l+1,___flmul@b+1
  4152  00FB1A  C088  F017         	movff	efgtoa@l+2,___flmul@b+2
  4153  00FB1E  C089  F018         	movff	efgtoa@l+3,___flmul@b+3
  4154  00FB22  EC57  F072         	call	___flmul	;wreg free
  4155  00FB26  C015  F032         	movff	?___flmul,___flsub@a
  4156  00FB2A  C016  F033         	movff	?___flmul+1,___flsub@a+1
  4157  00FB2E  C017  F034         	movff	?___flmul+2,___flsub@a+2
  4158  00FB32  C018  F035         	movff	?___flmul+3,___flsub@a+3
  4159  00FB36  EC3B  F063         	call	___flsub	;wreg free
  4160  00FB3A  C02E  F082         	movff	?___flsub,efgtoa@h
  4161  00FB3E  C02F  F083         	movff	?___flsub+1,efgtoa@h+1
  4162  00FB42  C030  F084         	movff	?___flsub+2,efgtoa@h+2
  4163  00FB46  C031  F085         	movff	?___flsub+3,efgtoa@h+3
  4164  00FB4A                     
  4165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  4166  00FB4A  C094  F001         	movff	efgtoa@u,___fldiv@b
  4167  00FB4E  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  4168  00FB52  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  4169  00FB56  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  4170  00FB5A  0E00               	movlw	0
  4171  00FB5C  6E05               	movwf	___fldiv@a^0,c
  4172  00FB5E  0E00               	movlw	0
  4173  00FB60  6E06               	movwf	(___fldiv@a+1)^0,c
  4174  00FB62  0E20               	movlw	32
  4175  00FB64  6E07               	movwf	(___fldiv@a+2)^0,c
  4176  00FB66  0E41               	movlw	65
  4177  00FB68  6E08               	movwf	(___fldiv@a+3)^0,c
  4178  00FB6A  EC8A  F070         	call	___fldiv	;wreg free
  4179  00FB6E  C001  F094         	movff	?___fldiv,efgtoa@u
  4180  00FB72  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  4181  00FB76  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  4182  00FB7A  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  4183  00FB7E                     
  4184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  4185  00FB7E  0100               	movlb	0	; () banked
  4186  00FB80  0776               	decf	efgtoa@ne& (0+255),f,b
  4187  00FB82  A0D8               	btfss	status,0,c
  4188  00FB84  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  4189  00FB86                     
  4190                           ; BSR set to: 0
  4191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  4192  00FB86  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  4193  00FB88  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  4194  00FB8A                     l5654:
  4195                           
  4196                           ; BSR set to: 0
  4197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4198  00FB8A  5174               	movf	efgtoa@m& (0+255),w,b
  4199  00FB8C  5D8A               	subwf	efgtoa@i& (0+255),w,b
  4200  00FB8E  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  4201  00FB90  0A80               	xorlw	128
  4202  00FB92  6E41               	movwf	??_efgtoa^0,c
  4203  00FB94  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  4204  00FB96  0A80               	xorlw	128
  4205  00FB98  5841               	subwfb	??_efgtoa^0,w,c
  4206  00FB9A  B0D8               	btfsc	status,0,c
  4207  00FB9C  EFD2  F07D         	goto	u5131
  4208  00FBA0  EFD4  F07D         	goto	u5130
  4209  00FBA4                     u5131:
  4210  00FBA4  EFE2  F07D         	goto	l5658
  4211  00FBA8                     u5130:
  4212  00FBA8                     
  4213                           ; BSR set to: 0
  4214  00FBA8  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  4215  00FBAA  EFE0  F07D         	goto	u5141
  4216  00FBAE  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  4217  00FBB0  E109               	bnz	u5140
  4218  00FBB2  0E4B               	movlw	75
  4219  00FBB4  5D92               	subwf	efgtoa@n& (0+255),w,b
  4220  00FBB6  A0D8               	btfss	status,0,c
  4221  00FBB8  EFE0  F07D         	goto	u5141
  4222  00FBBC  EFE2  F07D         	goto	u5140
  4223  00FBC0                     u5141:
  4224  00FBC0  EFD8  F07C         	goto	l5606
  4225  00FBC4                     u5140:
  4226  00FBC4                     l5658:
  4227                           
  4228                           ; BSR set to: 0
  4229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  4230  00FBC4  5172               	movf	efgtoa@pp& (0+255),w,b
  4231  00FBC6  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  4232  00FBC8  A4D8               	btfss	status,2,c
  4233  00FBCA  EFE9  F07D         	goto	u5151
  4234  00FBCE  EFEB  F07D         	goto	u5150
  4235  00FBD2                     u5151:
  4236  00FBD2  EFFC  F07D         	goto	l5666
  4237  00FBD6                     u5150:
  4238  00FBD6                     
  4239                           ; BSR set to: 0
  4240  00FBD6  A9D6               	btfss	_flags& (0+255),4,b
  4241  00FBD8  EFF0  F07D         	goto	u5161
  4242  00FBDC  EFF2  F07D         	goto	u5160
  4243  00FBE0                     u5161:
  4244  00FBE0  EFFC  F07D         	goto	l5666
  4245  00FBE4                     u5160:
  4246  00FBE4                     
  4247                           ; BSR set to: 0
  4248                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  4249  00FBE4  0E74               	movlw	low _dbuf
  4250  00FBE6  2592               	addwf	efgtoa@n& (0+255),w,b
  4251  00FBE8  6ED9               	movwf	fsr2l,c
  4252  00FBEA  0E01               	movlw	high _dbuf
  4253  00FBEC  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4254  00FBEE  6EDA               	movwf	fsr2h,c
  4255  00FBF0  0E2E               	movlw	46
  4256  00FBF2  6EDF               	movwf	indf2,c
  4257  00FBF4                     
  4258                           ; BSR set to: 0
  4259  00FBF4  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4260  00FBF6  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4261  00FBF8                     l5666:
  4262                           
  4263                           ; BSR set to: 0
  4264                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  4265  00FBF8  0E74               	movlw	low _dbuf
  4266  00FBFA  2592               	addwf	efgtoa@n& (0+255),w,b
  4267  00FBFC  6ED9               	movwf	fsr2l,c
  4268  00FBFE  0E01               	movlw	high _dbuf
  4269  00FC00  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4270  00FC02  6EDA               	movwf	fsr2h,c
  4271  00FC04  0E00               	movlw	0
  4272  00FC06  6EDF               	movwf	indf2,c
  4273  00FC08                     
  4274                           ; BSR set to: 0
  4275                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  4276  00FC08  0E65               	movlw	101
  4277  00FC0A  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  4278  00FC0C  A4D8               	btfss	status,2,c
  4279  00FC0E  EF0B  F07E         	goto	u5171
  4280  00FC12  EF0D  F07E         	goto	u5170
  4281  00FC16                     u5171:
  4282  00FC16  EFBB  F079         	goto	l5478
  4283  00FC1A                     u5170:
  4284  00FC1A                     
  4285                           ; BSR set to: 0
  4286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  4287  00FC1A  0E00               	movlw	0
  4288  00FC1C  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  4289  00FC1E  0E4F               	movlw	79
  4290  00FC20  6F8A               	movwf	efgtoa@i& (0+255),b
  4291  00FC22                     
  4292                           ; BSR set to: 0
  4293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  4294  00FC22  0E74               	movlw	low _dbuf
  4295  00FC24  258A               	addwf	efgtoa@i& (0+255),w,b
  4296  00FC26  6ED9               	movwf	fsr2l,c
  4297  00FC28  0E01               	movlw	high _dbuf
  4298  00FC2A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4299  00FC2C  6EDA               	movwf	fsr2h,c
  4300  00FC2E  0E00               	movlw	0
  4301  00FC30  6EDF               	movwf	indf2,c
  4302  00FC32                     
  4303                           ; BSR set to: 0
  4304                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  4305  00FC32  0E00               	movlw	0
  4306  00FC34  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4307  00FC36  0E00               	movlw	0
  4308  00FC38  6F7A               	movwf	efgtoa@sign& (0+255),b
  4309  00FC3A                     
  4310                           ; BSR set to: 0
  4311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  4312  00FC3A  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4313  00FC3C  EF24  F07E         	goto	u5180
  4314  00FC40  EF22  F07E         	goto	u5181
  4315  00FC44                     u5181:
  4316  00FC44  EF2C  F07E         	goto	l5682
  4317  00FC48                     u5180:
  4318  00FC48                     
  4319                           ; BSR set to: 0
  4320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  4321  00FC48  0E00               	movlw	0
  4322  00FC4A  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4323  00FC4C  0E01               	movlw	1
  4324  00FC4E  6F7A               	movwf	efgtoa@sign& (0+255),b
  4325  00FC50                     
  4326                           ; BSR set to: 0
  4327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  4328  00FC50  6D90               	negf	efgtoa@e& (0+255),b
  4329  00FC52  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  4330  00FC54  B0D8               	btfsc	status,0,c
  4331  00FC56  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  4332  00FC58                     l5682:
  4333                           
  4334                           ; BSR set to: 0
  4335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  4336  00FC58  0E00               	movlw	0
  4337  00FC5A  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  4338  00FC5C  0E02               	movlw	2
  4339  00FC5E  6F7C               	movwf	efgtoa@p& (0+255),b
  4340                           
  4341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4342  00FC60  EF5D  F07E         	goto	l5694
  4343  00FC64                     l5684:
  4344                           
  4345                           ; BSR set to: 0
  4346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  4347  00FC64  078A               	decf	efgtoa@i& (0+255),f,b
  4348  00FC66  A0D8               	btfss	status,0,c
  4349  00FC68  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4350  00FC6A                     
  4351                           ; BSR set to: 0
  4352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  4353  00FC6A  0E74               	movlw	low _dbuf
  4354  00FC6C  258A               	addwf	efgtoa@i& (0+255),w,b
  4355  00FC6E  6ED9               	movwf	fsr2l,c
  4356  00FC70  0E01               	movlw	high _dbuf
  4357  00FC72  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4358  00FC74  6EDA               	movwf	fsr2h,c
  4359  00FC76  C090  F001         	movff	efgtoa@e,___awmod@dividend
  4360  00FC7A  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  4361  00FC7E  0E00               	movlw	0
  4362  00FC80  6E04               	movwf	(___awmod@divisor+1)^0,c
  4363  00FC82  0E0A               	movlw	10
  4364  00FC84  6E03               	movwf	___awmod@divisor^0,c
  4365  00FC86  EC7B  F067         	call	___awmod	;wreg free
  4366  00FC8A  5001               	movf	?___awmod^0,w,c
  4367  00FC8C  0F30               	addlw	48
  4368  00FC8E  6EDF               	movwf	indf2,c
  4369  00FC90                     
  4370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  4371  00FC90  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  4372  00FC94  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  4373  00FC98  0E00               	movlw	0
  4374  00FC9A  6E04               	movwf	(___awdiv@divisor+1)^0,c
  4375  00FC9C  0E0A               	movlw	10
  4376  00FC9E  6E03               	movwf	___awdiv@divisor^0,c
  4377  00FCA0  EC35  F068         	call	___awdiv	;wreg free
  4378  00FCA4  C001  F090         	movff	?___awdiv,efgtoa@e
  4379  00FCA8  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  4380  00FCAC                     
  4381                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  4382  00FCAC  0100               	movlb	0	; () banked
  4383  00FCAE  077C               	decf	efgtoa@p& (0+255),f,b
  4384  00FCB0  A0D8               	btfss	status,0,c
  4385  00FCB2  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  4386  00FCB4                     
  4387                           ; BSR set to: 0
  4388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  4389  00FCB4  077F               	decf	efgtoa@w& (0+255),f,b
  4390  00FCB6  A0D8               	btfss	status,0,c
  4391  00FCB8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4392  00FCBA                     l5694:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  4396  00FCBA  5190               	movf	efgtoa@e& (0+255),w,b
  4397  00FCBC  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  4398  00FCBE  A4D8               	btfss	status,2,c
  4399  00FCC0  EF64  F07E         	goto	u5191
  4400  00FCC4  EF66  F07E         	goto	u5190
  4401  00FCC8                     u5191:
  4402  00FCC8  EF32  F07E         	goto	l5684
  4403  00FCCC                     u5190:
  4404  00FCCC                     
  4405                           ; BSR set to: 0
  4406  00FCCC  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  4407  00FCCE  EF73  F07E         	goto	u5200
  4408  00FCD2  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  4409  00FCD4  E106               	bnz	u5201
  4410  00FCD6  057C               	decf	efgtoa@p& (0+255),w,b
  4411  00FCD8  B0D8               	btfsc	status,0,c
  4412  00FCDA  EF71  F07E         	goto	u5201
  4413  00FCDE  EF73  F07E         	goto	u5200
  4414  00FCE2                     u5201:
  4415  00FCE2  EF32  F07E         	goto	l5684
  4416  00FCE6                     u5200:
  4417  00FCE6                     
  4418                           ; BSR set to: 0
  4419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  4420  00FCE6  078A               	decf	efgtoa@i& (0+255),f,b
  4421  00FCE8  A0D8               	btfss	status,0,c
  4422  00FCEA  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4423  00FCEC                     
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  4426  00FCEC  517A               	movf	efgtoa@sign& (0+255),w,b
  4427  00FCEE  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4428  00FCF0  A4D8               	btfss	status,2,c
  4429  00FCF2  EF7D  F07E         	goto	u5211
  4430  00FCF6  EF7F  F07E         	goto	u5210
  4431  00FCFA                     u5211:
  4432  00FCFA  EF85  F07E         	goto	l5704
  4433  00FCFE                     u5210:
  4434  00FCFE                     
  4435                           ; BSR set to: 0
  4436  00FCFE  0E00               	movlw	0
  4437  00FD00  6F6B               	movwf	(_efgtoa$2164+1)& (0+255),b
  4438  00FD02  0E2B               	movlw	43
  4439  00FD04  6F6A               	movwf	_efgtoa$2164& (0+255),b
  4440  00FD06  EF89  F07E         	goto	l5706
  4441  00FD0A                     l5704:
  4442                           
  4443                           ; BSR set to: 0
  4444  00FD0A  0E00               	movlw	0
  4445  00FD0C  6F6B               	movwf	(_efgtoa$2164+1)& (0+255),b
  4446  00FD0E  0E2D               	movlw	45
  4447  00FD10  6F6A               	movwf	_efgtoa$2164& (0+255),b
  4448  00FD12                     l5706:
  4449                           
  4450                           ; BSR set to: 0
  4451  00FD12  0E74               	movlw	low _dbuf
  4452  00FD14  258A               	addwf	efgtoa@i& (0+255),w,b
  4453  00FD16  6ED9               	movwf	fsr2l,c
  4454  00FD18  0E01               	movlw	high _dbuf
  4455  00FD1A  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4456  00FD1C  6EDA               	movwf	fsr2h,c
  4457  00FD1E  C06A  FFDF         	movff	_efgtoa$2164,indf2
  4458  00FD22                     
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  4461  00FD22  077F               	decf	efgtoa@w& (0+255),f,b
  4462  00FD24  A0D8               	btfss	status,0,c
  4463  00FD26  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4464  00FD28                     
  4465                           ; BSR set to: 0
  4466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  4467  00FD28  078A               	decf	efgtoa@i& (0+255),f,b
  4468  00FD2A  A0D8               	btfss	status,0,c
  4469  00FD2C  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  4470  00FD2E                     
  4471                           ; BSR set to: 0
  4472  00FD2E  0EBF               	movlw	191
  4473  00FD30  6E41               	movwf	??_efgtoa^0,c
  4474  00FD32  0EFF               	movlw	255
  4475  00FD34  6E42               	movwf	(??_efgtoa+1)^0,c
  4476  00FD36  5040               	movf	efgtoa@c^0,w,c
  4477  00FD38  6E43               	movwf	(??_efgtoa+2)^0,c
  4478  00FD3A  6A44               	clrf	(??_efgtoa+3)^0,c
  4479  00FD3C  5041               	movf	??_efgtoa^0,w,c
  4480  00FD3E  2643               	addwf	(??_efgtoa+2)^0,f,c
  4481  00FD40  5042               	movf	(??_efgtoa+1)^0,w,c
  4482  00FD42  2244               	addwfc	(??_efgtoa+3)^0,f,c
  4483  00FD44  5044               	movf	(??_efgtoa+3)^0,w,c
  4484  00FD46  E10A               	bnz	u5220
  4485  00FD48  0E1A               	movlw	26
  4486  00FD4A  5C43               	subwf	(??_efgtoa+2)^0,w,c
  4487  00FD4C  A0D8               	btfss	status,0,c
  4488  00FD4E  EFAB  F07E         	goto	u5221
  4489  00FD52  EFAE  F07E         	goto	u5220
  4490  00FD56                     u5221:
  4491  00FD56  0E01               	movlw	1
  4492  00FD58  EFAF  F07E         	goto	u5230
  4493  00FD5C                     u5220:
  4494  00FD5C  0E00               	movlw	0
  4495  00FD5E                     u5230:
  4496  00FD5E  6F6E               	movwf	_efgtoa$2166& (0+255),b
  4497  00FD60  6B6F               	clrf	(_efgtoa$2166+1)& (0+255),b
  4498  00FD62                     
  4499                           ; BSR set to: 0
  4500  00FD62  516E               	movf	_efgtoa$2166& (0+255),w,b
  4501  00FD64  116F               	iorwf	(_efgtoa$2166+1)& (0+255),w,b
  4502  00FD66  A4D8               	btfss	status,2,c
  4503  00FD68  EFB8  F07E         	goto	u5241
  4504  00FD6C  EFBA  F07E         	goto	u5240
  4505  00FD70                     u5241:
  4506  00FD70  EFC0  F07E         	goto	l5720
  4507  00FD74                     u5240:
  4508  00FD74                     
  4509                           ; BSR set to: 0
  4510  00FD74  0E00               	movlw	0
  4511  00FD76  6F6D               	movwf	(_efgtoa$2165+1)& (0+255),b
  4512  00FD78  0E65               	movlw	101
  4513  00FD7A  6F6C               	movwf	_efgtoa$2165& (0+255),b
  4514  00FD7C  EFC4  F07E         	goto	l5722
  4515  00FD80                     l5720:
  4516                           
  4517                           ; BSR set to: 0
  4518  00FD80  0E00               	movlw	0
  4519  00FD82  6F6D               	movwf	(_efgtoa$2165+1)& (0+255),b
  4520  00FD84  0E45               	movlw	69
  4521  00FD86  6F6C               	movwf	_efgtoa$2165& (0+255),b
  4522  00FD88                     l5722:
  4523                           
  4524                           ; BSR set to: 0
  4525  00FD88  0E74               	movlw	low _dbuf
  4526  00FD8A  258A               	addwf	efgtoa@i& (0+255),w,b
  4527  00FD8C  6ED9               	movwf	fsr2l,c
  4528  00FD8E  0E01               	movlw	high _dbuf
  4529  00FD90  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4530  00FD92  6EDA               	movwf	fsr2h,c
  4531  00FD94  C06C  FFDF         	movff	_efgtoa$2165,indf2
  4532  00FD98                     
  4533                           ; BSR set to: 0
  4534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  4535  00FD98  077F               	decf	efgtoa@w& (0+255),f,b
  4536  00FD9A  A0D8               	btfss	status,0,c
  4537  00FD9C  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4538  00FD9E                     
  4539                           ; BSR set to: 0
  4540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  4541  00FD9E  0E74               	movlw	low _dbuf
  4542  00FDA0  2592               	addwf	efgtoa@n& (0+255),w,b
  4543  00FDA2  6E01               	movwf	strcpy@dest^0,c
  4544  00FDA4  0E01               	movlw	high _dbuf
  4545  00FDA6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4546  00FDA8  6E02               	movwf	(strcpy@dest+1)^0,c
  4547  00FDAA  0E74               	movlw	low _dbuf
  4548  00FDAC  258A               	addwf	efgtoa@i& (0+255),w,b
  4549  00FDAE  6E03               	movwf	strcpy@src^0,c
  4550  00FDB0  0E01               	movlw	high _dbuf
  4551  00FDB2  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  4552  00FDB4  6E04               	movwf	(strcpy@src+1)^0,c
  4553  00FDB6  EC0B  F064         	call	_strcpy	;wreg free
  4554  00FDBA  EFBB  F079         	goto	l5478
  4555  00FDBE                     l1558:
  4556  00FDBE  0012               	return		;funcret
  4557  00FDC0                     __end_of_efgtoa:
  4558                           	callstack 0
  4559                           
  4560 ;; *************** function _tolower *****************
  4561 ;; Defined at:
  4562 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  4563 ;; Parameters:    Size  Location     Type
  4564 ;;  c               2    6[COMRAM] int 
  4565 ;; Auto vars:     Size  Location     Type
  4566 ;;		None
  4567 ;; Return value:  Size  Location     Type
  4568 ;;                  2    6[COMRAM] int 
  4569 ;; Registers used:
  4570 ;;		wreg, status,2, status,0
  4571 ;; Tracked objects:
  4572 ;;		On entry : 0/0
  4573 ;;		On exit  : 0/0
  4574 ;;		Unchanged: 0/0
  4575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4576 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4577 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4578 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4579 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4580 ;;Total ram usage:        8 bytes
  4581 ;; Hardware stack levels used:    1
  4582 ;; Hardware stack levels required when called:    1
  4583 ;; This function calls:
  4584 ;;		_isupper
  4585 ;; This function is called by:
  4586 ;;		_efgtoa
  4587 ;;		_vfpfcnvrt
  4588 ;; This function uses a non-reentrant model
  4589 ;;
  4590                           
  4591                           	psect	text6
  4592  00C874                     __ptext6:
  4593                           	callstack 0
  4594  00C874                     _tolower:
  4595                           	callstack 26
  4596  00C874  0EBF               	movlw	191
  4597  00C876  6E09               	movwf	??_tolower^0,c
  4598  00C878  0EFF               	movlw	255
  4599  00C87A  6E0A               	movwf	(??_tolower+1)^0,c
  4600  00C87C  C007  F00B         	movff	tolower@c,??_tolower+2
  4601  00C880  C008  F00C         	movff	tolower@c+1,??_tolower+3
  4602  00C884  5009               	movf	??_tolower^0,w,c
  4603  00C886  260B               	addwf	(??_tolower+2)^0,f,c
  4604  00C888  500A               	movf	(??_tolower+1)^0,w,c
  4605  00C88A  220C               	addwfc	(??_tolower+3)^0,f,c
  4606  00C88C  500C               	movf	(??_tolower+3)^0,w,c
  4607  00C88E  E10A               	bnz	u4540
  4608  00C890  0E1A               	movlw	26
  4609  00C892  5C0B               	subwf	(??_tolower+2)^0,w,c
  4610  00C894  A0D8               	btfss	status,0,c
  4611  00C896  EF4F  F064         	goto	u4541
  4612  00C89A  EF52  F064         	goto	u4540
  4613  00C89E                     u4541:
  4614  00C89E  0E01               	movlw	1
  4615  00C8A0  EF53  F064         	goto	u4550
  4616  00C8A4                     u4540:
  4617  00C8A4  0E00               	movlw	0
  4618  00C8A6                     u4550:
  4619  00C8A6  6E0D               	movwf	_tolower$2312^0,c
  4620  00C8A8  6A0E               	clrf	(_tolower$2312+1)^0,c
  4621  00C8AA  500D               	movf	_tolower$2312^0,w,c
  4622  00C8AC  100E               	iorwf	(_tolower$2312+1)^0,w,c
  4623  00C8AE  B4D8               	btfsc	status,2,c
  4624  00C8B0  EF5C  F064         	goto	u4561
  4625  00C8B4  EF5E  F064         	goto	u4560
  4626  00C8B8                     u4561:
  4627  00C8B8  EF65  F064         	goto	l1786
  4628  00C8BC                     u4560:
  4629  00C8BC  0E20               	movlw	32
  4630  00C8BE  1007               	iorwf	tolower@c^0,w,c
  4631  00C8C0  6E07               	movwf	?_tolower^0,c
  4632  00C8C2  5008               	movf	(tolower@c+1)^0,w,c
  4633  00C8C4  6E08               	movwf	(?_tolower+1)^0,c
  4634  00C8C6  EF69  F064         	goto	l1791
  4635  00C8CA                     l1786:
  4636  00C8CA  C007  F007         	movff	tolower@c,?_tolower
  4637  00C8CE  C008  F008         	movff	tolower@c+1,?_tolower+1
  4638  00C8D2                     l1791:
  4639  00C8D2  0012               	return		;funcret
  4640  00C8D4                     __end_of_tolower:
  4641                           	callstack 0
  4642                           
  4643 ;; *************** function _isupper *****************
  4644 ;; Defined at:
  4645 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  4646 ;; Parameters:    Size  Location     Type
  4647 ;;  c               2    0[COMRAM] int 
  4648 ;; Auto vars:     Size  Location     Type
  4649 ;;		None
  4650 ;; Return value:  Size  Location     Type
  4651 ;;                  2    0[COMRAM] int 
  4652 ;; Registers used:
  4653 ;;		wreg, status,2, status,0
  4654 ;; Tracked objects:
  4655 ;;		On entry : 0/0
  4656 ;;		On exit  : 0/0
  4657 ;;		Unchanged: 0/0
  4658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4659 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4660 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4661 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4662 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4663 ;;Total ram usage:        6 bytes
  4664 ;; Hardware stack levels used:    1
  4665 ;; This function calls:
  4666 ;;		Nothing
  4667 ;; This function is called by:
  4668 ;;		_efgtoa
  4669 ;;		_vfpfcnvrt
  4670 ;;		_tolower
  4671 ;; This function uses a non-reentrant model
  4672 ;;
  4673                           
  4674                           	psect	text7
  4675  00C576                     __ptext7:
  4676                           	callstack 0
  4677  00C576                     _isupper:
  4678                           	callstack 26
  4679  00C576  0EBF               	movlw	191
  4680  00C578  6E03               	movwf	??_isupper^0,c
  4681  00C57A  0EFF               	movlw	255
  4682  00C57C  6E04               	movwf	(??_isupper+1)^0,c
  4683  00C57E  C001  F005         	movff	isupper@c,??_isupper+2
  4684  00C582  C002  F006         	movff	isupper@c+1,??_isupper+3
  4685  00C586  5003               	movf	??_isupper^0,w,c
  4686  00C588  2605               	addwf	(??_isupper+2)^0,f,c
  4687  00C58A  5004               	movf	(??_isupper+1)^0,w,c
  4688  00C58C  2206               	addwfc	(??_isupper+3)^0,f,c
  4689  00C58E  5006               	movf	(??_isupper+3)^0,w,c
  4690  00C590  E10A               	bnz	u3670
  4691  00C592  0E1A               	movlw	26
  4692  00C594  5C05               	subwf	(??_isupper+2)^0,w,c
  4693  00C596  A0D8               	btfss	status,0,c
  4694  00C598  EFD0  F062         	goto	u3671
  4695  00C59C  EFD3  F062         	goto	u3670
  4696  00C5A0                     u3671:
  4697  00C5A0  0E01               	movlw	1
  4698  00C5A2  EFD4  F062         	goto	u3680
  4699  00C5A6                     u3670:
  4700  00C5A6  0E00               	movlw	0
  4701  00C5A8                     u3680:
  4702  00C5A8  6E01               	movwf	?_isupper^0,c
  4703  00C5AA  6A02               	clrf	(?_isupper+1)^0,c
  4704  00C5AC  0012               	return		;funcret
  4705  00C5AE                     __end_of_isupper:
  4706                           	callstack 0
  4707                           
  4708 ;; *************** function _strcpy *****************
  4709 ;; Defined at:
  4710 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  4711 ;; Parameters:    Size  Location     Type
  4712 ;;  dest            2    0[COMRAM] PTR unsigned char 
  4713 ;;		 -> dbuf(80), 
  4714 ;;  src             2    2[COMRAM] PTR const unsigned char 
  4715 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4716 ;;		 -> dbuf(80), 
  4717 ;; Auto vars:     Size  Location     Type
  4718 ;;  d               2    8[COMRAM] PTR unsigned char 
  4719 ;;		 -> dbuf(80), 
  4720 ;;  s               2    6[COMRAM] PTR const unsigned char 
  4721 ;;		 -> STR_14(4), STR_13(4), STR_10(4), STR_9(4), 
  4722 ;;		 -> dbuf(80), 
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  2    0[COMRAM] PTR unsigned char 
  4725 ;; Registers used:
  4726 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4732 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4733 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4734 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4735 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4736 ;;Total ram usage:       10 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; This function calls:
  4739 ;;		Nothing
  4740 ;; This function is called by:
  4741 ;;		_efgtoa
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	text8
  4746  00C816                     __ptext8:
  4747                           	callstack 0
  4748  00C816                     _strcpy:
  4749                           	callstack 26
  4750  00C816  C003  F007         	movff	strcpy@src,strcpy@s
  4751  00C81A  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  4752  00C81E  C001  F009         	movff	strcpy@dest,strcpy@d
  4753  00C822  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  4754  00C826                     l5366:
  4755  00C826  5007               	movf	strcpy@s^0,w,c
  4756  00C828  6E05               	movwf	??_strcpy^0,c
  4757  00C82A  5008               	movf	(strcpy@s+1)^0,w,c
  4758  00C82C  6E06               	movwf	(??_strcpy+1)^0,c
  4759  00C82E  4A07               	infsnz	strcpy@s^0,f,c
  4760  00C830  2A08               	incf	(strcpy@s+1)^0,f,c
  4761  00C832  C005  FFF6         	movff	??_strcpy,tblptrl
  4762  00C836  C006  FFF7         	movff	??_strcpy+1,tblptrh
  4763  00C83A  0E00               	movlw	low (__mediumconst shr (0+16))
  4764  00C83C  6EF8               	movwf	tblptru,c
  4765  00C83E  C009  FFD9         	movff	strcpy@d,fsr2l
  4766  00C842  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  4767  00C846  4A09               	infsnz	strcpy@d^0,f,c
  4768  00C848  2A0A               	incf	(strcpy@d+1)^0,f,c
  4769  00C84A  0E0E               	movlw	(high __ramtop+-1)
  4770  00C84C  64F7               	cpfsgt	tblptrh,c
  4771  00C84E  D003               	bra	u4527
  4772  00C850  0008               	tblrd		*
  4773  00C852  50F5               	movf	tablat,w,c
  4774  00C854  D005               	bra	u4520
  4775  00C856                     u4527:
  4776  00C856  CFF6 FFE9          	movff	tblptrl,fsr0l
  4777  00C85A  CFF7 FFEA          	movff	tblptrh,fsr0h
  4778  00C85E  50EF               	movf	indf0,w,c
  4779  00C860                     u4520:
  4780  00C860  6EDF               	movwf	indf2,c
  4781  00C862  50DF               	movf	indf2,w,c
  4782  00C864  A4D8               	btfss	status,2,c
  4783  00C866  EF37  F064         	goto	u4531
  4784  00C86A  EF39  F064         	goto	u4530
  4785  00C86E                     u4531:
  4786  00C86E  EF13  F064         	goto	l5366
  4787  00C872                     u4530:
  4788  00C872  0012               	return		;funcret
  4789  00C874                     __end_of_strcpy:
  4790                           	callstack 0
  4791                           
  4792 ;; *************** function _pad *****************
  4793 ;; Defined at:
  4794 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4795 ;; Parameters:    Size  Location     Type
  4796 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  4797 ;;		 -> sprintf@f(6), 
  4798 ;;  buf             2   18[COMRAM] PTR unsigned char 
  4799 ;;		 -> dbuf(80), 
  4800 ;;  p               2   20[COMRAM] int 
  4801 ;; Auto vars:     Size  Location     Type
  4802 ;;  w               2   25[COMRAM] int 
  4803 ;;  i               2   23[COMRAM] int 
  4804 ;; Return value:  Size  Location     Type
  4805 ;;                  2   16[COMRAM] int 
  4806 ;; Registers used:
  4807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  4808 ;; Tracked objects:
  4809 ;;		On entry : 0/0
  4810 ;;		On exit  : 0/0
  4811 ;;		Unchanged: 0/0
  4812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4813 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4814 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4815 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4816 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4817 ;;Total ram usage:       11 bytes
  4818 ;; Hardware stack levels used:    1
  4819 ;; Hardware stack levels required when called:    3
  4820 ;; This function calls:
  4821 ;;		_fputc
  4822 ;;		_fputs
  4823 ;;		_strlen
  4824 ;; This function is called by:
  4825 ;;		_efgtoa
  4826 ;; This function uses a non-reentrant model
  4827 ;;
  4828                           
  4829                           	psect	text9
  4830  00D12E                     __ptext9:
  4831                           	callstack 0
  4832  00D12E                     _pad:
  4833                           	callstack 23
  4834  00D12E                     
  4835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  4836  00D12E  0100               	movlb	0	; () banked
  4837  00D130  A1D6               	btfss	_flags& (0+255),0,b
  4838  00D132  EF9D  F068         	goto	u4411
  4839  00D136  EF9F  F068         	goto	u4410
  4840  00D13A                     u4411:
  4841  00D13A  EFA9  F068         	goto	l5324
  4842  00D13E                     u4410:
  4843  00D13E                     
  4844                           ; BSR set to: 0
  4845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  4846  00D13E  C013  F00A         	movff	pad@buf,fputs@s
  4847  00D142  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4848  00D146  C011  F00C         	movff	pad@fp,fputs@fp
  4849  00D14A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4850  00D14E  EC19  F063         	call	_fputs	;wreg free
  4851  00D152                     l5324:
  4852                           
  4853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  4854  00D152  BE16               	btfsc	(pad@p+1)^0,7,c
  4855  00D154  EFAE  F068         	goto	u4421
  4856  00D158  EFB0  F068         	goto	u4420
  4857  00D15C                     u4421:
  4858  00D15C  EFB6  F068         	goto	l5328
  4859  00D160                     u4420:
  4860  00D160  C015  F01A         	movff	pad@p,pad@w
  4861  00D164  C016  F01B         	movff	pad@p+1,pad@w+1
  4862  00D168  EFBA  F068         	goto	l1535
  4863  00D16C                     l5328:
  4864  00D16C  0E00               	movlw	0
  4865  00D16E  6E1B               	movwf	(pad@w+1)^0,c
  4866  00D170  0E00               	movlw	0
  4867  00D172  6E1A               	movwf	pad@w^0,c
  4868  00D174                     l1535:
  4869                           
  4870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  4871  00D174  0E00               	movlw	0
  4872  00D176  6E19               	movwf	(pad@i+1)^0,c
  4873  00D178  0E00               	movlw	0
  4874  00D17A  6E18               	movwf	pad@i^0,c
  4875                           
  4876                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4877  00D17C  EFCC  F068         	goto	l5334
  4878  00D180                     l5330:
  4879                           
  4880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  4881  00D180  0E00               	movlw	0
  4882  00D182  6E02               	movwf	(fputc@c+1)^0,c
  4883  00D184  0E20               	movlw	32
  4884  00D186  6E01               	movwf	fputc@c^0,c
  4885  00D188  C011  F003         	movff	pad@fp,fputc@fp
  4886  00D18C  C012  F004         	movff	pad@fp+1,fputc@fp+1
  4887  00D190  ECFA  F068         	call	_fputc	;wreg free
  4888  00D194                     
  4889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  4890  00D194  4A18               	infsnz	pad@i^0,f,c
  4891  00D196  2A19               	incf	(pad@i+1)^0,f,c
  4892  00D198                     l5334:
  4893                           
  4894                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  4895  00D198  501A               	movf	pad@w^0,w,c
  4896  00D19A  5C18               	subwf	pad@i^0,w,c
  4897  00D19C  5019               	movf	(pad@i+1)^0,w,c
  4898  00D19E  0A80               	xorlw	128
  4899  00D1A0  6E17               	movwf	??_pad^0,c
  4900  00D1A2  501B               	movf	(pad@w+1)^0,w,c
  4901  00D1A4  0A80               	xorlw	128
  4902  00D1A6  5817               	subwfb	??_pad^0,w,c
  4903  00D1A8  A0D8               	btfss	status,0,c
  4904  00D1AA  EFD9  F068         	goto	u4431
  4905  00D1AE  EFDB  F068         	goto	u4430
  4906  00D1B2                     u4431:
  4907  00D1B2  EFC0  F068         	goto	l5330
  4908  00D1B6                     u4430:
  4909  00D1B6                     
  4910                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  4911  00D1B6  0100               	movlb	0	; () banked
  4912  00D1B8  B1D6               	btfsc	_flags& (0+255),0,b
  4913  00D1BA  EFE1  F068         	goto	u4441
  4914  00D1BE  EFE3  F068         	goto	u4440
  4915  00D1C2                     u4441:
  4916  00D1C2  EFED  F068         	goto	l5338
  4917  00D1C6                     u4440:
  4918  00D1C6                     
  4919                           ; BSR set to: 0
  4920                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  4921  00D1C6  C013  F00A         	movff	pad@buf,fputs@s
  4922  00D1CA  C014  F00B         	movff	pad@buf+1,fputs@s+1
  4923  00D1CE  C011  F00C         	movff	pad@fp,fputs@fp
  4924  00D1D2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  4925  00D1D6  EC19  F063         	call	_fputs	;wreg free
  4926  00D1DA                     l5338:
  4927                           
  4928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  4929  00D1DA  C013  F001         	movff	pad@buf,strlen@s
  4930  00D1DE  C014  F002         	movff	pad@buf+1,strlen@s+1
  4931  00D1E2  EC68  F062         	call	_strlen	;wreg free
  4932  00D1E6  501A               	movf	pad@w^0,w,c
  4933  00D1E8  2401               	addwf	?_strlen^0,w,c
  4934  00D1EA  6E11               	movwf	?_pad^0,c
  4935  00D1EC  501B               	movf	(pad@w+1)^0,w,c
  4936  00D1EE  2002               	addwfc	(?_strlen+1)^0,w,c
  4937  00D1F0  6E12               	movwf	(?_pad+1)^0,c
  4938  00D1F2  0012               	return		;funcret
  4939  00D1F4                     __end_of_pad:
  4940                           	callstack 0
  4941                           
  4942 ;; *************** function _strlen *****************
  4943 ;; Defined at:
  4944 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  4945 ;; Parameters:    Size  Location     Type
  4946 ;;  s               2    0[COMRAM] PTR const unsigned char 
  4947 ;;		 -> dbuf(80), 
  4948 ;; Auto vars:     Size  Location     Type
  4949 ;;  a               2    2[COMRAM] PTR const unsigned char 
  4950 ;;		 -> dbuf(80), 
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  2    0[COMRAM] unsigned int 
  4953 ;; Registers used:
  4954 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4960 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4961 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4963 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4964 ;;Total ram usage:        4 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; This function calls:
  4967 ;;		Nothing
  4968 ;; This function is called by:
  4969 ;;		_pad
  4970 ;; This function uses a non-reentrant model
  4971 ;;
  4972                           
  4973                           	psect	text10
  4974  00C4D0                     __ptext10:
  4975                           	callstack 0
  4976  00C4D0                     _strlen:
  4977                           	callstack 25
  4978  00C4D0  C001  F003         	movff	strlen@s,strlen@a
  4979  00C4D4  C002  F004         	movff	strlen@s+1,strlen@a+1
  4980  00C4D8  EF70  F062         	goto	l4792
  4981  00C4DC                     l4790:
  4982  00C4DC  4A01               	infsnz	strlen@s^0,f,c
  4983  00C4DE  2A02               	incf	(strlen@s+1)^0,f,c
  4984  00C4E0                     l4792:
  4985  00C4E0  C001  FFD9         	movff	strlen@s,fsr2l
  4986  00C4E4  C002  FFDA         	movff	strlen@s+1,fsr2h
  4987  00C4E8  50DF               	movf	indf2,w,c
  4988  00C4EA  A4D8               	btfss	status,2,c
  4989  00C4EC  EF7A  F062         	goto	u3661
  4990  00C4F0  EF7C  F062         	goto	u3660
  4991  00C4F4                     u3661:
  4992  00C4F4  EF6E  F062         	goto	l4790
  4993  00C4F8                     u3660:
  4994  00C4F8  5003               	movf	strlen@a^0,w,c
  4995  00C4FA  5C01               	subwf	strlen@s^0,w,c
  4996  00C4FC  6E01               	movwf	?_strlen^0,c
  4997  00C4FE  5004               	movf	(strlen@a+1)^0,w,c
  4998  00C500  5802               	subwfb	(strlen@s+1)^0,w,c
  4999  00C502  6E02               	movwf	(?_strlen+1)^0,c
  5000  00C504  0012               	return		;funcret
  5001  00C506                     __end_of_strlen:
  5002                           	callstack 0
  5003                           
  5004 ;; *************** function _fputs *****************
  5005 ;; Defined at:
  5006 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  5007 ;; Parameters:    Size  Location     Type
  5008 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5009 ;;		 -> dbuf(80), 
  5010 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  5011 ;;		 -> sprintf@f(6), 
  5012 ;; Auto vars:     Size  Location     Type
  5013 ;;  i               2   14[COMRAM] int 
  5014 ;;  c               1   13[COMRAM] unsigned char 
  5015 ;; Return value:  Size  Location     Type
  5016 ;;                  2    9[COMRAM] int 
  5017 ;; Registers used:
  5018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5019 ;; Tracked objects:
  5020 ;;		On entry : 0/0
  5021 ;;		On exit  : 0/0
  5022 ;;		Unchanged: 0/0
  5023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5024 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5025 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5026 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5027 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5028 ;;Total ram usage:        7 bytes
  5029 ;; Hardware stack levels used:    1
  5030 ;; Hardware stack levels required when called:    2
  5031 ;; This function calls:
  5032 ;;		_fputc
  5033 ;; This function is called by:
  5034 ;;		_pad
  5035 ;; This function uses a non-reentrant model
  5036 ;;
  5037                           
  5038                           	psect	text11
  5039  00C632                     __ptext11:
  5040                           	callstack 0
  5041  00C632                     _fputs:
  5042                           	callstack 23
  5043  00C632  0E00               	movlw	0
  5044  00C634  6E10               	movwf	(fputs@i+1)^0,c
  5045  00C636  0E00               	movlw	0
  5046  00C638  6E0F               	movwf	fputs@i^0,c
  5047  00C63A  EF2A  F063         	goto	l4786
  5048  00C63E                     l4782:
  5049  00C63E  C00E  F001         	movff	fputs@c,fputc@c
  5050  00C642  6A02               	clrf	(fputc@c+1)^0,c
  5051  00C644  C00C  F003         	movff	fputs@fp,fputc@fp
  5052  00C648  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  5053  00C64C  ECFA  F068         	call	_fputc	;wreg free
  5054  00C650  4A0F               	infsnz	fputs@i^0,f,c
  5055  00C652  2A10               	incf	(fputs@i+1)^0,f,c
  5056  00C654                     l4786:
  5057  00C654  500F               	movf	fputs@i^0,w,c
  5058  00C656  240A               	addwf	fputs@s^0,w,c
  5059  00C658  6ED9               	movwf	fsr2l,c
  5060  00C65A  5010               	movf	(fputs@i+1)^0,w,c
  5061  00C65C  200B               	addwfc	(fputs@s+1)^0,w,c
  5062  00C65E  6EDA               	movwf	fsr2h,c
  5063  00C660  50DF               	movf	indf2,w,c
  5064  00C662  6E0E               	movwf	fputs@c^0,c
  5065  00C664  500E               	movf	fputs@c^0,w,c
  5066  00C666  A4D8               	btfss	status,2,c
  5067  00C668  EF38  F063         	goto	u3651
  5068  00C66C  EF3A  F063         	goto	u3650
  5069  00C670                     u3651:
  5070  00C670  EF1F  F063         	goto	l4782
  5071  00C674                     u3650:
  5072  00C674  0012               	return		;funcret
  5073  00C676                     __end_of_fputs:
  5074                           	callstack 0
  5075                           
  5076 ;; *************** function _fputc *****************
  5077 ;; Defined at:
  5078 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
  5079 ;; Parameters:    Size  Location     Type
  5080 ;;  c               2    0[COMRAM] int 
  5081 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  5082 ;;		 -> sprintf@f(6), 
  5083 ;; Auto vars:     Size  Location     Type
  5084 ;;		None
  5085 ;; Return value:  Size  Location     Type
  5086 ;;                  2    0[COMRAM] int 
  5087 ;; Registers used:
  5088 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  5089 ;; Tracked objects:
  5090 ;;		On entry : 0/0
  5091 ;;		On exit  : 0/0
  5092 ;;		Unchanged: 0/0
  5093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5094 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5096 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5097 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5098 ;;Total ram usage:        9 bytes
  5099 ;; Hardware stack levels used:    1
  5100 ;; Hardware stack levels required when called:    1
  5101 ;; This function calls:
  5102 ;;		_putch
  5103 ;; This function is called by:
  5104 ;;		_pad
  5105 ;;		_vfpfcnvrt
  5106 ;;		_fputs
  5107 ;; This function uses a non-reentrant model
  5108 ;;
  5109                           
  5110                           	psect	text12
  5111  00D1F4                     __ptext12:
  5112                           	callstack 0
  5113  00D1F4                     _fputc:
  5114                           	callstack 26
  5115  00D1F4  5003               	movf	fputc@fp^0,w,c
  5116  00D1F6  1004               	iorwf	(fputc@fp+1)^0,w,c
  5117  00D1F8  B4D8               	btfsc	status,2,c
  5118  00D1FA  EF01  F069         	goto	u3191
  5119  00D1FE  EF03  F069         	goto	u3190
  5120  00D202                     u3191:
  5121  00D202  EF0C  F069         	goto	l4534
  5122  00D206                     u3190:
  5123  00D206  5003               	movf	fputc@fp^0,w,c
  5124  00D208  1004               	iorwf	(fputc@fp+1)^0,w,c
  5125  00D20A  A4D8               	btfss	status,2,c
  5126  00D20C  EF0A  F069         	goto	u3201
  5127  00D210  EF0C  F069         	goto	u3200
  5128  00D214                     u3201:
  5129  00D214  EF11  F069         	goto	l4536
  5130  00D218                     u3200:
  5131  00D218                     l4534:
  5132  00D218  5001               	movf	fputc@c^0,w,c
  5133  00D21A  EC68  F060         	call	_putch
  5134  00D21E  EF5E  F069         	goto	l1749
  5135  00D222                     l4536:
  5136  00D222  EE20 F004          	lfsr	2,4
  5137  00D226  5003               	movf	fputc@fp^0,w,c
  5138  00D228  26D9               	addwf	fsr2l,f,c
  5139  00D22A  5004               	movf	(fputc@fp+1)^0,w,c
  5140  00D22C  22DA               	addwfc	fsr2h,f,c
  5141  00D22E  50DE               	movf	postinc2,w,c
  5142  00D230  10DE               	iorwf	postinc2,w,c
  5143  00D232  B4D8               	btfsc	status,2,c
  5144  00D234  EF1E  F069         	goto	u3211
  5145  00D238  EF20  F069         	goto	u3210
  5146  00D23C                     u3211:
  5147  00D23C  EF3B  F069         	goto	l4540
  5148  00D240                     u3210:
  5149  00D240  EE20 F004          	lfsr	2,4
  5150  00D244  5003               	movf	fputc@fp^0,w,c
  5151  00D246  26D9               	addwf	fsr2l,f,c
  5152  00D248  5004               	movf	(fputc@fp+1)^0,w,c
  5153  00D24A  22DA               	addwfc	fsr2h,f,c
  5154  00D24C  EE10 F002          	lfsr	1,2
  5155  00D250  5003               	movf	fputc@fp^0,w,c
  5156  00D252  26E1               	addwf	fsr1l,f,c
  5157  00D254  5004               	movf	(fputc@fp+1)^0,w,c
  5158  00D256  22E2               	addwfc	fsr1h,f,c
  5159  00D258  50DE               	movf	postinc2,w,c
  5160  00D25A  5CE6               	subwf	postinc1,w,c
  5161  00D25C  50E6               	movf	postinc1,w,c
  5162  00D25E  0A80               	xorlw	128
  5163  00D260  6E09               	movwf	(??_fputc+4)^0,c
  5164  00D262  50DE               	movf	postinc2,w,c
  5165  00D264  0A80               	xorlw	128
  5166  00D266  5809               	subwfb	(??_fputc+4)^0,w,c
  5167  00D268  B0D8               	btfsc	status,0,c
  5168  00D26A  EF39  F069         	goto	u3221
  5169  00D26E  EF3B  F069         	goto	u3220
  5170  00D272                     u3221:
  5171  00D272  EF5E  F069         	goto	l1749
  5172  00D276                     u3220:
  5173  00D276                     l4540:
  5174  00D276  EE20 F002          	lfsr	2,2
  5175  00D27A  5003               	movf	fputc@fp^0,w,c
  5176  00D27C  26D9               	addwf	fsr2l,f,c
  5177  00D27E  5004               	movf	(fputc@fp+1)^0,w,c
  5178  00D280  22DA               	addwfc	fsr2h,f,c
  5179  00D282  CFDE F005          	movff	postinc2,??_fputc
  5180  00D286  CFDD F006          	movff	postdec2,??_fputc+1
  5181  00D28A  C003  FFD9         	movff	fputc@fp,fsr2l
  5182  00D28E  C004  FFDA         	movff	fputc@fp+1,fsr2h
  5183  00D292  CFDE F007          	movff	postinc2,??_fputc+2
  5184  00D296  CFDD F008          	movff	postdec2,??_fputc+3
  5185  00D29A  5005               	movf	??_fputc^0,w,c
  5186  00D29C  2407               	addwf	(??_fputc+2)^0,w,c
  5187  00D29E  6ED9               	movwf	fsr2l,c
  5188  00D2A0  5006               	movf	(??_fputc+1)^0,w,c
  5189  00D2A2  2008               	addwfc	(??_fputc+3)^0,w,c
  5190  00D2A4  6EDA               	movwf	fsr2h,c
  5191  00D2A6  C001  FFDF         	movff	fputc@c,indf2
  5192  00D2AA  EE20 F002          	lfsr	2,2
  5193  00D2AE  5003               	movf	fputc@fp^0,w,c
  5194  00D2B0  26D9               	addwf	fsr2l,f,c
  5195  00D2B2  5004               	movf	(fputc@fp+1)^0,w,c
  5196  00D2B4  22DA               	addwfc	fsr2h,f,c
  5197  00D2B6  2ADE               	incf	postinc2,f,c
  5198  00D2B8  0E00               	movlw	0
  5199  00D2BA  22DD               	addwfc	postdec2,f,c
  5200  00D2BC                     l1749:
  5201  00D2BC  0012               	return		;funcret
  5202  00D2BE                     __end_of_fputc:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function _putch *****************
  5206 ;; Defined at:
  5207 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  c               1    wreg     unsigned char 
  5210 ;; Auto vars:     Size  Location     Type
  5211 ;;  c               1    0[COMRAM] unsigned char 
  5212 ;; Return value:  Size  Location     Type
  5213 ;;                  1    wreg      void 
  5214 ;; Registers used:
  5215 ;;		wreg
  5216 ;; Tracked objects:
  5217 ;;		On entry : 0/0
  5218 ;;		On exit  : 0/0
  5219 ;;		Unchanged: 0/0
  5220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5221 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5222 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5223 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5224 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5225 ;;Total ram usage:        0 bytes
  5226 ;; Hardware stack levels used:    1
  5227 ;; This function calls:
  5228 ;;		Nothing
  5229 ;; This function is called by:
  5230 ;;		_fputc
  5231 ;; This function uses a non-reentrant model
  5232 ;;
  5233                           
  5234                           	psect	text13
  5235  00C0D0                     __ptext13:
  5236                           	callstack 0
  5237  00C0D0                     _putch:
  5238                           	callstack 26
  5239  00C0D0  0012               	return		;funcret
  5240  00C0D2                     __end_of_putch:
  5241                           	callstack 0
  5242                           
  5243 ;; *************** function _floorf *****************
  5244 ;; Defined at:
  5245 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;  x               4   25[COMRAM] float 
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;  u               4   41[COMRAM] struct .
  5250 ;;  m               4   35[COMRAM] unsigned long 
  5251 ;;  e               2   39[COMRAM] int 
  5252 ;; Return value:  Size  Location     Type
  5253 ;;                  4   25[COMRAM] float 
  5254 ;; Registers used:
  5255 ;;		wreg, status,2, status,0
  5256 ;; Tracked objects:
  5257 ;;		On entry : 0/0
  5258 ;;		On exit  : 0/0
  5259 ;;		Unchanged: 0/0
  5260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5261 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5262 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5263 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5264 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5265 ;;Total ram usage:       20 bytes
  5266 ;; Hardware stack levels used:    1
  5267 ;; This function calls:
  5268 ;;		Nothing
  5269 ;; This function is called by:
  5270 ;;		_efgtoa
  5271 ;; This function uses a non-reentrant model
  5272 ;;
  5273                           
  5274                           	psect	text14
  5275  00DF02                     __ptext14:
  5276                           	callstack 0
  5277  00DF02                     _floorf:
  5278                           	callstack 26
  5279  00DF02  C0B0  F02A         	movff	floorf@F524,floorf@u
  5280  00DF06  C0B1  F02B         	movff	floorf@F524+1,floorf@u+1
  5281  00DF0A  C0B2  F02C         	movff	floorf@F524+2,floorf@u+2
  5282  00DF0E  C0B3  F02D         	movff	floorf@F524+3,floorf@u+3
  5283  00DF12  C01A  F02A         	movff	floorf@x,floorf@u
  5284  00DF16  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  5285  00DF1A  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  5286  00DF1E  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  5287  00DF22  0E81               	movlw	129
  5288  00DF24  6E1E               	movwf	??_floorf^0,c
  5289  00DF26  0EFF               	movlw	255
  5290  00DF28  6E1F               	movwf	(??_floorf+1)^0,c
  5291  00DF2A  C02A  F020         	movff	floorf@u,??_floorf+2
  5292  00DF2E  C02B  F021         	movff	floorf@u+1,??_floorf+3
  5293  00DF32  C02C  F022         	movff	floorf@u+2,??_floorf+4
  5294  00DF36  C02D  F023         	movff	floorf@u+3,??_floorf+5
  5295  00DF3A  0E18               	movlw	24
  5296  00DF3C  EFA5  F06F         	goto	u4570
  5297  00DF40                     u4575:
  5298  00DF40  90D8               	bcf	status,0,c
  5299  00DF42  3223               	rrcf	(??_floorf+5)^0,f,c
  5300  00DF44  3222               	rrcf	(??_floorf+4)^0,f,c
  5301  00DF46  3221               	rrcf	(??_floorf+3)^0,f,c
  5302  00DF48  3220               	rrcf	(??_floorf+2)^0,f,c
  5303  00DF4A                     u4570:
  5304  00DF4A  2EE8               	decfsz	wreg,f,c
  5305  00DF4C  EFA0  F06F         	goto	u4575
  5306  00DF50  5020               	movf	(??_floorf+2)^0,w,c
  5307  00DF52  241E               	addwf	??_floorf^0,w,c
  5308  00DF54  6E28               	movwf	floorf@e^0,c
  5309  00DF56  0E00               	movlw	0
  5310  00DF58  201F               	addwfc	(??_floorf+1)^0,w,c
  5311  00DF5A  6E29               	movwf	(floorf@e+1)^0,c
  5312  00DF5C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5313  00DF5E  EFBA  F06F         	goto	u4581
  5314  00DF62  5029               	movf	(floorf@e+1)^0,w,c
  5315  00DF64  E109               	bnz	u4580
  5316  00DF66  0E17               	movlw	23
  5317  00DF68  5C28               	subwf	floorf@e^0,w,c
  5318  00DF6A  A0D8               	btfss	status,0,c
  5319  00DF6C  EFBA  F06F         	goto	u4581
  5320  00DF70  EFBC  F06F         	goto	u4580
  5321  00DF74                     u4581:
  5322  00DF74  EFC6  F06F         	goto	l5384
  5323  00DF78                     u4580:
  5324  00DF78                     l5382:
  5325  00DF78  C01A  F01A         	movff	floorf@x,?_floorf
  5326  00DF7C  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  5327  00DF80  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  5328  00DF84  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  5329  00DF88  EF89  F070         	goto	l1710
  5330  00DF8C                     l5384:
  5331  00DF8C  BE29               	btfsc	(floorf@e+1)^0,7,c
  5332  00DF8E  EFCB  F06F         	goto	u4591
  5333  00DF92  EFCD  F06F         	goto	u4590
  5334  00DF96                     u4591:
  5335  00DF96  EF3D  F070         	goto	l5394
  5336  00DF9A                     u4590:
  5337  00DF9A  C028  F01E         	movff	floorf@e,??_floorf
  5338  00DF9E  0EFF               	movlw	255
  5339  00DFA0  6E1F               	movwf	(??_floorf+1)^0,c
  5340  00DFA2  0EFF               	movlw	255
  5341  00DFA4  6E20               	movwf	(??_floorf+2)^0,c
  5342  00DFA6  0E7F               	movlw	127
  5343  00DFA8  6E21               	movwf	(??_floorf+3)^0,c
  5344  00DFAA  0E00               	movlw	0
  5345  00DFAC  6E22               	movwf	(??_floorf+4)^0,c
  5346  00DFAE                     u4605:
  5347  00DFAE  661E               	tstfsz	??_floorf^0,c
  5348  00DFB0  EFDC  F06F         	goto	u4606
  5349  00DFB4  EFE4  F06F         	goto	u4607
  5350  00DFB8                     u4606:
  5351  00DFB8  3422               	rlcf	(??_floorf+4)^0,w,c
  5352  00DFBA  3222               	rrcf	(??_floorf+4)^0,f,c
  5353  00DFBC  3221               	rrcf	(??_floorf+3)^0,f,c
  5354  00DFBE  3220               	rrcf	(??_floorf+2)^0,f,c
  5355  00DFC0  321F               	rrcf	(??_floorf+1)^0,f,c
  5356  00DFC2  2E1E               	decfsz	??_floorf^0,f,c
  5357  00DFC4  EFD7  F06F         	goto	u4605
  5358  00DFC8                     u4607:
  5359  00DFC8  C01F  F024         	movff	??_floorf+1,floorf@m
  5360  00DFCC  C020  F025         	movff	??_floorf+2,floorf@m+1
  5361  00DFD0  C021  F026         	movff	??_floorf+3,floorf@m+2
  5362  00DFD4  C022  F027         	movff	??_floorf+4,floorf@m+3
  5363  00DFD8  5024               	movf	floorf@m^0,w,c
  5364  00DFDA  142A               	andwf	floorf@u^0,w,c
  5365  00DFDC  6E1E               	movwf	??_floorf^0,c
  5366  00DFDE  5025               	movf	(floorf@m+1)^0,w,c
  5367  00DFE0  142B               	andwf	(floorf@u+1)^0,w,c
  5368  00DFE2  6E1F               	movwf	(??_floorf+1)^0,c
  5369  00DFE4  5026               	movf	(floorf@m+2)^0,w,c
  5370  00DFE6  142C               	andwf	(floorf@u+2)^0,w,c
  5371  00DFE8  6E20               	movwf	(??_floorf+2)^0,c
  5372  00DFEA  5027               	movf	(floorf@m+3)^0,w,c
  5373  00DFEC  142D               	andwf	(floorf@u+3)^0,w,c
  5374  00DFEE  6E21               	movwf	(??_floorf+3)^0,c
  5375  00DFF0  501E               	movf	??_floorf^0,w,c
  5376  00DFF2  101F               	iorwf	(??_floorf+1)^0,w,c
  5377  00DFF4  1020               	iorwf	(??_floorf+2)^0,w,c
  5378  00DFF6  1021               	iorwf	(??_floorf+3)^0,w,c
  5379  00DFF8  A4D8               	btfss	status,2,c
  5380  00DFFA  EF01  F070         	goto	u4611
  5381  00DFFE  EF03  F070         	goto	u4610
  5382  00E002                     u4611:
  5383  00E002  EF05  F070         	goto	l5390
  5384  00E006                     u4610:
  5385  00E006  EFBC  F06F         	goto	l5382
  5386  00E00A                     l5390:
  5387  00E00A  C02A  F01E         	movff	floorf@u,??_floorf
  5388  00E00E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5389  00E012  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5390  00E016  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5391  00E01A  0E20               	movlw	32
  5392  00E01C  EF15  F070         	goto	u4620
  5393  00E020                     u4625:
  5394  00E020  90D8               	bcf	status,0,c
  5395  00E022  3221               	rrcf	(??_floorf+3)^0,f,c
  5396  00E024  3220               	rrcf	(??_floorf+2)^0,f,c
  5397  00E026  321F               	rrcf	(??_floorf+1)^0,f,c
  5398  00E028  321E               	rrcf	??_floorf^0,f,c
  5399  00E02A                     u4620:
  5400  00E02A  2EE8               	decfsz	wreg,f,c
  5401  00E02C  EF10  F070         	goto	u4625
  5402  00E030  501E               	movf	??_floorf^0,w,c
  5403  00E032  101F               	iorwf	(??_floorf+1)^0,w,c
  5404  00E034  1020               	iorwf	(??_floorf+2)^0,w,c
  5405  00E036  1021               	iorwf	(??_floorf+3)^0,w,c
  5406  00E038  B4D8               	btfsc	status,2,c
  5407  00E03A  EF21  F070         	goto	u4631
  5408  00E03E  EF23  F070         	goto	u4630
  5409  00E042                     u4631:
  5410  00E042  EF2B  F070         	goto	l1713
  5411  00E046                     u4630:
  5412  00E046  5024               	movf	floorf@m^0,w,c
  5413  00E048  262A               	addwf	floorf@u^0,f,c
  5414  00E04A  5025               	movf	(floorf@m+1)^0,w,c
  5415  00E04C  222B               	addwfc	(floorf@u+1)^0,f,c
  5416  00E04E  5026               	movf	(floorf@m+2)^0,w,c
  5417  00E050  222C               	addwfc	(floorf@u+2)^0,f,c
  5418  00E052  5027               	movf	(floorf@m+3)^0,w,c
  5419  00E054  222D               	addwfc	(floorf@u+3)^0,f,c
  5420  00E056                     l1713:
  5421  00E056  1C24               	comf	floorf@m^0,w,c
  5422  00E058  6E1E               	movwf	??_floorf^0,c
  5423  00E05A  1C25               	comf	(floorf@m+1)^0,w,c
  5424  00E05C  6E1F               	movwf	(??_floorf+1)^0,c
  5425  00E05E  1C26               	comf	(floorf@m+2)^0,w,c
  5426  00E060  6E20               	movwf	(??_floorf+2)^0,c
  5427  00E062  1C27               	comf	(floorf@m+3)^0,w,c
  5428  00E064  6E21               	movwf	(??_floorf+3)^0,c
  5429  00E066  501E               	movf	??_floorf^0,w,c
  5430  00E068  162A               	andwf	floorf@u^0,f,c
  5431  00E06A  501F               	movf	(??_floorf+1)^0,w,c
  5432  00E06C  162B               	andwf	(floorf@u+1)^0,f,c
  5433  00E06E  5020               	movf	(??_floorf+2)^0,w,c
  5434  00E070  162C               	andwf	(floorf@u+2)^0,f,c
  5435  00E072  5021               	movf	(??_floorf+3)^0,w,c
  5436  00E074  162D               	andwf	(floorf@u+3)^0,f,c
  5437  00E076  EF81  F070         	goto	l5402
  5438  00E07A                     l5394:
  5439  00E07A  C02A  F01E         	movff	floorf@u,??_floorf
  5440  00E07E  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  5441  00E082  C02C  F020         	movff	floorf@u+2,??_floorf+2
  5442  00E086  C02D  F021         	movff	floorf@u+3,??_floorf+3
  5443  00E08A  0E20               	movlw	32
  5444  00E08C  EF4D  F070         	goto	u4640
  5445  00E090                     u4645:
  5446  00E090  90D8               	bcf	status,0,c
  5447  00E092  3221               	rrcf	(??_floorf+3)^0,f,c
  5448  00E094  3220               	rrcf	(??_floorf+2)^0,f,c
  5449  00E096  321F               	rrcf	(??_floorf+1)^0,f,c
  5450  00E098  321E               	rrcf	??_floorf^0,f,c
  5451  00E09A                     u4640:
  5452  00E09A  2EE8               	decfsz	wreg,f,c
  5453  00E09C  EF48  F070         	goto	u4645
  5454  00E0A0  501E               	movf	??_floorf^0,w,c
  5455  00E0A2  101F               	iorwf	(??_floorf+1)^0,w,c
  5456  00E0A4  1020               	iorwf	(??_floorf+2)^0,w,c
  5457  00E0A6  1021               	iorwf	(??_floorf+3)^0,w,c
  5458  00E0A8  A4D8               	btfss	status,2,c
  5459  00E0AA  EF59  F070         	goto	u4651
  5460  00E0AE  EF5B  F070         	goto	u4650
  5461  00E0B2                     u4651:
  5462  00E0B2  EF65  F070         	goto	l5398
  5463  00E0B6                     u4650:
  5464  00E0B6  0E00               	movlw	0
  5465  00E0B8  6E2A               	movwf	floorf@u^0,c
  5466  00E0BA  0E00               	movlw	0
  5467  00E0BC  6E2B               	movwf	(floorf@u+1)^0,c
  5468  00E0BE  0E00               	movlw	0
  5469  00E0C0  6E2C               	movwf	(floorf@u+2)^0,c
  5470  00E0C2  0E00               	movlw	0
  5471  00E0C4  6E2D               	movwf	(floorf@u+3)^0,c
  5472  00E0C6  EF81  F070         	goto	l5402
  5473  00E0CA                     l5398:
  5474  00E0CA  90D8               	bcf	status,0,c
  5475  00E0CC  342A               	rlcf	floorf@u^0,w,c
  5476  00E0CE  6E1E               	movwf	??_floorf^0,c
  5477  00E0D0  342B               	rlcf	(floorf@u+1)^0,w,c
  5478  00E0D2  6E1F               	movwf	(??_floorf+1)^0,c
  5479  00E0D4  342C               	rlcf	(floorf@u+2)^0,w,c
  5480  00E0D6  6E20               	movwf	(??_floorf+2)^0,c
  5481  00E0D8  342D               	rlcf	(floorf@u+3)^0,w,c
  5482  00E0DA  6E21               	movwf	(??_floorf+3)^0,c
  5483  00E0DC  501E               	movf	??_floorf^0,w,c
  5484  00E0DE  101F               	iorwf	(??_floorf+1)^0,w,c
  5485  00E0E0  1020               	iorwf	(??_floorf+2)^0,w,c
  5486  00E0E2  1021               	iorwf	(??_floorf+3)^0,w,c
  5487  00E0E4  B4D8               	btfsc	status,2,c
  5488  00E0E6  EF77  F070         	goto	u4661
  5489  00E0EA  EF79  F070         	goto	u4660
  5490  00E0EE                     u4661:
  5491  00E0EE  EF81  F070         	goto	l5402
  5492  00E0F2                     u4660:
  5493  00E0F2  0E00               	movlw	0
  5494  00E0F4  6E2A               	movwf	floorf@u^0,c
  5495  00E0F6  0E00               	movlw	0
  5496  00E0F8  6E2B               	movwf	(floorf@u+1)^0,c
  5497  00E0FA  0E80               	movlw	128
  5498  00E0FC  6E2C               	movwf	(floorf@u+2)^0,c
  5499  00E0FE  0EBF               	movlw	191
  5500  00E100  6E2D               	movwf	(floorf@u+3)^0,c
  5501  00E102                     l5402:
  5502  00E102  C02A  F01A         	movff	floorf@u,?_floorf
  5503  00E106  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  5504  00E10A  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  5505  00E10E  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  5506  00E112                     l1710:
  5507  00E112  0012               	return		;funcret
  5508  00E114                     __end_of_floorf:
  5509                           	callstack 0
  5510                           
  5511 ;; *************** function ___fpclassifyf *****************
  5512 ;; Defined at:
  5513 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  5514 ;; Parameters:    Size  Location     Type
  5515 ;;  x               4    0[COMRAM] float 
  5516 ;; Auto vars:     Size  Location     Type
  5517 ;;  u               4   10[COMRAM] struct .
  5518 ;;  e               2    8[COMRAM] int 
  5519 ;; Return value:  Size  Location     Type
  5520 ;;                  2    0[COMRAM] int 
  5521 ;; Registers used:
  5522 ;;		wreg, status,2, status,0
  5523 ;; Tracked objects:
  5524 ;;		On entry : 0/0
  5525 ;;		On exit  : 0/0
  5526 ;;		Unchanged: 0/0
  5527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5528 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5529 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5530 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5531 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5532 ;;Total ram usage:       14 bytes
  5533 ;; Hardware stack levels used:    1
  5534 ;; This function calls:
  5535 ;;		Nothing
  5536 ;; This function is called by:
  5537 ;;		_efgtoa
  5538 ;; This function uses a non-reentrant model
  5539 ;;
  5540                           
  5541                           	psect	text15
  5542  00D39A                     __ptext15:
  5543                           	callstack 0
  5544  00D39A                     ___fpclassifyf:
  5545                           	callstack 26
  5546  00D39A  C0B4  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  5547  00D39E  C0B5  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  5548  00D3A2  C0B6  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  5549  00D3A6  C0B7  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  5550  00D3AA  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5551  00D3AE  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5552  00D3B2  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5553  00D3B6  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5554  00D3BA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5555  00D3BE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5556  00D3C2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5557  00D3C6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5558  00D3CA  0E18               	movlw	24
  5559  00D3CC  EFED  F069         	goto	u4450
  5560  00D3D0                     u4455:
  5561  00D3D0  90D8               	bcf	status,0,c
  5562  00D3D2  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5563  00D3D4  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5564  00D3D6  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5565  00D3D8  3205               	rrcf	??___fpclassifyf^0,f,c
  5566  00D3DA                     u4450:
  5567  00D3DA  2EE8               	decfsz	wreg,f,c
  5568  00D3DC  EFE8  F069         	goto	u4455
  5569  00D3E0  5005               	movf	??___fpclassifyf^0,w,c
  5570  00D3E2  6E09               	movwf	___fpclassifyf@e^0,c
  5571  00D3E4  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5572  00D3E6  5009               	movf	___fpclassifyf@e^0,w,c
  5573  00D3E8  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5574  00D3EA  A4D8               	btfss	status,2,c
  5575  00D3EC  EFFA  F069         	goto	u4461
  5576  00D3F0  EFFC  F069         	goto	u4460
  5577  00D3F4                     u4461:
  5578  00D3F4  EF1C  F06A         	goto	l5354
  5579  00D3F8                     u4460:
  5580  00D3F8  90D8               	bcf	status,0,c
  5581  00D3FA  340B               	rlcf	___fpclassifyf@u^0,w,c
  5582  00D3FC  6E05               	movwf	??___fpclassifyf^0,c
  5583  00D3FE  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5584  00D400  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5585  00D402  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5586  00D404  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5587  00D406  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5588  00D408  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5589  00D40A  5005               	movf	??___fpclassifyf^0,w,c
  5590  00D40C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5591  00D40E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5592  00D410  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5593  00D412  A4D8               	btfss	status,2,c
  5594  00D414  EF0E  F06A         	goto	u4471
  5595  00D418  EF10  F06A         	goto	u4470
  5596  00D41C                     u4471:
  5597  00D41C  EF16  F06A         	goto	l5350
  5598  00D420                     u4470:
  5599  00D420  0E00               	movlw	0
  5600  00D422  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5601  00D424  0E02               	movlw	2
  5602  00D426  6E01               	movwf	?___fpclassifyf^0,c
  5603  00D428  EF4B  F06A         	goto	l1672
  5604  00D42C                     l5350:
  5605  00D42C  0E00               	movlw	0
  5606  00D42E  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5607  00D430  0E03               	movlw	3
  5608  00D432  6E01               	movwf	?___fpclassifyf^0,c
  5609  00D434  EF4B  F06A         	goto	l1672
  5610  00D438                     l5354:
  5611  00D438  2809               	incf	___fpclassifyf@e^0,w,c
  5612  00D43A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5613  00D43C  A4D8               	btfss	status,2,c
  5614  00D43E  EF23  F06A         	goto	u4481
  5615  00D442  EF25  F06A         	goto	u4480
  5616  00D446                     u4481:
  5617  00D446  EF47  F06A         	goto	l5360
  5618  00D44A                     u4480:
  5619  00D44A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5620  00D44E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5621  00D452  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5622  00D456  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5623  00D45A  0E09               	movlw	9
  5624  00D45C                     u4495:
  5625  00D45C  90D8               	bcf	status,0,c
  5626  00D45E  3605               	rlcf	??___fpclassifyf^0,f,c
  5627  00D460  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5628  00D462  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5629  00D464  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5630  00D466  2EE8               	decfsz	wreg,f,c
  5631  00D468  EF2E  F06A         	goto	u4495
  5632  00D46C  5005               	movf	??___fpclassifyf^0,w,c
  5633  00D46E  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5634  00D470  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5635  00D472  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5636  00D474  B4D8               	btfsc	status,2,c
  5637  00D476  EF3F  F06A         	goto	u4501
  5638  00D47A  EF42  F06A         	goto	u4500
  5639  00D47E                     u4501:
  5640  00D47E  0E01               	movlw	1
  5641  00D480  EF43  F06A         	goto	u4510
  5642  00D484                     u4500:
  5643  00D484  0E00               	movlw	0
  5644  00D486                     u4510:
  5645  00D486  6E01               	movwf	?___fpclassifyf^0,c
  5646  00D488  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5647  00D48A  EF4B  F06A         	goto	l1672
  5648  00D48E                     l5360:
  5649  00D48E  0E00               	movlw	0
  5650  00D490  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5651  00D492  0E04               	movlw	4
  5652  00D494  6E01               	movwf	?___fpclassifyf^0,c
  5653  00D496                     l1672:
  5654  00D496  0012               	return		;funcret
  5655  00D498                     __end_of___fpclassifyf:
  5656                           	callstack 0
  5657                           
  5658 ;; *************** function ___fltol *****************
  5659 ;; Defined at:
  5660 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  f1              4    0[COMRAM] int 
  5663 ;; Auto vars:     Size  Location     Type
  5664 ;;  exp1            1    9[COMRAM] unsigned char 
  5665 ;;  sign1           1    8[COMRAM] unsigned char 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  4    0[COMRAM] long 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5675 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5676 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5677 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5678 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5679 ;;Total ram usage:       10 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; This function calls:
  5682 ;;		Nothing
  5683 ;; This function is called by:
  5684 ;;		_efgtoa
  5685 ;; This function uses a non-reentrant model
  5686 ;;
  5687                           
  5688                           	psect	text16
  5689  00D59C                     __ptext16:
  5690                           	callstack 0
  5691  00D59C                     ___fltol:
  5692                           	callstack 26
  5693  00D59C  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5694  00D59E  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5695  00D5A0  6E0A               	movwf	___fltol@exp1^0,c
  5696  00D5A2  500A               	movf	___fltol@exp1^0,w,c
  5697  00D5A4  A4D8               	btfss	status,2,c
  5698  00D5A6  EFD7  F06A         	goto	u4341
  5699  00D5AA  EFD9  F06A         	goto	u4340
  5700  00D5AE                     u4341:
  5701  00D5AE  EFE3  F06A         	goto	l5282
  5702  00D5B2                     u4340:
  5703  00D5B2                     l5278:
  5704  00D5B2  0E00               	movlw	0
  5705  00D5B4  6E01               	movwf	?___fltol^0,c
  5706  00D5B6  0E00               	movlw	0
  5707  00D5B8  6E02               	movwf	(?___fltol+1)^0,c
  5708  00D5BA  0E00               	movlw	0
  5709  00D5BC  6E03               	movwf	(?___fltol+2)^0,c
  5710  00D5BE  0E00               	movlw	0
  5711  00D5C0  6E04               	movwf	(?___fltol+3)^0,c
  5712  00D5C2  EF50  F06B         	goto	l1113
  5713  00D5C6                     l5282:
  5714  00D5C6  C001  F005         	movff	___fltol@f1,??___fltol
  5715  00D5CA  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5716  00D5CE  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5717  00D5D2  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5718  00D5D6  0E20               	movlw	32
  5719  00D5D8  EFF3  F06A         	goto	u4350
  5720  00D5DC                     u4355:
  5721  00D5DC  90D8               	bcf	status,0,c
  5722  00D5DE  3208               	rrcf	(??___fltol+3)^0,f,c
  5723  00D5E0  3207               	rrcf	(??___fltol+2)^0,f,c
  5724  00D5E2  3206               	rrcf	(??___fltol+1)^0,f,c
  5725  00D5E4  3205               	rrcf	??___fltol^0,f,c
  5726  00D5E6                     u4350:
  5727  00D5E6  2EE8               	decfsz	wreg,f,c
  5728  00D5E8  EFEE  F06A         	goto	u4355
  5729  00D5EC  5005               	movf	??___fltol^0,w,c
  5730  00D5EE  6E09               	movwf	___fltol@sign1^0,c
  5731  00D5F0  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5732  00D5F2  0EFF               	movlw	255
  5733  00D5F4  1601               	andwf	___fltol@f1^0,f,c
  5734  00D5F6  0EFF               	movlw	255
  5735  00D5F8  1602               	andwf	(___fltol@f1+1)^0,f,c
  5736  00D5FA  0EFF               	movlw	255
  5737  00D5FC  1603               	andwf	(___fltol@f1+2)^0,f,c
  5738  00D5FE  0E00               	movlw	0
  5739  00D600  1604               	andwf	(___fltol@f1+3)^0,f,c
  5740  00D602  0E96               	movlw	150
  5741  00D604  5E0A               	subwf	___fltol@exp1^0,f,c
  5742  00D606  BE0A               	btfsc	___fltol@exp1^0,7,c
  5743  00D608  EF0A  F06B         	goto	u4360
  5744  00D60C  EF08  F06B         	goto	u4361
  5745  00D610                     u4361:
  5746  00D610  EF20  F06B         	goto	l5302
  5747  00D614                     u4360:
  5748  00D614  500A               	movf	___fltol@exp1^0,w,c
  5749  00D616  0A80               	xorlw	128
  5750  00D618  0F97               	addlw	151
  5751  00D61A  B0D8               	btfsc	status,0,c
  5752  00D61C  EF12  F06B         	goto	u4371
  5753  00D620  EF14  F06B         	goto	u4370
  5754  00D624                     u4371:
  5755  00D624  EF16  F06B         	goto	l5298
  5756  00D628                     u4370:
  5757  00D628  EFD9  F06A         	goto	l5278
  5758  00D62C                     l5298:
  5759  00D62C  90D8               	bcf	status,0,c
  5760  00D62E  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5761  00D630  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5762  00D632  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5763  00D634  3201               	rrcf	___fltol@f1^0,f,c
  5764  00D636  3E0A               	incfsz	___fltol@exp1^0,f,c
  5765  00D638  EF16  F06B         	goto	l5298
  5766  00D63C  EF38  F06B         	goto	l5312
  5767  00D640                     l5302:
  5768  00D640  0E1F               	movlw	31
  5769  00D642  640A               	cpfsgt	___fltol@exp1^0,c
  5770  00D644  EF26  F06B         	goto	u4381
  5771  00D648  EF28  F06B         	goto	u4380
  5772  00D64C                     u4381:
  5773  00D64C  EF30  F06B         	goto	l5310
  5774  00D650                     u4380:
  5775  00D650  EFD9  F06A         	goto	l5278
  5776  00D654                     l5308:
  5777  00D654  90D8               	bcf	status,0,c
  5778  00D656  3601               	rlcf	___fltol@f1^0,f,c
  5779  00D658  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5780  00D65A  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5781  00D65C  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5782  00D65E  060A               	decf	___fltol@exp1^0,f,c
  5783  00D660                     l5310:
  5784  00D660  500A               	movf	___fltol@exp1^0,w,c
  5785  00D662  A4D8               	btfss	status,2,c
  5786  00D664  EF36  F06B         	goto	u4391
  5787  00D668  EF38  F06B         	goto	u4390
  5788  00D66C                     u4391:
  5789  00D66C  EF2A  F06B         	goto	l5308
  5790  00D670                     u4390:
  5791  00D670                     l5312:
  5792  00D670  5009               	movf	___fltol@sign1^0,w,c
  5793  00D672  B4D8               	btfsc	status,2,c
  5794  00D674  EF3E  F06B         	goto	u4401
  5795  00D678  EF40  F06B         	goto	u4400
  5796  00D67C                     u4401:
  5797  00D67C  EF48  F06B         	goto	l5316
  5798  00D680                     u4400:
  5799  00D680  1E04               	comf	(___fltol@f1+3)^0,f,c
  5800  00D682  1E03               	comf	(___fltol@f1+2)^0,f,c
  5801  00D684  1E02               	comf	(___fltol@f1+1)^0,f,c
  5802  00D686  6C01               	negf	___fltol@f1^0,c
  5803  00D688  0E00               	movlw	0
  5804  00D68A  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5805  00D68C  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5806  00D68E  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5807  00D690                     l5316:
  5808  00D690  C001  F001         	movff	___fltol@f1,?___fltol
  5809  00D694  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5810  00D698  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5811  00D69C  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5812  00D6A0                     l1113:
  5813  00D6A0  0012               	return		;funcret
  5814  00D6A2                     __end_of___fltol:
  5815                           	callstack 0
  5816                           
  5817 ;; *************** function ___flsub *****************
  5818 ;; Defined at:
  5819 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  b               4   45[COMRAM] long 
  5822 ;;  a               4   49[COMRAM] long 
  5823 ;; Auto vars:     Size  Location     Type
  5824 ;;		None
  5825 ;; Return value:  Size  Location     Type
  5826 ;;                  4   45[COMRAM] long 
  5827 ;; Registers used:
  5828 ;;		wreg, status,2, status,0, cstack
  5829 ;; Tracked objects:
  5830 ;;		On entry : 0/0
  5831 ;;		On exit  : 0/0
  5832 ;;		Unchanged: 0/0
  5833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5834 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5837 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;Total ram usage:        8 bytes
  5839 ;; Hardware stack levels used:    1
  5840 ;; Hardware stack levels required when called:    1
  5841 ;; This function calls:
  5842 ;;		___fladd
  5843 ;; This function is called by:
  5844 ;;		_efgtoa
  5845 ;; This function uses a non-reentrant model
  5846 ;;
  5847                           
  5848                           	psect	text17
  5849  00C676                     __ptext17:
  5850                           	callstack 0
  5851  00C676                     ___flsub:
  5852                           	callstack 25
  5853  00C676  0E00               	movlw	0
  5854  00C678  1A32               	xorwf	___flsub@a^0,f,c
  5855  00C67A  0E00               	movlw	0
  5856  00C67C  1A33               	xorwf	(___flsub@a+1)^0,f,c
  5857  00C67E  0E00               	movlw	0
  5858  00C680  1A34               	xorwf	(___flsub@a+2)^0,f,c
  5859  00C682  0E80               	movlw	128
  5860  00C684  1A35               	xorwf	(___flsub@a+3)^0,f,c
  5861  00C686  C02E  F001         	movff	___flsub@b,___fladd@b
  5862  00C68A  C02F  F002         	movff	___flsub@b+1,___fladd@b+1
  5863  00C68E  C030  F003         	movff	___flsub@b+2,___fladd@b+2
  5864  00C692  C031  F004         	movff	___flsub@b+3,___fladd@b+3
  5865  00C696  C032  F005         	movff	___flsub@a,___fladd@a
  5866  00C69A  C033  F006         	movff	___flsub@a+1,___fladd@a+1
  5867  00C69E  C034  F007         	movff	___flsub@a+2,___fladd@a+2
  5868  00C6A2  C035  F008         	movff	___flsub@a+3,___fladd@a+3
  5869  00C6A6  ECA8  F076         	call	___fladd	;wreg free
  5870  00C6AA  C001  F02E         	movff	?___fladd,?___flsub
  5871  00C6AE  C002  F02F         	movff	?___fladd+1,?___flsub+1
  5872  00C6B2  C003  F030         	movff	?___fladd+2,?___flsub+2
  5873  00C6B6  C004  F031         	movff	?___fladd+3,?___flsub+3
  5874  00C6BA  0012               	return		;funcret
  5875  00C6BC                     __end_of___flsub:
  5876                           	callstack 0
  5877                           
  5878 ;; *************** function ___fladd *****************
  5879 ;; Defined at:
  5880 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  b               4    0[COMRAM] long 
  5883 ;;  a               4    4[COMRAM] long 
  5884 ;; Auto vars:     Size  Location     Type
  5885 ;;  grs             1   15[COMRAM] unsigned char 
  5886 ;;  bexp            1   14[COMRAM] unsigned char 
  5887 ;;  aexp            1   13[COMRAM] unsigned char 
  5888 ;;  signs           1   12[COMRAM] unsigned char 
  5889 ;; Return value:  Size  Location     Type
  5890 ;;                  4    0[COMRAM] unsigned char 
  5891 ;; Registers used:
  5892 ;;		wreg, status,2, status,0
  5893 ;; Tracked objects:
  5894 ;;		On entry : 0/0
  5895 ;;		On exit  : 0/0
  5896 ;;		Unchanged: 0/0
  5897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5898 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5899 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5900 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5901 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5902 ;;Total ram usage:       16 bytes
  5903 ;; Hardware stack levels used:    1
  5904 ;; This function calls:
  5905 ;;		Nothing
  5906 ;; This function is called by:
  5907 ;;		___flsub
  5908 ;;		_efgtoa
  5909 ;; This function uses a non-reentrant model
  5910 ;;
  5911                           
  5912                           	psect	text18
  5913  00ED50                     __ptext18:
  5914                           	callstack 0
  5915  00ED50                     ___fladd:
  5916                           	callstack 25
  5917  00ED50  5004               	movf	(___fladd@b+3)^0,w,c
  5918  00ED52  0B80               	andlw	128
  5919  00ED54  6E0D               	movwf	___fladd@signs^0,c
  5920  00ED56  5004               	movf	(___fladd@b+3)^0,w,c
  5921  00ED58  2404               	addwf	(___fladd@b+3)^0,w,c
  5922  00ED5A  6E0F               	movwf	___fladd@bexp^0,c
  5923  00ED5C  AE03               	btfss	(___fladd@b+2)^0,7,c
  5924  00ED5E  EFB3  F076         	goto	u3261
  5925  00ED62  EFB5  F076         	goto	u3260
  5926  00ED66                     u3261:
  5927  00ED66  EFB6  F076         	goto	l4584
  5928  00ED6A                     u3260:
  5929  00ED6A  800F               	bsf	___fladd@bexp^0,0,c
  5930  00ED6C                     l4584:
  5931  00ED6C  500F               	movf	___fladd@bexp^0,w,c
  5932  00ED6E  B4D8               	btfsc	status,2,c
  5933  00ED70  EFBC  F076         	goto	u3271
  5934  00ED74  EFBE  F076         	goto	u3270
  5935  00ED78                     u3271:
  5936  00ED78  EFD3  F076         	goto	l4594
  5937  00ED7C                     u3270:
  5938  00ED7C  280F               	incf	___fladd@bexp^0,w,c
  5939  00ED7E  A4D8               	btfss	status,2,c
  5940  00ED80  EFC4  F076         	goto	u3281
  5941  00ED84  EFC6  F076         	goto	u3280
  5942  00ED88                     u3281:
  5943  00ED88  EFCE  F076         	goto	l4590
  5944  00ED8C                     u3280:
  5945  00ED8C  0E00               	movlw	0
  5946  00ED8E  6E01               	movwf	___fladd@b^0,c
  5947  00ED90  0E00               	movlw	0
  5948  00ED92  6E02               	movwf	(___fladd@b+1)^0,c
  5949  00ED94  0E00               	movlw	0
  5950  00ED96  6E03               	movwf	(___fladd@b+2)^0,c
  5951  00ED98  0E00               	movlw	0
  5952  00ED9A  6E04               	movwf	(___fladd@b+3)^0,c
  5953  00ED9C                     l4590:
  5954  00ED9C  8E03               	bsf	(___fladd@b+2)^0,7,c
  5955  00ED9E  0E00               	movlw	0
  5956  00EDA0  6E04               	movwf	(___fladd@b+3)^0,c
  5957  00EDA2  EFDB  F076         	goto	l4596
  5958  00EDA6                     l4594:
  5959  00EDA6  0E00               	movlw	0
  5960  00EDA8  6E01               	movwf	___fladd@b^0,c
  5961  00EDAA  0E00               	movlw	0
  5962  00EDAC  6E02               	movwf	(___fladd@b+1)^0,c
  5963  00EDAE  0E00               	movlw	0
  5964  00EDB0  6E03               	movwf	(___fladd@b+2)^0,c
  5965  00EDB2  0E00               	movlw	0
  5966  00EDB4  6E04               	movwf	(___fladd@b+3)^0,c
  5967  00EDB6                     l4596:
  5968  00EDB6  5008               	movf	(___fladd@a+3)^0,w,c
  5969  00EDB8  0B80               	andlw	128
  5970  00EDBA  6E0E               	movwf	___fladd@aexp^0,c
  5971  00EDBC  500D               	movf	___fladd@signs^0,w,c
  5972  00EDBE  180E               	xorwf	___fladd@aexp^0,w,c
  5973  00EDC0  B4D8               	btfsc	status,2,c
  5974  00EDC2  EFE5  F076         	goto	u3291
  5975  00EDC6  EFE7  F076         	goto	u3290
  5976  00EDCA                     u3291:
  5977  00EDCA  EFE8  F076         	goto	l4602
  5978  00EDCE                     u3290:
  5979  00EDCE  8C0D               	bsf	___fladd@signs^0,6,c
  5980  00EDD0                     l4602:
  5981  00EDD0  5008               	movf	(___fladd@a+3)^0,w,c
  5982  00EDD2  2408               	addwf	(___fladd@a+3)^0,w,c
  5983  00EDD4  6E0E               	movwf	___fladd@aexp^0,c
  5984  00EDD6  AE07               	btfss	(___fladd@a+2)^0,7,c
  5985  00EDD8  EFF0  F076         	goto	u3301
  5986  00EDDC  EFF2  F076         	goto	u3300
  5987  00EDE0                     u3301:
  5988  00EDE0  EFF3  F076         	goto	l4608
  5989  00EDE4                     u3300:
  5990  00EDE4  800E               	bsf	___fladd@aexp^0,0,c
  5991  00EDE6                     l4608:
  5992  00EDE6  500E               	movf	___fladd@aexp^0,w,c
  5993  00EDE8  B4D8               	btfsc	status,2,c
  5994  00EDEA  EFF9  F076         	goto	u3311
  5995  00EDEE  EFFB  F076         	goto	u3310
  5996  00EDF2                     u3311:
  5997  00EDF2  EF10  F077         	goto	l4618
  5998  00EDF6                     u3310:
  5999  00EDF6  280E               	incf	___fladd@aexp^0,w,c
  6000  00EDF8  A4D8               	btfss	status,2,c
  6001  00EDFA  EF01  F077         	goto	u3321
  6002  00EDFE  EF03  F077         	goto	u3320
  6003  00EE02                     u3321:
  6004  00EE02  EF0B  F077         	goto	l4614
  6005  00EE06                     u3320:
  6006  00EE06  0E00               	movlw	0
  6007  00EE08  6E05               	movwf	___fladd@a^0,c
  6008  00EE0A  0E00               	movlw	0
  6009  00EE0C  6E06               	movwf	(___fladd@a+1)^0,c
  6010  00EE0E  0E00               	movlw	0
  6011  00EE10  6E07               	movwf	(___fladd@a+2)^0,c
  6012  00EE12  0E00               	movlw	0
  6013  00EE14  6E08               	movwf	(___fladd@a+3)^0,c
  6014  00EE16                     l4614:
  6015  00EE16  8E07               	bsf	(___fladd@a+2)^0,7,c
  6016  00EE18  0E00               	movlw	0
  6017  00EE1A  6E08               	movwf	(___fladd@a+3)^0,c
  6018  00EE1C  EF18  F077         	goto	l4620
  6019  00EE20                     l4618:
  6020  00EE20  0E00               	movlw	0
  6021  00EE22  6E05               	movwf	___fladd@a^0,c
  6022  00EE24  0E00               	movlw	0
  6023  00EE26  6E06               	movwf	(___fladd@a+1)^0,c
  6024  00EE28  0E00               	movlw	0
  6025  00EE2A  6E07               	movwf	(___fladd@a+2)^0,c
  6026  00EE2C  0E00               	movlw	0
  6027  00EE2E  6E08               	movwf	(___fladd@a+3)^0,c
  6028  00EE30                     l4620:
  6029  00EE30  500F               	movf	___fladd@bexp^0,w,c
  6030  00EE32  5C0E               	subwf	___fladd@aexp^0,w,c
  6031  00EE34  B0D8               	btfsc	status,0,c
  6032  00EE36  EF1F  F077         	goto	u3331
  6033  00EE3A  EF21  F077         	goto	u3330
  6034  00EE3E                     u3331:
  6035  00EE3E  EF48  F077         	goto	l4656
  6036  00EE42                     u3330:
  6037  00EE42  AC0D               	btfss	___fladd@signs^0,6,c
  6038  00EE44  EF26  F077         	goto	u3341
  6039  00EE48  EF28  F077         	goto	u3340
  6040  00EE4C                     u3341:
  6041  00EE4C  EF2A  F077         	goto	l4626
  6042  00EE50                     u3340:
  6043  00EE50  0E80               	movlw	128
  6044  00EE52  1A0D               	xorwf	___fladd@signs^0,f,c
  6045  00EE54                     l4626:
  6046  00EE54  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  6047  00EE58  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6048  00EE5C  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  6049  00EE60  C001  F010         	movff	___fladd@b,___fladd@grs
  6050  00EE64  C005  F001         	movff	___fladd@a,___fladd@b
  6051  00EE68  C010  F005         	movff	___fladd@grs,___fladd@a
  6052  00EE6C  C002  F010         	movff	___fladd@b+1,___fladd@grs
  6053  00EE70  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  6054  00EE74  C010  F006         	movff	___fladd@grs,___fladd@a+1
  6055  00EE78  C003  F010         	movff	___fladd@b+2,___fladd@grs
  6056  00EE7C  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  6057  00EE80  C010  F007         	movff	___fladd@grs,___fladd@a+2
  6058  00EE84  C004  F010         	movff	___fladd@b+3,___fladd@grs
  6059  00EE88  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  6060  00EE8C  C010  F008         	movff	___fladd@grs,___fladd@a+3
  6061  00EE90                     l4656:
  6062  00EE90  0E00               	movlw	0
  6063  00EE92  6E10               	movwf	___fladd@grs^0,c
  6064  00EE94  500F               	movf	___fladd@bexp^0,w,c
  6065  00EE96  C00E  F009         	movff	___fladd@aexp,??___fladd
  6066  00EE9A  6A0A               	clrf	(??___fladd+1)^0,c
  6067  00EE9C  5E09               	subwf	??___fladd^0,f,c
  6068  00EE9E  0E00               	movlw	0
  6069  00EEA0  5A0A               	subwfb	(??___fladd+1)^0,f,c
  6070  00EEA2  BE0A               	btfsc	(??___fladd+1)^0,7,c
  6071  00EEA4  EF5D  F077         	goto	u3351
  6072  00EEA8  500A               	movf	(??___fladd+1)^0,w,c
  6073  00EEAA  E109               	bnz	u3350
  6074  00EEAC  0E1A               	movlw	26
  6075  00EEAE  5C09               	subwf	??___fladd^0,w,c
  6076  00EEB0  A0D8               	btfss	status,0,c
  6077  00EEB2  EF5D  F077         	goto	u3351
  6078  00EEB6  EF5F  F077         	goto	u3350
  6079  00EEBA                     u3351:
  6080  00EEBA  EF96  F077         	goto	l1345
  6081  00EEBE                     u3350:
  6082  00EEBE  5001               	movf	___fladd@b^0,w,c
  6083  00EEC0  1002               	iorwf	(___fladd@b+1)^0,w,c
  6084  00EEC2  1003               	iorwf	(___fladd@b+2)^0,w,c
  6085  00EEC4  1004               	iorwf	(___fladd@b+3)^0,w,c
  6086  00EEC6  A4D8               	btfss	status,2,c
  6087  00EEC8  EF68  F077         	goto	u3361
  6088  00EECC  EF6B  F077         	goto	u3360
  6089  00EED0                     u3361:
  6090  00EED0  0E01               	movlw	1
  6091  00EED2  EF6C  F077         	goto	u3370
  6092  00EED6                     u3360:
  6093  00EED6  0E00               	movlw	0
  6094  00EED8                     u3370:
  6095  00EED8  6E10               	movwf	___fladd@grs^0,c
  6096  00EEDA  0E00               	movlw	0
  6097  00EEDC  6E01               	movwf	___fladd@b^0,c
  6098  00EEDE  0E00               	movlw	0
  6099  00EEE0  6E02               	movwf	(___fladd@b+1)^0,c
  6100  00EEE2  0E00               	movlw	0
  6101  00EEE4  6E03               	movwf	(___fladd@b+2)^0,c
  6102  00EEE6  0E00               	movlw	0
  6103  00EEE8  6E04               	movwf	(___fladd@b+3)^0,c
  6104  00EEEA  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  6105  00EEEE  EF9F  F077         	goto	l1344
  6106  00EEF2                     l1346:
  6107  00EEF2  A010               	btfss	___fladd@grs^0,0,c
  6108  00EEF4  EF7E  F077         	goto	u3381
  6109  00EEF8  EF80  F077         	goto	u3380
  6110  00EEFC                     u3381:
  6111  00EEFC  EF86  F077         	goto	l4668
  6112  00EF00                     u3380:
  6113  00EF00  90D8               	bcf	status,0,c
  6114  00EF02  3010               	rrcf	___fladd@grs^0,w,c
  6115  00EF04  0901               	iorlw	1
  6116  00EF06  6E10               	movwf	___fladd@grs^0,c
  6117  00EF08  EF88  F077         	goto	l4670
  6118  00EF0C                     l4668:
  6119  00EF0C  90D8               	bcf	status,0,c
  6120  00EF0E  3210               	rrcf	___fladd@grs^0,f,c
  6121  00EF10                     l4670:
  6122  00EF10  A001               	btfss	___fladd@b^0,0,c
  6123  00EF12  EF8D  F077         	goto	u3391
  6124  00EF16  EF8F  F077         	goto	u3390
  6125  00EF1A                     u3391:
  6126  00EF1A  EF90  F077         	goto	l4674
  6127  00EF1E                     u3390:
  6128  00EF1E  8E10               	bsf	___fladd@grs^0,7,c
  6129  00EF20                     l4674:
  6130  00EF20  3404               	rlcf	(___fladd@b+3)^0,w,c
  6131  00EF22  3204               	rrcf	(___fladd@b+3)^0,f,c
  6132  00EF24  3203               	rrcf	(___fladd@b+2)^0,f,c
  6133  00EF26  3202               	rrcf	(___fladd@b+1)^0,f,c
  6134  00EF28  3201               	rrcf	___fladd@b^0,f,c
  6135  00EF2A  2A0F               	incf	___fladd@bexp^0,f,c
  6136  00EF2C                     l1345:
  6137  00EF2C  500E               	movf	___fladd@aexp^0,w,c
  6138  00EF2E  5C0F               	subwf	___fladd@bexp^0,w,c
  6139  00EF30  A0D8               	btfss	status,0,c
  6140  00EF32  EF9D  F077         	goto	u3401
  6141  00EF36  EF9F  F077         	goto	u3400
  6142  00EF3A                     u3401:
  6143  00EF3A  EF79  F077         	goto	l1346
  6144  00EF3E                     u3400:
  6145  00EF3E                     l1344:
  6146  00EF3E  BC0D               	btfsc	___fladd@signs^0,6,c
  6147  00EF40  EFA4  F077         	goto	u3411
  6148  00EF44  EFA6  F077         	goto	u3410
  6149  00EF48                     u3411:
  6150  00EF48  EFE6  F077         	goto	l4702
  6151  00EF4C                     u3410:
  6152  00EF4C  500F               	movf	___fladd@bexp^0,w,c
  6153  00EF4E  A4D8               	btfss	status,2,c
  6154  00EF50  EFAC  F077         	goto	u3421
  6155  00EF54  EFAE  F077         	goto	u3420
  6156  00EF58                     u3421:
  6157  00EF58  EFB8  F077         	goto	l4684
  6158  00EF5C                     u3420:
  6159  00EF5C  0E00               	movlw	0
  6160  00EF5E  6E01               	movwf	?___fladd^0,c
  6161  00EF60  0E00               	movlw	0
  6162  00EF62  6E02               	movwf	(?___fladd+1)^0,c
  6163  00EF64  0E00               	movlw	0
  6164  00EF66  6E03               	movwf	(?___fladd+2)^0,c
  6165  00EF68  0E00               	movlw	0
  6166  00EF6A  6E04               	movwf	(?___fladd+3)^0,c
  6167  00EF6C  EF07  F079         	goto	l1353
  6168  00EF70                     l4684:
  6169  00EF70  5005               	movf	___fladd@a^0,w,c
  6170  00EF72  2601               	addwf	___fladd@b^0,f,c
  6171  00EF74  5006               	movf	(___fladd@a+1)^0,w,c
  6172  00EF76  2202               	addwfc	(___fladd@b+1)^0,f,c
  6173  00EF78  5007               	movf	(___fladd@a+2)^0,w,c
  6174  00EF7A  2203               	addwfc	(___fladd@b+2)^0,f,c
  6175  00EF7C  5008               	movf	(___fladd@a+3)^0,w,c
  6176  00EF7E  2204               	addwfc	(___fladd@b+3)^0,f,c
  6177  00EF80  A004               	btfss	(___fladd@b+3)^0,0,c
  6178  00EF82  EFC5  F077         	goto	u3431
  6179  00EF86  EFC7  F077         	goto	u3430
  6180  00EF8A                     u3431:
  6181  00EF8A  EF73  F078         	goto	l4738
  6182  00EF8E                     u3430:
  6183  00EF8E  A010               	btfss	___fladd@grs^0,0,c
  6184  00EF90  EFCC  F077         	goto	u3441
  6185  00EF94  EFCE  F077         	goto	u3440
  6186  00EF98                     u3441:
  6187  00EF98  EFD4  F077         	goto	l4692
  6188  00EF9C                     u3440:
  6189  00EF9C  90D8               	bcf	status,0,c
  6190  00EF9E  3010               	rrcf	___fladd@grs^0,w,c
  6191  00EFA0  0901               	iorlw	1
  6192  00EFA2  6E10               	movwf	___fladd@grs^0,c
  6193  00EFA4  EFD6  F077         	goto	l4694
  6194  00EFA8                     l4692:
  6195  00EFA8  90D8               	bcf	status,0,c
  6196  00EFAA  3210               	rrcf	___fladd@grs^0,f,c
  6197  00EFAC                     l4694:
  6198  00EFAC  A001               	btfss	___fladd@b^0,0,c
  6199  00EFAE  EFDB  F077         	goto	u3451
  6200  00EFB2  EFDD  F077         	goto	u3450
  6201  00EFB6                     u3451:
  6202  00EFB6  EFDE  F077         	goto	l4698
  6203  00EFBA                     u3450:
  6204  00EFBA  8E10               	bsf	___fladd@grs^0,7,c
  6205  00EFBC                     l4698:
  6206  00EFBC  3404               	rlcf	(___fladd@b+3)^0,w,c
  6207  00EFBE  3204               	rrcf	(___fladd@b+3)^0,f,c
  6208  00EFC0  3203               	rrcf	(___fladd@b+2)^0,f,c
  6209  00EFC2  3202               	rrcf	(___fladd@b+1)^0,f,c
  6210  00EFC4  3201               	rrcf	___fladd@b^0,f,c
  6211  00EFC6  2A0F               	incf	___fladd@bexp^0,f,c
  6212  00EFC8  EF73  F078         	goto	l4738
  6213  00EFCC                     l4702:
  6214  00EFCC  5005               	movf	___fladd@a^0,w,c
  6215  00EFCE  5C01               	subwf	___fladd@b^0,w,c
  6216  00EFD0  5006               	movf	(___fladd@a+1)^0,w,c
  6217  00EFD2  5802               	subwfb	(___fladd@b+1)^0,w,c
  6218  00EFD4  5007               	movf	(___fladd@a+2)^0,w,c
  6219  00EFD6  5803               	subwfb	(___fladd@b+2)^0,w,c
  6220  00EFD8  5004               	movf	(___fladd@b+3)^0,w,c
  6221  00EFDA  0A80               	xorlw	128
  6222  00EFDC  6E09               	movwf	??___fladd^0,c
  6223  00EFDE  5008               	movf	(___fladd@a+3)^0,w,c
  6224  00EFE0  0A80               	xorlw	128
  6225  00EFE2  5809               	subwfb	??___fladd^0,w,c
  6226  00EFE4  B0D8               	btfsc	status,0,c
  6227  00EFE6  EFF7  F077         	goto	u3461
  6228  00EFEA  EFF9  F077         	goto	u3460
  6229  00EFEE                     u3461:
  6230  00EFEE  EF24  F078         	goto	l4712
  6231  00EFF2                     u3460:
  6232  00EFF2  5001               	movf	___fladd@b^0,w,c
  6233  00EFF4  5C05               	subwf	___fladd@a^0,w,c
  6234  00EFF6  6E09               	movwf	??___fladd^0,c
  6235  00EFF8  5002               	movf	(___fladd@b+1)^0,w,c
  6236  00EFFA  5806               	subwfb	(___fladd@a+1)^0,w,c
  6237  00EFFC  6E0A               	movwf	(??___fladd+1)^0,c
  6238  00EFFE  5003               	movf	(___fladd@b+2)^0,w,c
  6239  00F000  5807               	subwfb	(___fladd@a+2)^0,w,c
  6240  00F002  6E0B               	movwf	(??___fladd+2)^0,c
  6241  00F004  5004               	movf	(___fladd@b+3)^0,w,c
  6242  00F006  5808               	subwfb	(___fladd@a+3)^0,w,c
  6243  00F008  6E0C               	movwf	(??___fladd+3)^0,c
  6244  00F00A  0EFF               	movlw	255
  6245  00F00C  2409               	addwf	??___fladd^0,w,c
  6246  00F00E  6E01               	movwf	___fladd@b^0,c
  6247  00F010  0EFF               	movlw	255
  6248  00F012  200A               	addwfc	(??___fladd+1)^0,w,c
  6249  00F014  6E02               	movwf	(___fladd@b+1)^0,c
  6250  00F016  0EFF               	movlw	255
  6251  00F018  200B               	addwfc	(??___fladd+2)^0,w,c
  6252  00F01A  6E03               	movwf	(___fladd@b+2)^0,c
  6253  00F01C  0EFF               	movlw	255
  6254  00F01E  200C               	addwfc	(??___fladd+3)^0,w,c
  6255  00F020  6E04               	movwf	(___fladd@b+3)^0,c
  6256  00F022  0E80               	movlw	128
  6257  00F024  1A0D               	xorwf	___fladd@signs^0,f,c
  6258  00F026  6C10               	negf	___fladd@grs^0,c
  6259  00F028  5010               	movf	___fladd@grs^0,w,c
  6260  00F02A  A4D8               	btfss	status,2,c
  6261  00F02C  EF1A  F078         	goto	u3471
  6262  00F030  EF1C  F078         	goto	u3470
  6263  00F034                     u3471:
  6264  00F034  EF2C  F078         	goto	l1361
  6265  00F038                     u3470:
  6266  00F038  0E01               	movlw	1
  6267  00F03A  2601               	addwf	___fladd@b^0,f,c
  6268  00F03C  0E00               	movlw	0
  6269  00F03E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6270  00F040  2203               	addwfc	(___fladd@b+2)^0,f,c
  6271  00F042  2204               	addwfc	(___fladd@b+3)^0,f,c
  6272  00F044  EF2C  F078         	goto	l1361
  6273  00F048                     l4712:
  6274  00F048  5005               	movf	___fladd@a^0,w,c
  6275  00F04A  5E01               	subwf	___fladd@b^0,f,c
  6276  00F04C  5006               	movf	(___fladd@a+1)^0,w,c
  6277  00F04E  5A02               	subwfb	(___fladd@b+1)^0,f,c
  6278  00F050  5007               	movf	(___fladd@a+2)^0,w,c
  6279  00F052  5A03               	subwfb	(___fladd@b+2)^0,f,c
  6280  00F054  5008               	movf	(___fladd@a+3)^0,w,c
  6281  00F056  5A04               	subwfb	(___fladd@b+3)^0,f,c
  6282  00F058                     l1361:
  6283  00F058  5001               	movf	___fladd@b^0,w,c
  6284  00F05A  1002               	iorwf	(___fladd@b+1)^0,w,c
  6285  00F05C  1003               	iorwf	(___fladd@b+2)^0,w,c
  6286  00F05E  1004               	iorwf	(___fladd@b+3)^0,w,c
  6287  00F060  A4D8               	btfss	status,2,c
  6288  00F062  EF35  F078         	goto	u3481
  6289  00F066  EF37  F078         	goto	u3480
  6290  00F06A                     u3481:
  6291  00F06A  EF6C  F078         	goto	l4736
  6292  00F06E                     u3480:
  6293  00F06E  5010               	movf	___fladd@grs^0,w,c
  6294  00F070  A4D8               	btfss	status,2,c
  6295  00F072  EF3D  F078         	goto	u3491
  6296  00F076  EF3F  F078         	goto	u3490
  6297  00F07A                     u3491:
  6298  00F07A  EF6C  F078         	goto	l4736
  6299  00F07E                     u3490:
  6300  00F07E  0E00               	movlw	0
  6301  00F080  6E01               	movwf	?___fladd^0,c
  6302  00F082  0E00               	movlw	0
  6303  00F084  6E02               	movwf	(?___fladd+1)^0,c
  6304  00F086  0E00               	movlw	0
  6305  00F088  6E03               	movwf	(?___fladd+2)^0,c
  6306  00F08A  0E00               	movlw	0
  6307  00F08C  6E04               	movwf	(?___fladd+3)^0,c
  6308  00F08E  EF07  F079         	goto	l1353
  6309  00F092                     l4720:
  6310  00F092  90D8               	bcf	status,0,c
  6311  00F094  3601               	rlcf	___fladd@b^0,f,c
  6312  00F096  3602               	rlcf	(___fladd@b+1)^0,f,c
  6313  00F098  3603               	rlcf	(___fladd@b+2)^0,f,c
  6314  00F09A  3604               	rlcf	(___fladd@b+3)^0,f,c
  6315  00F09C  AE10               	btfss	___fladd@grs^0,7,c
  6316  00F09E  EF53  F078         	goto	u3501
  6317  00F0A2  EF55  F078         	goto	u3500
  6318  00F0A6                     u3501:
  6319  00F0A6  EF56  F078         	goto	l4726
  6320  00F0AA                     u3500:
  6321  00F0AA  8001               	bsf	___fladd@b^0,0,c
  6322  00F0AC                     l4726:
  6323  00F0AC  A010               	btfss	___fladd@grs^0,0,c
  6324  00F0AE  EF5B  F078         	goto	u3511
  6325  00F0B2  EF5D  F078         	goto	u3510
  6326  00F0B6                     u3511:
  6327  00F0B6  EF61  F078         	goto	l4730
  6328  00F0BA                     u3510:
  6329  00F0BA  80D8               	bsf	status,0,c
  6330  00F0BC  3610               	rlcf	___fladd@grs^0,f,c
  6331  00F0BE  EF63  F078         	goto	l4732
  6332  00F0C2                     l4730:
  6333  00F0C2  90D8               	bcf	status,0,c
  6334  00F0C4  3610               	rlcf	___fladd@grs^0,f,c
  6335  00F0C6                     l4732:
  6336  00F0C6  500F               	movf	___fladd@bexp^0,w,c
  6337  00F0C8  B4D8               	btfsc	status,2,c
  6338  00F0CA  EF69  F078         	goto	u3521
  6339  00F0CE  EF6B  F078         	goto	u3520
  6340  00F0D2                     u3521:
  6341  00F0D2  EF6C  F078         	goto	l4736
  6342  00F0D6                     u3520:
  6343  00F0D6  060F               	decf	___fladd@bexp^0,f,c
  6344  00F0D8                     l4736:
  6345  00F0D8  AE03               	btfss	(___fladd@b+2)^0,7,c
  6346  00F0DA  EF71  F078         	goto	u3531
  6347  00F0DE  EF73  F078         	goto	u3530
  6348  00F0E2                     u3531:
  6349  00F0E2  EF49  F078         	goto	l4720
  6350  00F0E6                     u3530:
  6351  00F0E6                     l4738:
  6352  00F0E6  0E00               	movlw	0
  6353  00F0E8  6E0E               	movwf	___fladd@aexp^0,c
  6354  00F0EA  AE10               	btfss	___fladd@grs^0,7,c
  6355  00F0EC  EF7A  F078         	goto	u3541
  6356  00F0F0  EF7C  F078         	goto	u3540
  6357  00F0F4                     u3541:
  6358  00F0F4  EF94  F078         	goto	l1370
  6359  00F0F8                     u3540:
  6360  00F0F8  C010  F009         	movff	___fladd@grs,??___fladd
  6361  00F0FC  0E7F               	movlw	127
  6362  00F0FE  1609               	andwf	??___fladd^0,f,c
  6363  00F100  B4D8               	btfsc	status,2,c
  6364  00F102  EF85  F078         	goto	u3551
  6365  00F106  EF87  F078         	goto	u3550
  6366  00F10A                     u3551:
  6367  00F10A  EF8B  F078         	goto	l1371
  6368  00F10E                     u3550:
  6369  00F10E                     l4744:
  6370  00F10E  0E01               	movlw	1
  6371  00F110  6E0E               	movwf	___fladd@aexp^0,c
  6372  00F112  EF94  F078         	goto	l1370
  6373  00F116                     l1371:
  6374  00F116  A001               	btfss	___fladd@b^0,0,c
  6375  00F118  EF90  F078         	goto	u3561
  6376  00F11C  EF92  F078         	goto	u3560
  6377  00F120                     u3561:
  6378  00F120  EF94  F078         	goto	l1370
  6379  00F124                     u3560:
  6380  00F124  EF87  F078         	goto	l4744
  6381  00F128                     l1370:
  6382  00F128  500E               	movf	___fladd@aexp^0,w,c
  6383  00F12A  B4D8               	btfsc	status,2,c
  6384  00F12C  EF9A  F078         	goto	u3571
  6385  00F130  EF9C  F078         	goto	u3570
  6386  00F134                     u3571:
  6387  00F134  EFC7  F078         	goto	l4756
  6388  00F138                     u3570:
  6389  00F138  0E01               	movlw	1
  6390  00F13A  2601               	addwf	___fladd@b^0,f,c
  6391  00F13C  0E00               	movlw	0
  6392  00F13E  2202               	addwfc	(___fladd@b+1)^0,f,c
  6393  00F140  2203               	addwfc	(___fladd@b+2)^0,f,c
  6394  00F142  2204               	addwfc	(___fladd@b+3)^0,f,c
  6395  00F144  A004               	btfss	(___fladd@b+3)^0,0,c
  6396  00F146  EFA7  F078         	goto	u3581
  6397  00F14A  EFA9  F078         	goto	u3580
  6398  00F14E                     u3581:
  6399  00F14E  EFC7  F078         	goto	l4756
  6400  00F152                     u3580:
  6401  00F152  C001  F009         	movff	___fladd@b,??___fladd
  6402  00F156  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  6403  00F15A  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  6404  00F15E  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  6405  00F162  340C               	rlcf	(??___fladd+3)^0,w,c
  6406  00F164  320C               	rrcf	(??___fladd+3)^0,f,c
  6407  00F166  320B               	rrcf	(??___fladd+2)^0,f,c
  6408  00F168  320A               	rrcf	(??___fladd+1)^0,f,c
  6409  00F16A  3209               	rrcf	??___fladd^0,f,c
  6410  00F16C  C009  F001         	movff	??___fladd,___fladd@b
  6411  00F170  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  6412  00F174  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  6413  00F178  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  6414  00F17C  280F               	incf	___fladd@bexp^0,w,c
  6415  00F17E  B4D8               	btfsc	status,2,c
  6416  00F180  EFC4  F078         	goto	u3591
  6417  00F184  EFC6  F078         	goto	u3590
  6418  00F188                     u3591:
  6419  00F188  EFC7  F078         	goto	l4756
  6420  00F18C                     u3590:
  6421  00F18C  2A0F               	incf	___fladd@bexp^0,f,c
  6422  00F18E                     l4756:
  6423  00F18E  280F               	incf	___fladd@bexp^0,w,c
  6424  00F190  B4D8               	btfsc	status,2,c
  6425  00F192  EFCD  F078         	goto	u3601
  6426  00F196  EFCF  F078         	goto	u3600
  6427  00F19A                     u3601:
  6428  00F19A  EFD7  F078         	goto	l4760
  6429  00F19E                     u3600:
  6430  00F19E  500F               	movf	___fladd@bexp^0,w,c
  6431  00F1A0  A4D8               	btfss	status,2,c
  6432  00F1A2  EFD5  F078         	goto	u3611
  6433  00F1A6  EFD7  F078         	goto	u3610
  6434  00F1AA                     u3611:
  6435  00F1AA  EFE9  F078         	goto	l4764
  6436  00F1AE                     u3610:
  6437  00F1AE                     l4760:
  6438  00F1AE  0E00               	movlw	0
  6439  00F1B0  6E01               	movwf	___fladd@b^0,c
  6440  00F1B2  0E00               	movlw	0
  6441  00F1B4  6E02               	movwf	(___fladd@b+1)^0,c
  6442  00F1B6  0E00               	movlw	0
  6443  00F1B8  6E03               	movwf	(___fladd@b+2)^0,c
  6444  00F1BA  0E00               	movlw	0
  6445  00F1BC  6E04               	movwf	(___fladd@b+3)^0,c
  6446  00F1BE  500F               	movf	___fladd@bexp^0,w,c
  6447  00F1C0  A4D8               	btfss	status,2,c
  6448  00F1C2  EFE5  F078         	goto	u3621
  6449  00F1C6  EFE7  F078         	goto	u3620
  6450  00F1CA                     u3621:
  6451  00F1CA  EFE9  F078         	goto	l4764
  6452  00F1CE                     u3620:
  6453  00F1CE  0E00               	movlw	0
  6454  00F1D0  6E0D               	movwf	___fladd@signs^0,c
  6455  00F1D2                     l4764:
  6456  00F1D2  A00F               	btfss	___fladd@bexp^0,0,c
  6457  00F1D4  EFEE  F078         	goto	u3631
  6458  00F1D8  EFF0  F078         	goto	u3630
  6459  00F1DC                     u3631:
  6460  00F1DC  EFF3  F078         	goto	l4768
  6461  00F1E0                     u3630:
  6462  00F1E0  8E03               	bsf	(___fladd@b+2)^0,7,c
  6463  00F1E2  EFF4  F078         	goto	l4770
  6464  00F1E6                     l4768:
  6465  00F1E6  9E03               	bcf	(___fladd@b+2)^0,7,c
  6466  00F1E8                     l4770:
  6467  00F1E8  90D8               	bcf	status,0,c
  6468  00F1EA  300F               	rrcf	___fladd@bexp^0,w,c
  6469  00F1EC  6E04               	movwf	(___fladd@b+3)^0,c
  6470  00F1EE  AE0D               	btfss	___fladd@signs^0,7,c
  6471  00F1F0  EFFC  F078         	goto	u3641
  6472  00F1F4  EFFE  F078         	goto	u3640
  6473  00F1F8                     u3641:
  6474  00F1F8  EFFF  F078         	goto	l4776
  6475  00F1FC                     u3640:
  6476  00F1FC  8E04               	bsf	(___fladd@b+3)^0,7,c
  6477  00F1FE                     l4776:
  6478  00F1FE  C001  F001         	movff	___fladd@b,?___fladd
  6479  00F202  C002  F002         	movff	___fladd@b+1,?___fladd+1
  6480  00F206  C003  F003         	movff	___fladd@b+2,?___fladd+2
  6481  00F20A  C004  F004         	movff	___fladd@b+3,?___fladd+3
  6482  00F20E                     l1353:
  6483  00F20E  0012               	return		;funcret
  6484  00F210                     __end_of___fladd:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function ___flneg *****************
  6488 ;; Defined at:
  6489 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  f1              4    0[COMRAM] unsigned char 
  6492 ;; Auto vars:     Size  Location     Type
  6493 ;;		None
  6494 ;; Return value:  Size  Location     Type
  6495 ;;                  4    0[COMRAM] unsigned char 
  6496 ;; Registers used:
  6497 ;;		wreg, status,2, status,0
  6498 ;; Tracked objects:
  6499 ;;		On entry : 0/0
  6500 ;;		On exit  : 0/0
  6501 ;;		Unchanged: 0/0
  6502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6503 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6506 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6507 ;;Total ram usage:        4 bytes
  6508 ;; Hardware stack levels used:    1
  6509 ;; This function calls:
  6510 ;;		Nothing
  6511 ;; This function is called by:
  6512 ;;		_efgtoa
  6513 ;; This function uses a non-reentrant model
  6514 ;;
  6515                           
  6516                           	psect	text19
  6517  00C53E                     __ptext19:
  6518                           	callstack 0
  6519  00C53E                     ___flneg:
  6520                           	callstack 26
  6521  00C53E  5001               	movf	___flneg@f1^0,w,c
  6522  00C540  1002               	iorwf	(___flneg@f1+1)^0,w,c
  6523  00C542  1003               	iorwf	(___flneg@f1+2)^0,w,c
  6524  00C544  1004               	iorwf	(___flneg@f1+3)^0,w,c
  6525  00C546  B4D8               	btfsc	status,2,c
  6526  00C548  EFA8  F062         	goto	u4331
  6527  00C54C  EFAA  F062         	goto	u4330
  6528  00C550                     u4331:
  6529  00C550  EFB2  F062         	goto	l5272
  6530  00C554                     u4330:
  6531  00C554  0E00               	movlw	0
  6532  00C556  1A01               	xorwf	___flneg@f1^0,f,c
  6533  00C558  0E00               	movlw	0
  6534  00C55A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  6535  00C55C  0E00               	movlw	0
  6536  00C55E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  6537  00C560  0E80               	movlw	128
  6538  00C562  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  6539  00C564                     l5272:
  6540  00C564  C001  F001         	movff	___flneg@f1,?___flneg
  6541  00C568  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  6542  00C56C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  6543  00C570  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  6544  00C574  0012               	return		;funcret
  6545  00C576                     __end_of___flneg:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function ___flge *****************
  6549 ;; Defined at:
  6550 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  ff1             4   45[COMRAM] unsigned char 
  6553 ;;  ff2             4   49[COMRAM] unsigned char 
  6554 ;; Auto vars:     Size  Location     Type
  6555 ;;		None
  6556 ;; Return value:  Size  Location     Type
  6557 ;;		None               void
  6558 ;; Registers used:
  6559 ;;		wreg, status,2, status,0
  6560 ;; Tracked objects:
  6561 ;;		On entry : 0/0
  6562 ;;		On exit  : 0/0
  6563 ;;		Unchanged: 0/0
  6564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6565 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6567 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6568 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6569 ;;Total ram usage:       12 bytes
  6570 ;; Hardware stack levels used:    1
  6571 ;; This function calls:
  6572 ;;		Nothing
  6573 ;; This function is called by:
  6574 ;;		_efgtoa
  6575 ;; This function uses a non-reentrant model
  6576 ;;
  6577                           
  6578                           	psect	text20
  6579  00D498                     __ptext20:
  6580                           	callstack 0
  6581  00D498                     ___flge:
  6582                           	callstack 26
  6583  00D498  0E00               	movlw	0
  6584  00D49A  142E               	andwf	___flge@ff1^0,w,c
  6585  00D49C  6E36               	movwf	??___flge^0,c
  6586  00D49E  0E00               	movlw	0
  6587  00D4A0  142F               	andwf	(___flge@ff1+1)^0,w,c
  6588  00D4A2  6E37               	movwf	(??___flge+1)^0,c
  6589  00D4A4  0E80               	movlw	128
  6590  00D4A6  1430               	andwf	(___flge@ff1+2)^0,w,c
  6591  00D4A8  6E38               	movwf	(??___flge+2)^0,c
  6592  00D4AA  0E7F               	movlw	127
  6593  00D4AC  1431               	andwf	(___flge@ff1+3)^0,w,c
  6594  00D4AE  6E39               	movwf	(??___flge+3)^0,c
  6595  00D4B0  5036               	movf	??___flge^0,w,c
  6596  00D4B2  1037               	iorwf	(??___flge+1)^0,w,c
  6597  00D4B4  1038               	iorwf	(??___flge+2)^0,w,c
  6598  00D4B6  1039               	iorwf	(??___flge+3)^0,w,c
  6599  00D4B8  A4D8               	btfss	status,2,c
  6600  00D4BA  EF61  F06A         	goto	u4281
  6601  00D4BE  EF63  F06A         	goto	u4280
  6602  00D4C2                     u4281:
  6603  00D4C2  EF6B  F06A         	goto	l5250
  6604  00D4C6                     u4280:
  6605  00D4C6  0E00               	movlw	0
  6606  00D4C8  6E2E               	movwf	___flge@ff1^0,c
  6607  00D4CA  0E00               	movlw	0
  6608  00D4CC  6E2F               	movwf	(___flge@ff1+1)^0,c
  6609  00D4CE  0E00               	movlw	0
  6610  00D4D0  6E30               	movwf	(___flge@ff1+2)^0,c
  6611  00D4D2  0E00               	movlw	0
  6612  00D4D4  6E31               	movwf	(___flge@ff1+3)^0,c
  6613  00D4D6                     l5250:
  6614  00D4D6  0E00               	movlw	0
  6615  00D4D8  1432               	andwf	___flge@ff2^0,w,c
  6616  00D4DA  6E36               	movwf	??___flge^0,c
  6617  00D4DC  0E00               	movlw	0
  6618  00D4DE  1433               	andwf	(___flge@ff2+1)^0,w,c
  6619  00D4E0  6E37               	movwf	(??___flge+1)^0,c
  6620  00D4E2  0E80               	movlw	128
  6621  00D4E4  1434               	andwf	(___flge@ff2+2)^0,w,c
  6622  00D4E6  6E38               	movwf	(??___flge+2)^0,c
  6623  00D4E8  0E7F               	movlw	127
  6624  00D4EA  1435               	andwf	(___flge@ff2+3)^0,w,c
  6625  00D4EC  6E39               	movwf	(??___flge+3)^0,c
  6626  00D4EE  5036               	movf	??___flge^0,w,c
  6627  00D4F0  1037               	iorwf	(??___flge+1)^0,w,c
  6628  00D4F2  1038               	iorwf	(??___flge+2)^0,w,c
  6629  00D4F4  1039               	iorwf	(??___flge+3)^0,w,c
  6630  00D4F6  A4D8               	btfss	status,2,c
  6631  00D4F8  EF80  F06A         	goto	u4291
  6632  00D4FC  EF82  F06A         	goto	u4290
  6633  00D500                     u4291:
  6634  00D500  EF8A  F06A         	goto	l5254
  6635  00D504                     u4290:
  6636  00D504  0E00               	movlw	0
  6637  00D506  6E32               	movwf	___flge@ff2^0,c
  6638  00D508  0E00               	movlw	0
  6639  00D50A  6E33               	movwf	(___flge@ff2+1)^0,c
  6640  00D50C  0E00               	movlw	0
  6641  00D50E  6E34               	movwf	(___flge@ff2+2)^0,c
  6642  00D510  0E00               	movlw	0
  6643  00D512  6E35               	movwf	(___flge@ff2+3)^0,c
  6644  00D514                     l5254:
  6645  00D514  AE31               	btfss	(___flge@ff1+3)^0,7,c
  6646  00D516  EF8F  F06A         	goto	u4301
  6647  00D51A  EF91  F06A         	goto	u4300
  6648  00D51E                     u4301:
  6649  00D51E  EF9A  F06A         	goto	l5258
  6650  00D522                     u4300:
  6651  00D522  6C2E               	negf	___flge@ff1^0,c
  6652  00D524  1E2F               	comf	(___flge@ff1+1)^0,f,c
  6653  00D526  B0D8               	btfsc	status,0,c
  6654  00D528  2A2F               	incf	(___flge@ff1+1)^0,f,c
  6655  00D52A  1E30               	comf	(___flge@ff1+2)^0,f,c
  6656  00D52C  B0D8               	btfsc	status,0,c
  6657  00D52E  2A30               	incf	(___flge@ff1+2)^0,f,c
  6658  00D530  0E80               	movlw	128
  6659  00D532  5631               	subfwb	(___flge@ff1+3)^0,f,c
  6660  00D534                     l5258:
  6661  00D534  AE35               	btfss	(___flge@ff2+3)^0,7,c
  6662  00D536  EF9F  F06A         	goto	u4311
  6663  00D53A  EFA1  F06A         	goto	u4310
  6664  00D53E                     u4311:
  6665  00D53E  EFAA  F06A         	goto	l1081
  6666  00D542                     u4310:
  6667  00D542  6C32               	negf	___flge@ff2^0,c
  6668  00D544  1E33               	comf	(___flge@ff2+1)^0,f,c
  6669  00D546  B0D8               	btfsc	status,0,c
  6670  00D548  2A33               	incf	(___flge@ff2+1)^0,f,c
  6671  00D54A  1E34               	comf	(___flge@ff2+2)^0,f,c
  6672  00D54C  B0D8               	btfsc	status,0,c
  6673  00D54E  2A34               	incf	(___flge@ff2+2)^0,f,c
  6674  00D550  0E80               	movlw	128
  6675  00D552  5635               	subfwb	(___flge@ff2+3)^0,f,c
  6676  00D554                     l1081:
  6677  00D554  0E00               	movlw	0
  6678  00D556  1A2E               	xorwf	___flge@ff1^0,f,c
  6679  00D558  0E00               	movlw	0
  6680  00D55A  1A2F               	xorwf	(___flge@ff1+1)^0,f,c
  6681  00D55C  0E00               	movlw	0
  6682  00D55E  1A30               	xorwf	(___flge@ff1+2)^0,f,c
  6683  00D560  0E80               	movlw	128
  6684  00D562  1A31               	xorwf	(___flge@ff1+3)^0,f,c
  6685  00D564  0E00               	movlw	0
  6686  00D566  1A32               	xorwf	___flge@ff2^0,f,c
  6687  00D568  0E00               	movlw	0
  6688  00D56A  1A33               	xorwf	(___flge@ff2+1)^0,f,c
  6689  00D56C  0E00               	movlw	0
  6690  00D56E  1A34               	xorwf	(___flge@ff2+2)^0,f,c
  6691  00D570  0E80               	movlw	128
  6692  00D572  1A35               	xorwf	(___flge@ff2+3)^0,f,c
  6693  00D574  5032               	movf	___flge@ff2^0,w,c
  6694  00D576  5C2E               	subwf	___flge@ff1^0,w,c
  6695  00D578  5033               	movf	(___flge@ff2+1)^0,w,c
  6696  00D57A  582F               	subwfb	(___flge@ff1+1)^0,w,c
  6697  00D57C  5034               	movf	(___flge@ff2+2)^0,w,c
  6698  00D57E  5830               	subwfb	(___flge@ff1+2)^0,w,c
  6699  00D580  5035               	movf	(___flge@ff2+3)^0,w,c
  6700  00D582  5831               	subwfb	(___flge@ff1+3)^0,w,c
  6701  00D584  B0D8               	btfsc	status,0,c
  6702  00D586  EFC7  F06A         	goto	u4321
  6703  00D58A  EFC9  F06A         	goto	u4320
  6704  00D58E                     u4321:
  6705  00D58E  EFCC  F06A         	goto	l5264
  6706  00D592                     u4320:
  6707  00D592  90D8               	bcf	status,0,c
  6708  00D594  EFCD  F06A         	goto	l1086
  6709  00D598                     l5264:
  6710  00D598  80D8               	bsf	status,0,c
  6711  00D59A                     l1086:
  6712  00D59A  0012               	return		;funcret
  6713  00D59C                     __end_of___flge:
  6714                           	callstack 0
  6715                           
  6716 ;; *************** function ___fleq *****************
  6717 ;; Defined at:
  6718 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  6719 ;; Parameters:    Size  Location     Type
  6720 ;;  ff1             4    0[COMRAM] unsigned char 
  6721 ;;  ff2             4    4[COMRAM] unsigned char 
  6722 ;; Auto vars:     Size  Location     Type
  6723 ;;		None
  6724 ;; Return value:  Size  Location     Type
  6725 ;;		None               void
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6733 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6734 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6735 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6736 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6737 ;;Total ram usage:       12 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		_efgtoa
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           	psect	text21
  6747  00CE4C                     __ptext21:
  6748                           	callstack 0
  6749  00CE4C                     ___fleq:
  6750                           	callstack 26
  6751  00CE4C  0E00               	movlw	0
  6752  00CE4E  1401               	andwf	___fleq@ff1^0,w,c
  6753  00CE50  6E09               	movwf	??___fleq^0,c
  6754  00CE52  0E00               	movlw	0
  6755  00CE54  1402               	andwf	(___fleq@ff1+1)^0,w,c
  6756  00CE56  6E0A               	movwf	(??___fleq+1)^0,c
  6757  00CE58  0E80               	movlw	128
  6758  00CE5A  1403               	andwf	(___fleq@ff1+2)^0,w,c
  6759  00CE5C  6E0B               	movwf	(??___fleq+2)^0,c
  6760  00CE5E  0E7F               	movlw	127
  6761  00CE60  1404               	andwf	(___fleq@ff1+3)^0,w,c
  6762  00CE62  6E0C               	movwf	(??___fleq+3)^0,c
  6763  00CE64  5009               	movf	??___fleq^0,w,c
  6764  00CE66  100A               	iorwf	(??___fleq+1)^0,w,c
  6765  00CE68  100B               	iorwf	(??___fleq+2)^0,w,c
  6766  00CE6A  100C               	iorwf	(??___fleq+3)^0,w,c
  6767  00CE6C  A4D8               	btfss	status,2,c
  6768  00CE6E  EF3B  F067         	goto	u4251
  6769  00CE72  EF3D  F067         	goto	u4250
  6770  00CE76                     u4251:
  6771  00CE76  EF45  F067         	goto	l5234
  6772  00CE7A                     u4250:
  6773  00CE7A  0E00               	movlw	0
  6774  00CE7C  6E01               	movwf	___fleq@ff1^0,c
  6775  00CE7E  0E00               	movlw	0
  6776  00CE80  6E02               	movwf	(___fleq@ff1+1)^0,c
  6777  00CE82  0E00               	movlw	0
  6778  00CE84  6E03               	movwf	(___fleq@ff1+2)^0,c
  6779  00CE86  0E00               	movlw	0
  6780  00CE88  6E04               	movwf	(___fleq@ff1+3)^0,c
  6781  00CE8A                     l5234:
  6782  00CE8A  0E00               	movlw	0
  6783  00CE8C  1405               	andwf	___fleq@ff2^0,w,c
  6784  00CE8E  6E09               	movwf	??___fleq^0,c
  6785  00CE90  0E00               	movlw	0
  6786  00CE92  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6787  00CE94  6E0A               	movwf	(??___fleq+1)^0,c
  6788  00CE96  0E80               	movlw	128
  6789  00CE98  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6790  00CE9A  6E0B               	movwf	(??___fleq+2)^0,c
  6791  00CE9C  0E7F               	movlw	127
  6792  00CE9E  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6793  00CEA0  6E0C               	movwf	(??___fleq+3)^0,c
  6794  00CEA2  5009               	movf	??___fleq^0,w,c
  6795  00CEA4  100A               	iorwf	(??___fleq+1)^0,w,c
  6796  00CEA6  100B               	iorwf	(??___fleq+2)^0,w,c
  6797  00CEA8  100C               	iorwf	(??___fleq+3)^0,w,c
  6798  00CEAA  A4D8               	btfss	status,2,c
  6799  00CEAC  EF5A  F067         	goto	u4261
  6800  00CEB0  EF5C  F067         	goto	u4260
  6801  00CEB4                     u4261:
  6802  00CEB4  EF64  F067         	goto	l5238
  6803  00CEB8                     u4260:
  6804  00CEB8  0E00               	movlw	0
  6805  00CEBA  6E05               	movwf	___fleq@ff2^0,c
  6806  00CEBC  0E00               	movlw	0
  6807  00CEBE  6E06               	movwf	(___fleq@ff2+1)^0,c
  6808  00CEC0  0E00               	movlw	0
  6809  00CEC2  6E07               	movwf	(___fleq@ff2+2)^0,c
  6810  00CEC4  0E00               	movlw	0
  6811  00CEC6  6E08               	movwf	(___fleq@ff2+3)^0,c
  6812  00CEC8                     l5238:
  6813  00CEC8  5005               	movf	___fleq@ff2^0,w,c
  6814  00CECA  1801               	xorwf	___fleq@ff1^0,w,c
  6815  00CECC  E10F               	bnz	u4270
  6816  00CECE  5006               	movf	(___fleq@ff2+1)^0,w,c
  6817  00CED0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6818  00CED2  E10C               	bnz	u4270
  6819  00CED4  5007               	movf	(___fleq@ff2+2)^0,w,c
  6820  00CED6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6821  00CED8  E109               	bnz	u4270
  6822  00CEDA  5008               	movf	(___fleq@ff2+3)^0,w,c
  6823  00CEDC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6824  00CEDE  B4D8               	btfsc	status,2,c
  6825  00CEE0  EF74  F067         	goto	u4271
  6826  00CEE4  EF76  F067         	goto	u4270
  6827  00CEE8                     u4271:
  6828  00CEE8  EF79  F067         	goto	l5242
  6829  00CEEC                     u4270:
  6830  00CEEC  90D8               	bcf	status,0,c
  6831  00CEEE  EF7A  F067         	goto	l1075
  6832  00CEF2                     l5242:
  6833  00CEF2  80D8               	bsf	status,0,c
  6834  00CEF4                     l1075:
  6835  00CEF4  0012               	return		;funcret
  6836  00CEF6                     __end_of___fleq:
  6837                           	callstack 0
  6838                           
  6839 ;; *************** function ___awmod *****************
  6840 ;; Defined at:
  6841 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  dividend        2    0[COMRAM] int 
  6844 ;;  divisor         2    2[COMRAM] int 
  6845 ;; Auto vars:     Size  Location     Type
  6846 ;;  sign            1    5[COMRAM] unsigned char 
  6847 ;;  counter         1    4[COMRAM] unsigned char 
  6848 ;; Return value:  Size  Location     Type
  6849 ;;                  2    0[COMRAM] int 
  6850 ;; Registers used:
  6851 ;;		wreg, status,2, status,0
  6852 ;; Tracked objects:
  6853 ;;		On entry : 0/0
  6854 ;;		On exit  : 0/0
  6855 ;;		Unchanged: 0/0
  6856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6857 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6858 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6860 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6861 ;;Total ram usage:        6 bytes
  6862 ;; Hardware stack levels used:    1
  6863 ;; This function calls:
  6864 ;;		Nothing
  6865 ;; This function is called by:
  6866 ;;		_efgtoa
  6867 ;; This function uses a non-reentrant model
  6868 ;;
  6869                           
  6870                           	psect	text22
  6871  00CEF6                     __ptext22:
  6872                           	callstack 0
  6873  00CEF6                     ___awmod:
  6874                           	callstack 26
  6875  00CEF6  0E00               	movlw	0
  6876  00CEF8  6E06               	movwf	___awmod@sign^0,c
  6877  00CEFA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6878  00CEFC  EF84  F067         	goto	u4190
  6879  00CF00  EF82  F067         	goto	u4191
  6880  00CF04                     u4191:
  6881  00CF04  EF8A  F067         	goto	l5202
  6882  00CF08                     u4190:
  6883  00CF08  6C01               	negf	___awmod@dividend^0,c
  6884  00CF0A  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6885  00CF0C  B0D8               	btfsc	status,0,c
  6886  00CF0E  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6887  00CF10  0E01               	movlw	1
  6888  00CF12  6E06               	movwf	___awmod@sign^0,c
  6889  00CF14                     l5202:
  6890  00CF14  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6891  00CF16  EF91  F067         	goto	u4200
  6892  00CF1A  EF8F  F067         	goto	u4201
  6893  00CF1E                     u4201:
  6894  00CF1E  EF95  F067         	goto	l5206
  6895  00CF22                     u4200:
  6896  00CF22  6C03               	negf	___awmod@divisor^0,c
  6897  00CF24  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6898  00CF26  B0D8               	btfsc	status,0,c
  6899  00CF28  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6900  00CF2A                     l5206:
  6901  00CF2A  5003               	movf	___awmod@divisor^0,w,c
  6902  00CF2C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6903  00CF2E  B4D8               	btfsc	status,2,c
  6904  00CF30  EF9C  F067         	goto	u4211
  6905  00CF34  EF9E  F067         	goto	u4210
  6906  00CF38                     u4211:
  6907  00CF38  EFC2  F067         	goto	l5222
  6908  00CF3C                     u4210:
  6909  00CF3C  0E01               	movlw	1
  6910  00CF3E  6E05               	movwf	___awmod@counter^0,c
  6911  00CF40  EFA6  F067         	goto	l5212
  6912  00CF44                     l5210:
  6913  00CF44  90D8               	bcf	status,0,c
  6914  00CF46  3603               	rlcf	___awmod@divisor^0,f,c
  6915  00CF48  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6916  00CF4A  2A05               	incf	___awmod@counter^0,f,c
  6917  00CF4C                     l5212:
  6918  00CF4C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6919  00CF4E  EFAB  F067         	goto	u4221
  6920  00CF52  EFAD  F067         	goto	u4220
  6921  00CF56                     u4221:
  6922  00CF56  EFA2  F067         	goto	l5210
  6923  00CF5A                     u4220:
  6924  00CF5A                     l5214:
  6925  00CF5A  5003               	movf	___awmod@divisor^0,w,c
  6926  00CF5C  5C01               	subwf	___awmod@dividend^0,w,c
  6927  00CF5E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6928  00CF60  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6929  00CF62  A0D8               	btfss	status,0,c
  6930  00CF64  EFB6  F067         	goto	u4231
  6931  00CF68  EFB8  F067         	goto	u4230
  6932  00CF6C                     u4231:
  6933  00CF6C  EFBC  F067         	goto	l5218
  6934  00CF70                     u4230:
  6935  00CF70  5003               	movf	___awmod@divisor^0,w,c
  6936  00CF72  5E01               	subwf	___awmod@dividend^0,f,c
  6937  00CF74  5004               	movf	(___awmod@divisor+1)^0,w,c
  6938  00CF76  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6939  00CF78                     l5218:
  6940  00CF78  90D8               	bcf	status,0,c
  6941  00CF7A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6942  00CF7C  3203               	rrcf	___awmod@divisor^0,f,c
  6943  00CF7E  2E05               	decfsz	___awmod@counter^0,f,c
  6944  00CF80  EFAD  F067         	goto	l5214
  6945  00CF84                     l5222:
  6946  00CF84  5006               	movf	___awmod@sign^0,w,c
  6947  00CF86  B4D8               	btfsc	status,2,c
  6948  00CF88  EFC8  F067         	goto	u4241
  6949  00CF8C  EFCA  F067         	goto	u4240
  6950  00CF90                     u4241:
  6951  00CF90  EFCE  F067         	goto	l5226
  6952  00CF94                     u4240:
  6953  00CF94  6C01               	negf	___awmod@dividend^0,c
  6954  00CF96  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6955  00CF98  B0D8               	btfsc	status,0,c
  6956  00CF9A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6957  00CF9C                     l5226:
  6958  00CF9C  C001  F001         	movff	___awmod@dividend,?___awmod
  6959  00CFA0  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6960  00CFA4  0012               	return		;funcret
  6961  00CFA6                     __end_of___awmod:
  6962                           	callstack 0
  6963                           
  6964 ;; *************** function ___awdiv *****************
  6965 ;; Defined at:
  6966 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  6967 ;; Parameters:    Size  Location     Type
  6968 ;;  dividend        2    0[COMRAM] int 
  6969 ;;  divisor         2    2[COMRAM] int 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  quotient        2    6[COMRAM] int 
  6972 ;;  sign            1    5[COMRAM] unsigned char 
  6973 ;;  counter         1    4[COMRAM] unsigned char 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  2    0[COMRAM] int 
  6976 ;; Registers used:
  6977 ;;		wreg, status,2, status,0
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6983 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6984 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6985 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6986 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6987 ;;Total ram usage:        8 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; This function calls:
  6990 ;;		Nothing
  6991 ;; This function is called by:
  6992 ;;		_efgtoa
  6993 ;; This function uses a non-reentrant model
  6994 ;;
  6995                           
  6996                           	psect	text23
  6997  00D06A                     __ptext23:
  6998                           	callstack 0
  6999  00D06A                     ___awdiv:
  7000                           	callstack 26
  7001  00D06A  0E00               	movlw	0
  7002  00D06C  6E06               	movwf	___awdiv@sign^0,c
  7003  00D06E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  7004  00D070  EF3E  F068         	goto	u4130
  7005  00D074  EF3C  F068         	goto	u4131
  7006  00D078                     u4131:
  7007  00D078  EF44  F068         	goto	l5158
  7008  00D07C                     u4130:
  7009  00D07C  6C03               	negf	___awdiv@divisor^0,c
  7010  00D07E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  7011  00D080  B0D8               	btfsc	status,0,c
  7012  00D082  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  7013  00D084  0E01               	movlw	1
  7014  00D086  6E06               	movwf	___awdiv@sign^0,c
  7015  00D088                     l5158:
  7016  00D088  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  7017  00D08A  EF4B  F068         	goto	u4140
  7018  00D08E  EF49  F068         	goto	u4141
  7019  00D092                     u4141:
  7020  00D092  EF51  F068         	goto	l5164
  7021  00D096                     u4140:
  7022  00D096  6C01               	negf	___awdiv@dividend^0,c
  7023  00D098  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  7024  00D09A  B0D8               	btfsc	status,0,c
  7025  00D09C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  7026  00D09E  0E01               	movlw	1
  7027  00D0A0  1A06               	xorwf	___awdiv@sign^0,f,c
  7028  00D0A2                     l5164:
  7029  00D0A2  0E00               	movlw	0
  7030  00D0A4  6E08               	movwf	(___awdiv@quotient+1)^0,c
  7031  00D0A6  0E00               	movlw	0
  7032  00D0A8  6E07               	movwf	___awdiv@quotient^0,c
  7033  00D0AA  5003               	movf	___awdiv@divisor^0,w,c
  7034  00D0AC  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  7035  00D0AE  B4D8               	btfsc	status,2,c
  7036  00D0B0  EF5C  F068         	goto	u4151
  7037  00D0B4  EF5E  F068         	goto	u4150
  7038  00D0B8                     u4151:
  7039  00D0B8  EF86  F068         	goto	l5186
  7040  00D0BC                     u4150:
  7041  00D0BC  0E01               	movlw	1
  7042  00D0BE  6E05               	movwf	___awdiv@counter^0,c
  7043  00D0C0  EF66  F068         	goto	l5172
  7044  00D0C4                     l5170:
  7045  00D0C4  90D8               	bcf	status,0,c
  7046  00D0C6  3603               	rlcf	___awdiv@divisor^0,f,c
  7047  00D0C8  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  7048  00D0CA  2A05               	incf	___awdiv@counter^0,f,c
  7049  00D0CC                     l5172:
  7050  00D0CC  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  7051  00D0CE  EF6B  F068         	goto	u4161
  7052  00D0D2  EF6D  F068         	goto	u4160
  7053  00D0D6                     u4161:
  7054  00D0D6  EF62  F068         	goto	l5170
  7055  00D0DA                     u4160:
  7056  00D0DA                     l5174:
  7057  00D0DA  90D8               	bcf	status,0,c
  7058  00D0DC  3607               	rlcf	___awdiv@quotient^0,f,c
  7059  00D0DE  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  7060  00D0E0  5003               	movf	___awdiv@divisor^0,w,c
  7061  00D0E2  5C01               	subwf	___awdiv@dividend^0,w,c
  7062  00D0E4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7063  00D0E6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  7064  00D0E8  A0D8               	btfss	status,0,c
  7065  00D0EA  EF79  F068         	goto	u4171
  7066  00D0EE  EF7B  F068         	goto	u4170
  7067  00D0F2                     u4171:
  7068  00D0F2  EF80  F068         	goto	l5182
  7069  00D0F6                     u4170:
  7070  00D0F6  5003               	movf	___awdiv@divisor^0,w,c
  7071  00D0F8  5E01               	subwf	___awdiv@dividend^0,f,c
  7072  00D0FA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  7073  00D0FC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  7074  00D0FE  8007               	bsf	___awdiv@quotient^0,0,c
  7075  00D100                     l5182:
  7076  00D100  90D8               	bcf	status,0,c
  7077  00D102  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  7078  00D104  3203               	rrcf	___awdiv@divisor^0,f,c
  7079  00D106  2E05               	decfsz	___awdiv@counter^0,f,c
  7080  00D108  EF6D  F068         	goto	l5174
  7081  00D10C                     l5186:
  7082  00D10C  5006               	movf	___awdiv@sign^0,w,c
  7083  00D10E  B4D8               	btfsc	status,2,c
  7084  00D110  EF8C  F068         	goto	u4181
  7085  00D114  EF8E  F068         	goto	u4180
  7086  00D118                     u4181:
  7087  00D118  EF92  F068         	goto	l5190
  7088  00D11C                     u4180:
  7089  00D11C  6C07               	negf	___awdiv@quotient^0,c
  7090  00D11E  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  7091  00D120  B0D8               	btfsc	status,0,c
  7092  00D122  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  7093  00D124                     l5190:
  7094  00D124  C007  F001         	movff	___awdiv@quotient,?___awdiv
  7095  00D128  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  7096  00D12C  0012               	return		;funcret
  7097  00D12E                     __end_of___awdiv:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _atoi *****************
  7101 ;; Defined at:
  7102 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;  s               2    7[COMRAM] PTR const unsigned char 
  7105 ;;		 -> STR_5(5), STR_4(5), STR_3(5), 
  7106 ;; Auto vars:     Size  Location     Type
  7107 ;;  n               2   20[COMRAM] int 
  7108 ;;  neg             2   13[COMRAM] int 
  7109 ;; Return value:  Size  Location     Type
  7110 ;;                  2    7[COMRAM] int 
  7111 ;; Registers used:
  7112 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7113 ;; Tracked objects:
  7114 ;;		On entry : 0/0
  7115 ;;		On exit  : 0/0
  7116 ;;		Unchanged: 0/0
  7117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7118 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7119 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7120 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7121 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7122 ;;Total ram usage:       15 bytes
  7123 ;; Hardware stack levels used:    1
  7124 ;; Hardware stack levels required when called:    1
  7125 ;; This function calls:
  7126 ;;		___wmul
  7127 ;;		_isdigit
  7128 ;;		_isspace
  7129 ;; This function is called by:
  7130 ;;		_vfpfcnvrt
  7131 ;; This function uses a non-reentrant model
  7132 ;;
  7133                           
  7134                           	psect	text24
  7135  00D9DA                     __ptext24:
  7136                           	callstack 0
  7137  00D9DA                     _atoi:
  7138                           	callstack 26
  7139  00D9DA  0E00               	movlw	0
  7140  00D9DC  6E16               	movwf	(atoi@n+1)^0,c
  7141  00D9DE  0E00               	movlw	0
  7142  00D9E0  6E15               	movwf	atoi@n^0,c
  7143  00D9E2  0E00               	movlw	0
  7144  00D9E4  6E0F               	movwf	(atoi@neg+1)^0,c
  7145  00D9E6  0E00               	movlw	0
  7146  00D9E8  6E0E               	movwf	atoi@neg^0,c
  7147  00D9EA  EFF9  F06C         	goto	l5736
  7148  00D9EE                     l5734:
  7149  00D9EE  4A08               	infsnz	atoi@s^0,f,c
  7150  00D9F0  2A09               	incf	(atoi@s+1)^0,f,c
  7151  00D9F2                     l5736:
  7152  00D9F2  0E01               	movlw	1
  7153  00D9F4  6E14               	movwf	_atoi$2219^0,c
  7154  00D9F6  C008  FFF6         	movff	atoi@s,tblptrl
  7155  00D9FA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7156  00D9FE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7157  00D9FE  6AF8               	clrf	tblptru,c
  7158  00DA00                     	endif
  7159  00DA00                     	if	0	;tblptru may be non-zero
  7160  00DA00                     	endif
  7161  00DA00  0008               	tblrd		*
  7162  00DA02  50F5               	movf	tablat,w,c
  7163  00DA04  0A20               	xorlw	32
  7164  00DA06  B4D8               	btfsc	status,2,c
  7165  00DA08  EF08  F06D         	goto	u5251
  7166  00DA0C  EF0A  F06D         	goto	u5250
  7167  00DA10                     u5251:
  7168  00DA10  EF28  F06D         	goto	l5744
  7169  00DA14                     u5250:
  7170  00DA14  0EF7               	movlw	247
  7171  00DA16  6E0A               	movwf	??_atoi^0,c
  7172  00DA18  0EFF               	movlw	255
  7173  00DA1A  6E0B               	movwf	(??_atoi+1)^0,c
  7174  00DA1C  C008  FFF6         	movff	atoi@s,tblptrl
  7175  00DA20  C009  FFF7         	movff	atoi@s+1,tblptrh
  7176  00DA24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7177  00DA24  6AF8               	clrf	tblptru,c
  7178  00DA26                     	endif
  7179  00DA26                     	if	0	;tblptru may be non-zero
  7180  00DA26                     	endif
  7181  00DA26  0008               	tblrd		*
  7182  00DA28  50F5               	movf	tablat,w,c
  7183  00DA2A  6E0C               	movwf	(??_atoi+2)^0,c
  7184  00DA2C  6A0D               	clrf	(??_atoi+3)^0,c
  7185  00DA2E  500A               	movf	??_atoi^0,w,c
  7186  00DA30  260C               	addwf	(??_atoi+2)^0,f,c
  7187  00DA32  500B               	movf	(??_atoi+1)^0,w,c
  7188  00DA34  220D               	addwfc	(??_atoi+3)^0,f,c
  7189  00DA36  500D               	movf	(??_atoi+3)^0,w,c
  7190  00DA38  E109               	bnz	u5260
  7191  00DA3A  0E05               	movlw	5
  7192  00DA3C  5C0C               	subwf	(??_atoi+2)^0,w,c
  7193  00DA3E  A0D8               	btfss	status,0,c
  7194  00DA40  EF24  F06D         	goto	u5261
  7195  00DA44  EF26  F06D         	goto	u5260
  7196  00DA48                     u5261:
  7197  00DA48  EF28  F06D         	goto	l5744
  7198  00DA4C                     u5260:
  7199  00DA4C  0E00               	movlw	0
  7200  00DA4E  6E14               	movwf	_atoi$2219^0,c
  7201  00DA50                     l5744:
  7202  00DA50  C014  F010         	movff	_atoi$2219,_atoi$2218
  7203  00DA54  6A11               	clrf	(_atoi$2218+1)^0,c
  7204  00DA56  5010               	movf	_atoi$2218^0,w,c
  7205  00DA58  1011               	iorwf	(_atoi$2218+1)^0,w,c
  7206  00DA5A  A4D8               	btfss	status,2,c
  7207  00DA5C  EF32  F06D         	goto	u5271
  7208  00DA60  EF34  F06D         	goto	u5270
  7209  00DA64                     u5271:
  7210  00DA64  EFF7  F06C         	goto	l5734
  7211  00DA68                     u5270:
  7212  00DA68  EF3E  F06D         	goto	l5754
  7213  00DA6C                     l5750:
  7214  00DA6C  0E00               	movlw	0
  7215  00DA6E  6E0F               	movwf	(atoi@neg+1)^0,c
  7216  00DA70  0E01               	movlw	1
  7217  00DA72  6E0E               	movwf	atoi@neg^0,c
  7218  00DA74                     l5752:
  7219  00DA74  4A08               	infsnz	atoi@s^0,f,c
  7220  00DA76  2A09               	incf	(atoi@s+1)^0,f,c
  7221  00DA78  EF75  F06D         	goto	l5760
  7222  00DA7C                     l5754:
  7223  00DA7C  C008  FFF6         	movff	atoi@s,tblptrl
  7224  00DA80  C009  FFF7         	movff	atoi@s+1,tblptrh
  7225  00DA84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7226  00DA84  6AF8               	clrf	tblptru,c
  7227  00DA86                     	endif
  7228  00DA86                     	if	0	;tblptru may be non-zero
  7229  00DA86                     	endif
  7230  00DA86  0008               	tblrd		*
  7231  00DA88  50F5               	movf	tablat,w,c
  7232  00DA8A  6E0A               	movwf	??_atoi^0,c
  7233  00DA8C  6A0B               	clrf	(??_atoi+1)^0,c
  7234                           
  7235                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7236                           ; Switch size 1, requested type "simple"
  7237                           ; Number of cases is 1, Range of values is 0 to 0
  7238                           ; switch strategies available:
  7239                           ; Name         Instructions Cycles
  7240                           ; simple_byte            4     3 (average)
  7241                           ;	Chosen strategy is simple_byte
  7242  00DA8E  500B               	movf	(??_atoi+1)^0,w,c
  7243  00DA90  0A00               	xorlw	0	; case 0
  7244  00DA92  B4D8               	btfsc	status,2,c
  7245  00DA94  EF4E  F06D         	goto	l6504
  7246  00DA98  EF75  F06D         	goto	l5760
  7247  00DA9C                     l6504:
  7248                           
  7249                           ; Switch size 1, requested type "simple"
  7250                           ; Number of cases is 2, Range of values is 43 to 45
  7251                           ; switch strategies available:
  7252                           ; Name         Instructions Cycles
  7253                           ; simple_byte            7     4 (average)
  7254                           ;	Chosen strategy is simple_byte
  7255  00DA9C  500A               	movf	??_atoi^0,w,c
  7256  00DA9E  0A2B               	xorlw	43	; case 43
  7257  00DAA0  B4D8               	btfsc	status,2,c
  7258  00DAA2  EF3A  F06D         	goto	l5752
  7259  00DAA6  0A06               	xorlw	6	; case 45
  7260  00DAA8  B4D8               	btfsc	status,2,c
  7261  00DAAA  EF36  F06D         	goto	l5750
  7262  00DAAE  EF75  F06D         	goto	l5760
  7263  00DAB2                     l5756:
  7264  00DAB2  C015  F001         	movff	atoi@n,___wmul@multiplier
  7265  00DAB6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
  7266  00DABA  0E00               	movlw	0
  7267  00DABC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7268  00DABE  0E0A               	movlw	10
  7269  00DAC0  6E03               	movwf	___wmul@multiplicand^0,c
  7270  00DAC2  ECA2  F061         	call	___wmul	;wreg free
  7271  00DAC6  C008  FFF6         	movff	atoi@s,tblptrl
  7272  00DACA  C009  FFF7         	movff	atoi@s+1,tblptrh
  7273  00DACE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7274  00DACE  6AF8               	clrf	tblptru,c
  7275  00DAD0                     	endif
  7276  00DAD0                     	if	0	;tblptru may be non-zero
  7277  00DAD0                     	endif
  7278  00DAD0  0008               	tblrd		*
  7279  00DAD2  50F5               	movf	tablat,w,c
  7280  00DAD4  5E01               	subwf	?___wmul^0,f,c
  7281  00DAD6  0E00               	movlw	0
  7282  00DAD8  5A02               	subwfb	(?___wmul+1)^0,f,c
  7283  00DADA  0E30               	movlw	48
  7284  00DADC  2401               	addwf	?___wmul^0,w,c
  7285  00DADE  6E15               	movwf	atoi@n^0,c
  7286  00DAE0  0E00               	movlw	0
  7287  00DAE2  2002               	addwfc	(?___wmul+1)^0,w,c
  7288  00DAE4  6E16               	movwf	(atoi@n+1)^0,c
  7289  00DAE6  EF3A  F06D         	goto	l5752
  7290  00DAEA                     l5760:
  7291  00DAEA  0ED0               	movlw	208
  7292  00DAEC  6E0A               	movwf	??_atoi^0,c
  7293  00DAEE  0EFF               	movlw	255
  7294  00DAF0  6E0B               	movwf	(??_atoi+1)^0,c
  7295  00DAF2  C008  FFF6         	movff	atoi@s,tblptrl
  7296  00DAF6  C009  FFF7         	movff	atoi@s+1,tblptrh
  7297  00DAFA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7298  00DAFA  6AF8               	clrf	tblptru,c
  7299  00DAFC                     	endif
  7300  00DAFC                     	if	0	;tblptru may be non-zero
  7301  00DAFC                     	endif
  7302  00DAFC  0008               	tblrd		*
  7303  00DAFE  50F5               	movf	tablat,w,c
  7304  00DB00  6E0C               	movwf	(??_atoi+2)^0,c
  7305  00DB02  6A0D               	clrf	(??_atoi+3)^0,c
  7306  00DB04  500A               	movf	??_atoi^0,w,c
  7307  00DB06  260C               	addwf	(??_atoi+2)^0,f,c
  7308  00DB08  500B               	movf	(??_atoi+1)^0,w,c
  7309  00DB0A  220D               	addwfc	(??_atoi+3)^0,f,c
  7310  00DB0C  500D               	movf	(??_atoi+3)^0,w,c
  7311  00DB0E  E10A               	bnz	u5280
  7312  00DB10  0E0A               	movlw	10
  7313  00DB12  5C0C               	subwf	(??_atoi+2)^0,w,c
  7314  00DB14  A0D8               	btfss	status,0,c
  7315  00DB16  EF8F  F06D         	goto	u5281
  7316  00DB1A  EF92  F06D         	goto	u5280
  7317  00DB1E                     u5281:
  7318  00DB1E  0E01               	movlw	1
  7319  00DB20  EF93  F06D         	goto	u5290
  7320  00DB24                     u5280:
  7321  00DB24  0E00               	movlw	0
  7322  00DB26                     u5290:
  7323  00DB26  6E12               	movwf	_atoi$2220^0,c
  7324  00DB28  6A13               	clrf	(_atoi$2220+1)^0,c
  7325  00DB2A  5012               	movf	_atoi$2220^0,w,c
  7326  00DB2C  1013               	iorwf	(_atoi$2220+1)^0,w,c
  7327  00DB2E  A4D8               	btfss	status,2,c
  7328  00DB30  EF9C  F06D         	goto	u5301
  7329  00DB34  EF9E  F06D         	goto	u5300
  7330  00DB38                     u5301:
  7331  00DB38  EF59  F06D         	goto	l5756
  7332  00DB3C                     u5300:
  7333  00DB3C  500E               	movf	atoi@neg^0,w,c
  7334  00DB3E  100F               	iorwf	(atoi@neg+1)^0,w,c
  7335  00DB40  A4D8               	btfss	status,2,c
  7336  00DB42  EFA5  F06D         	goto	u5311
  7337  00DB46  EFA7  F06D         	goto	u5310
  7338  00DB4A                     u5311:
  7339  00DB4A  EFB5  F06D         	goto	l1701
  7340  00DB4E                     u5310:
  7341  00DB4E  C015  F00A         	movff	atoi@n,??_atoi
  7342  00DB52  C016  F00B         	movff	atoi@n+1,??_atoi+1
  7343  00DB56  1E0A               	comf	??_atoi^0,f,c
  7344  00DB58  1E0B               	comf	(??_atoi+1)^0,f,c
  7345  00DB5A  4A0A               	infsnz	??_atoi^0,f,c
  7346  00DB5C  2A0B               	incf	(??_atoi+1)^0,f,c
  7347  00DB5E  C00A  F008         	movff	??_atoi,?_atoi
  7348  00DB62  C00B  F009         	movff	??_atoi+1,?_atoi+1
  7349  00DB66  EFB9  F06D         	goto	l1704
  7350  00DB6A                     l1701:
  7351  00DB6A  C015  F008         	movff	atoi@n,?_atoi
  7352  00DB6E  C016  F009         	movff	atoi@n+1,?_atoi+1
  7353  00DB72                     l1704:
  7354  00DB72  0012               	return		;funcret
  7355  00DB74                     __end_of_atoi:
  7356                           	callstack 0
  7357                           
  7358 ;; *************** function _isspace *****************
  7359 ;; Defined at:
  7360 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
  7361 ;; Parameters:    Size  Location     Type
  7362 ;;  c               2    0[COMRAM] int 
  7363 ;; Auto vars:     Size  Location     Type
  7364 ;;		None
  7365 ;; Return value:  Size  Location     Type
  7366 ;;                  2    0[COMRAM] int 
  7367 ;; Registers used:
  7368 ;;		wreg, status,2, status,0
  7369 ;; Tracked objects:
  7370 ;;		On entry : 0/0
  7371 ;;		On exit  : 0/0
  7372 ;;		Unchanged: 0/0
  7373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7374 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7375 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7376 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7377 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7378 ;;Total ram usage:        7 bytes
  7379 ;; Hardware stack levels used:    1
  7380 ;; This function calls:
  7381 ;;		Nothing
  7382 ;; This function is called by:
  7383 ;;		_atoi
  7384 ;; This function uses a non-reentrant model
  7385 ;;
  7386                           
  7387                           	psect	text25
  7388  00C6BC                     __ptext25:
  7389                           	callstack 0
  7390  00C6BC                     _isspace:
  7391                           	callstack 26
  7392  00C6BC  0E01               	movlw	1
  7393  00C6BE  6E07               	movwf	_isspace$2249^0,c
  7394  00C6C0  0E20               	movlw	32
  7395  00C6C2  1801               	xorwf	isspace@c^0,w,c
  7396  00C6C4  1002               	iorwf	(isspace@c+1)^0,w,c
  7397  00C6C6  B4D8               	btfsc	status,2,c
  7398  00C6C8  EF68  F063         	goto	u4691
  7399  00C6CC  EF6A  F063         	goto	u4690
  7400  00C6D0                     u4691:
  7401  00C6D0  EF83  F063         	goto	l5418
  7402  00C6D4                     u4690:
  7403  00C6D4  0EF7               	movlw	247
  7404  00C6D6  6E03               	movwf	??_isspace^0,c
  7405  00C6D8  0EFF               	movlw	255
  7406  00C6DA  6E04               	movwf	(??_isspace+1)^0,c
  7407  00C6DC  C001  F005         	movff	isspace@c,??_isspace+2
  7408  00C6E0  C002  F006         	movff	isspace@c+1,??_isspace+3
  7409  00C6E4  5003               	movf	??_isspace^0,w,c
  7410  00C6E6  2605               	addwf	(??_isspace+2)^0,f,c
  7411  00C6E8  5004               	movf	(??_isspace+1)^0,w,c
  7412  00C6EA  2206               	addwfc	(??_isspace+3)^0,f,c
  7413  00C6EC  5006               	movf	(??_isspace+3)^0,w,c
  7414  00C6EE  E109               	bnz	u4700
  7415  00C6F0  0E05               	movlw	5
  7416  00C6F2  5C05               	subwf	(??_isspace+2)^0,w,c
  7417  00C6F4  A0D8               	btfss	status,0,c
  7418  00C6F6  EF7F  F063         	goto	u4701
  7419  00C6FA  EF81  F063         	goto	u4700
  7420  00C6FE                     u4701:
  7421  00C6FE  EF83  F063         	goto	l5418
  7422  00C702                     u4700:
  7423  00C702  0E00               	movlw	0
  7424  00C704  6E07               	movwf	_isspace$2249^0,c
  7425  00C706                     l5418:
  7426  00C706  C007  F001         	movff	_isspace$2249,?_isspace
  7427  00C70A  6A02               	clrf	(?_isspace+1)^0,c
  7428  00C70C  0012               	return		;funcret
  7429  00C70E                     __end_of_isspace:
  7430                           	callstack 0
  7431                           
  7432 ;; *************** function _isdigit *****************
  7433 ;; Defined at:
  7434 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
  7435 ;; Parameters:    Size  Location     Type
  7436 ;;  c               2    0[COMRAM] int 
  7437 ;; Auto vars:     Size  Location     Type
  7438 ;;		None
  7439 ;; Return value:  Size  Location     Type
  7440 ;;                  2    0[COMRAM] int 
  7441 ;; Registers used:
  7442 ;;		wreg, status,2, status,0
  7443 ;; Tracked objects:
  7444 ;;		On entry : 0/0
  7445 ;;		On exit  : 0/0
  7446 ;;		Unchanged: 0/0
  7447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7450 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7451 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7452 ;;Total ram usage:        6 bytes
  7453 ;; Hardware stack levels used:    1
  7454 ;; This function calls:
  7455 ;;		Nothing
  7456 ;; This function is called by:
  7457 ;;		_vfpfcnvrt
  7458 ;;		_atoi
  7459 ;; This function uses a non-reentrant model
  7460 ;;
  7461                           
  7462                           	psect	text26
  7463  00C506                     __ptext26:
  7464                           	callstack 0
  7465  00C506                     _isdigit:
  7466                           	callstack 27
  7467  00C506  0ED0               	movlw	208
  7468  00C508  6E03               	movwf	??_isdigit^0,c
  7469  00C50A  0EFF               	movlw	255
  7470  00C50C  6E04               	movwf	(??_isdigit+1)^0,c
  7471  00C50E  C001  F005         	movff	isdigit@c,??_isdigit+2
  7472  00C512  C002  F006         	movff	isdigit@c+1,??_isdigit+3
  7473  00C516  5003               	movf	??_isdigit^0,w,c
  7474  00C518  2605               	addwf	(??_isdigit+2)^0,f,c
  7475  00C51A  5004               	movf	(??_isdigit+1)^0,w,c
  7476  00C51C  2206               	addwfc	(??_isdigit+3)^0,f,c
  7477  00C51E  5006               	movf	(??_isdigit+3)^0,w,c
  7478  00C520  E10A               	bnz	u4670
  7479  00C522  0E0A               	movlw	10
  7480  00C524  5C05               	subwf	(??_isdigit+2)^0,w,c
  7481  00C526  A0D8               	btfss	status,0,c
  7482  00C528  EF98  F062         	goto	u4671
  7483  00C52C  EF9B  F062         	goto	u4670
  7484  00C530                     u4671:
  7485  00C530  0E01               	movlw	1
  7486  00C532  EF9C  F062         	goto	u4680
  7487  00C536                     u4670:
  7488  00C536  0E00               	movlw	0
  7489  00C538                     u4680:
  7490  00C538  6E01               	movwf	?_isdigit^0,c
  7491  00C53A  6A02               	clrf	(?_isdigit+1)^0,c
  7492  00C53C  0012               	return		;funcret
  7493  00C53E                     __end_of_isdigit:
  7494                           	callstack 0
  7495                           
  7496 ;; *************** function _Voltage_ReadRegister *****************
  7497 ;; Defined at:
  7498 ;;		line 30 in file "INA260.c"
  7499 ;; Parameters:    Size  Location     Type
  7500 ;;		None
  7501 ;; Auto vars:     Size  Location     Type
  7502 ;;  temp_b          2   51[COMRAM] unsigned int 
  7503 ;;  temp_a          1   53[COMRAM] unsigned char 
  7504 ;; Return value:  Size  Location     Type
  7505 ;;                  4   45[COMRAM] float 
  7506 ;; Registers used:
  7507 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7508 ;; Tracked objects:
  7509 ;;		On entry : 0/0
  7510 ;;		On exit  : 0/0
  7511 ;;		Unchanged: 0/0
  7512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7513 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7514 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7515 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7516 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7517 ;;Total ram usage:        9 bytes
  7518 ;; Hardware stack levels used:    1
  7519 ;; Hardware stack levels required when called:    2
  7520 ;; This function calls:
  7521 ;;		_I2C_Master_Read
  7522 ;;		_I2C_Master_RepeatedStart
  7523 ;;		_I2C_Master_Start
  7524 ;;		_I2C_Master_Stop
  7525 ;;		_I2C_Master_Write
  7526 ;;		___fldiv
  7527 ;;		___flmul
  7528 ;;		___xxtofl
  7529 ;; This function is called by:
  7530 ;;		_main
  7531 ;; This function uses a non-reentrant model
  7532 ;;
  7533                           
  7534                           	psect	text27
  7535  00D8C2                     __ptext27:
  7536                           	callstack 0
  7537  00D8C2                     _Voltage_ReadRegister:
  7538                           	callstack 28
  7539  00D8C2                     
  7540                           ;INA260.c: 31:     I2C_Master_Start();
  7541  00D8C2  EC89  F060         	call	_I2C_Master_Start	;wreg free
  7542                           
  7543                           ;INA260.c: 32:     I2C_Master_Write(0x80);
  7544  00D8C6  0E00               	movlw	0
  7545  00D8C8  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7546  00D8CA  0E80               	movlw	128
  7547  00D8CC  6E02               	movwf	I2C_Master_Write@d^0,c
  7548  00D8CE  ECB5  F060         	call	_I2C_Master_Write	;wreg free
  7549                           
  7550                           ;INA260.c: 33:     I2C_Master_Write(0x02);
  7551  00D8D2  0E00               	movlw	0
  7552  00D8D4  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7553  00D8D6  0E02               	movlw	2
  7554  00D8D8  6E02               	movwf	I2C_Master_Write@d^0,c
  7555  00D8DA  ECB5  F060         	call	_I2C_Master_Write	;wreg free
  7556                           
  7557                           ;INA260.c: 34:     I2C_Master_RepeatedStart();
  7558  00D8DE  EC85  F060         	call	_I2C_Master_RepeatedStart	;wreg free
  7559                           
  7560                           ;INA260.c: 35:     I2C_Master_Write(0x81);
  7561  00D8E2  0E00               	movlw	0
  7562  00D8E4  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7563  00D8E6  0E81               	movlw	129
  7564  00D8E8  6E02               	movwf	I2C_Master_Write@d^0,c
  7565  00D8EA  ECB5  F060         	call	_I2C_Master_Write	;wreg free
  7566                           
  7567                           ;INA260.c: 36:     char temp_a = I2C_Master_Read(1);
  7568  00D8EE  0E00               	movlw	0
  7569  00D8F0  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7570  00D8F2  0E01               	movlw	1
  7571  00D8F4  6E02               	movwf	I2C_Master_Read@a^0,c
  7572  00D8F6  EC4D  F062         	call	_I2C_Master_Read	;wreg free
  7573  00D8FA  5002               	movf	?_I2C_Master_Read^0,w,c
  7574  00D8FC  6E36               	movwf	Voltage_ReadRegister@temp_a^0,c
  7575                           
  7576                           ;INA260.c: 37:     unsigned int temp_b = temp_a<<8 | I2C_Master_Read(0);
  7577  00D8FE  0E00               	movlw	0
  7578  00D900  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7579  00D902  0E00               	movlw	0
  7580  00D904  6E02               	movwf	I2C_Master_Read@a^0,c
  7581  00D906  EC4D  F062         	call	_I2C_Master_Read	;wreg free
  7582  00D90A  5036               	movf	Voltage_ReadRegister@temp_a^0,w,c
  7583  00D90C  6E33               	movwf	(??_Voltage_ReadRegister+1)^0,c
  7584  00D90E  6A32               	clrf	??_Voltage_ReadRegister^0,c
  7585  00D910  5002               	movf	?_I2C_Master_Read^0,w,c
  7586  00D912  1032               	iorwf	??_Voltage_ReadRegister^0,w,c
  7587  00D914  6E34               	movwf	Voltage_ReadRegister@temp_b^0,c
  7588  00D916  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
  7589  00D918  1033               	iorwf	(??_Voltage_ReadRegister+1)^0,w,c
  7590  00D91A  6E35               	movwf	(Voltage_ReadRegister@temp_b+1)^0,c
  7591  00D91C                     
  7592                           ;INA260.c: 38:     voltage = temp_b *1.25;
  7593  00D91C  C034  F007         	movff	Voltage_ReadRegister@temp_b,___xxtofl@val
  7594  00D920  C035  F008         	movff	Voltage_ReadRegister@temp_b+1,___xxtofl@val+1
  7595  00D924  6A09               	clrf	(___xxtofl@val+2)^0,c
  7596  00D926  6A0A               	clrf	(___xxtofl@val+3)^0,c
  7597  00D928  0E00               	movlw	0
  7598  00D92A  ECBA  F06D         	call	___xxtofl
  7599  00D92E  C007  F015         	movff	?___xxtofl,___flmul@b
  7600  00D932  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
  7601  00D936  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
  7602  00D93A  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
  7603  00D93E  0E00               	movlw	0
  7604  00D940  6E19               	movwf	___flmul@a^0,c
  7605  00D942  0E00               	movlw	0
  7606  00D944  6E1A               	movwf	(___flmul@a+1)^0,c
  7607  00D946  0EA0               	movlw	160
  7608  00D948  6E1B               	movwf	(___flmul@a+2)^0,c
  7609  00D94A  0E3F               	movlw	63
  7610  00D94C  6E1C               	movwf	(___flmul@a+3)^0,c
  7611  00D94E  EC57  F072         	call	___flmul	;wreg free
  7612  00D952  C015  F0C0         	movff	?___flmul,_voltage
  7613  00D956  C016  F0C1         	movff	?___flmul+1,_voltage+1
  7614  00D95A  C017  F0C2         	movff	?___flmul+2,_voltage+2
  7615  00D95E  C018  F0C3         	movff	?___flmul+3,_voltage+3
  7616  00D962                     
  7617                           ;INA260.c: 39:     I2C_Master_Stop();
  7618  00D962  EC8D  F060         	call	_I2C_Master_Stop	;wreg free
  7619  00D966                     
  7620                           ;INA260.c: 40:     voltage = voltage/1000;
  7621  00D966  C0C0  F001         	movff	_voltage,___fldiv@b
  7622  00D96A  C0C1  F002         	movff	_voltage+1,___fldiv@b+1
  7623  00D96E  C0C2  F003         	movff	_voltage+2,___fldiv@b+2
  7624  00D972  C0C3  F004         	movff	_voltage+3,___fldiv@b+3
  7625  00D976  0E00               	movlw	0
  7626  00D978  6E05               	movwf	___fldiv@a^0,c
  7627  00D97A  0E00               	movlw	0
  7628  00D97C  6E06               	movwf	(___fldiv@a+1)^0,c
  7629  00D97E  0E7A               	movlw	122
  7630  00D980  6E07               	movwf	(___fldiv@a+2)^0,c
  7631  00D982  0E44               	movlw	68
  7632  00D984  6E08               	movwf	(___fldiv@a+3)^0,c
  7633  00D986  EC8A  F070         	call	___fldiv	;wreg free
  7634  00D98A  C001  F0C0         	movff	?___fldiv,_voltage
  7635  00D98E  C002  F0C1         	movff	?___fldiv+1,_voltage+1
  7636  00D992  C003  F0C2         	movff	?___fldiv+2,_voltage+2
  7637  00D996  C004  F0C3         	movff	?___fldiv+3,_voltage+3
  7638  00D99A                     
  7639                           ;INA260.c: 41:     _delay((unsigned long)((300)*(8000000/4000.0)));
  7640  00D99A  0E04               	movlw	4
  7641  00D99C  6E33               	movwf	(??_Voltage_ReadRegister+1)^0,c
  7642  00D99E  0E0C               	movlw	12
  7643  00D9A0  6E32               	movwf	??_Voltage_ReadRegister^0,c
  7644  00D9A2  0E34               	movlw	52
  7645  00D9A4                     u5977:
  7646  00D9A4  2EE8               	decfsz	wreg,f,c
  7647  00D9A6  D7FE               	bra	u5977
  7648  00D9A8  2E32               	decfsz	??_Voltage_ReadRegister^0,f,c
  7649  00D9AA  D7FC               	bra	u5977
  7650  00D9AC  2E33               	decfsz	(??_Voltage_ReadRegister+1)^0,f,c
  7651  00D9AE  D7FA               	bra	u5977
  7652  00D9B0                     
  7653                           ;INA260.c: 42:     _delay((unsigned long)((600)*(8000000/4000.0)));
  7654  00D9B0  0E07               	movlw	7
  7655  00D9B2  6E33               	movwf	(??_Voltage_ReadRegister+1)^0,c
  7656  00D9B4  0E17               	movlw	23
  7657  00D9B6  6E32               	movwf	??_Voltage_ReadRegister^0,c
  7658  00D9B8  0E6A               	movlw	106
  7659  00D9BA                     u5987:
  7660  00D9BA  2EE8               	decfsz	wreg,f,c
  7661  00D9BC  D7FE               	bra	u5987
  7662  00D9BE  2E32               	decfsz	??_Voltage_ReadRegister^0,f,c
  7663  00D9C0  D7FC               	bra	u5987
  7664  00D9C2  2E33               	decfsz	(??_Voltage_ReadRegister+1)^0,f,c
  7665  00D9C4  D7FA               	bra	u5987
  7666  00D9C6  D000               	nop2	
  7667  00D9C8                     
  7668                           ;INA260.c: 43:     return voltage;
  7669  00D9C8  C0C0  F02E         	movff	_voltage,?_Voltage_ReadRegister
  7670  00D9CC  C0C1  F02F         	movff	_voltage+1,?_Voltage_ReadRegister+1
  7671  00D9D0  C0C2  F030         	movff	_voltage+2,?_Voltage_ReadRegister+2
  7672  00D9D4  C0C3  F031         	movff	_voltage+3,?_Voltage_ReadRegister+3
  7673  00D9D8  0012               	return		;funcret
  7674  00D9DA                     __end_of_Voltage_ReadRegister:
  7675                           	callstack 0
  7676                           
  7677 ;; *************** function _SYSTEM_Initialize *****************
  7678 ;; Defined at:
  7679 ;;		line 50 in file "mcc_generated_files/mcc.c"
  7680 ;; Parameters:    Size  Location     Type
  7681 ;;		None
  7682 ;; Auto vars:     Size  Location     Type
  7683 ;;		None
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  1    wreg      void 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, cstack
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7697 ;;Total ram usage:        0 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; Hardware stack levels required when called:    1
  7700 ;; This function calls:
  7701 ;;		_OSCILLATOR_Initialize
  7702 ;;		_PIN_MANAGER_Initialize
  7703 ;; This function is called by:
  7704 ;;		_main
  7705 ;; This function uses a non-reentrant model
  7706 ;;
  7707                           
  7708                           	psect	text28
  7709  00C174                     __ptext28:
  7710                           	callstack 0
  7711  00C174                     _SYSTEM_Initialize:
  7712                           	callstack 29
  7713  00C174                     
  7714                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  7715  00C174  ECB5  F061         	call	_PIN_MANAGER_Initialize	;wreg free
  7716                           
  7717                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  7718  00C178  ECE9  F060         	call	_OSCILLATOR_Initialize	;wreg free
  7719  00C17C  0012               	return		;funcret
  7720  00C17E                     __end_of_SYSTEM_Initialize:
  7721                           	callstack 0
  7722                           
  7723 ;; *************** function _PIN_MANAGER_Initialize *****************
  7724 ;; Defined at:
  7725 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  7726 ;; Parameters:    Size  Location     Type
  7727 ;;		None
  7728 ;; Auto vars:     Size  Location     Type
  7729 ;;		None
  7730 ;; Return value:  Size  Location     Type
  7731 ;;                  1    wreg      void 
  7732 ;; Registers used:
  7733 ;;		wreg, status,2
  7734 ;; Tracked objects:
  7735 ;;		On entry : 0/0
  7736 ;;		On exit  : 0/0
  7737 ;;		Unchanged: 0/0
  7738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7740 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7742 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7743 ;;Total ram usage:        0 bytes
  7744 ;; Hardware stack levels used:    1
  7745 ;; This function calls:
  7746 ;;		Nothing
  7747 ;; This function is called by:
  7748 ;;		_SYSTEM_Initialize
  7749 ;; This function uses a non-reentrant model
  7750 ;;
  7751                           
  7752                           	psect	text29
  7753  00C36A                     __ptext29:
  7754                           	callstack 0
  7755  00C36A                     _PIN_MANAGER_Initialize:
  7756                           	callstack 29
  7757  00C36A                     
  7758                           ;mcc_generated_files/pin_manager.c: 62:     LATA = 0x00;
  7759  00C36A  0E00               	movlw	0
  7760  00C36C  6E89               	movwf	137,c	;volatile
  7761                           
  7762                           ;mcc_generated_files/pin_manager.c: 63:     LATB = 0x00;
  7763  00C36E  0E00               	movlw	0
  7764  00C370  6E8A               	movwf	138,c	;volatile
  7765                           
  7766                           ;mcc_generated_files/pin_manager.c: 64:     LATC = 0x00;
  7767  00C372  0E00               	movlw	0
  7768  00C374  6E8B               	movwf	139,c	;volatile
  7769                           
  7770                           ;mcc_generated_files/pin_manager.c: 70:     TRISA = 0xEF;
  7771  00C376  0EEF               	movlw	239
  7772  00C378  6E92               	movwf	146,c	;volatile
  7773  00C37A                     
  7774                           ;mcc_generated_files/pin_manager.c: 71:     TRISB = 0xFF;
  7775  00C37A  6893               	setf	147,c	;volatile
  7776                           
  7777                           ;mcc_generated_files/pin_manager.c: 72:     TRISC = 0xBF;
  7778  00C37C  0EBF               	movlw	191
  7779  00C37E  6E94               	movwf	148,c	;volatile
  7780                           
  7781                           ;mcc_generated_files/pin_manager.c: 78:     ANCON0 = 0xDF;
  7782  00C380  0EDF               	movlw	223
  7783  00C382  010F               	movlb	15	; () banked
  7784  00C384  6F5D               	movwf	93,b	;volatile
  7785                           
  7786                           ;mcc_generated_files/pin_manager.c: 79:     ANCON1 = 0x7F;
  7787  00C386  0E7F               	movlw	127
  7788  00C388  6F5C               	movwf	92,b	;volatile
  7789                           
  7790                           ;mcc_generated_files/pin_manager.c: 84:     WPUB = 0x00;
  7791  00C38A  0E00               	movlw	0
  7792  00C38C  6F5B               	movwf	91,b	;volatile
  7793  00C38E                     
  7794                           ; BSR set to: 15
  7795                           ;mcc_generated_files/pin_manager.c: 85:     INTCON2bits.nRBPU = 1;
  7796  00C38E  8EF1               	bsf	241,7,c	;volatile
  7797  00C390                     
  7798                           ; BSR set to: 15
  7799  00C390  0012               	return		;funcret
  7800  00C392                     __end_of_PIN_MANAGER_Initialize:
  7801                           	callstack 0
  7802                           
  7803 ;; *************** function _OSCILLATOR_Initialize *****************
  7804 ;; Defined at:
  7805 ;;		line 58 in file "mcc_generated_files/mcc.c"
  7806 ;; Parameters:    Size  Location     Type
  7807 ;;		None
  7808 ;; Auto vars:     Size  Location     Type
  7809 ;;		None
  7810 ;; Return value:  Size  Location     Type
  7811 ;;                  1    wreg      void 
  7812 ;; Registers used:
  7813 ;;		wreg, status,2
  7814 ;; Tracked objects:
  7815 ;;		On entry : 0/0
  7816 ;;		On exit  : 0/0
  7817 ;;		Unchanged: 0/0
  7818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7819 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7820 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7821 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7822 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7823 ;;Total ram usage:        0 bytes
  7824 ;; Hardware stack levels used:    1
  7825 ;; This function calls:
  7826 ;;		Nothing
  7827 ;; This function is called by:
  7828 ;;		_SYSTEM_Initialize
  7829 ;; This function uses a non-reentrant model
  7830 ;;
  7831                           
  7832                           	psect	text30
  7833  00C1D2                     __ptext30:
  7834                           	callstack 0
  7835  00C1D2                     _OSCILLATOR_Initialize:
  7836                           	callstack 29
  7837  00C1D2                     
  7838                           ;mcc_generated_files/mcc.c: 61:     OSCCON = 0x60;
  7839  00C1D2  0E60               	movlw	96
  7840  00C1D4  6ED3               	movwf	211,c	;volatile
  7841                           
  7842                           ;mcc_generated_files/mcc.c: 63:     OSCCON2 = 0x00;
  7843  00C1D6  0E00               	movlw	0
  7844  00C1D8  6ED2               	movwf	210,c	;volatile
  7845                           
  7846                           ;mcc_generated_files/mcc.c: 65:     OSCTUNE = 0x00;
  7847  00C1DA  0E00               	movlw	0
  7848  00C1DC  6E9B               	movwf	155,c	;volatile
  7849                           
  7850                           ;mcc_generated_files/mcc.c: 67:     REFOCON = 0x00;
  7851  00C1DE  0E00               	movlw	0
  7852  00C1E0  6E9A               	movwf	154,c	;volatile
  7853  00C1E2  0012               	return		;funcret
  7854  00C1E4                     __end_of_OSCILLATOR_Initialize:
  7855                           	callstack 0
  7856                           
  7857 ;; *************** function _Power_ReadRegister *****************
  7858 ;; Defined at:
  7859 ;;		line 62 in file "INA260.c"
  7860 ;; Parameters:    Size  Location     Type
  7861 ;;		None
  7862 ;; Auto vars:     Size  Location     Type
  7863 ;;  temp_f          2   31[COMRAM] unsigned int 
  7864 ;;  temp_e          1   33[COMRAM] unsigned char 
  7865 ;; Return value:  Size  Location     Type
  7866 ;;                  4   25[COMRAM] float 
  7867 ;; Registers used:
  7868 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  7869 ;; Tracked objects:
  7870 ;;		On entry : 0/0
  7871 ;;		On exit  : 0/0
  7872 ;;		Unchanged: 0/0
  7873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7874 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7875 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7876 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7877 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7878 ;;Total ram usage:        9 bytes
  7879 ;; Hardware stack levels used:    1
  7880 ;; Hardware stack levels required when called:    2
  7881 ;; This function calls:
  7882 ;;		_I2C_Master_Read
  7883 ;;		_I2C_Master_RepeatedStart
  7884 ;;		_I2C_Master_Start
  7885 ;;		_I2C_Master_Stop
  7886 ;;		_I2C_Master_Write
  7887 ;;		___fldiv
  7888 ;;		___wmul
  7889 ;;		___xxtofl
  7890 ;; This function is called by:
  7891 ;;		_main
  7892 ;; This function uses a non-reentrant model
  7893 ;;
  7894                           
  7895                           	psect	text31
  7896  00D6A2                     __ptext31:
  7897                           	callstack 0
  7898  00D6A2                     _Power_ReadRegister:
  7899                           	callstack 28
  7900  00D6A2                     
  7901                           ;INA260.c: 63:     I2C_Master_Start();
  7902  00D6A2  EC89  F060         	call	_I2C_Master_Start	;wreg free
  7903                           
  7904                           ;INA260.c: 64:     I2C_Master_Write(0x80);
  7905  00D6A6  0E00               	movlw	0
  7906  00D6A8  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7907  00D6AA  0E80               	movlw	128
  7908  00D6AC  6E02               	movwf	I2C_Master_Write@d^0,c
  7909  00D6AE  ECB5  F060         	call	_I2C_Master_Write	;wreg free
  7910                           
  7911                           ;INA260.c: 65:     I2C_Master_Write(0x03);
  7912  00D6B2  0E00               	movlw	0
  7913  00D6B4  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7914  00D6B6  0E03               	movlw	3
  7915  00D6B8  6E02               	movwf	I2C_Master_Write@d^0,c
  7916  00D6BA  ECB5  F060         	call	_I2C_Master_Write	;wreg free
  7917                           
  7918                           ;INA260.c: 66:     I2C_Master_RepeatedStart();
  7919  00D6BE  EC85  F060         	call	_I2C_Master_RepeatedStart	;wreg free
  7920                           
  7921                           ;INA260.c: 67:     I2C_Master_Write(0x81);
  7922  00D6C2  0E00               	movlw	0
  7923  00D6C4  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
  7924  00D6C6  0E81               	movlw	129
  7925  00D6C8  6E02               	movwf	I2C_Master_Write@d^0,c
  7926  00D6CA  ECB5  F060         	call	_I2C_Master_Write	;wreg free
  7927                           
  7928                           ;INA260.c: 68:     char temp_e = I2C_Master_Read(1);
  7929  00D6CE  0E00               	movlw	0
  7930  00D6D0  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7931  00D6D2  0E01               	movlw	1
  7932  00D6D4  6E02               	movwf	I2C_Master_Read@a^0,c
  7933  00D6D6  EC4D  F062         	call	_I2C_Master_Read	;wreg free
  7934  00D6DA  5002               	movf	?_I2C_Master_Read^0,w,c
  7935  00D6DC  6E22               	movwf	Power_ReadRegister@temp_e^0,c
  7936                           
  7937                           ;INA260.c: 69:     unsigned int temp_f = temp_e<<8 | I2C_Master_Read(0);
  7938  00D6DE  0E00               	movlw	0
  7939  00D6E0  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
  7940  00D6E2  0E00               	movlw	0
  7941  00D6E4  6E02               	movwf	I2C_Master_Read@a^0,c
  7942  00D6E6  EC4D  F062         	call	_I2C_Master_Read	;wreg free
  7943  00D6EA  5022               	movf	Power_ReadRegister@temp_e^0,w,c
  7944  00D6EC  6E1F               	movwf	(??_Power_ReadRegister+1)^0,c
  7945  00D6EE  6A1E               	clrf	??_Power_ReadRegister^0,c
  7946  00D6F0  5002               	movf	?_I2C_Master_Read^0,w,c
  7947  00D6F2  101E               	iorwf	??_Power_ReadRegister^0,w,c
  7948  00D6F4  6E20               	movwf	Power_ReadRegister@temp_f^0,c
  7949  00D6F6  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
  7950  00D6F8  101F               	iorwf	(??_Power_ReadRegister+1)^0,w,c
  7951  00D6FA  6E21               	movwf	(Power_ReadRegister@temp_f+1)^0,c
  7952  00D6FC                     
  7953                           ;INA260.c: 70:     power = temp_f *10;
  7954  00D6FC  C020  F001         	movff	Power_ReadRegister@temp_f,___wmul@multiplier
  7955  00D700  C021  F002         	movff	Power_ReadRegister@temp_f+1,___wmul@multiplier+1
  7956  00D704  0E00               	movlw	0
  7957  00D706  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  7958  00D708  0E0A               	movlw	10
  7959  00D70A  6E03               	movwf	___wmul@multiplicand^0,c
  7960  00D70C  ECA2  F061         	call	___wmul	;wreg free
  7961  00D710  C001  F007         	movff	?___wmul,___xxtofl@val
  7962  00D714  C002  F008         	movff	?___wmul+1,___xxtofl@val+1
  7963  00D718  6A09               	clrf	(___xxtofl@val+2)^0,c
  7964  00D71A  6A0A               	clrf	(___xxtofl@val+3)^0,c
  7965  00D71C  0E00               	movlw	0
  7966  00D71E  ECBA  F06D         	call	___xxtofl
  7967  00D722  C007  F0B8         	movff	?___xxtofl,_power
  7968  00D726  C008  F0B9         	movff	?___xxtofl+1,_power+1
  7969  00D72A  C009  F0BA         	movff	?___xxtofl+2,_power+2
  7970  00D72E  C00A  F0BB         	movff	?___xxtofl+3,_power+3
  7971  00D732                     
  7972                           ;INA260.c: 71:     I2C_Master_Stop();
  7973  00D732  EC8D  F060         	call	_I2C_Master_Stop	;wreg free
  7974  00D736                     
  7975                           ;INA260.c: 72:     power = power/1000;
  7976  00D736  C0B8  F001         	movff	_power,___fldiv@b
  7977  00D73A  C0B9  F002         	movff	_power+1,___fldiv@b+1
  7978  00D73E  C0BA  F003         	movff	_power+2,___fldiv@b+2
  7979  00D742  C0BB  F004         	movff	_power+3,___fldiv@b+3
  7980  00D746  0E00               	movlw	0
  7981  00D748  6E05               	movwf	___fldiv@a^0,c
  7982  00D74A  0E00               	movlw	0
  7983  00D74C  6E06               	movwf	(___fldiv@a+1)^0,c
  7984  00D74E  0E7A               	movlw	122
  7985  00D750  6E07               	movwf	(___fldiv@a+2)^0,c
  7986  00D752  0E44               	movlw	68
  7987  00D754  6E08               	movwf	(___fldiv@a+3)^0,c
  7988  00D756  EC8A  F070         	call	___fldiv	;wreg free
  7989  00D75A  C001  F0B8         	movff	?___fldiv,_power
  7990  00D75E  C002  F0B9         	movff	?___fldiv+1,_power+1
  7991  00D762  C003  F0BA         	movff	?___fldiv+2,_power+2
  7992  00D766  C004  F0BB         	movff	?___fldiv+3,_power+3
  7993  00D76A                     
  7994                           ;INA260.c: 73:     _delay((unsigned long)((300)*(8000000/4000.0)));
  7995  00D76A  0E04               	movlw	4
  7996  00D76C  6E1F               	movwf	(??_Power_ReadRegister+1)^0,c
  7997  00D76E  0E0C               	movlw	12
  7998  00D770  6E1E               	movwf	??_Power_ReadRegister^0,c
  7999  00D772  0E34               	movlw	52
  8000  00D774                     u5997:
  8001  00D774  2EE8               	decfsz	wreg,f,c
  8002  00D776  D7FE               	bra	u5997
  8003  00D778  2E1E               	decfsz	??_Power_ReadRegister^0,f,c
  8004  00D77A  D7FC               	bra	u5997
  8005  00D77C  2E1F               	decfsz	(??_Power_ReadRegister+1)^0,f,c
  8006  00D77E  D7FA               	bra	u5997
  8007  00D780                     
  8008                           ;INA260.c: 74:     _delay((unsigned long)((600)*(8000000/4000.0)));
  8009  00D780  0E07               	movlw	7
  8010  00D782  6E1F               	movwf	(??_Power_ReadRegister+1)^0,c
  8011  00D784  0E17               	movlw	23
  8012  00D786  6E1E               	movwf	??_Power_ReadRegister^0,c
  8013  00D788  0E6A               	movlw	106
  8014  00D78A                     u6007:
  8015  00D78A  2EE8               	decfsz	wreg,f,c
  8016  00D78C  D7FE               	bra	u6007
  8017  00D78E  2E1E               	decfsz	??_Power_ReadRegister^0,f,c
  8018  00D790  D7FC               	bra	u6007
  8019  00D792  2E1F               	decfsz	(??_Power_ReadRegister+1)^0,f,c
  8020  00D794  D7FA               	bra	u6007
  8021  00D796  D000               	nop2	
  8022  00D798                     
  8023                           ;INA260.c: 75:     return power;
  8024  00D798  C0B8  F01A         	movff	_power,?_Power_ReadRegister
  8025  00D79C  C0B9  F01B         	movff	_power+1,?_Power_ReadRegister+1
  8026  00D7A0  C0BA  F01C         	movff	_power+2,?_Power_ReadRegister+2
  8027  00D7A4  C0BB  F01D         	movff	_power+3,?_Power_ReadRegister+3
  8028  00D7A8  0012               	return		;funcret
  8029  00D7AA                     __end_of_Power_ReadRegister:
  8030                           	callstack 0
  8031                           
  8032 ;; *************** function ___wmul *****************
  8033 ;; Defined at:
  8034 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
  8035 ;; Parameters:    Size  Location     Type
  8036 ;;  multiplier      2    0[COMRAM] unsigned int 
  8037 ;;  multiplicand    2    2[COMRAM] unsigned int 
  8038 ;; Auto vars:     Size  Location     Type
  8039 ;;  product         2    4[COMRAM] unsigned int 
  8040 ;; Return value:  Size  Location     Type
  8041 ;;                  2    0[COMRAM] unsigned int 
  8042 ;; Registers used:
  8043 ;;		wreg, status,2, status,0, prodl, prodh
  8044 ;; Tracked objects:
  8045 ;;		On entry : 0/0
  8046 ;;		On exit  : 0/0
  8047 ;;		Unchanged: 0/0
  8048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8049 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8050 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8051 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8052 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8053 ;;Total ram usage:        6 bytes
  8054 ;; Hardware stack levels used:    1
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_Power_ReadRegister
  8059 ;;		_atoi
  8060 ;; This function uses a non-reentrant model
  8061 ;;
  8062                           
  8063                           	psect	text32
  8064  00C344                     __ptext32:
  8065                           	callstack 0
  8066  00C344                     ___wmul:
  8067                           	callstack 26
  8068  00C344  5001               	movf	___wmul@multiplier^0,w,c
  8069  00C346  0203               	mulwf	___wmul@multiplicand^0,c
  8070  00C348  CFF3 F005          	movff	prodl,___wmul@product
  8071  00C34C  CFF4 F006          	movff	prodh,___wmul@product+1
  8072  00C350  5001               	movf	___wmul@multiplier^0,w,c
  8073  00C352  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  8074  00C354  50F3               	movf	243,w,c
  8075  00C356  2606               	addwf	(___wmul@product+1)^0,f,c
  8076  00C358  5002               	movf	(___wmul@multiplier+1)^0,w,c
  8077  00C35A  0203               	mulwf	___wmul@multiplicand^0,c
  8078  00C35C  50F3               	movf	243,w,c
  8079  00C35E  2606               	addwf	(___wmul@product+1)^0,f,c
  8080  00C360  C005  F001         	movff	___wmul@product,?___wmul
  8081  00C364  C006  F002         	movff	___wmul@product+1,?___wmul+1
  8082  00C368  0012               	return		;funcret
  8083  00C36A                     __end_of___wmul:
  8084                           	callstack 0
  8085                           
  8086 ;; *************** function _Oled_WriteString *****************
  8087 ;; Defined at:
  8088 ;;		line 87 in file "OLED.c"
  8089 ;; Parameters:    Size  Location     Type
  8090 ;;  characters      2   32[COMRAM] PTR unsigned char 
  8091 ;;		 -> STR_8(11), STR_7(11), STR_6(9), power_str(6), 
  8092 ;;		 -> current_str(6), voltage_str(6), STR_2(4), STR_1(3), 
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8104 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8107 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8108 ;;Total ram usage:        2 bytes
  8109 ;; Hardware stack levels used:    1
  8110 ;; Hardware stack levels required when called:   11
  8111 ;; This function calls:
  8112 ;;		_Oled_WriteCharacter
  8113 ;; This function is called by:
  8114 ;;		_main
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118                           	psect	text33
  8119  00C8D4                     __ptext33:
  8120                           	callstack 0
  8121  00C8D4                     _Oled_WriteString:
  8122                           	callstack 19
  8123  00C8D4                     
  8124                           ;OLED.c: 88:     while (*characters) Oled_WriteCharacter(*characters++);
  8125  00C8D4  EF81  F064         	goto	l6062
  8126  00C8D8                     l6058:
  8127  00C8D8  C021  FFF6         	movff	Oled_WriteString@characters,tblptrl
  8128  00C8DC  C022  FFF7         	movff	Oled_WriteString@characters+1,tblptrh
  8129  00C8E0  0E00               	movlw	low (__mediumconst shr (0+16))
  8130  00C8E2  6EF8               	movwf	tblptru,c
  8131  00C8E4  0E0E               	movlw	(high __ramtop+-1)
  8132  00C8E6  64F7               	cpfsgt	tblptrh,c
  8133  00C8E8  D003               	bra	u5717
  8134  00C8EA  0008               	tblrd		*
  8135  00C8EC  50F5               	movf	tablat,w,c
  8136  00C8EE  D005               	bra	u5710
  8137  00C8F0                     u5717:
  8138  00C8F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  8139  00C8F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  8140  00C8F8  50EF               	movf	indf0,w,c
  8141  00C8FA                     u5710:
  8142  00C8FA  EC38  F065         	call	_Oled_WriteCharacter
  8143  00C8FE  4A21               	infsnz	Oled_WriteString@characters^0,f,c
  8144  00C900  2A22               	incf	(Oled_WriteString@characters+1)^0,f,c
  8145  00C902                     l6062:
  8146  00C902  C021  FFF6         	movff	Oled_WriteString@characters,tblptrl
  8147  00C906  C022  FFF7         	movff	Oled_WriteString@characters+1,tblptrh
  8148  00C90A  0E00               	movlw	low (__mediumconst shr (0+16))
  8149  00C90C  6EF8               	movwf	tblptru,c
  8150  00C90E  0E0E               	movlw	(high __ramtop+-1)
  8151  00C910  64F7               	cpfsgt	tblptrh,c
  8152  00C912  D003               	bra	u5727
  8153  00C914  0008               	tblrd		*
  8154  00C916  50F5               	movf	tablat,w,c
  8155  00C918  D005               	bra	u5720
  8156  00C91A                     u5727:
  8157  00C91A  CFF6 FFE9          	movff	tblptrl,fsr0l
  8158  00C91E  CFF7 FFEA          	movff	tblptrh,fsr0h
  8159  00C922  50EF               	movf	indf0,w,c
  8160  00C924                     u5720:
  8161  00C924  0900               	iorlw	0
  8162  00C926  A4D8               	btfss	status,2,c
  8163  00C928  EF98  F064         	goto	u5731
  8164  00C92C  EF9A  F064         	goto	u5730
  8165  00C930                     u5731:
  8166  00C930  EF6C  F064         	goto	l6058
  8167  00C934                     u5730:
  8168  00C934  0012               	return		;funcret
  8169  00C936                     __end_of_Oled_WriteString:
  8170                           	callstack 0
  8171                           
  8172 ;; *************** function _Oled_WriteCharacter *****************
  8173 ;; Defined at:
  8174 ;;		line 93 in file "OLED.c"
  8175 ;; Parameters:    Size  Location     Type
  8176 ;;  character       1    wreg     unsigned char 
  8177 ;; Auto vars:     Size  Location     Type
  8178 ;;  character       1   29[COMRAM] unsigned char 
  8179 ;;  i               2   30[COMRAM] int 
  8180 ;; Return value:  Size  Location     Type
  8181 ;;                  1    wreg      void 
  8182 ;; Registers used:
  8183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8184 ;; Tracked objects:
  8185 ;;		On entry : 0/0
  8186 ;;		On exit  : 0/0
  8187 ;;		Unchanged: 0/0
  8188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8189 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8190 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8191 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8192 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8193 ;;Total ram usage:        7 bytes
  8194 ;; Hardware stack levels used:    1
  8195 ;; Hardware stack levels required when called:   10
  8196 ;; This function calls:
  8197 ;;		_Oled_Data
  8198 ;; This function is called by:
  8199 ;;		_Oled_WriteString
  8200 ;; This function uses a non-reentrant model
  8201 ;;
  8202                           
  8203                           	psect	text34
  8204  00CA70                     __ptext34:
  8205                           	callstack 0
  8206  00CA70                     _Oled_WriteCharacter:
  8207                           	callstack 19
  8208                           
  8209                           ;incstack = 0
  8210                           ;Oled_WriteCharacter@character stored from wreg
  8211  00CA70  6E1E               	movwf	Oled_WriteCharacter@character^0,c
  8212  00CA72                     
  8213                           ;OLED.c: 94:     for (int i = 0; i < 5; i++) Oled_Data((ASCII[character - 0x20][i]));
  8214  00CA72  0E00               	movlw	0
  8215  00CA74  6E20               	movwf	(Oled_WriteCharacter@i+1)^0,c
  8216  00CA76  0E00               	movlw	0
  8217  00CA78  6E1F               	movwf	Oled_WriteCharacter@i^0,c
  8218  00CA7A                     l5914:
  8219  00CA7A  0E60               	movlw	96
  8220  00CA7C  6E1A               	movwf	??_Oled_WriteCharacter^0,c
  8221  00CA7E  0EFF               	movlw	255
  8222  00CA80  6E1B               	movwf	(??_Oled_WriteCharacter+1)^0,c
  8223  00CA82  501E               	movf	Oled_WriteCharacter@character^0,w,c
  8224  00CA84  0D05               	mullw	5
  8225  00CA86  0EE1               	movlw	low _ASCII
  8226  00CA88  6E1C               	movwf	(??_Oled_WriteCharacter+2)^0,c
  8227  00CA8A  0EFD               	movlw	high _ASCII
  8228  00CA8C  6E1D               	movwf	(??_Oled_WriteCharacter+3)^0,c
  8229  00CA8E  50F3               	movf	243,w,c
  8230  00CA90  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8231  00CA92  50F4               	movf	244,w,c
  8232  00CA94  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8233  00CA96  501F               	movf	Oled_WriteCharacter@i^0,w,c
  8234  00CA98  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8235  00CA9A  5020               	movf	(Oled_WriteCharacter@i+1)^0,w,c
  8236  00CA9C  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8237  00CA9E  501A               	movf	??_Oled_WriteCharacter^0,w,c
  8238  00CAA0  261C               	addwf	(??_Oled_WriteCharacter+2)^0,f,c
  8239  00CAA2  501B               	movf	(??_Oled_WriteCharacter+1)^0,w,c
  8240  00CAA4  221D               	addwfc	(??_Oled_WriteCharacter+3)^0,f,c
  8241  00CAA6  C01C  FFF6         	movff	??_Oled_WriteCharacter+2,tblptrl
  8242  00CAAA  C01D  FFF7         	movff	??_Oled_WriteCharacter+3,tblptrh
  8243  00CAAE                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  8244  00CAAE  6AF8               	clrf	tblptru,c
  8245  00CAB0                     	endif
  8246  00CAB0                     	if	0	;tblptru may be non-zero
  8247  00CAB0                     	endif
  8248  00CAB0  0008               	tblrd		*
  8249  00CAB2  50F5               	movf	tablat,w,c
  8250  00CAB4  EC5B  F061         	call	_Oled_Data
  8251  00CAB8  4A1F               	infsnz	Oled_WriteCharacter@i^0,f,c
  8252  00CABA  2A20               	incf	(Oled_WriteCharacter@i+1)^0,f,c
  8253  00CABC  BE20               	btfsc	(Oled_WriteCharacter@i+1)^0,7,c
  8254  00CABE  EF6A  F065         	goto	u5531
  8255  00CAC2  5020               	movf	(Oled_WriteCharacter@i+1)^0,w,c
  8256  00CAC4  E109               	bnz	u5530
  8257  00CAC6  0E05               	movlw	5
  8258  00CAC8  5C1F               	subwf	Oled_WriteCharacter@i^0,w,c
  8259  00CACA  A0D8               	btfss	status,0,c
  8260  00CACC  EF6A  F065         	goto	u5531
  8261  00CAD0  EF6C  F065         	goto	u5530
  8262  00CAD4                     u5531:
  8263  00CAD4  EF3D  F065         	goto	l5914
  8264  00CAD8                     u5530:
  8265  00CAD8                     
  8266                           ;OLED.c: 95:     Oled_Data(0x00);
  8267  00CAD8  0E00               	movlw	0
  8268  00CADA  EC5B  F061         	call	_Oled_Data
  8269  00CADE  0012               	return		;funcret
  8270  00CAE0                     __end_of_Oled_WriteCharacter:
  8271                           	callstack 0
  8272                           
  8273 ;; *************** function _Oled_SelectPage *****************
  8274 ;; Defined at:
  8275 ;;		line 138 in file "OLED.c"
  8276 ;; Parameters:    Size  Location     Type
  8277 ;;  page_num        1    wreg     unsigned char 
  8278 ;; Auto vars:     Size  Location     Type
  8279 ;;  page_num        1   25[COMRAM] unsigned char 
  8280 ;;  Result          1   26[COMRAM] unsigned char 
  8281 ;; Return value:  Size  Location     Type
  8282 ;;                  1    wreg      void 
  8283 ;; Registers used:
  8284 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8285 ;; Tracked objects:
  8286 ;;		On entry : 0/0
  8287 ;;		On exit  : 0/0
  8288 ;;		Unchanged: 0/0
  8289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8290 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8291 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8292 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8293 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8294 ;;Total ram usage:        2 bytes
  8295 ;; Hardware stack levels used:    1
  8296 ;; Hardware stack levels required when called:   10
  8297 ;; This function calls:
  8298 ;;		_Oled_Command
  8299 ;; This function is called by:
  8300 ;;		_main
  8301 ;;		_Oled_ClearLine
  8302 ;; This function uses a non-reentrant model
  8303 ;;
  8304                           
  8305                           	psect	text35
  8306  00C23C                     __ptext35:
  8307                           	callstack 0
  8308  00C23C                     _Oled_SelectPage:
  8309                           	callstack 20
  8310                           
  8311                           ;incstack = 0
  8312                           ;Oled_SelectPage@page_num stored from wreg
  8313  00C23C  6E1A               	movwf	Oled_SelectPage@page_num^0,c
  8314  00C23E                     
  8315                           ;OLED.c: 139:     uint8_t Result = 0xB0 | page_num;
  8316  00C23E  501A               	movf	Oled_SelectPage@page_num^0,w,c
  8317  00C240  09B0               	iorlw	176
  8318  00C242  6E1B               	movwf	Oled_SelectPage@Result^0,c
  8319  00C244                     
  8320                           ;OLED.c: 140:     Oled_Command(Result);
  8321  00C244  501B               	movf	Oled_SelectPage@Result^0,w,c
  8322  00C246  EC6C  F061         	call	_Oled_Command
  8323  00C24A                     
  8324                           ;OLED.c: 141:     Oled_Command(0x00);
  8325  00C24A  0E00               	movlw	0
  8326  00C24C  EC6C  F061         	call	_Oled_Command
  8327  00C250                     
  8328                           ;OLED.c: 142:     Oled_Command(0x10);
  8329  00C250  0E10               	movlw	16
  8330  00C252  EC6C  F061         	call	_Oled_Command
  8331  00C256  0012               	return		;funcret
  8332  00C258                     __end_of_Oled_SelectPage:
  8333                           	callstack 0
  8334                           
  8335 ;; *************** function _Oled_Init *****************
  8336 ;; Defined at:
  8337 ;;		line 55 in file "OLED.c"
  8338 ;; Parameters:    Size  Location     Type
  8339 ;;		None
  8340 ;; Auto vars:     Size  Location     Type
  8341 ;;		None
  8342 ;; Return value:  Size  Location     Type
  8343 ;;                  1    wreg      void 
  8344 ;; Registers used:
  8345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8346 ;; Tracked objects:
  8347 ;;		On entry : 0/0
  8348 ;;		On exit  : 0/0
  8349 ;;		Unchanged: 0/0
  8350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8351 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8352 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8353 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8354 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8355 ;;Total ram usage:        0 bytes
  8356 ;; Hardware stack levels used:    1
  8357 ;; Hardware stack levels required when called:   10
  8358 ;; This function calls:
  8359 ;;		_Oled_Command
  8360 ;; This function is called by:
  8361 ;;		_main
  8362 ;; This function uses a non-reentrant model
  8363 ;;
  8364                           
  8365                           	psect	text36
  8366  00CC64                     __ptext36:
  8367                           	callstack 0
  8368  00CC64                     _Oled_Init:
  8369                           	callstack 20
  8370  00CC64                     
  8371                           ;OLED.c: 57:     Oled_Command(0xAE);
  8372  00CC64  0EAE               	movlw	174
  8373  00CC66  EC6C  F061         	call	_Oled_Command
  8374                           
  8375                           ;OLED.c: 58:     Oled_Command(0xD5);
  8376  00CC6A  0ED5               	movlw	213
  8377  00CC6C  EC6C  F061         	call	_Oled_Command
  8378                           
  8379                           ;OLED.c: 59:     Oled_Command(0x80);
  8380  00CC70  0E80               	movlw	128
  8381  00CC72  EC6C  F061         	call	_Oled_Command
  8382                           
  8383                           ;OLED.c: 60:     Oled_Command(0xA8);
  8384  00CC76  0EA8               	movlw	168
  8385  00CC78  EC6C  F061         	call	_Oled_Command
  8386                           
  8387                           ;OLED.c: 61:     Oled_Command(64 - 1);
  8388  00CC7C  0E3F               	movlw	63
  8389  00CC7E  EC6C  F061         	call	_Oled_Command
  8390                           
  8391                           ;OLED.c: 62:     Oled_Command(0xD3);
  8392  00CC82  0ED3               	movlw	211
  8393  00CC84  EC6C  F061         	call	_Oled_Command
  8394                           
  8395                           ;OLED.c: 63:     Oled_Command(0x00);
  8396  00CC88  0E00               	movlw	0
  8397  00CC8A  EC6C  F061         	call	_Oled_Command
  8398                           
  8399                           ;OLED.c: 64:     Oled_Command(0x40 | 0x00);
  8400  00CC8E  0E40               	movlw	64
  8401  00CC90  EC6C  F061         	call	_Oled_Command
  8402                           
  8403                           ;OLED.c: 65:     Oled_Command(0x8D);
  8404  00CC94  0E8D               	movlw	141
  8405  00CC96  EC6C  F061         	call	_Oled_Command
  8406                           
  8407                           ;OLED.c: 66:     Oled_Command(0x14);
  8408  00CC9A  0E14               	movlw	20
  8409  00CC9C  EC6C  F061         	call	_Oled_Command
  8410                           
  8411                           ;OLED.c: 67:     Oled_Command(0x20);
  8412  00CCA0  0E20               	movlw	32
  8413  00CCA2  EC6C  F061         	call	_Oled_Command
  8414                           
  8415                           ;OLED.c: 68:     Oled_Command(0x00);
  8416  00CCA6  0E00               	movlw	0
  8417  00CCA8  EC6C  F061         	call	_Oled_Command
  8418                           
  8419                           ;OLED.c: 69:     Oled_Command(0xA0 | 0x01);
  8420  00CCAC  0EA1               	movlw	161
  8421  00CCAE  EC6C  F061         	call	_Oled_Command
  8422                           
  8423                           ;OLED.c: 70:     Oled_Command(0xC8);
  8424  00CCB2  0EC8               	movlw	200
  8425  00CCB4  EC6C  F061         	call	_Oled_Command
  8426                           
  8427                           ;OLED.c: 71:     Oled_Command(0xDA);
  8428  00CCB8  0EDA               	movlw	218
  8429  00CCBA  EC6C  F061         	call	_Oled_Command
  8430                           
  8431                           ;OLED.c: 72:     Oled_Command(0x02);
  8432  00CCBE  0E02               	movlw	2
  8433  00CCC0  EC6C  F061         	call	_Oled_Command
  8434                           
  8435                           ;OLED.c: 73:     Oled_Command(0x81);
  8436  00CCC4  0E81               	movlw	129
  8437  00CCC6  EC6C  F061         	call	_Oled_Command
  8438                           
  8439                           ;OLED.c: 74:     Oled_Command(0x8F);
  8440  00CCCA  0E8F               	movlw	143
  8441  00CCCC  EC6C  F061         	call	_Oled_Command
  8442                           
  8443                           ;OLED.c: 75:     Oled_Command(0xD9);
  8444  00CCD0  0ED9               	movlw	217
  8445  00CCD2  EC6C  F061         	call	_Oled_Command
  8446                           
  8447                           ;OLED.c: 76:     Oled_Command(0xF1);
  8448  00CCD6  0EF1               	movlw	241
  8449  00CCD8  EC6C  F061         	call	_Oled_Command
  8450                           
  8451                           ;OLED.c: 77:     Oled_Command(0xDB);
  8452  00CCDC  0EDB               	movlw	219
  8453  00CCDE  EC6C  F061         	call	_Oled_Command
  8454                           
  8455                           ;OLED.c: 78:     Oled_Command(0x40);
  8456  00CCE2  0E40               	movlw	64
  8457  00CCE4  EC6C  F061         	call	_Oled_Command
  8458                           
  8459                           ;OLED.c: 79:     Oled_Command(0xA4);
  8460  00CCE8  0EA4               	movlw	164
  8461  00CCEA  EC6C  F061         	call	_Oled_Command
  8462                           
  8463                           ;OLED.c: 80:     Oled_Command(0xA6);
  8464  00CCEE  0EA6               	movlw	166
  8465  00CCF0  EC6C  F061         	call	_Oled_Command
  8466                           
  8467                           ;OLED.c: 81:     Oled_Command(0x2E);
  8468  00CCF4  0E2E               	movlw	46
  8469  00CCF6  EC6C  F061         	call	_Oled_Command
  8470                           
  8471                           ;OLED.c: 82:     Oled_Command(0xAF);
  8472  00CCFA  0EAF               	movlw	175
  8473  00CCFC  EC6C  F061         	call	_Oled_Command
  8474  00CD00  0012               	return		;funcret
  8475  00CD02                     __end_of_Oled_Init:
  8476                           	callstack 0
  8477                           
  8478 ;; *************** function _Oled_Command *****************
  8479 ;; Defined at:
  8480 ;;		line 29 in file "OLED.c"
  8481 ;; Parameters:    Size  Location     Type
  8482 ;;  command         1    wreg     unsigned char 
  8483 ;; Auto vars:     Size  Location     Type
  8484 ;;  command         1   22[COMRAM] unsigned char 
  8485 ;;  data_I2C        2   23[COMRAM] unsigned char [2]
  8486 ;; Return value:  Size  Location     Type
  8487 ;;                  1    wreg      void 
  8488 ;; Registers used:
  8489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8490 ;; Tracked objects:
  8491 ;;		On entry : 0/0
  8492 ;;		On exit  : 0/0
  8493 ;;		Unchanged: 0/0
  8494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8496 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8498 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8499 ;;Total ram usage:        3 bytes
  8500 ;; Hardware stack levels used:    1
  8501 ;; Hardware stack levels required when called:    9
  8502 ;; This function calls:
  8503 ;;		_I2C_WriteNBytes
  8504 ;; This function is called by:
  8505 ;;		_Oled_Init
  8506 ;;		_Oled_SelectPage
  8507 ;;		_Oled_SetContrast
  8508 ;; This function uses a non-reentrant model
  8509 ;;
  8510                           
  8511                           	psect	text37
  8512  00C2D8                     __ptext37:
  8513                           	callstack 0
  8514  00C2D8                     _Oled_Command:
  8515                           	callstack 20
  8516                           
  8517                           ;incstack = 0
  8518                           ;Oled_Command@command stored from wreg
  8519  00C2D8  6E17               	movwf	Oled_Command@command^0,c
  8520  00C2DA                     
  8521                           ;OLED.c: 30:     uint8_t data_I2C[2];;OLED.c: 32:     data_I2C[0] = 0x00;
  8522  00C2DA  0E00               	movlw	0
  8523  00C2DC  6E18               	movwf	Oled_Command@data_I2C^0,c
  8524  00C2DE                     
  8525                           ;OLED.c: 33:     data_I2C[1] = command;
  8526  00C2DE  C017  F019         	movff	Oled_Command@command,Oled_Command@data_I2C+1
  8527  00C2E2                     
  8528                           ;OLED.c: 36:     I2C_WriteNBytes(0x3C, data_I2C, 2);
  8529  00C2E2  0E18               	movlw	low Oled_Command@data_I2C
  8530  00C2E4  6E12               	movwf	I2C_WriteNBytes@data^0,c
  8531  00C2E6  0E00               	movlw	high Oled_Command@data_I2C
  8532  00C2E8  6E13               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8533  00C2EA  0E00               	movlw	0
  8534  00C2EC  6E15               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8535  00C2EE  0E02               	movlw	2
  8536  00C2F0  6E14               	movwf	I2C_WriteNBytes@len^0,c
  8537  00C2F2  0E3C               	movlw	60
  8538  00C2F4  ECB0  F063         	call	_I2C_WriteNBytes
  8539  00C2F8  0012               	return		;funcret
  8540  00C2FA                     __end_of_Oled_Command:
  8541                           	callstack 0
  8542                           
  8543 ;; *************** function _Oled_Clear *****************
  8544 ;; Defined at:
  8545 ;;		line 105 in file "OLED.c"
  8546 ;; Parameters:    Size  Location     Type
  8547 ;;		None
  8548 ;; Auto vars:     Size  Location     Type
  8549 ;;  i               2   25[COMRAM] int 
  8550 ;; Return value:  Size  Location     Type
  8551 ;;                  1    wreg      void 
  8552 ;; Registers used:
  8553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8554 ;; Tracked objects:
  8555 ;;		On entry : 0/0
  8556 ;;		On exit  : 0/0
  8557 ;;		Unchanged: 0/0
  8558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8559 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8560 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8562 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8563 ;;Total ram usage:        2 bytes
  8564 ;; Hardware stack levels used:    1
  8565 ;; Hardware stack levels required when called:   10
  8566 ;; This function calls:
  8567 ;;		_Oled_Data
  8568 ;; This function is called by:
  8569 ;;		_main
  8570 ;; This function uses a non-reentrant model
  8571 ;;
  8572                           
  8573                           	psect	text38
  8574  00C46E                     __ptext38:
  8575                           	callstack 0
  8576  00C46E                     _Oled_Clear:
  8577                           	callstack 20
  8578  00C46E                     
  8579                           ;OLED.c: 106:     int i = 0;
  8580  00C46E  0E00               	movlw	0
  8581  00C470  6E1B               	movwf	(Oled_Clear@i+1)^0,c
  8582  00C472  0E00               	movlw	0
  8583  00C474  6E1A               	movwf	Oled_Clear@i^0,c
  8584  00C476                     l6042:
  8585                           
  8586                           ;OLED.c: 110:         Oled_Data(0x00);
  8587  00C476  0E00               	movlw	0
  8588  00C478  EC5B  F061         	call	_Oled_Data
  8589  00C47C                     
  8590                           ;OLED.c: 111:     }
  8591  00C47C  4A1A               	infsnz	Oled_Clear@i^0,f,c
  8592  00C47E  2A1B               	incf	(Oled_Clear@i+1)^0,f,c
  8593  00C480  BE1B               	btfsc	(Oled_Clear@i+1)^0,7,c
  8594  00C482  EF4A  F062         	goto	u5701
  8595  00C486  0E04               	movlw	4
  8596  00C488  5C1B               	subwf	(Oled_Clear@i+1)^0,w,c
  8597  00C48A  A0D8               	btfss	status,0,c
  8598  00C48C  EF4A  F062         	goto	u5701
  8599  00C490  EF4C  F062         	goto	u5700
  8600  00C494                     u5701:
  8601  00C494  EF3B  F062         	goto	l6042
  8602  00C498                     u5700:
  8603  00C498  0012               	return		;funcret
  8604  00C49A                     __end_of_Oled_Clear:
  8605                           	callstack 0
  8606                           
  8607 ;; *************** function _Oled_Data *****************
  8608 ;; Defined at:
  8609 ;;		line 42 in file "OLED.c"
  8610 ;; Parameters:    Size  Location     Type
  8611 ;;  value           1    wreg     unsigned char 
  8612 ;; Auto vars:     Size  Location     Type
  8613 ;;  value           1   22[COMRAM] unsigned char 
  8614 ;;  data_I2C        2   23[COMRAM] unsigned char [2]
  8615 ;; Return value:  Size  Location     Type
  8616 ;;                  1    wreg      void 
  8617 ;; Registers used:
  8618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8619 ;; Tracked objects:
  8620 ;;		On entry : 0/0
  8621 ;;		On exit  : 0/0
  8622 ;;		Unchanged: 0/0
  8623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8625 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8627 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8628 ;;Total ram usage:        3 bytes
  8629 ;; Hardware stack levels used:    1
  8630 ;; Hardware stack levels required when called:    9
  8631 ;; This function calls:
  8632 ;;		_I2C_WriteNBytes
  8633 ;; This function is called by:
  8634 ;;		_Oled_WriteCharacter
  8635 ;;		_Oled_Clear
  8636 ;;		_Oled_ClearLine
  8637 ;; This function uses a non-reentrant model
  8638 ;;
  8639                           
  8640                           	psect	text39
  8641  00C2B6                     __ptext39:
  8642                           	callstack 0
  8643  00C2B6                     _Oled_Data:
  8644                           	callstack 19
  8645                           
  8646                           ;incstack = 0
  8647                           ;Oled_Data@value stored from wreg
  8648  00C2B6  6E17               	movwf	Oled_Data@value^0,c
  8649  00C2B8                     
  8650                           ;OLED.c: 43:     uint8_t data_I2C[2];;OLED.c: 45:     data_I2C[0] = 0x40;
  8651  00C2B8  0E40               	movlw	64
  8652  00C2BA  6E18               	movwf	Oled_Data@data_I2C^0,c
  8653  00C2BC                     
  8654                           ;OLED.c: 46:     data_I2C[1] = value;
  8655  00C2BC  C017  F019         	movff	Oled_Data@value,Oled_Data@data_I2C+1
  8656  00C2C0                     
  8657                           ;OLED.c: 49:     I2C_WriteNBytes(0x3C, data_I2C, 2);
  8658  00C2C0  0E18               	movlw	low Oled_Data@data_I2C
  8659  00C2C2  6E12               	movwf	I2C_WriteNBytes@data^0,c
  8660  00C2C4  0E00               	movlw	high Oled_Data@data_I2C
  8661  00C2C6  6E13               	movwf	(I2C_WriteNBytes@data+1)^0,c
  8662  00C2C8  0E00               	movlw	0
  8663  00C2CA  6E15               	movwf	(I2C_WriteNBytes@len+1)^0,c
  8664  00C2CC  0E02               	movlw	2
  8665  00C2CE  6E14               	movwf	I2C_WriteNBytes@len^0,c
  8666  00C2D0  0E3C               	movlw	60
  8667  00C2D2  ECB0  F063         	call	_I2C_WriteNBytes
  8668  00C2D6  0012               	return		;funcret
  8669  00C2D8                     __end_of_Oled_Data:
  8670                           	callstack 0
  8671                           
  8672 ;; *************** function _I2C_WriteNBytes *****************
  8673 ;; Defined at:
  8674 ;;		line 111 in file "mcc_generated_files/examples/i2c_master_example.c"
  8675 ;; Parameters:    Size  Location     Type
  8676 ;;  address         1    wreg     unsigned char 
  8677 ;;  data            2   17[COMRAM] PTR unsigned char 
  8678 ;;		 -> Oled_Data@data_I2C(2), Oled_Command@data_I2C(2), 
  8679 ;;  len             2   19[COMRAM] unsigned int 
  8680 ;; Auto vars:     Size  Location     Type
  8681 ;;  address         1   21[COMRAM] unsigned char 
  8682 ;; Return value:  Size  Location     Type
  8683 ;;                  1    wreg      void 
  8684 ;; Registers used:
  8685 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8686 ;; Tracked objects:
  8687 ;;		On entry : 0/0
  8688 ;;		On exit  : 0/0
  8689 ;;		Unchanged: 0/0
  8690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8691 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8692 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8693 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8694 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8695 ;;Total ram usage:        5 bytes
  8696 ;; Hardware stack levels used:    1
  8697 ;; Hardware stack levels required when called:    8
  8698 ;; This function calls:
  8699 ;;		_I2C_Close
  8700 ;;		_I2C_MasterWrite
  8701 ;;		_I2C_Open
  8702 ;;		_I2C_SetAddressNackCallback
  8703 ;;		_I2C_SetBuffer
  8704 ;; This function is called by:
  8705 ;;		_Oled_Command
  8706 ;;		_Oled_Data
  8707 ;; This function uses a non-reentrant model
  8708 ;;
  8709                           
  8710                           	psect	text40
  8711  00C760                     __ptext40:
  8712                           	callstack 0
  8713  00C760                     _I2C_WriteNBytes:
  8714                           	callstack 19
  8715                           
  8716                           ;incstack = 0
  8717                           ;I2C_WriteNBytes@address stored from wreg
  8718  00C760  6E16               	movwf	I2C_WriteNBytes@address^0,c
  8719  00C762                     l5424:
  8720  00C762  5016               	movf	I2C_WriteNBytes@address^0,w,c
  8721  00C764  ECEB  F065         	call	_I2C_Open
  8722  00C768  0900               	iorlw	0
  8723  00C76A  B4D8               	btfsc	status,2,c
  8724  00C76C  EFBA  F063         	goto	u4711
  8725  00C770  EFBC  F063         	goto	u4710
  8726  00C774                     u4711:
  8727  00C774  EFB1  F063         	goto	l5424
  8728  00C778                     u4710:
  8729  00C778                     
  8730                           ;mcc_generated_files/examples/i2c_master_example.c: 114:     I2C_SetBuffer(data,len);
  8731  00C778  C012  F001         	movff	I2C_WriteNBytes@data,I2C_SetBuffer@buffer
  8732  00C77C  C013  F002         	movff	I2C_WriteNBytes@data+1,I2C_SetBuffer@buffer+1
  8733  00C780  C014  F003         	movff	I2C_WriteNBytes@len,I2C_SetBuffer@bufferSize
  8734  00C784  C015  F004         	movff	I2C_WriteNBytes@len+1,I2C_SetBuffer@bufferSize+1
  8735  00C788  EC7D  F061         	call	_I2C_SetBuffer	;wreg free
  8736  00C78C                     
  8737                           ;mcc_generated_files/examples/i2c_master_example.c: 115:     I2C_SetAddressNackCallback(
      +                          ((void*)0),((void*)0));
  8738  00C78C  0E00               	movlw	0
  8739  00C78E  6E06               	movwf	I2C_SetAddressNackCallback@cb^0,c
  8740  00C790  0E00               	movlw	0
  8741  00C792  6E07               	movwf	(I2C_SetAddressNackCallback@cb+1)^0,c
  8742  00C794  0E00               	movlw	0
  8743  00C796  6E08               	movwf	I2C_SetAddressNackCallback@ptr^0,c
  8744  00C798  0E00               	movlw	0
  8745  00C79A  6E09               	movwf	(I2C_SetAddressNackCallback@ptr+1)^0,c
  8746  00C79C  EC12  F061         	call	_I2C_SetAddressNackCallback	;wreg free
  8747  00C7A0                     
  8748                           ;mcc_generated_files/examples/i2c_master_example.c: 116:     I2C_MasterWrite();
  8749  00C7A0  ECB1  F060         	call	_I2C_MasterWrite	;wreg free
  8750  00C7A4                     l5432:
  8751  00C7A4  ECC9  F061         	call	_I2C_Close	;wreg free
  8752  00C7A8  06E8               	decf	wreg,f,c
  8753  00C7AA  B4D8               	btfsc	status,2,c
  8754  00C7AC  EFDA  F063         	goto	u4721
  8755  00C7B0  EFDC  F063         	goto	u4720
  8756  00C7B4                     u4721:
  8757  00C7B4  EFD2  F063         	goto	l5432
  8758  00C7B8                     u4720:
  8759  00C7B8  0012               	return		;funcret
  8760  00C7BA                     __end_of_I2C_WriteNBytes:
  8761                           	callstack 0
  8762                           
  8763 ;; *************** function _I2C_SetAddressNackCallback *****************
  8764 ;; Defined at:
  8765 ;;		line 283 in file "mcc_generated_files/i2c_master.c"
  8766 ;; Parameters:    Size  Location     Type
  8767 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
  8768 ;;		 -> Absolute function(1), 
  8769 ;;  ptr             2    7[COMRAM] PTR void 
  8770 ;;		 -> NULL(0), 
  8771 ;; Auto vars:     Size  Location     Type
  8772 ;;		None
  8773 ;; Return value:  Size  Location     Type
  8774 ;;                  1    wreg      void 
  8775 ;; Registers used:
  8776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8777 ;; Tracked objects:
  8778 ;;		On entry : 0/0
  8779 ;;		On exit  : 0/0
  8780 ;;		Unchanged: 0/0
  8781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8782 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8783 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8785 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8786 ;;Total ram usage:        4 bytes
  8787 ;; Hardware stack levels used:    1
  8788 ;; Hardware stack levels required when called:    1
  8789 ;; This function calls:
  8790 ;;		_I2C_SetCallback
  8791 ;; This function is called by:
  8792 ;;		_I2C_WriteNBytes
  8793 ;;		_I2C_Read1ByteRegister
  8794 ;;		_I2C_Read2ByteRegister
  8795 ;;		_I2C_Write1ByteRegister
  8796 ;;		_I2C_Write2ByteRegister
  8797 ;;		_I2C_ReadDataBlock
  8798 ;; This function uses a non-reentrant model
  8799 ;;
  8800                           
  8801                           	psect	text41
  8802  00C224                     __ptext41:
  8803                           	callstack 0
  8804  00C224                     _I2C_SetAddressNackCallback:
  8805                           	callstack 25
  8806  00C224                     
  8807                           ;mcc_generated_files/i2c_master.c: 283: void I2C_SetAddressNackCallback(i2c_callback_t c
      +                          b, void *ptr);mcc_generated_files/i2c_master.c: 284: {;mcc_generated_files/i2c_master.c:
      +                           285:     I2C_SetCallback(I2C_ADDR_NACK, cb, ptr);
  8808  00C224  C006  F001         	movff	I2C_SetAddressNackCallback@cb,I2C_SetCallback@cb
  8809  00C228  C007  F002         	movff	I2C_SetAddressNackCallback@cb+1,I2C_SetCallback@cb+1
  8810  00C22C  C008  F003         	movff	I2C_SetAddressNackCallback@ptr,I2C_SetCallback@ptr
  8811  00C230  C009  F004         	movff	I2C_SetAddressNackCallback@ptr+1,I2C_SetCallback@ptr+1
  8812  00C234  0E02               	movlw	2
  8813  00C236  EC70  F065         	call	_I2C_SetCallback
  8814  00C23A  0012               	return		;funcret
  8815  00C23C                     __end_of_I2C_SetAddressNackCallback:
  8816                           	callstack 0
  8817                           
  8818 ;; *************** function _I2C_Open *****************
  8819 ;; Defined at:
  8820 ;;		line 176 in file "mcc_generated_files/i2c_master.c"
  8821 ;; Parameters:    Size  Location     Type
  8822 ;;  address         1    wreg     unsigned char 
  8823 ;; Auto vars:     Size  Location     Type
  8824 ;;  address         1    0[COMRAM] unsigned char 
  8825 ;;  returnValue     1    1[COMRAM] enum E353
  8826 ;; Return value:  Size  Location     Type
  8827 ;;                  1    wreg      enum E353
  8828 ;; Registers used:
  8829 ;;		wreg, status,2, status,0, cstack
  8830 ;; Tracked objects:
  8831 ;;		On entry : 0/0
  8832 ;;		On exit  : 0/0
  8833 ;;		Unchanged: 0/0
  8834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8835 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8836 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8837 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8838 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8839 ;;Total ram usage:        2 bytes
  8840 ;; Hardware stack levels used:    1
  8841 ;; Hardware stack levels required when called:    1
  8842 ;; This function calls:
  8843 ;;		_I2C_MasterClearIrq
  8844 ;;		_I2C_MasterOpen
  8845 ;; This function is called by:
  8846 ;;		_I2C_WriteNBytes
  8847 ;;		_I2C_Read1ByteRegister
  8848 ;;		_I2C_Read2ByteRegister
  8849 ;;		_I2C_Write1ByteRegister
  8850 ;;		_I2C_Write2ByteRegister
  8851 ;;		_I2C_ReadNBytes
  8852 ;;		_I2C_ReadDataBlock
  8853 ;; This function uses a non-reentrant model
  8854 ;;
  8855                           
  8856                           	psect	text42
  8857  00CBD6                     __ptext42:
  8858                           	callstack 0
  8859  00CBD6                     _I2C_Open:
  8860                           	callstack 25
  8861                           
  8862                           ;incstack = 0
  8863                           ;I2C_Open@address stored from wreg
  8864  00CBD6  6E01               	movwf	I2C_Open@address^0,c
  8865  00CBD8                     
  8866                           ;mcc_generated_files/i2c_master.c: 176: i2c_error_t I2C_Open(i2c_address_t address);mcc_
      +                          generated_files/i2c_master.c: 177: {;mcc_generated_files/i2c_master.c: 178:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  8867  00CBD8  0E01               	movlw	1
  8868  00CBDA  6E02               	movwf	I2C_Open@returnValue^0,c
  8869  00CBDC                     
  8870                           ;mcc_generated_files/i2c_master.c: 180:     if(!I2C_Status.inUse)
  8871  00CBDC  0101               	movlb	1	; () banked
  8872  00CBDE  B573               	btfsc	(_I2C_Status+35)& (0+255),2,b
  8873  00CBE0  EFF4  F065         	goto	u3691
  8874  00CBE4  EFF6  F065         	goto	u3690
  8875  00CBE8                     u3691:
  8876  00CBE8  EF30  F066         	goto	l4846
  8877  00CBEC                     u3690:
  8878  00CBEC                     
  8879                           ; BSR set to: 1
  8880                           ;mcc_generated_files/i2c_master.c: 181:     {;mcc_generated_files/i2c_master.c: 182:    
      +                               I2C_Status.address = address;
  8881  00CBEC  C001  F16C         	movff	I2C_Open@address,_I2C_Status+28
  8882  00CBF0                     
  8883                           ; BSR set to: 1
  8884                           ;mcc_generated_files/i2c_master.c: 183:         I2C_Status.busy = 0;
  8885  00CBF0  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
  8886  00CBF2                     
  8887                           ; BSR set to: 1
  8888                           ;mcc_generated_files/i2c_master.c: 184:         I2C_Status.inUse = 1;
  8889  00CBF2  8573               	bsf	(_I2C_Status+35)& (0+255),2,b
  8890  00CBF4                     
  8891                           ; BSR set to: 1
  8892                           ;mcc_generated_files/i2c_master.c: 185:         I2C_Status.addressNackCheck = 0;
  8893  00CBF4  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
  8894  00CBF6                     
  8895                           ; BSR set to: 1
  8896                           ;mcc_generated_files/i2c_master.c: 186:         I2C_Status.state = I2C_RESET;
  8897  00CBF6  0E0E               	movlw	14
  8898  00CBF8  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  8899  00CBFA                     
  8900                           ; BSR set to: 1
  8901                           ;mcc_generated_files/i2c_master.c: 187:         I2C_Status.time_out_value = 500;
  8902  00CBFA  0E01               	movlw	1
  8903  00CBFC  6F6B               	movwf	(_I2C_Status+27)& (0+255),b
  8904  00CBFE  0EF4               	movlw	244
  8905  00CC00  6F6A               	movwf	(_I2C_Status+26)& (0+255),b
  8906  00CC02                     
  8907                           ; BSR set to: 1
  8908                           ;mcc_generated_files/i2c_master.c: 188:         I2C_Status.bufferFree = 1;
  8909  00CC02  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
  8910  00CC04                     
  8911                           ; BSR set to: 1
  8912                           ;mcc_generated_files/i2c_master.c: 191:         I2C_Status.callbackTable[I2C_DATA_COMPLE
      +                          TE]=I2C_CallbackReturnStop;
  8913  00CC04  0EEA               	movlw	low _I2C_CallbackReturnStop
  8914  00CC06  6F50               	movwf	_I2C_Status& (0+255),b
  8915  00CC08  0EC0               	movlw	high _I2C_CallbackReturnStop
  8916  00CC0A  6F51               	movwf	(_I2C_Status+1)& (0+255),b
  8917  00CC0C                     
  8918                           ; BSR set to: 1
  8919                           ;mcc_generated_files/i2c_master.c: 192:         I2C_Status.callbackPayload[I2C_DATA_COMP
      +                          LETE] = ((void*)0);
  8920  00CC0C  0E00               	movlw	0
  8921  00CC0E  6F5C               	movwf	(_I2C_Status+12)& (0+255),b
  8922  00CC10  0E00               	movlw	0
  8923  00CC12  6F5D               	movwf	(_I2C_Status+13)& (0+255),b
  8924  00CC14                     
  8925                           ; BSR set to: 1
  8926                           ;mcc_generated_files/i2c_master.c: 193:         I2C_Status.callbackTable[I2C_WRITE_COLLI
      +                          SION]=I2C_CallbackReturnStop;
  8927  00CC14  0EEA               	movlw	low _I2C_CallbackReturnStop
  8928  00CC16  6F52               	movwf	(_I2C_Status+2)& (0+255),b
  8929  00CC18  0EC0               	movlw	high _I2C_CallbackReturnStop
  8930  00CC1A  6F53               	movwf	(_I2C_Status+3)& (0+255),b
  8931  00CC1C                     
  8932                           ; BSR set to: 1
  8933                           ;mcc_generated_files/i2c_master.c: 194:         I2C_Status.callbackPayload[I2C_WRITE_COL
      +                          LISION] = ((void*)0);
  8934  00CC1C  0E00               	movlw	0
  8935  00CC1E  6F5E               	movwf	(_I2C_Status+14)& (0+255),b
  8936  00CC20  0E00               	movlw	0
  8937  00CC22  6F5F               	movwf	(_I2C_Status+15)& (0+255),b
  8938  00CC24                     
  8939                           ; BSR set to: 1
  8940                           ;mcc_generated_files/i2c_master.c: 195:         I2C_Status.callbackTable[I2C_ADDR_NACK]=
      +                          I2C_CallbackReturnStop;
  8941  00CC24  0EEA               	movlw	low _I2C_CallbackReturnStop
  8942  00CC26  6F54               	movwf	(_I2C_Status+4)& (0+255),b
  8943  00CC28  0EC0               	movlw	high _I2C_CallbackReturnStop
  8944  00CC2A  6F55               	movwf	(_I2C_Status+5)& (0+255),b
  8945  00CC2C                     
  8946                           ; BSR set to: 1
  8947                           ;mcc_generated_files/i2c_master.c: 196:         I2C_Status.callbackPayload[I2C_ADDR_NACK
      +                          ] = ((void*)0);
  8948  00CC2C  0E00               	movlw	0
  8949  00CC2E  6F60               	movwf	(_I2C_Status+16)& (0+255),b
  8950  00CC30  0E00               	movlw	0
  8951  00CC32  6F61               	movwf	(_I2C_Status+17)& (0+255),b
  8952  00CC34                     
  8953                           ; BSR set to: 1
  8954                           ;mcc_generated_files/i2c_master.c: 197:         I2C_Status.callbackTable[I2C_DATA_NACK]=
      +                          I2C_CallbackReturnStop;
  8955  00CC34  0EEA               	movlw	low _I2C_CallbackReturnStop
  8956  00CC36  6F56               	movwf	(_I2C_Status+6)& (0+255),b
  8957  00CC38  0EC0               	movlw	high _I2C_CallbackReturnStop
  8958  00CC3A  6F57               	movwf	(_I2C_Status+7)& (0+255),b
  8959  00CC3C                     
  8960                           ; BSR set to: 1
  8961                           ;mcc_generated_files/i2c_master.c: 198:         I2C_Status.callbackPayload[I2C_DATA_NACK
      +                          ] = ((void*)0);
  8962  00CC3C  0E00               	movlw	0
  8963  00CC3E  6F62               	movwf	(_I2C_Status+18)& (0+255),b
  8964  00CC40  0E00               	movlw	0
  8965  00CC42  6F63               	movwf	(_I2C_Status+19)& (0+255),b
  8966  00CC44                     
  8967                           ; BSR set to: 1
  8968                           ;mcc_generated_files/i2c_master.c: 199:         I2C_Status.callbackTable[I2C_TIMEOUT]=I2
      +                          C_CallbackReturnReset;
  8969  00CC44  0EEE               	movlw	low _I2C_CallbackReturnReset
  8970  00CC46  6F58               	movwf	(_I2C_Status+8)& (0+255),b
  8971  00CC48  0EC0               	movlw	high _I2C_CallbackReturnReset
  8972  00CC4A  6F59               	movwf	(_I2C_Status+9)& (0+255),b
  8973  00CC4C                     
  8974                           ; BSR set to: 1
  8975                           ;mcc_generated_files/i2c_master.c: 200:         I2C_Status.callbackPayload[I2C_TIMEOUT] 
      +                          = ((void*)0);
  8976  00CC4C  0E00               	movlw	0
  8977  00CC4E  6F64               	movwf	(_I2C_Status+20)& (0+255),b
  8978  00CC50  0E00               	movlw	0
  8979  00CC52  6F65               	movwf	(_I2C_Status+21)& (0+255),b
  8980  00CC54                     
  8981                           ; BSR set to: 1
  8982                           ;mcc_generated_files/i2c_master.c: 202:         I2C_MasterClearIrq();
  8983  00CC54  EC69  F060         	call	_I2C_MasterClearIrq	;wreg free
  8984  00CC58                     
  8985                           ;mcc_generated_files/i2c_master.c: 203:         I2C_MasterOpen();
  8986  00CC58  EC4A  F061         	call	_I2C_MasterOpen	;wreg free
  8987  00CC5C                     
  8988                           ;mcc_generated_files/i2c_master.c: 204:         returnValue = I2C_NOERR;
  8989  00CC5C  0E00               	movlw	0
  8990  00CC5E  6E02               	movwf	I2C_Open@returnValue^0,c
  8991  00CC60                     l4846:
  8992                           
  8993                           ;mcc_generated_files/i2c_master.c: 206:     return returnValue;
  8994  00CC60  5002               	movf	I2C_Open@returnValue^0,w,c
  8995  00CC62  0012               	return		;funcret
  8996  00CC64                     __end_of_I2C_Open:
  8997                           	callstack 0
  8998                           
  8999 ;; *************** function _I2C_MasterOpen *****************
  9000 ;; Defined at:
  9001 ;;		line 543 in file "mcc_generated_files/i2c_master.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      _Bool 
  9008 ;; Registers used:
  9009 ;;		wreg, status,2
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9015 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9016 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9018 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9019 ;;Total ram usage:        0 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_I2C_Open
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           	psect	text43
  9029  00C294                     __ptext43:
  9030                           	callstack 0
  9031  00C294                     _I2C_MasterOpen:
  9032                           	callstack 25
  9033  00C294                     
  9034                           ;mcc_generated_files/i2c_master.c: 545:     if(!SSPCON1bits.SSPEN)
  9035  00C294  BAC6               	btfsc	198,5,c	;volatile
  9036  00C296  EF4F  F061         	goto	u3231
  9037  00C29A  EF51  F061         	goto	u3230
  9038  00C29E                     u3231:
  9039  00C29E  EF5A  F061         	goto	l424
  9040  00C2A2                     u3230:
  9041  00C2A2                     
  9042                           ;mcc_generated_files/i2c_master.c: 546:     {;mcc_generated_files/i2c_master.c: 547:    
      +                               SSPSTAT = 0x00;
  9043  00C2A2  0E00               	movlw	0
  9044  00C2A4  6EC7               	movwf	199,c	;volatile
  9045                           
  9046                           ;mcc_generated_files/i2c_master.c: 548:         SSPCON1 = 0x08;
  9047  00C2A6  0E08               	movlw	8
  9048  00C2A8  6EC6               	movwf	198,c	;volatile
  9049                           
  9050                           ;mcc_generated_files/i2c_master.c: 549:         SSPCON2 = 0x00;
  9051  00C2AA  0E00               	movlw	0
  9052  00C2AC  6EC5               	movwf	197,c	;volatile
  9053                           
  9054                           ;mcc_generated_files/i2c_master.c: 550:         SSPADD = 0x13;
  9055  00C2AE  0E13               	movlw	19
  9056  00C2B0  6EC8               	movwf	200,c	;volatile
  9057  00C2B2                     
  9058                           ;mcc_generated_files/i2c_master.c: 551:         SSPCON1bits.SSPEN = 1;
  9059  00C2B2  8AC6               	bsf	198,5,c	;volatile
  9060  00C2B4                     l424:
  9061  00C2B4  0012               	return		;funcret
  9062  00C2B6                     __end_of_I2C_MasterOpen:
  9063                           	callstack 0
  9064                           
  9065 ;; *************** function _I2C_MasterWrite *****************
  9066 ;; Defined at:
  9067 ;;		line 251 in file "mcc_generated_files/i2c_master.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      enum E353
  9074 ;; Registers used:
  9075 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9081 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    7
  9088 ;; This function calls:
  9089 ;;		_I2C_MasterOperation
  9090 ;; This function is called by:
  9091 ;;		_I2C_WriteNBytes
  9092 ;;		_I2C_Read1ByteRegister
  9093 ;;		_I2C_Read2ByteRegister
  9094 ;;		_I2C_Write1ByteRegister
  9095 ;;		_I2C_Write2ByteRegister
  9096 ;;		_I2C_ReadDataBlock
  9097 ;; This function uses a non-reentrant model
  9098 ;;
  9099                           
  9100                           	psect	text44
  9101  00C162                     __ptext44:
  9102                           	callstack 0
  9103  00C162                     _I2C_MasterWrite:
  9104                           	callstack 19
  9105  00C162                     
  9106                           ;mcc_generated_files/i2c_master.c: 253:     return I2C_MasterOperation(0);;	Return value
      +                           of _I2C_MasterWrite is never used
  9107  00C162  0E00               	movlw	0
  9108  00C164  ECF7  F062         	call	_I2C_MasterOperation
  9109  00C168  0012               	return		;funcret
  9110  00C16A                     __end_of_I2C_MasterWrite:
  9111                           	callstack 0
  9112                           
  9113 ;; *************** function _I2C_MasterOperation *****************
  9114 ;; Defined at:
  9115 ;;		line 224 in file "mcc_generated_files/i2c_master.c"
  9116 ;; Parameters:    Size  Location     Type
  9117 ;;  read            1    wreg     _Bool 
  9118 ;; Auto vars:     Size  Location     Type
  9119 ;;  read            1   15[COMRAM] _Bool 
  9120 ;;  returnValue     1   16[COMRAM] enum E353
  9121 ;; Return value:  Size  Location     Type
  9122 ;;                  1    wreg      enum E353
  9123 ;; Registers used:
  9124 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9125 ;; Tracked objects:
  9126 ;;		On entry : 0/0
  9127 ;;		On exit  : 0/0
  9128 ;;		Unchanged: 0/0
  9129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9130 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9131 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9134 ;;Total ram usage:        2 bytes
  9135 ;; Hardware stack levels used:    1
  9136 ;; Hardware stack levels required when called:    6
  9137 ;; This function calls:
  9138 ;;		_I2C_MasterStart
  9139 ;;		_I2C_Poller
  9140 ;; This function is called by:
  9141 ;;		_I2C_MasterWrite
  9142 ;;		_I2C_MasterRead
  9143 ;; This function uses a non-reentrant model
  9144 ;;
  9145                           
  9146                           	psect	text45
  9147  00C5EE                     __ptext45:
  9148                           	callstack 0
  9149  00C5EE                     _I2C_MasterOperation:
  9150                           	callstack 19
  9151                           
  9152                           ;incstack = 0
  9153                           ;I2C_MasterOperation@read stored from wreg
  9154  00C5EE  6E10               	movwf	I2C_MasterOperation@read^0,c
  9155  00C5F0                     
  9156                           ;mcc_generated_files/i2c_master.c: 224: i2c_error_t I2C_MasterOperation(_Bool read);mcc_
      +                          generated_files/i2c_master.c: 225: {;mcc_generated_files/i2c_master.c: 226:     i2c_erro
      +                          r_t returnValue = I2C_BUSY;
  9157  00C5F0  0E01               	movlw	1
  9158  00C5F2  6E11               	movwf	I2C_MasterOperation@returnValue^0,c
  9159  00C5F4                     
  9160                           ;mcc_generated_files/i2c_master.c: 227:     if(!I2C_Status.busy)
  9161  00C5F4  0101               	movlb	1	; () banked
  9162  00C5F6  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9163  00C5F8  EF00  F063         	goto	u3241
  9164  00C5FC  EF02  F063         	goto	u3240
  9165  00C600                     u3241:
  9166  00C600  EF17  F063         	goto	l4574
  9167  00C604                     u3240:
  9168  00C604                     
  9169                           ; BSR set to: 1
  9170                           ;mcc_generated_files/i2c_master.c: 228:     {;mcc_generated_files/i2c_master.c: 229:    
      +                               I2C_Status.busy = 1;
  9171  00C604  8373               	bsf	(_I2C_Status+35)& (0+255),1,b
  9172  00C606                     
  9173                           ; BSR set to: 1
  9174                           ;mcc_generated_files/i2c_master.c: 230:         returnValue = I2C_NOERR;
  9175  00C606  0E00               	movlw	0
  9176  00C608  6E11               	movwf	I2C_MasterOperation@returnValue^0,c
  9177  00C60A                     
  9178                           ; BSR set to: 1
  9179                           ;mcc_generated_files/i2c_master.c: 232:         if(read)
  9180  00C60A  5010               	movf	I2C_MasterOperation@read^0,w,c
  9181  00C60C  B4D8               	btfsc	status,2,c
  9182  00C60E  EF0B  F063         	goto	u3251
  9183  00C612  EF0D  F063         	goto	u3250
  9184  00C616                     u3251:
  9185  00C616  EF11  F063         	goto	l4568
  9186  00C61A                     u3250:
  9187  00C61A                     
  9188                           ; BSR set to: 1
  9189                           ;mcc_generated_files/i2c_master.c: 233:         {;mcc_generated_files/i2c_master.c: 234:
      +                                       I2C_Status.state = I2C_SEND_ADR_READ;
  9190  00C61A  0E01               	movlw	1
  9191  00C61C  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9192                           
  9193                           ;mcc_generated_files/i2c_master.c: 235:         }
  9194  00C61E  EF13  F063         	goto	l4570
  9195  00C622                     l4568:
  9196                           
  9197                           ; BSR set to: 1
  9198                           ;mcc_generated_files/i2c_master.c: 237:         {;mcc_generated_files/i2c_master.c: 238:
      +                                       I2C_Status.state = I2C_SEND_ADR_WRITE;
  9199  00C622  0E02               	movlw	2
  9200  00C624  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9201  00C626                     l4570:
  9202                           
  9203                           ; BSR set to: 1
  9204                           ;mcc_generated_files/i2c_master.c: 240:         I2C_MasterStart();
  9205  00C626  EC6F  F060         	call	_I2C_MasterStart	;wreg free
  9206  00C62A                     
  9207                           ;mcc_generated_files/i2c_master.c: 241:         I2C_Poller();
  9208  00C62A  EC2C  F061         	call	_I2C_Poller	;wreg free
  9209  00C62E                     l4574:
  9210                           
  9211                           ;mcc_generated_files/i2c_master.c: 243:     return returnValue;
  9212  00C62E  5011               	movf	I2C_MasterOperation@returnValue^0,w,c
  9213  00C630  0012               	return		;funcret
  9214  00C632                     __end_of_I2C_MasterOperation:
  9215                           	callstack 0
  9216                           
  9217 ;; *************** function _I2C_Poller *****************
  9218 ;; Defined at:
  9219 ;;		line 312 in file "mcc_generated_files/i2c_master.c"
  9220 ;; Parameters:    Size  Location     Type
  9221 ;;		None
  9222 ;; Auto vars:     Size  Location     Type
  9223 ;;		None
  9224 ;; Return value:  Size  Location     Type
  9225 ;;                  1    wreg      void 
  9226 ;; Registers used:
  9227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9228 ;; Tracked objects:
  9229 ;;		On entry : 0/0
  9230 ;;		On exit  : 0/0
  9231 ;;		Unchanged: 0/0
  9232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9236 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9237 ;;Total ram usage:        0 bytes
  9238 ;; Hardware stack levels used:    1
  9239 ;; Hardware stack levels required when called:    5
  9240 ;; This function calls:
  9241 ;;		_I2C_MasterFsm
  9242 ;;		_I2C_MasterWaitForEvent
  9243 ;; This function is called by:
  9244 ;;		_I2C_MasterOperation
  9245 ;; This function uses a non-reentrant model
  9246 ;;
  9247                           
  9248                           	psect	text46
  9249  00C258                     __ptext46:
  9250                           	callstack 0
  9251  00C258                     _I2C_Poller:
  9252                           	callstack 19
  9253  00C258                     
  9254                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9255  00C258  EF32  F061         	goto	l4528
  9256  00C25C                     l4524:
  9257                           
  9258                           ; BSR set to: 1
  9259                           ;mcc_generated_files/i2c_master.c: 315:     {;mcc_generated_files/i2c_master.c: 316:    
      +                               I2C_MasterWaitForEvent();
  9260  00C25C  ECE1  F060         	call	_I2C_MasterWaitForEvent	;wreg free
  9261  00C260                     
  9262                           ;mcc_generated_files/i2c_master.c: 317:         I2C_MasterFsm();
  9263  00C260  EC00  F065         	call	_I2C_MasterFsm	;wreg free
  9264  00C264                     l4528:
  9265                           
  9266                           ;mcc_generated_files/i2c_master.c: 314:     while(I2C_Status.busy)
  9267  00C264  0101               	movlb	1	; () banked
  9268  00C266  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
  9269  00C268  EF38  F061         	goto	u3181
  9270  00C26C  EF3A  F061         	goto	u3180
  9271  00C270                     u3181:
  9272  00C270  EF2E  F061         	goto	l4524
  9273  00C274                     u3180:
  9274  00C274                     
  9275                           ; BSR set to: 1
  9276  00C274  0012               	return		;funcret
  9277  00C276                     __end_of_I2C_Poller:
  9278                           	callstack 0
  9279                           
  9280 ;; *************** function _I2C_MasterWaitForEvent *****************
  9281 ;; Defined at:
  9282 ;;		line 650 in file "mcc_generated_files/i2c_master.c"
  9283 ;; Parameters:    Size  Location     Type
  9284 ;;		None
  9285 ;; Auto vars:     Size  Location     Type
  9286 ;;		None
  9287 ;; Return value:  Size  Location     Type
  9288 ;;                  1    wreg      void 
  9289 ;; Registers used:
  9290 ;;		None
  9291 ;; Tracked objects:
  9292 ;;		On entry : 0/0
  9293 ;;		On exit  : 0/0
  9294 ;;		Unchanged: 0/0
  9295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9296 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9299 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9300 ;;Total ram usage:        0 bytes
  9301 ;; Hardware stack levels used:    1
  9302 ;; This function calls:
  9303 ;;		Nothing
  9304 ;; This function is called by:
  9305 ;;		_I2C_Poller
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           	psect	text47
  9310  00C1C2                     __ptext47:
  9311                           	callstack 0
  9312  00C1C2                     _I2C_MasterWaitForEvent:
  9313                           	callstack 23
  9314  00C1C2                     l481:
  9315                           
  9316                           ;mcc_generated_files/i2c_master.c: 653:     {;mcc_generated_files/i2c_master.c: 654:    
      +                               if(PIR1bits.SSPIF)
  9317  00C1C2  A69E               	btfss	158,3,c	;volatile
  9318  00C1C4  EFE6  F060         	goto	u3141
  9319  00C1C8  EFE8  F060         	goto	u3140
  9320  00C1CC                     u3141:
  9321  00C1CC  EFE1  F060         	goto	l481
  9322  00C1D0                     u3140:
  9323  00C1D0  0012               	return		;funcret
  9324  00C1D2                     __end_of_I2C_MasterWaitForEvent:
  9325                           	callstack 0
  9326                           
  9327 ;; *************** function _I2C_MasterFsm *****************
  9328 ;; Defined at:
  9329 ;;		line 321 in file "mcc_generated_files/i2c_master.c"
  9330 ;; Parameters:    Size  Location     Type
  9331 ;;		None
  9332 ;; Auto vars:     Size  Location     Type
  9333 ;;		None
  9334 ;; Return value:  Size  Location     Type
  9335 ;;                  1    wreg      void 
  9336 ;; Registers used:
  9337 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9338 ;; Tracked objects:
  9339 ;;		On entry : 0/0
  9340 ;;		On exit  : 0/0
  9341 ;;		Unchanged: 0/0
  9342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9344 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9345 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9346 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9347 ;;Total ram usage:        2 bytes
  9348 ;; Hardware stack levels used:    1
  9349 ;; Hardware stack levels required when called:    4
  9350 ;; This function calls:
  9351 ;;		_I2C_DO_ADDRESS_NACK
  9352 ;;		_I2C_DO_IDLE
  9353 ;;		_I2C_DO_RCEN
  9354 ;;		_I2C_DO_RESET
  9355 ;;		_I2C_DO_RX
  9356 ;;		_I2C_DO_RX_ACK
  9357 ;;		_I2C_DO_RX_NACK_RESTART
  9358 ;;		_I2C_DO_RX_NACK_STOP
  9359 ;;		_I2C_DO_SEND_ADR_READ
  9360 ;;		_I2C_DO_SEND_ADR_WRITE
  9361 ;;		_I2C_DO_SEND_RESTART
  9362 ;;		_I2C_DO_SEND_RESTART_READ
  9363 ;;		_I2C_DO_SEND_RESTART_WRITE
  9364 ;;		_I2C_DO_SEND_STOP
  9365 ;;		_I2C_DO_TX
  9366 ;;		_I2C_DO_TX_EMPTY
  9367 ;;		_I2C_MasterClearIrq
  9368 ;;		_I2C_MasterIsNack
  9369 ;; This function is called by:
  9370 ;;		_I2C_Poller
  9371 ;; This function uses a non-reentrant model
  9372 ;;
  9373                           
  9374                           	psect	text48
  9375  00CA00                     __ptext48:
  9376                           	callstack 0
  9377  00CA00                     _I2C_MasterFsm:
  9378                           	callstack 19
  9379  00CA00                     
  9380                           ;mcc_generated_files/i2c_master.c: 323:     I2C_MasterClearIrq();
  9381  00CA00  EC69  F060         	call	_I2C_MasterClearIrq	;wreg free
  9382  00CA04                     
  9383                           ;mcc_generated_files/i2c_master.c: 325:     if(I2C_Status.addressNackCheck && I2C_Master
      +                          IsNack())
  9384  00CA04  0101               	movlb	1	; () banked
  9385  00CA06  A173               	btfss	(_I2C_Status+35)& (0+255),0,b
  9386  00CA08  EF08  F065         	goto	u3151
  9387  00CA0C  EF0A  F065         	goto	u3150
  9388  00CA10                     u3151:
  9389  00CA10  EF17  F065         	goto	l4518
  9390  00CA14                     u3150:
  9391  00CA14                     
  9392                           ; BSR set to: 1
  9393  00CA14  ECFC  F060         	call	_I2C_MasterIsNack	;wreg free
  9394  00CA18  0900               	iorlw	0
  9395  00CA1A  B4D8               	btfsc	status,2,c
  9396  00CA1C  EF12  F065         	goto	u3161
  9397  00CA20  EF14  F065         	goto	u3160
  9398  00CA24                     u3161:
  9399  00CA24  EF17  F065         	goto	l4518
  9400  00CA28                     u3160:
  9401  00CA28                     
  9402                           ;mcc_generated_files/i2c_master.c: 326:     {;mcc_generated_files/i2c_master.c: 327:    
      +                               I2C_Status.state = I2C_ADDRESS_NACK;
  9403  00CA28  0E0F               	movlw	15
  9404  00CA2A  0101               	movlb	1	; () banked
  9405  00CA2C  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9406  00CA2E                     l4518:
  9407                           
  9408                           ;mcc_generated_files/i2c_master.c: 329:     I2C_Status.state = i2c_fsmStateTable[I2C_Sta
      +                          tus.state]();
  9409  00CA2E  0101               	movlb	1	; () banked
  9410  00CA30  5171               	movf	(_I2C_Status+33)& (0+255),w,b
  9411  00CA32  0D02               	mullw	2
  9412  00CA34  0EC1               	movlw	low _i2c_fsmStateTable
  9413  00CA36  24F3               	addwf	243,w,c
  9414  00CA38  6EF6               	movwf	tblptrl,c
  9415  00CA3A  0EFD               	movlw	high _i2c_fsmStateTable
  9416  00CA3C  20F4               	addwfc	244,w,c
  9417  00CA3E  6EF7               	movwf	tblptrh,c
  9418  00CA40                     	if	1	;There are 3 active tblptr bytes
  9419  00CA40  6AF8               	clrf	tblptru,c
  9420  00CA42  0E00               	movlw	low (__mediumconst shr (0+16))
  9421  00CA44  22F8               	addwfc	tblptru,f,c
  9422  00CA46                     	endif
  9423  00CA46  0009               	tblrd		*+
  9424  00CA48  CFF5 F00E          	movff	tablat,??_I2C_MasterFsm
  9425  00CA4C  0009               	tblrd		*+
  9426  00CA4E  CFF5 F00F          	movff	tablat,??_I2C_MasterFsm+1
  9427  00CA52  D802               	call	u3178
  9428  00CA54  EF35  F065         	goto	u3179
  9429  00CA58                     u3178:
  9430  00CA58  0005               	push	
  9431  00CA5A  6EFA               	movwf	pclath,c
  9432  00CA5C  500E               	movf	??_I2C_MasterFsm^0,w,c
  9433  00CA5E  6EFD               	movwf	tosl,c
  9434  00CA60  500F               	movf	(??_I2C_MasterFsm+1)^0,w,c
  9435  00CA62  6EFE               	movwf	tosh,c
  9436  00CA64  6AFF               	clrf	tosu,c
  9437  00CA66  50FA               	movf	pclath,w,c
  9438  00CA68  0012               	return		;indir
  9439  00CA6A                     u3179:
  9440  00CA6A  0101               	movlb	1	; () banked
  9441  00CA6C  6F71               	movwf	(_I2C_Status+33)& (0+255),b
  9442  00CA6E                     
  9443                           ; BSR set to: 1
  9444  00CA6E  0012               	return		;funcret
  9445  00CA70                     __end_of_I2C_MasterFsm:
  9446                           	callstack 0
  9447                           
  9448 ;; *************** function _I2C_DO_ADDRESS_NACK *****************
  9449 ;; Defined at:
  9450 ;;		line 500 in file "mcc_generated_files/i2c_master.c"
  9451 ;; Parameters:    Size  Location     Type
  9452 ;;		None
  9453 ;; Auto vars:     Size  Location     Type
  9454 ;;		None
  9455 ;; Return value:  Size  Location     Type
  9456 ;;                  1    wreg      enum E12575
  9457 ;; Registers used:
  9458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
  9459 ;; Tracked objects:
  9460 ;;		On entry : 0/0
  9461 ;;		On exit  : 0/0
  9462 ;;		Unchanged: 0/0
  9463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9464 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9465 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9466 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9467 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9468 ;;Total ram usage:        2 bytes
  9469 ;; Hardware stack levels used:    1
  9470 ;; Hardware stack levels required when called:    3
  9471 ;; This function calls:
  9472 ;;		Absolute function
  9473 ;;		_I2C_CallbackReturnReset
  9474 ;;		_I2C_CallbackReturnStop
  9475 ;;		_I2C_DO_SEND_RESTART
  9476 ;;		_I2C_DO_SEND_STOP
  9477 ;;		_rd1RegCompleteHandler
  9478 ;;		_rd2RegCompleteHandler
  9479 ;;		_rdBlkRegCompleteHandler
  9480 ;;		_wr1RegCompleteHandler
  9481 ;;		_wr2RegCompleteHandler
  9482 ;; This function is called by:
  9483 ;;		_I2C_MasterFsm
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text49
  9488  00C99A                     __ptext49:
  9489                           	callstack 0
  9490  00C99A                     _I2C_DO_ADDRESS_NACK:
  9491                           	callstack 19
  9492  00C99A                     
  9493                           ;mcc_generated_files/i2c_master.c: 502:     I2C_Status.addressNackCheck = 0;
  9494  00C99A  0101               	movlb	1	; () banked
  9495  00C99C  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
  9496  00C99E                     
  9497                           ; BSR set to: 1
  9498                           ;mcc_generated_files/i2c_master.c: 503:     I2C_Status.error = I2C_FAIL;
  9499  00C99E  0E02               	movlw	2
  9500  00C9A0  6F72               	movwf	(_I2C_Status+34)& (0+255),b
  9501                           
  9502                           ;mcc_generated_files/i2c_master.c: 504:     switch(I2C_Status.callbackTable[I2C_ADDR_NAC
      +                          K](I2C_Status.callbackPayload[I2C_ADDR_NACK]))
  9503  00C9A2  EFDB  F064         	goto	l4500
  9504  00C9A6                     l4490:
  9505                           
  9506                           ;mcc_generated_files/i2c_master.c: 508:             return I2C_DO_SEND_RESTART();
  9507  00C9A6  EC9D  F060         	call	_I2C_DO_SEND_RESTART	;wreg free
  9508  00C9AA  EFFF  F064         	goto	l403
  9509  00C9AE                     l4494:
  9510                           
  9511                           ;mcc_generated_files/i2c_master.c: 510:             return I2C_DO_SEND_STOP();
  9512  00C9AE  ECA1  F060         	call	_I2C_DO_SEND_STOP	;wreg free
  9513  00C9B2  EFFF  F064         	goto	l403
  9514  00C9B6                     l4500:
  9515                           
  9516                           ; BSR set to: 1
  9517  00C9B6  C160  F00A         	movff	_I2C_Status+16,I2C_CallbackReturnReset@funPtr
  9518  00C9BA  C161  F00B         	movff	_I2C_Status+17,I2C_CallbackReturnReset@funPtr+1
  9519  00C9BE  D802               	call	u3138
  9520  00C9C0  EFEB  F064         	goto	u3139
  9521  00C9C4                     u3138:
  9522  00C9C4  0005               	push	
  9523  00C9C6  6EFA               	movwf	pclath,c
  9524  00C9C8  5154               	movf	(_I2C_Status+4)& (0+255),w,b
  9525  00C9CA  6EFD               	movwf	tosl,c
  9526  00C9CC  5155               	movf	(_I2C_Status+5)& (0+255),w,b
  9527  00C9CE  6EFE               	movwf	tosh,c
  9528  00C9D0  6AFF               	clrf	tosu,c
  9529  00C9D2  50FA               	movf	pclath,w,c
  9530  00C9D4  0012               	return		;indir
  9531  00C9D6                     u3139:
  9532  00C9D6  6E0C               	movwf	??_I2C_DO_ADDRESS_NACK^0,c
  9533  00C9D8  6A0D               	clrf	(??_I2C_DO_ADDRESS_NACK+1)^0,c
  9534                           
  9535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  9536                           ; Switch size 1, requested type "simple"
  9537                           ; Number of cases is 1, Range of values is 0 to 0
  9538                           ; switch strategies available:
  9539                           ; Name         Instructions Cycles
  9540                           ; simple_byte            4     3 (average)
  9541                           ;	Chosen strategy is simple_byte
  9542  00C9DA  500D               	movf	(??_I2C_DO_ADDRESS_NACK+1)^0,w,c
  9543  00C9DC  0A00               	xorlw	0	; case 0
  9544  00C9DE  B4D8               	btfsc	status,2,c
  9545  00C9E0  EFF4  F064         	goto	l6506
  9546  00C9E4  EFD7  F064         	goto	l4494
  9547  00C9E8                     l6506:
  9548                           
  9549                           ; Switch size 1, requested type "simple"
  9550                           ; Number of cases is 2, Range of values is 2 to 3
  9551                           ; switch strategies available:
  9552                           ; Name         Instructions Cycles
  9553                           ; simple_byte            7     4 (average)
  9554                           ;	Chosen strategy is simple_byte
  9555  00C9E8  500C               	movf	??_I2C_DO_ADDRESS_NACK^0,w,c
  9556  00C9EA  0A02               	xorlw	2	; case 2
  9557  00C9EC  B4D8               	btfsc	status,2,c
  9558  00C9EE  EFD3  F064         	goto	l4490
  9559  00C9F2  0A01               	xorlw	1	; case 3
  9560  00C9F4  B4D8               	btfsc	status,2,c
  9561  00C9F6  EFD3  F064         	goto	l4490
  9562  00C9FA  EFD7  F064         	goto	l4494
  9563  00C9FE                     l403:
  9564  00C9FE  0012               	return		;funcret
  9565  00CA00                     __end_of_I2C_DO_ADDRESS_NACK:
  9566                           	callstack 0
  9567                           
  9568 ;; *************** function _I2C_DO_RESET *****************
  9569 ;; Defined at:
  9570 ;;		line 494 in file "mcc_generated_files/i2c_master.c"
  9571 ;; Parameters:    Size  Location     Type
  9572 ;;		None
  9573 ;; Auto vars:     Size  Location     Type
  9574 ;;		None
  9575 ;; Return value:  Size  Location     Type
  9576 ;;                  1    wreg      enum E12575
  9577 ;; Registers used:
  9578 ;;		wreg, status,2
  9579 ;; Tracked objects:
  9580 ;;		On entry : 0/0
  9581 ;;		On exit  : 0/0
  9582 ;;		Unchanged: 0/0
  9583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9588 ;;Total ram usage:        0 bytes
  9589 ;; Hardware stack levels used:    1
  9590 ;; This function calls:
  9591 ;;		Nothing
  9592 ;; This function is called by:
  9593 ;;		_I2C_MasterFsm
  9594 ;; This function uses a non-reentrant model
  9595 ;;
  9596                           
  9597                           	psect	text50
  9598  00C196                     __ptext50:
  9599                           	callstack 0
  9600  00C196                     _I2C_DO_RESET:
  9601                           	callstack 22
  9602  00C196                     
  9603                           ;mcc_generated_files/i2c_master.c: 496:     I2C_Status.busy = 0;
  9604  00C196  0101               	movlb	1	; () banked
  9605  00C198  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
  9606  00C19A                     
  9607                           ; BSR set to: 1
  9608                           ;mcc_generated_files/i2c_master.c: 497:     I2C_Status.error = I2C_NOERR;
  9609  00C19A  0E00               	movlw	0
  9610  00C19C  6F72               	movwf	(_I2C_Status+34)& (0+255),b
  9611  00C19E                     
  9612                           ; BSR set to: 1
  9613                           ;mcc_generated_files/i2c_master.c: 498:     return I2C_RESET;
  9614  00C19E  0E0E               	movlw	14
  9615  00C1A0                     
  9616                           ; BSR set to: 1
  9617  00C1A0  0012               	return		;funcret
  9618  00C1A2                     __end_of_I2C_DO_RESET:
  9619                           	callstack 0
  9620                           
  9621 ;; *************** function _I2C_DO_RX_NACK_RESTART *****************
  9622 ;; Defined at:
  9623 ;;		line 488 in file "mcc_generated_files/i2c_master.c"
  9624 ;; Parameters:    Size  Location     Type
  9625 ;;		None
  9626 ;; Auto vars:     Size  Location     Type
  9627 ;;		None
  9628 ;; Return value:  Size  Location     Type
  9629 ;;                  1    wreg      enum E12575
  9630 ;; Registers used:
  9631 ;;		wreg, cstack
  9632 ;; Tracked objects:
  9633 ;;		On entry : 0/0
  9634 ;;		On exit  : 0/0
  9635 ;;		Unchanged: 0/0
  9636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9637 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9639 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9640 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9641 ;;Total ram usage:        0 bytes
  9642 ;; Hardware stack levels used:    1
  9643 ;; Hardware stack levels required when called:    1
  9644 ;; This function calls:
  9645 ;;		_I2C_MasterSendNack
  9646 ;; This function is called by:
  9647 ;;		_I2C_DO_RX
  9648 ;;		_I2C_MasterFsm
  9649 ;; This function uses a non-reentrant model
  9650 ;;
  9651                           
  9652                           	psect	text51
  9653  00C15A                     __ptext51:
  9654                           	callstack 0
  9655  00C15A                     _I2C_DO_RX_NACK_RESTART:
  9656                           	callstack 21
  9657  00C15A                     
  9658                           ;mcc_generated_files/i2c_master.c: 490:     I2C_MasterSendNack();
  9659  00C15A  EC7F  F060         	call	_I2C_MasterSendNack	;wreg free
  9660  00C15E                     
  9661                           ;mcc_generated_files/i2c_master.c: 491:     return I2C_SEND_RESTART;
  9662  00C15E  0E09               	movlw	9
  9663  00C160  0012               	return		;funcret
  9664  00C162                     __end_of_I2C_DO_RX_NACK_RESTART:
  9665                           	callstack 0
  9666                           
  9667 ;; *************** function _I2C_DO_RX_NACK_STOP *****************
  9668 ;; Defined at:
  9669 ;;		line 482 in file "mcc_generated_files/i2c_master.c"
  9670 ;; Parameters:    Size  Location     Type
  9671 ;;		None
  9672 ;; Auto vars:     Size  Location     Type
  9673 ;;		None
  9674 ;; Return value:  Size  Location     Type
  9675 ;;                  1    wreg      enum E12575
  9676 ;; Registers used:
  9677 ;;		wreg, cstack
  9678 ;; Tracked objects:
  9679 ;;		On entry : 0/0
  9680 ;;		On exit  : 0/0
  9681 ;;		Unchanged: 0/0
  9682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9683 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9684 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9685 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9686 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9687 ;;Total ram usage:        0 bytes
  9688 ;; Hardware stack levels used:    1
  9689 ;; Hardware stack levels required when called:    1
  9690 ;; This function calls:
  9691 ;;		_I2C_MasterSendNack
  9692 ;; This function is called by:
  9693 ;;		_I2C_DO_RX
  9694 ;;		_I2C_MasterFsm
  9695 ;; This function uses a non-reentrant model
  9696 ;;
  9697                           
  9698                           	psect	text52
  9699  00C152                     __ptext52:
  9700                           	callstack 0
  9701  00C152                     _I2C_DO_RX_NACK_STOP:
  9702                           	callstack 21
  9703  00C152                     
  9704                           ;mcc_generated_files/i2c_master.c: 484:     I2C_MasterSendNack();
  9705  00C152  EC7F  F060         	call	_I2C_MasterSendNack	;wreg free
  9706  00C156                     
  9707                           ;mcc_generated_files/i2c_master.c: 485:     return I2C_SEND_STOP;
  9708  00C156  0E0A               	movlw	10
  9709  00C158  0012               	return		;funcret
  9710  00C15A                     __end_of_I2C_DO_RX_NACK_STOP:
  9711                           	callstack 0
  9712                           
  9713 ;; *************** function _I2C_DO_RX_ACK *****************
  9714 ;; Defined at:
  9715 ;;		line 475 in file "mcc_generated_files/i2c_master.c"
  9716 ;; Parameters:    Size  Location     Type
  9717 ;;		None
  9718 ;; Auto vars:     Size  Location     Type
  9719 ;;		None
  9720 ;; Return value:  Size  Location     Type
  9721 ;;                  1    wreg      enum E12575
  9722 ;; Registers used:
  9723 ;;		wreg, cstack
  9724 ;; Tracked objects:
  9725 ;;		On entry : 0/0
  9726 ;;		On exit  : 0/0
  9727 ;;		Unchanged: 0/0
  9728 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9729 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9730 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9731 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9732 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9733 ;;Total ram usage:        0 bytes
  9734 ;; Hardware stack levels used:    1
  9735 ;; Hardware stack levels required when called:    1
  9736 ;; This function calls:
  9737 ;;		_I2C_MasterSendAck
  9738 ;; This function is called by:
  9739 ;;		_I2C_MasterFsm
  9740 ;; This function uses a non-reentrant model
  9741 ;;
  9742                           
  9743                           	psect	text53
  9744  00C14A                     __ptext53:
  9745                           	callstack 0
  9746  00C14A                     _I2C_DO_RX_ACK:
  9747                           	callstack 21
  9748  00C14A                     
  9749                           ;mcc_generated_files/i2c_master.c: 477:     I2C_MasterSendAck();
  9750  00C14A  EC82  F060         	call	_I2C_MasterSendAck	;wreg free
  9751  00C14E                     
  9752                           ;mcc_generated_files/i2c_master.c: 478:     return I2C_RCEN;
  9753  00C14E  0E05               	movlw	5
  9754  00C150  0012               	return		;funcret
  9755  00C152                     __end_of_I2C_DO_RX_ACK:
  9756                           	callstack 0
  9757                           
  9758 ;; *************** function _I2C_DO_SEND_STOP *****************
  9759 ;; Defined at:
  9760 ;;		line 469 in file "mcc_generated_files/i2c_master.c"
  9761 ;; Parameters:    Size  Location     Type
  9762 ;;		None
  9763 ;; Auto vars:     Size  Location     Type
  9764 ;;		None
  9765 ;; Return value:  Size  Location     Type
  9766 ;;                  1    wreg      enum E12575
  9767 ;; Registers used:
  9768 ;;		wreg, cstack
  9769 ;; Tracked objects:
  9770 ;;		On entry : 0/0
  9771 ;;		On exit  : 0/0
  9772 ;;		Unchanged: 0/0
  9773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9774 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9775 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9776 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9777 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9778 ;;Total ram usage:        0 bytes
  9779 ;; Hardware stack levels used:    1
  9780 ;; Hardware stack levels required when called:    1
  9781 ;; This function calls:
  9782 ;;		_I2C_MasterStop
  9783 ;; This function is called by:
  9784 ;;		_I2C_DO_TX
  9785 ;;		_I2C_DO_TX_EMPTY
  9786 ;;		_I2C_DO_ADDRESS_NACK
  9787 ;;		_I2C_MasterFsm
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           	psect	text54
  9792  00C142                     __ptext54:
  9793                           	callstack 0
  9794  00C142                     _I2C_DO_SEND_STOP:
  9795                           	callstack 20
  9796  00C142                     
  9797                           ;mcc_generated_files/i2c_master.c: 471:     I2C_MasterStop();
  9798  00C142  EC73  F060         	call	_I2C_MasterStop	;wreg free
  9799  00C146                     
  9800                           ;mcc_generated_files/i2c_master.c: 472:     return I2C_IDLE;
  9801  00C146  0E00               	movlw	0
  9802  00C148  0012               	return		;funcret
  9803  00C14A                     __end_of_I2C_DO_SEND_STOP:
  9804                           	callstack 0
  9805                           
  9806 ;; *************** function _I2C_DO_SEND_RESTART *****************
  9807 ;; Defined at:
  9808 ;;		line 463 in file "mcc_generated_files/i2c_master.c"
  9809 ;; Parameters:    Size  Location     Type
  9810 ;;		None
  9811 ;; Auto vars:     Size  Location     Type
  9812 ;;		None
  9813 ;; Return value:  Size  Location     Type
  9814 ;;                  1    wreg      enum E12575
  9815 ;; Registers used:
  9816 ;;		wreg, cstack
  9817 ;; Tracked objects:
  9818 ;;		On entry : 0/0
  9819 ;;		On exit  : 0/0
  9820 ;;		Unchanged: 0/0
  9821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9822 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9823 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9824 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9825 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9826 ;;Total ram usage:        0 bytes
  9827 ;; Hardware stack levels used:    1
  9828 ;; Hardware stack levels required when called:    1
  9829 ;; This function calls:
  9830 ;;		_I2C_MasterEnableRestart
  9831 ;; This function is called by:
  9832 ;;		_I2C_DO_TX_EMPTY
  9833 ;;		_I2C_DO_ADDRESS_NACK
  9834 ;;		_I2C_MasterFsm
  9835 ;; This function uses a non-reentrant model
  9836 ;;
  9837                           
  9838                           	psect	text55
  9839  00C13A                     __ptext55:
  9840                           	callstack 0
  9841  00C13A                     _I2C_DO_SEND_RESTART:
  9842                           	callstack 20
  9843  00C13A                     
  9844                           ;mcc_generated_files/i2c_master.c: 465:     I2C_MasterEnableRestart();
  9845  00C13A  EC71  F060         	call	_I2C_MasterEnableRestart	;wreg free
  9846  00C13E                     
  9847                           ;mcc_generated_files/i2c_master.c: 466:     return I2C_SEND_ADR_READ;
  9848  00C13E  0E01               	movlw	1
  9849  00C140  0012               	return		;funcret
  9850  00C142                     __end_of_I2C_DO_SEND_RESTART:
  9851                           	callstack 0
  9852                           
  9853 ;; *************** function _I2C_DO_SEND_RESTART_WRITE *****************
  9854 ;; Defined at:
  9855 ;;		line 456 in file "mcc_generated_files/i2c_master.c"
  9856 ;; Parameters:    Size  Location     Type
  9857 ;;		None
  9858 ;; Auto vars:     Size  Location     Type
  9859 ;;		None
  9860 ;; Return value:  Size  Location     Type
  9861 ;;                  1    wreg      enum E12575
  9862 ;; Registers used:
  9863 ;;		wreg, cstack
  9864 ;; Tracked objects:
  9865 ;;		On entry : 0/0
  9866 ;;		On exit  : 0/0
  9867 ;;		Unchanged: 0/0
  9868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9869 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9870 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9871 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9872 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9873 ;;Total ram usage:        0 bytes
  9874 ;; Hardware stack levels used:    1
  9875 ;; Hardware stack levels required when called:    1
  9876 ;; This function calls:
  9877 ;;		_I2C_MasterEnableRestart
  9878 ;; This function is called by:
  9879 ;;		_I2C_DO_TX
  9880 ;;		_I2C_MasterFsm
  9881 ;; This function uses a non-reentrant model
  9882 ;;
  9883                           
  9884                           	psect	text56
  9885  00C132                     __ptext56:
  9886                           	callstack 0
  9887  00C132                     _I2C_DO_SEND_RESTART_WRITE:
  9888                           	callstack 20
  9889  00C132                     
  9890                           ;mcc_generated_files/i2c_master.c: 458:     I2C_MasterEnableRestart();
  9891  00C132  EC71  F060         	call	_I2C_MasterEnableRestart	;wreg free
  9892  00C136                     
  9893                           ;mcc_generated_files/i2c_master.c: 459:     return I2C_SEND_ADR_WRITE;
  9894  00C136  0E02               	movlw	2
  9895  00C138  0012               	return		;funcret
  9896  00C13A                     __end_of_I2C_DO_SEND_RESTART_WRITE:
  9897                           	callstack 0
  9898                           
  9899 ;; *************** function _I2C_DO_SEND_RESTART_READ *****************
  9900 ;; Defined at:
  9901 ;;		line 450 in file "mcc_generated_files/i2c_master.c"
  9902 ;; Parameters:    Size  Location     Type
  9903 ;;		None
  9904 ;; Auto vars:     Size  Location     Type
  9905 ;;		None
  9906 ;; Return value:  Size  Location     Type
  9907 ;;                  1    wreg      enum E12575
  9908 ;; Registers used:
  9909 ;;		wreg, cstack
  9910 ;; Tracked objects:
  9911 ;;		On entry : 0/0
  9912 ;;		On exit  : 0/0
  9913 ;;		Unchanged: 0/0
  9914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9915 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9917 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9918 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9919 ;;Total ram usage:        0 bytes
  9920 ;; Hardware stack levels used:    1
  9921 ;; Hardware stack levels required when called:    1
  9922 ;; This function calls:
  9923 ;;		_I2C_MasterEnableRestart
  9924 ;; This function is called by:
  9925 ;;		_I2C_DO_TX
  9926 ;;		_I2C_MasterFsm
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text57
  9931  00C12A                     __ptext57:
  9932                           	callstack 0
  9933  00C12A                     _I2C_DO_SEND_RESTART_READ:
  9934                           	callstack 20
  9935  00C12A                     
  9936                           ;mcc_generated_files/i2c_master.c: 452:     I2C_MasterEnableRestart();
  9937  00C12A  EC71  F060         	call	_I2C_MasterEnableRestart	;wreg free
  9938  00C12E                     
  9939                           ;mcc_generated_files/i2c_master.c: 453:     return I2C_SEND_ADR_READ;
  9940  00C12E  0E01               	movlw	1
  9941  00C130  0012               	return		;funcret
  9942  00C132                     __end_of_I2C_DO_SEND_RESTART_READ:
  9943                           	callstack 0
  9944                           
  9945 ;; *************** function _I2C_DO_RCEN *****************
  9946 ;; Defined at:
  9947 ;;		line 402 in file "mcc_generated_files/i2c_master.c"
  9948 ;; Parameters:    Size  Location     Type
  9949 ;;		None
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;		None
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  1    wreg      enum E12575
  9954 ;; Registers used:
  9955 ;;		wreg, cstack
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  9961 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9962 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9964 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  9965 ;;Total ram usage:        0 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:    1
  9968 ;; This function calls:
  9969 ;;		_I2C_MasterStartRx
  9970 ;; This function is called by:
  9971 ;;		_I2C_MasterFsm
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text58
  9976  00C18A                     __ptext58:
  9977                           	callstack 0
  9978  00C18A                     _I2C_DO_RCEN:
  9979                           	callstack 21
  9980  00C18A                     
  9981                           ;mcc_generated_files/i2c_master.c: 404:     I2C_Status.addressNackCheck = 0;
  9982  00C18A  0101               	movlb	1	; () banked
  9983  00C18C  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
  9984  00C18E                     
  9985                           ; BSR set to: 1
  9986                           ;mcc_generated_files/i2c_master.c: 405:     I2C_MasterStartRx();
  9987  00C18E  EC79  F060         	call	_I2C_MasterStartRx	;wreg free
  9988  00C192                     
  9989                           ;mcc_generated_files/i2c_master.c: 406:     return I2C_RX;
  9990  00C192  0E04               	movlw	4
  9991  00C194  0012               	return		;funcret
  9992  00C196                     __end_of_I2C_DO_RCEN:
  9993                           	callstack 0
  9994                           
  9995 ;; *************** function _I2C_DO_RX *****************
  9996 ;; Defined at:
  9997 ;;		line 378 in file "mcc_generated_files/i2c_master.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;		None
 10000 ;; Auto vars:     Size  Location     Type
 10001 ;;		None
 10002 ;; Return value:  Size  Location     Type
 10003 ;;                  1    wreg      enum E12575
 10004 ;; Registers used:
 10005 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10006 ;; Tracked objects:
 10007 ;;		On entry : 0/0
 10008 ;;		On exit  : 0/0
 10009 ;;		Unchanged: 0/0
 10010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10011 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10013 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10014 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10015 ;;Total ram usage:        2 bytes
 10016 ;; Hardware stack levels used:    1
 10017 ;; Hardware stack levels required when called:    3
 10018 ;; This function calls:
 10019 ;;		Absolute function
 10020 ;;		_I2C_CallbackReturnReset
 10021 ;;		_I2C_CallbackReturnStop
 10022 ;;		_I2C_DO_RX_NACK_RESTART
 10023 ;;		_I2C_DO_RX_NACK_STOP
 10024 ;;		_I2C_MasterGetRxData
 10025 ;;		_I2C_MasterSendAck
 10026 ;;		_rd1RegCompleteHandler
 10027 ;;		_rd2RegCompleteHandler
 10028 ;;		_rdBlkRegCompleteHandler
 10029 ;;		_wr1RegCompleteHandler
 10030 ;;		_wr2RegCompleteHandler
 10031 ;; This function is called by:
 10032 ;;		_I2C_MasterFsm
 10033 ;; This function uses a non-reentrant model
 10034 ;;
 10035                           
 10036                           	psect	text59
 10037  00CDA6                     __ptext59:
 10038                           	callstack 0
 10039  00CDA6                     _I2C_DO_RX:
 10040                           	callstack 19
 10041  00CDA6                     
 10042                           ;mcc_generated_files/i2c_master.c: 380:     *I2C_Status.data_ptr++ = I2C_MasterGetRxData
      +                          ();
 10043  00CDA6  EC7B  F060         	call	_I2C_MasterGetRxData	;wreg free
 10044  00CDAA  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 10045  00CDAE  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 10046  00CDB2  6EDF               	movwf	indf2,c
 10047  00CDB4  0101               	movlb	1	; () banked
 10048  00CDB6  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10049  00CDB8  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 10050  00CDBA                     
 10051                           ; BSR set to: 1
 10052                           ;mcc_generated_files/i2c_master.c: 381:     if(--I2C_Status.data_length)
 10053  00CDBA  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 10054  00CDBC  A0D8               	btfss	status,0,c
 10055  00CDBE  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 10056  00CDC0  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 10057  00CDC2  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10058  00CDC4  B4D8               	btfsc	status,2,c
 10059  00CDC6  EFE7  F066         	goto	u3101
 10060  00CDCA  EFE9  F066         	goto	u3100
 10061  00CDCE                     u3101:
 10062  00CDCE  EFEE  F066         	goto	l340
 10063  00CDD2                     u3100:
 10064  00CDD2                     
 10065                           ; BSR set to: 1
 10066                           ;mcc_generated_files/i2c_master.c: 382:     {;mcc_generated_files/i2c_master.c: 383:    
      +                               I2C_MasterSendAck();
 10067  00CDD2  EC82  F060         	call	_I2C_MasterSendAck	;wreg free
 10068  00CDD6                     
 10069                           ;mcc_generated_files/i2c_master.c: 384:         return I2C_RCEN;
 10070  00CDD6  0E05               	movlw	5
 10071  00CDD8  EF25  F067         	goto	l341
 10072  00CDDC                     l340:
 10073                           
 10074                           ; BSR set to: 1
 10075                           ;mcc_generated_files/i2c_master.c: 387:     {;mcc_generated_files/i2c_master.c: 388:    
      +                               I2C_Status.bufferFree = 1;
 10076  00CDDC  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 10077                           
 10078                           ;mcc_generated_files/i2c_master.c: 389:         switch(I2C_Status.callbackTable[I2C_DATA
      +                          _COMPLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10079  00CDDE  EFF9  F066         	goto	l4430
 10080  00CDE2                     l4420:
 10081                           
 10082                           ;mcc_generated_files/i2c_master.c: 393:                 return I2C_DO_RX_NACK_RESTART();
 10083  00CDE2  ECAD  F060         	call	_I2C_DO_RX_NACK_RESTART	;wreg free
 10084  00CDE6  EF25  F067         	goto	l341
 10085  00CDEA                     l4424:
 10086                           
 10087                           ;mcc_generated_files/i2c_master.c: 397:                 return I2C_DO_RX_NACK_STOP();
 10088  00CDEA  ECA9  F060         	call	_I2C_DO_RX_NACK_STOP	;wreg free
 10089  00CDEE  EF25  F067         	goto	l341
 10090  00CDF2                     l4430:
 10091                           
 10092                           ; BSR set to: 1
 10093  00CDF2  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10094  00CDF6  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10095  00CDFA  D802               	call	u3118
 10096  00CDFC  EF09  F067         	goto	u3119
 10097  00CE00                     u3118:
 10098  00CE00  0005               	push	
 10099  00CE02  6EFA               	movwf	pclath,c
 10100  00CE04  5150               	movf	_I2C_Status& (0+255),w,b
 10101  00CE06  6EFD               	movwf	tosl,c
 10102  00CE08  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 10103  00CE0A  6EFE               	movwf	tosh,c
 10104  00CE0C  6AFF               	clrf	tosu,c
 10105  00CE0E  50FA               	movf	pclath,w,c
 10106  00CE10  0012               	return		;indir
 10107  00CE12                     u3119:
 10108  00CE12  6E0C               	movwf	??_I2C_DO_RX^0,c
 10109  00CE14  6A0D               	clrf	(??_I2C_DO_RX+1)^0,c
 10110                           
 10111                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10112                           ; Switch size 1, requested type "simple"
 10113                           ; Number of cases is 1, Range of values is 0 to 0
 10114                           ; switch strategies available:
 10115                           ; Name         Instructions Cycles
 10116                           ; simple_byte            4     3 (average)
 10117                           ;	Chosen strategy is simple_byte
 10118  00CE16  500D               	movf	(??_I2C_DO_RX+1)^0,w,c
 10119  00CE18  0A00               	xorlw	0	; case 0
 10120  00CE1A  B4D8               	btfsc	status,2,c
 10121  00CE1C  EF12  F067         	goto	l6508
 10122  00CE20  EFF5  F066         	goto	l4424
 10123  00CE24                     l6508:
 10124                           
 10125                           ; Switch size 1, requested type "simple"
 10126                           ; Number of cases is 4, Range of values is 1 to 4
 10127                           ; switch strategies available:
 10128                           ; Name         Instructions Cycles
 10129                           ; simple_byte           13     7 (average)
 10130                           ;	Chosen strategy is simple_byte
 10131  00CE24  500C               	movf	??_I2C_DO_RX^0,w,c
 10132  00CE26  0A01               	xorlw	1	; case 1
 10133  00CE28  B4D8               	btfsc	status,2,c
 10134  00CE2A  EFF5  F066         	goto	l4424
 10135  00CE2E  0A03               	xorlw	3	; case 2
 10136  00CE30  B4D8               	btfsc	status,2,c
 10137  00CE32  EFF1  F066         	goto	l4420
 10138  00CE36  0A01               	xorlw	1	; case 3
 10139  00CE38  B4D8               	btfsc	status,2,c
 10140  00CE3A  EFF1  F066         	goto	l4420
 10141  00CE3E  0A07               	xorlw	7	; case 4
 10142  00CE40  B4D8               	btfsc	status,2,c
 10143  00CE42  EFF5  F066         	goto	l4424
 10144  00CE46  EFF5  F066         	goto	l4424
 10145  00CE4A                     l341:
 10146  00CE4A  0012               	return		;funcret
 10147  00CE4C                     __end_of_I2C_DO_RX:
 10148                           	callstack 0
 10149                           
 10150 ;; *************** function _I2C_DO_TX *****************
 10151 ;; Defined at:
 10152 ;;		line 354 in file "mcc_generated_files/i2c_master.c"
 10153 ;; Parameters:    Size  Location     Type
 10154 ;;		None
 10155 ;; Auto vars:     Size  Location     Type
 10156 ;;		None
 10157 ;; Return value:  Size  Location     Type
 10158 ;;                  1    wreg      enum E12575
 10159 ;; Registers used:
 10160 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10161 ;; Tracked objects:
 10162 ;;		On entry : 0/0
 10163 ;;		On exit  : 0/0
 10164 ;;		Unchanged: 0/0
 10165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10166 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10167 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10168 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10169 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10170 ;;Total ram usage:        2 bytes
 10171 ;; Hardware stack levels used:    1
 10172 ;; Hardware stack levels required when called:    3
 10173 ;; This function calls:
 10174 ;;		Absolute function
 10175 ;;		_I2C_CallbackReturnReset
 10176 ;;		_I2C_CallbackReturnStop
 10177 ;;		_I2C_DO_SEND_RESTART_READ
 10178 ;;		_I2C_DO_SEND_RESTART_WRITE
 10179 ;;		_I2C_DO_SEND_STOP
 10180 ;;		_I2C_MasterIsNack
 10181 ;;		_I2C_MasterSendTxData
 10182 ;;		_rd1RegCompleteHandler
 10183 ;;		_rd2RegCompleteHandler
 10184 ;;		_rdBlkRegCompleteHandler
 10185 ;;		_wr1RegCompleteHandler
 10186 ;;		_wr2RegCompleteHandler
 10187 ;; This function is called by:
 10188 ;;		_I2C_MasterFsm
 10189 ;; This function uses a non-reentrant model
 10190 ;;
 10191                           
 10192                           	psect	text60
 10193  00CFA6                     __ptext60:
 10194                           	callstack 0
 10195  00CFA6                     _I2C_DO_TX:
 10196                           	callstack 19
 10197  00CFA6                     
 10198                           ;mcc_generated_files/i2c_master.c: 356:     if(I2C_MasterIsNack())
 10199  00CFA6  ECFC  F060         	call	_I2C_MasterIsNack	;wreg free
 10200  00CFAA  0900               	iorlw	0
 10201  00CFAC  B4D8               	btfsc	status,2,c
 10202  00CFAE  EFDB  F067         	goto	u3071
 10203  00CFB2  EFDD  F067         	goto	u3070
 10204  00CFB6                     u3071:
 10205  00CFB6  EF18  F068         	goto	l324
 10206  00CFBA                     u3070:
 10207  00CFBA  EFEB  F067         	goto	l4390
 10208  00CFBE                     l4376:
 10209                           
 10210                           ;mcc_generated_files/i2c_master.c: 361:                 return I2C_DO_SEND_RESTART_READ(
      +                          );
 10211  00CFBE  EC95  F060         	call	_I2C_DO_SEND_RESTART_READ	;wreg free
 10212  00CFC2  EF34  F068         	goto	l327
 10213  00CFC6                     l4380:
 10214                           
 10215                           ;mcc_generated_files/i2c_master.c: 363:                   return I2C_DO_SEND_RESTART_WRI
      +                          TE();
 10216  00CFC6  EC99  F060         	call	_I2C_DO_SEND_RESTART_WRITE	;wreg free
 10217  00CFCA  EF34  F068         	goto	l327
 10218  00CFCE                     l4384:
 10219                           
 10220                           ;mcc_generated_files/i2c_master.c: 367:                 return I2C_DO_SEND_STOP();
 10221  00CFCE  ECA1  F060         	call	_I2C_DO_SEND_STOP	;wreg free
 10222  00CFD2  EF34  F068         	goto	l327
 10223  00CFD6                     l4390:
 10224  00CFD6  C162  F00A         	movff	_I2C_Status+18,I2C_CallbackReturnReset@funPtr
 10225  00CFDA  C163  F00B         	movff	_I2C_Status+19,I2C_CallbackReturnReset@funPtr+1
 10226  00CFDE  D802               	call	u3088
 10227  00CFE0  EFFC  F067         	goto	u3089
 10228  00CFE4                     u3088:
 10229  00CFE4  0005               	push	
 10230  00CFE6  6EFA               	movwf	pclath,c
 10231  00CFE8  0101               	movlb	1	; () banked
 10232  00CFEA  5156               	movf	(_I2C_Status+6)& (0+255),w,b
 10233  00CFEC  6EFD               	movwf	tosl,c
 10234  00CFEE  5157               	movf	(_I2C_Status+7)& (0+255),w,b
 10235  00CFF0  6EFE               	movwf	tosh,c
 10236  00CFF2  6AFF               	clrf	tosu,c
 10237  00CFF4  50FA               	movf	pclath,w,c
 10238  00CFF6  0012               	return		;indir
 10239  00CFF8                     u3089:
 10240  00CFF8  6E0C               	movwf	??_I2C_DO_TX^0,c
 10241  00CFFA  6A0D               	clrf	(??_I2C_DO_TX+1)^0,c
 10242                           
 10243                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10244                           ; Switch size 1, requested type "simple"
 10245                           ; Number of cases is 1, Range of values is 0 to 0
 10246                           ; switch strategies available:
 10247                           ; Name         Instructions Cycles
 10248                           ; simple_byte            4     3 (average)
 10249                           ;	Chosen strategy is simple_byte
 10250  00CFFC  500D               	movf	(??_I2C_DO_TX+1)^0,w,c
 10251  00CFFE  0A00               	xorlw	0	; case 0
 10252  00D000  B4D8               	btfsc	status,2,c
 10253  00D002  EF05  F068         	goto	l6510
 10254  00D006  EFE7  F067         	goto	l4384
 10255  00D00A                     l6510:
 10256                           
 10257                           ; Switch size 1, requested type "simple"
 10258                           ; Number of cases is 4, Range of values is 1 to 4
 10259                           ; switch strategies available:
 10260                           ; Name         Instructions Cycles
 10261                           ; simple_byte           13     7 (average)
 10262                           ;	Chosen strategy is simple_byte
 10263  00D00A  500C               	movf	??_I2C_DO_TX^0,w,c
 10264  00D00C  0A01               	xorlw	1	; case 1
 10265  00D00E  B4D8               	btfsc	status,2,c
 10266  00D010  EFE7  F067         	goto	l4384
 10267  00D014  0A03               	xorlw	3	; case 2
 10268  00D016  B4D8               	btfsc	status,2,c
 10269  00D018  EFDF  F067         	goto	l4376
 10270  00D01C  0A01               	xorlw	1	; case 3
 10271  00D01E  B4D8               	btfsc	status,2,c
 10272  00D020  EFE3  F067         	goto	l4380
 10273  00D024  0A07               	xorlw	7	; case 4
 10274  00D026  B4D8               	btfsc	status,2,c
 10275  00D028  EFE7  F067         	goto	l4384
 10276  00D02C  EFE7  F067         	goto	l4384
 10277  00D030                     l324:
 10278                           
 10279                           ;mcc_generated_files/i2c_master.c: 371:     {;mcc_generated_files/i2c_master.c: 372:    
      +                               I2C_Status.addressNackCheck = 0;
 10280  00D030  0101               	movlb	1	; () banked
 10281  00D032  9173               	bcf	(_I2C_Status+35)& (0+255),0,b
 10282  00D034                     
 10283                           ; BSR set to: 1
 10284                           ;mcc_generated_files/i2c_master.c: 373:         I2C_MasterSendTxData(*I2C_Status.data_pt
      +                          r++);
 10285  00D034  C16D  FFD9         	movff	_I2C_Status+29,fsr2l
 10286  00D038  C16E  FFDA         	movff	_I2C_Status+30,fsr2h
 10287  00D03C  4B6D               	infsnz	(_I2C_Status+29)& (0+255),f,b
 10288  00D03E  2B6E               	incf	(_I2C_Status+30)& (0+255),f,b
 10289  00D040  50DF               	movf	indf2,w,c
 10290  00D042  EC91  F060         	call	_I2C_MasterSendTxData
 10291  00D046                     
 10292                           ;mcc_generated_files/i2c_master.c: 374:         return (--I2C_Status.data_length)?I2C_TX
      +                          :I2C_TX_EMPTY;
 10293  00D046  0101               	movlb	1	; () banked
 10294  00D048  076F               	decf	(_I2C_Status+31)& (0+255),f,b
 10295  00D04A  A0D8               	btfss	status,0,c
 10296  00D04C  0770               	decf	(_I2C_Status+32)& (0+255),f,b
 10297  00D04E  516F               	movf	(_I2C_Status+31)& (0+255),w,b
 10298  00D050  1170               	iorwf	(_I2C_Status+32)& (0+255),w,b
 10299  00D052  A4D8               	btfss	status,2,c
 10300  00D054  EF2E  F068         	goto	u3091
 10301  00D058  EF30  F068         	goto	u3090
 10302  00D05C                     u3091:
 10303  00D05C  EF33  F068         	goto	l4398
 10304  00D060                     u3090:
 10305  00D060                     
 10306                           ; BSR set to: 1
 10307  00D060  0E06               	movlw	6
 10308  00D062  EF34  F068         	goto	l327
 10309  00D066                     l4398:
 10310                           
 10311                           ; BSR set to: 1
 10312  00D066  0E03               	movlw	3
 10313  00D068                     l327:
 10314  00D068  0012               	return		;funcret
 10315  00D06A                     __end_of_I2C_DO_TX:
 10316                           	callstack 0
 10317                           
 10318 ;; *************** function _I2C_DO_SEND_ADR_WRITE *****************
 10319 ;; Defined at:
 10320 ;;		line 347 in file "mcc_generated_files/i2c_master.c"
 10321 ;; Parameters:    Size  Location     Type
 10322 ;;		None
 10323 ;; Auto vars:     Size  Location     Type
 10324 ;;		None
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  1    wreg      enum E12575
 10327 ;; Registers used:
 10328 ;;		wreg, status,2, status,0, cstack
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10335 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10337 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10338 ;;Total ram usage:        0 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; Hardware stack levels required when called:    1
 10341 ;; This function calls:
 10342 ;;		_I2C_MasterSendTxData
 10343 ;; This function is called by:
 10344 ;;		_I2C_MasterFsm
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text61
 10349  00C1B2                     __ptext61:
 10350                           	callstack 0
 10351  00C1B2                     _I2C_DO_SEND_ADR_WRITE:
 10352                           	callstack 21
 10353  00C1B2                     
 10354                           ;mcc_generated_files/i2c_master.c: 349:     I2C_Status.addressNackCheck = 1;
 10355  00C1B2  0101               	movlb	1	; () banked
 10356  00C1B4  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 10357  00C1B6                     
 10358                           ; BSR set to: 1
 10359                           ;mcc_generated_files/i2c_master.c: 350:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1));
 10360  00C1B6  516C               	movf	(_I2C_Status+28)& (0+255),w,b
 10361  00C1B8  256C               	addwf	(_I2C_Status+28)& (0+255),w,b
 10362  00C1BA  EC91  F060         	call	_I2C_MasterSendTxData
 10363  00C1BE                     
 10364                           ;mcc_generated_files/i2c_master.c: 351:     return I2C_TX;
 10365  00C1BE  0E03               	movlw	3
 10366  00C1C0  0012               	return		;funcret
 10367  00C1C2                     __end_of_I2C_DO_SEND_ADR_WRITE:
 10368                           	callstack 0
 10369                           
 10370 ;; *************** function _I2C_DO_SEND_ADR_READ *****************
 10371 ;; Defined at:
 10372 ;;		line 340 in file "mcc_generated_files/i2c_master.c"
 10373 ;; Parameters:    Size  Location     Type
 10374 ;;		None
 10375 ;; Auto vars:     Size  Location     Type
 10376 ;;		None
 10377 ;; Return value:  Size  Location     Type
 10378 ;;                  1    wreg      enum E12575
 10379 ;; Registers used:
 10380 ;;		wreg, status,0, cstack
 10381 ;; Tracked objects:
 10382 ;;		On entry : 0/0
 10383 ;;		On exit  : 0/0
 10384 ;;		Unchanged: 0/0
 10385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10386 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10387 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10388 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10389 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10390 ;;Total ram usage:        0 bytes
 10391 ;; Hardware stack levels used:    1
 10392 ;; Hardware stack levels required when called:    1
 10393 ;; This function calls:
 10394 ;;		_I2C_MasterSendTxData
 10395 ;; This function is called by:
 10396 ;;		_I2C_MasterFsm
 10397 ;; This function uses a non-reentrant model
 10398 ;;
 10399                           
 10400                           	psect	text62
 10401  00C1A2                     __ptext62:
 10402                           	callstack 0
 10403  00C1A2                     _I2C_DO_SEND_ADR_READ:
 10404                           	callstack 21
 10405  00C1A2                     
 10406                           ;mcc_generated_files/i2c_master.c: 342:     I2C_Status.addressNackCheck = 1;
 10407  00C1A2  0101               	movlb	1	; () banked
 10408  00C1A4  8173               	bsf	(_I2C_Status+35)& (0+255),0,b
 10409  00C1A6                     
 10410                           ; BSR set to: 1
 10411                           ;mcc_generated_files/i2c_master.c: 343:     I2C_MasterSendTxData((uint8_t) (I2C_Status.a
      +                          ddress << 1 | 1));
 10412  00C1A6  80D8               	bsf	status,0,c
 10413  00C1A8  356C               	rlcf	(_I2C_Status+28)& (0+255),w,b
 10414  00C1AA  EC91  F060         	call	_I2C_MasterSendTxData
 10415  00C1AE                     
 10416                           ;mcc_generated_files/i2c_master.c: 344:     return I2C_RCEN;
 10417  00C1AE  0E05               	movlw	5
 10418  00C1B0  0012               	return		;funcret
 10419  00C1B2                     __end_of_I2C_DO_SEND_ADR_READ:
 10420                           	callstack 0
 10421                           
 10422 ;; *************** function _I2C_DO_IDLE *****************
 10423 ;; Defined at:
 10424 ;;		line 333 in file "mcc_generated_files/i2c_master.c"
 10425 ;; Parameters:    Size  Location     Type
 10426 ;;		None
 10427 ;; Auto vars:     Size  Location     Type
 10428 ;;		None
 10429 ;; Return value:  Size  Location     Type
 10430 ;;                  1    wreg      enum E12575
 10431 ;; Registers used:
 10432 ;;		wreg, status,2
 10433 ;; Tracked objects:
 10434 ;;		On entry : 0/0
 10435 ;;		On exit  : 0/0
 10436 ;;		Unchanged: 0/0
 10437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10442 ;;Total ram usage:        0 bytes
 10443 ;; Hardware stack levels used:    1
 10444 ;; This function calls:
 10445 ;;		Nothing
 10446 ;; This function is called by:
 10447 ;;		_I2C_MasterFsm
 10448 ;; This function uses a non-reentrant model
 10449 ;;
 10450                           
 10451                           	psect	text63
 10452  00C17E                     __ptext63:
 10453                           	callstack 0
 10454  00C17E                     _I2C_DO_IDLE:
 10455                           	callstack 22
 10456  00C17E                     
 10457                           ;mcc_generated_files/i2c_master.c: 335:     I2C_Status.busy = 0;
 10458  00C17E  0101               	movlb	1	; () banked
 10459  00C180  9373               	bcf	(_I2C_Status+35)& (0+255),1,b
 10460  00C182                     
 10461                           ; BSR set to: 1
 10462                           ;mcc_generated_files/i2c_master.c: 336:     I2C_Status.error = I2C_NOERR;
 10463  00C182  0E00               	movlw	0
 10464  00C184  6F72               	movwf	(_I2C_Status+34)& (0+255),b
 10465  00C186                     
 10466                           ; BSR set to: 1
 10467                           ;mcc_generated_files/i2c_master.c: 337:     return I2C_RESET;
 10468  00C186  0E0E               	movlw	14
 10469  00C188                     
 10470                           ; BSR set to: 1
 10471  00C188  0012               	return		;funcret
 10472  00C18A                     __end_of_I2C_DO_IDLE:
 10473                           	callstack 0
 10474                           
 10475 ;; *************** function _I2C_DO_TX_EMPTY *****************
 10476 ;; Defined at:
 10477 ;;		line 409 in file "mcc_generated_files/i2c_master.c"
 10478 ;; Parameters:    Size  Location     Type
 10479 ;;		None
 10480 ;; Auto vars:     Size  Location     Type
 10481 ;;		None
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  1    wreg      enum E12575
 10484 ;; Registers used:
 10485 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10491 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10493 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10495 ;;Total ram usage:        2 bytes
 10496 ;; Hardware stack levels used:    1
 10497 ;; Hardware stack levels required when called:    3
 10498 ;; This function calls:
 10499 ;;		Absolute function
 10500 ;;		_I2C_CallbackReturnReset
 10501 ;;		_I2C_CallbackReturnStop
 10502 ;;		_I2C_DO_SEND_RESTART
 10503 ;;		_I2C_DO_SEND_STOP
 10504 ;;		_I2C_MasterSetIrq
 10505 ;;		_rd1RegCompleteHandler
 10506 ;;		_rd2RegCompleteHandler
 10507 ;;		_rdBlkRegCompleteHandler
 10508 ;;		_wr1RegCompleteHandler
 10509 ;;		_wr2RegCompleteHandler
 10510 ;; This function is called by:
 10511 ;;		_I2C_MasterFsm
 10512 ;; This function uses a non-reentrant model
 10513 ;;
 10514                           
 10515                           	psect	text64
 10516  00CB5A                     __ptext64:
 10517                           	callstack 0
 10518  00CB5A                     _I2C_DO_TX_EMPTY:
 10519                           	callstack 19
 10520  00CB5A                     
 10521                           ;mcc_generated_files/i2c_master.c: 411:     I2C_Status.bufferFree = 1;
 10522  00CB5A  0101               	movlb	1	; () banked
 10523  00CB5C  8773               	bsf	(_I2C_Status+35)& (0+255),3,b
 10524                           
 10525                           ;mcc_generated_files/i2c_master.c: 412:     switch(I2C_Status.callbackTable[I2C_DATA_COM
      +                          PLETE](I2C_Status.callbackPayload[I2C_DATA_COMPLETE]))
 10526  00CB5E  EFBE  F065         	goto	l4464
 10527  00CB62                     l4448:
 10528                           
 10529                           ;mcc_generated_files/i2c_master.c: 416:             return I2C_DO_SEND_RESTART();
 10530  00CB62  EC9D  F060         	call	_I2C_DO_SEND_RESTART	;wreg free
 10531  00CB66  EFEA  F065         	goto	l358
 10532  00CB6A                     l4452:
 10533                           
 10534                           ;mcc_generated_files/i2c_master.c: 418:             I2C_MasterSetIrq();
 10535  00CB6A  EC7D  F060         	call	_I2C_MasterSetIrq	;wreg free
 10536  00CB6E                     
 10537                           ;mcc_generated_files/i2c_master.c: 419:             return I2C_TX;
 10538  00CB6E  0E03               	movlw	3
 10539  00CB70  EFEA  F065         	goto	l358
 10540  00CB74                     l4458:
 10541                           
 10542                           ;mcc_generated_files/i2c_master.c: 422:             return I2C_DO_SEND_STOP();
 10543  00CB74  ECA1  F060         	call	_I2C_DO_SEND_STOP	;wreg free
 10544  00CB78  EFEA  F065         	goto	l358
 10545  00CB7C                     l4464:
 10546                           
 10547                           ; BSR set to: 1
 10548  00CB7C  C15C  F00A         	movff	_I2C_Status+12,I2C_CallbackReturnReset@funPtr
 10549  00CB80  C15D  F00B         	movff	_I2C_Status+13,I2C_CallbackReturnReset@funPtr+1
 10550  00CB84  D802               	call	u3128
 10551  00CB86  EFCE  F065         	goto	u3129
 10552  00CB8A                     u3128:
 10553  00CB8A  0005               	push	
 10554  00CB8C  6EFA               	movwf	pclath,c
 10555  00CB8E  5150               	movf	_I2C_Status& (0+255),w,b
 10556  00CB90  6EFD               	movwf	tosl,c
 10557  00CB92  5151               	movf	(_I2C_Status+1)& (0+255),w,b
 10558  00CB94  6EFE               	movwf	tosh,c
 10559  00CB96  6AFF               	clrf	tosu,c
 10560  00CB98  50FA               	movf	pclath,w,c
 10561  00CB9A  0012               	return		;indir
 10562  00CB9C                     u3129:
 10563  00CB9C  6E0C               	movwf	??_I2C_DO_TX_EMPTY^0,c
 10564  00CB9E  6A0D               	clrf	(??_I2C_DO_TX_EMPTY+1)^0,c
 10565                           
 10566                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10567                           ; Switch size 1, requested type "simple"
 10568                           ; Number of cases is 1, Range of values is 0 to 0
 10569                           ; switch strategies available:
 10570                           ; Name         Instructions Cycles
 10571                           ; simple_byte            4     3 (average)
 10572                           ;	Chosen strategy is simple_byte
 10573  00CBA0  500D               	movf	(??_I2C_DO_TX_EMPTY+1)^0,w,c
 10574  00CBA2  0A00               	xorlw	0	; case 0
 10575  00CBA4  B4D8               	btfsc	status,2,c
 10576  00CBA6  EFD7  F065         	goto	l6512
 10577  00CBAA  EFBA  F065         	goto	l4458
 10578  00CBAE                     l6512:
 10579                           
 10580                           ; Switch size 1, requested type "simple"
 10581                           ; Number of cases is 4, Range of values is 1 to 4
 10582                           ; switch strategies available:
 10583                           ; Name         Instructions Cycles
 10584                           ; simple_byte           13     7 (average)
 10585                           ;	Chosen strategy is simple_byte
 10586  00CBAE  500C               	movf	??_I2C_DO_TX_EMPTY^0,w,c
 10587  00CBB0  0A01               	xorlw	1	; case 1
 10588  00CBB2  B4D8               	btfsc	status,2,c
 10589  00CBB4  EFBA  F065         	goto	l4458
 10590  00CBB8  0A03               	xorlw	3	; case 2
 10591  00CBBA  B4D8               	btfsc	status,2,c
 10592  00CBBC  EFB1  F065         	goto	l4448
 10593  00CBC0  0A01               	xorlw	1	; case 3
 10594  00CBC2  B4D8               	btfsc	status,2,c
 10595  00CBC4  EFB1  F065         	goto	l4448
 10596  00CBC8  0A07               	xorlw	7	; case 4
 10597  00CBCA  B4D8               	btfsc	status,2,c
 10598  00CBCC  EFB5  F065         	goto	l4452
 10599  00CBD0  EFBA  F065         	goto	l4458
 10600  00CBD4                     l358:
 10601  00CBD4  0012               	return		;funcret
 10602  00CBD6                     __end_of_I2C_DO_TX_EMPTY:
 10603                           	callstack 0
 10604                           
 10605 ;; *************** function _I2C_MasterSetIrq *****************
 10606 ;; Defined at:
 10607 ;;		line 645 in file "mcc_generated_files/i2c_master.c"
 10608 ;; Parameters:    Size  Location     Type
 10609 ;;		None
 10610 ;; Auto vars:     Size  Location     Type
 10611 ;;		None
 10612 ;; Return value:  Size  Location     Type
 10613 ;;                  1    wreg      void 
 10614 ;; Registers used:
 10615 ;;		None
 10616 ;; Tracked objects:
 10617 ;;		On entry : 0/0
 10618 ;;		On exit  : 0/0
 10619 ;;		Unchanged: 0/0
 10620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10625 ;;Total ram usage:        0 bytes
 10626 ;; Hardware stack levels used:    1
 10627 ;; This function calls:
 10628 ;;		Nothing
 10629 ;; This function is called by:
 10630 ;;		_I2C_DO_TX_EMPTY
 10631 ;; This function uses a non-reentrant model
 10632 ;;
 10633                           
 10634                           	psect	text65
 10635  00C0FA                     __ptext65:
 10636                           	callstack 0
 10637  00C0FA                     _I2C_MasterSetIrq:
 10638                           	callstack 21
 10639  00C0FA                     
 10640                           ;mcc_generated_files/i2c_master.c: 647:     PIR1bits.SSPIF = 1;
 10641  00C0FA  869E               	bsf	158,3,c	;volatile
 10642  00C0FC  0012               	return		;funcret
 10643  00C0FE                     __end_of_I2C_MasterSetIrq:
 10644                           	callstack 0
 10645                           
 10646 ;; *************** function _I2C_MasterIsNack *****************
 10647 ;; Defined at:
 10648 ;;		line 598 in file "mcc_generated_files/i2c_master.c"
 10649 ;; Parameters:    Size  Location     Type
 10650 ;;		None
 10651 ;; Auto vars:     Size  Location     Type
 10652 ;;		None
 10653 ;; Return value:  Size  Location     Type
 10654 ;;                  1    wreg      _Bool 
 10655 ;; Registers used:
 10656 ;;		wreg
 10657 ;; Tracked objects:
 10658 ;;		On entry : 0/0
 10659 ;;		On exit  : 0/0
 10660 ;;		Unchanged: 0/0
 10661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10662 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10663 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10665 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10666 ;;Total ram usage:        0 bytes
 10667 ;; Hardware stack levels used:    1
 10668 ;; This function calls:
 10669 ;;		Nothing
 10670 ;; This function is called by:
 10671 ;;		_I2C_MasterFsm
 10672 ;;		_I2C_DO_TX
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text66
 10677  00C1F8                     __ptext66:
 10678                           	callstack 0
 10679  00C1F8                     _I2C_MasterIsNack:
 10680                           	callstack 22
 10681  00C1F8                     
 10682                           ;mcc_generated_files/i2c_master.c: 600:     return SSPCON2bits.ACKSTAT;
 10683  00C1F8  BCC5               	btfsc	197,6,c	;volatile
 10684  00C1FA  EF01  F061         	goto	u3061
 10685  00C1FE  EF04  F061         	goto	u3060
 10686  00C202                     u3061:
 10687  00C202  0E01               	movlw	1
 10688  00C204  EF05  F061         	goto	u3066
 10689  00C208                     u3060:
 10690  00C208  0E00               	movlw	0
 10691  00C20A                     u3066:
 10692  00C20A  0012               	return		;funcret
 10693  00C20C                     __end_of_I2C_MasterIsNack:
 10694                           	callstack 0
 10695                           
 10696 ;; *************** function _I2C_MasterSendTxData *****************
 10697 ;; Defined at:
 10698 ;;		line 568 in file "mcc_generated_files/i2c_master.c"
 10699 ;; Parameters:    Size  Location     Type
 10700 ;;  data            1    wreg     unsigned char 
 10701 ;; Auto vars:     Size  Location     Type
 10702 ;;  data            1    0[COMRAM] unsigned char 
 10703 ;; Return value:  Size  Location     Type
 10704 ;;                  1    wreg      void 
 10705 ;; Registers used:
 10706 ;;		wreg
 10707 ;; Tracked objects:
 10708 ;;		On entry : 0/0
 10709 ;;		On exit  : 0/0
 10710 ;;		Unchanged: 0/0
 10711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10712 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10713 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10714 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10715 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10716 ;;Total ram usage:        1 bytes
 10717 ;; Hardware stack levels used:    1
 10718 ;; This function calls:
 10719 ;;		Nothing
 10720 ;; This function is called by:
 10721 ;;		_I2C_DO_SEND_ADR_READ
 10722 ;;		_I2C_DO_SEND_ADR_WRITE
 10723 ;;		_I2C_DO_TX
 10724 ;; This function uses a non-reentrant model
 10725 ;;
 10726                           
 10727                           	psect	text67
 10728  00C122                     __ptext67:
 10729                           	callstack 0
 10730  00C122                     _I2C_MasterSendTxData:
 10731                           	callstack 21
 10732                           
 10733                           ;incstack = 0
 10734                           ;I2C_MasterSendTxData@data stored from wreg
 10735  00C122  6E01               	movwf	I2C_MasterSendTxData@data^0,c
 10736  00C124                     
 10737                           ;mcc_generated_files/i2c_master.c: 568: static __attribute__((inline)) void I2C_MasterSe
      +                          ndTxData(uint8_t data);mcc_generated_files/i2c_master.c: 569: {;mcc_generated_files/i2c_
      +                          master.c: 570:     SSPBUF = data;
 10738  00C124  C001  FFC9         	movff	I2C_MasterSendTxData@data,4041	;volatile
 10739  00C128  0012               	return		;funcret
 10740  00C12A                     __end_of_I2C_MasterSendTxData:
 10741                           	callstack 0
 10742                           
 10743 ;; *************** function _I2C_MasterSendAck *****************
 10744 ;; Defined at:
 10745 ;;		line 603 in file "mcc_generated_files/i2c_master.c"
 10746 ;; Parameters:    Size  Location     Type
 10747 ;;		None
 10748 ;; Auto vars:     Size  Location     Type
 10749 ;;		None
 10750 ;; Return value:  Size  Location     Type
 10751 ;;                  1    wreg      void 
 10752 ;; Registers used:
 10753 ;;		None
 10754 ;; Tracked objects:
 10755 ;;		On entry : 0/0
 10756 ;;		On exit  : 0/0
 10757 ;;		Unchanged: 0/0
 10758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10763 ;;Total ram usage:        0 bytes
 10764 ;; Hardware stack levels used:    1
 10765 ;; This function calls:
 10766 ;;		Nothing
 10767 ;; This function is called by:
 10768 ;;		_I2C_DO_RX
 10769 ;;		_I2C_DO_RX_ACK
 10770 ;; This function uses a non-reentrant model
 10771 ;;
 10772                           
 10773                           	psect	text68
 10774  00C104                     __ptext68:
 10775                           	callstack 0
 10776  00C104                     _I2C_MasterSendAck:
 10777                           	callstack 21
 10778  00C104                     
 10779                           ;mcc_generated_files/i2c_master.c: 605:     SSPCON2bits.ACKDT = 0;
 10780  00C104  9AC5               	bcf	197,5,c	;volatile
 10781                           
 10782                           ;mcc_generated_files/i2c_master.c: 606:     SSPCON2bits.ACKEN = 1;
 10783  00C106  88C5               	bsf	197,4,c	;volatile
 10784  00C108  0012               	return		;funcret
 10785  00C10A                     __end_of_I2C_MasterSendAck:
 10786                           	callstack 0
 10787                           
 10788 ;; *************** function _I2C_MasterGetRxData *****************
 10789 ;; Defined at:
 10790 ;;		line 563 in file "mcc_generated_files/i2c_master.c"
 10791 ;; Parameters:    Size  Location     Type
 10792 ;;		None
 10793 ;; Auto vars:     Size  Location     Type
 10794 ;;		None
 10795 ;; Return value:  Size  Location     Type
 10796 ;;                  1    wreg      unsigned char 
 10797 ;; Registers used:
 10798 ;;		wreg, status,2
 10799 ;; Tracked objects:
 10800 ;;		On entry : 0/0
 10801 ;;		On exit  : 0/0
 10802 ;;		Unchanged: 0/0
 10803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10804 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10805 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10806 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10807 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10808 ;;Total ram usage:        0 bytes
 10809 ;; Hardware stack levels used:    1
 10810 ;; This function calls:
 10811 ;;		Nothing
 10812 ;; This function is called by:
 10813 ;;		_I2C_DO_RX
 10814 ;; This function uses a non-reentrant model
 10815 ;;
 10816                           
 10817                           	psect	text69
 10818  00C0F6                     __ptext69:
 10819                           	callstack 0
 10820  00C0F6                     _I2C_MasterGetRxData:
 10821                           	callstack 21
 10822  00C0F6                     
 10823                           ;mcc_generated_files/i2c_master.c: 565:     return SSPBUF;
 10824  00C0F6  50C9               	movf	201,w,c	;volatile
 10825  00C0F8  0012               	return		;funcret
 10826  00C0FA                     __end_of_I2C_MasterGetRxData:
 10827                           	callstack 0
 10828                           
 10829 ;; *************** function _I2C_MasterSendNack *****************
 10830 ;; Defined at:
 10831 ;;		line 609 in file "mcc_generated_files/i2c_master.c"
 10832 ;; Parameters:    Size  Location     Type
 10833 ;;		None
 10834 ;; Auto vars:     Size  Location     Type
 10835 ;;		None
 10836 ;; Return value:  Size  Location     Type
 10837 ;;                  1    wreg      void 
 10838 ;; Registers used:
 10839 ;;		None
 10840 ;; Tracked objects:
 10841 ;;		On entry : 0/0
 10842 ;;		On exit  : 0/0
 10843 ;;		Unchanged: 0/0
 10844 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10845 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10846 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10847 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10848 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10849 ;;Total ram usage:        0 bytes
 10850 ;; Hardware stack levels used:    1
 10851 ;; This function calls:
 10852 ;;		Nothing
 10853 ;; This function is called by:
 10854 ;;		_I2C_DO_RX_NACK_STOP
 10855 ;;		_I2C_DO_RX_NACK_RESTART
 10856 ;; This function uses a non-reentrant model
 10857 ;;
 10858                           
 10859                           	psect	text70
 10860  00C0FE                     __ptext70:
 10861                           	callstack 0
 10862  00C0FE                     _I2C_MasterSendNack:
 10863                           	callstack 21
 10864  00C0FE                     
 10865                           ;mcc_generated_files/i2c_master.c: 611:     SSPCON2bits.ACKDT = 1;
 10866  00C0FE  8AC5               	bsf	197,5,c	;volatile
 10867                           
 10868                           ;mcc_generated_files/i2c_master.c: 612:     SSPCON2bits.ACKEN = 1;
 10869  00C100  88C5               	bsf	197,4,c	;volatile
 10870  00C102  0012               	return		;funcret
 10871  00C104                     __end_of_I2C_MasterSendNack:
 10872                           	callstack 0
 10873                           
 10874 ;; *************** function _I2C_MasterStartRx *****************
 10875 ;; Defined at:
 10876 ;;		line 583 in file "mcc_generated_files/i2c_master.c"
 10877 ;; Parameters:    Size  Location     Type
 10878 ;;		None
 10879 ;; Auto vars:     Size  Location     Type
 10880 ;;		None
 10881 ;; Return value:  Size  Location     Type
 10882 ;;                  1    wreg      void 
 10883 ;; Registers used:
 10884 ;;		None
 10885 ;; Tracked objects:
 10886 ;;		On entry : 0/0
 10887 ;;		On exit  : 0/0
 10888 ;;		Unchanged: 0/0
 10889 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10890 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10891 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10892 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10893 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10894 ;;Total ram usage:        0 bytes
 10895 ;; Hardware stack levels used:    1
 10896 ;; This function calls:
 10897 ;;		Nothing
 10898 ;; This function is called by:
 10899 ;;		_I2C_DO_RCEN
 10900 ;; This function uses a non-reentrant model
 10901 ;;
 10902                           
 10903                           	psect	text71
 10904  00C0F2                     __ptext71:
 10905                           	callstack 0
 10906  00C0F2                     _I2C_MasterStartRx:
 10907                           	callstack 21
 10908  00C0F2                     
 10909                           ;mcc_generated_files/i2c_master.c: 585:     SSPCON2bits.RCEN = 1;
 10910  00C0F2  86C5               	bsf	197,3,c	;volatile
 10911  00C0F4  0012               	return		;funcret
 10912  00C0F6                     __end_of_I2C_MasterStartRx:
 10913                           	callstack 0
 10914                           
 10915 ;; *************** function _I2C_CallbackReturnReset *****************
 10916 ;; Defined at:
 10917 ;;		line 525 in file "mcc_generated_files/i2c_master.c"
 10918 ;; Parameters:    Size  Location     Type
 10919 ;;  funPtr          2    9[COMRAM] PTR void 
 10920 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10921 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10922 ;; Auto vars:     Size  Location     Type
 10923 ;;		None
 10924 ;; Return value:  Size  Location     Type
 10925 ;;                  1    wreg      enum E358
 10926 ;; Registers used:
 10927 ;;		wreg
 10928 ;; Tracked objects:
 10929 ;;		On entry : 0/0
 10930 ;;		On exit  : 0/0
 10931 ;;		Unchanged: 0/0
 10932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10933 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10935 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10937 ;;Total ram usage:        2 bytes
 10938 ;; Hardware stack levels used:    1
 10939 ;; This function calls:
 10940 ;;		Nothing
 10941 ;; This function is called by:
 10942 ;;		_I2C_Open
 10943 ;;		_I2C_DO_TX
 10944 ;;		_I2C_DO_RX
 10945 ;;		_I2C_DO_TX_EMPTY
 10946 ;;		_I2C_DO_ADDRESS_NACK
 10947 ;;		_I2C_DO_RX_EMPTY
 10948 ;; This function uses a non-reentrant model
 10949 ;;
 10950                           
 10951                           	psect	text72
 10952  00C0EE                     __ptext72:
 10953                           	callstack 0
 10954  00C0EE                     _I2C_CallbackReturnReset:
 10955                           	callstack 21
 10956  00C0EE                     
 10957                           ;mcc_generated_files/i2c_master.c: 525: i2c_operations_t I2C_CallbackReturnReset(void *f
      +                          unPtr);mcc_generated_files/i2c_master.c: 526: {;mcc_generated_files/i2c_master.c: 527:  
      +                             return I2C_RESET_LINK;
 10958  00C0EE  0E05               	movlw	5
 10959  00C0F0  0012               	return		;funcret
 10960  00C0F2                     __end_of_I2C_CallbackReturnReset:
 10961                           	callstack 0
 10962                           
 10963 ;; *************** function _I2C_CallbackReturnStop *****************
 10964 ;; Defined at:
 10965 ;;		line 520 in file "mcc_generated_files/i2c_master.c"
 10966 ;; Parameters:    Size  Location     Type
 10967 ;;  funPtr          2    9[COMRAM] PTR void 
 10968 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 10969 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 10970 ;; Auto vars:     Size  Location     Type
 10971 ;;		None
 10972 ;; Return value:  Size  Location     Type
 10973 ;;                  1    wreg      enum E358
 10974 ;; Registers used:
 10975 ;;		wreg
 10976 ;; Tracked objects:
 10977 ;;		On entry : 0/0
 10978 ;;		On exit  : 0/0
 10979 ;;		Unchanged: 0/0
 10980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 10981 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10982 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10984 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 10985 ;;Total ram usage:        2 bytes
 10986 ;; Hardware stack levels used:    1
 10987 ;; This function calls:
 10988 ;;		Nothing
 10989 ;; This function is called by:
 10990 ;;		_I2C_Open
 10991 ;;		_I2C_SetCallback
 10992 ;;		_I2C_DO_TX
 10993 ;;		_I2C_DO_RX
 10994 ;;		_I2C_DO_TX_EMPTY
 10995 ;;		_I2C_DO_ADDRESS_NACK
 10996 ;;		_I2C_DO_RX_EMPTY
 10997 ;; This function uses a non-reentrant model
 10998 ;;
 10999                           
 11000                           	psect	text73
 11001  00C0EA                     __ptext73:
 11002                           	callstack 0
 11003  00C0EA                     _I2C_CallbackReturnStop:
 11004                           	callstack 21
 11005  00C0EA                     
 11006                           ;mcc_generated_files/i2c_master.c: 520: i2c_operations_t I2C_CallbackReturnStop(void *fu
      +                          nPtr);mcc_generated_files/i2c_master.c: 521: {;mcc_generated_files/i2c_master.c: 522:   
      +                            return I2C_STOP_;
 11007  00C0EA  0E01               	movlw	1
 11008  00C0EC  0012               	return		;funcret
 11009  00C0EE                     __end_of_I2C_CallbackReturnStop:
 11010                           	callstack 0
 11011                           
 11012 ;; *************** function _rdBlkRegCompleteHandler *****************
 11013 ;; Defined at:
 11014 ;;		line 170 in file "mcc_generated_files/examples/i2c_master_example.c"
 11015 ;; Parameters:    Size  Location     Type
 11016 ;;  ptr             2    9[COMRAM] PTR void 
 11017 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11018 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11019 ;; Auto vars:     Size  Location     Type
 11020 ;;		None
 11021 ;; Return value:  Size  Location     Type
 11022 ;;                  1    wreg      enum E358
 11023 ;; Registers used:
 11024 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11025 ;; Tracked objects:
 11026 ;;		On entry : 0/0
 11027 ;;		On exit  : 0/0
 11028 ;;		Unchanged: 0/0
 11029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11030 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11033 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11034 ;;Total ram usage:        2 bytes
 11035 ;; Hardware stack levels used:    1
 11036 ;; Hardware stack levels required when called:    2
 11037 ;; This function calls:
 11038 ;;		_I2C_SetBuffer
 11039 ;;		_I2C_SetDataCompleteCallback
 11040 ;; This function is called by:
 11041 ;;		_I2C_ReadDataBlock
 11042 ;;		_I2C_DO_TX
 11043 ;;		_I2C_DO_RX
 11044 ;;		_I2C_DO_TX_EMPTY
 11045 ;;		_I2C_DO_ADDRESS_NACK
 11046 ;;		_I2C_DO_RX_EMPTY
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text74
 11051  00C5AE                     __ptext74:
 11052                           	callstack 0
 11053  00C5AE                     _rdBlkRegCompleteHandler:
 11054                           	callstack 19
 11055  00C5AE                     
 11056                           ;mcc_generated_files/examples/i2c_master_example.c: 170: static i2c_operations_t rdBlkRe
      +                          gCompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 171: {;mc
      +                          c_generated_files/examples/i2c_master_example.c: 172:     I2C_SetBuffer(((i2c_buffer_t *
      +                          )ptr)->data,((i2c_buffer_t*)ptr)->len);
 11057  00C5AE  EE20 F002          	lfsr	2,2
 11058  00C5B2  500A               	movf	rdBlkRegCompleteHandler@ptr^0,w,c
 11059  00C5B4  26D9               	addwf	fsr2l,f,c
 11060  00C5B6  500B               	movf	(rdBlkRegCompleteHandler@ptr+1)^0,w,c
 11061  00C5B8  22DA               	addwfc	fsr2h,f,c
 11062  00C5BA  CFDE F001          	movff	postinc2,I2C_SetBuffer@buffer
 11063  00C5BE  CFDD F002          	movff	postdec2,I2C_SetBuffer@buffer+1
 11064  00C5C2  C00A  FFD9         	movff	rdBlkRegCompleteHandler@ptr,fsr2l
 11065  00C5C6  C00B  FFDA         	movff	rdBlkRegCompleteHandler@ptr+1,fsr2h
 11066  00C5CA  CFDE F003          	movff	postinc2,I2C_SetBuffer@bufferSize
 11067  00C5CE  CFDD F004          	movff	postdec2,I2C_SetBuffer@bufferSize+1
 11068  00C5D2  EC7D  F061         	call	_I2C_SetBuffer	;wreg free
 11069  00C5D6                     
 11070                           ;mcc_generated_files/examples/i2c_master_example.c: 173:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11071  00C5D6  0E00               	movlw	0
 11072  00C5D8  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11073  00C5DA  0E00               	movlw	0
 11074  00C5DC  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11075  00C5DE  0E00               	movlw	0
 11076  00C5E0  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11077  00C5E2  0E00               	movlw	0
 11078  00C5E4  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11079  00C5E6  EC06  F061         	call	_I2C_SetDataCompleteCallback	;wreg free
 11080  00C5EA                     
 11081                           ;mcc_generated_files/examples/i2c_master_example.c: 174:     return I2C_RESTART_READ;
 11082  00C5EA  0E02               	movlw	2
 11083  00C5EC  0012               	return		;funcret
 11084  00C5EE                     __end_of_rdBlkRegCompleteHandler:
 11085                           	callstack 0
 11086                           
 11087 ;; *************** function _wr1RegCompleteHandler *****************
 11088 ;; Defined at:
 11089 ;;		line 156 in file "mcc_generated_files/examples/i2c_master_example.c"
 11090 ;; Parameters:    Size  Location     Type
 11091 ;;  ptr             2    9[COMRAM] PTR void 
 11092 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11093 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11094 ;; Auto vars:     Size  Location     Type
 11095 ;;		None
 11096 ;; Return value:  Size  Location     Type
 11097 ;;                  1    wreg      enum E358
 11098 ;; Registers used:
 11099 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11100 ;; Tracked objects:
 11101 ;;		On entry : 0/0
 11102 ;;		On exit  : 0/0
 11103 ;;		Unchanged: 0/0
 11104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11105 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11106 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11107 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11108 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11109 ;;Total ram usage:        2 bytes
 11110 ;; Hardware stack levels used:    1
 11111 ;; Hardware stack levels required when called:    2
 11112 ;; This function calls:
 11113 ;;		_I2C_SetBuffer
 11114 ;;		_I2C_SetDataCompleteCallback
 11115 ;; This function is called by:
 11116 ;;		_I2C_Write1ByteRegister
 11117 ;;		_I2C_DO_TX
 11118 ;;		_I2C_DO_RX
 11119 ;;		_I2C_DO_TX_EMPTY
 11120 ;;		_I2C_DO_ADDRESS_NACK
 11121 ;;		_I2C_DO_RX_EMPTY
 11122 ;; This function uses a non-reentrant model
 11123 ;;
 11124                           
 11125                           	psect	text75
 11126  00C442                     __ptext75:
 11127                           	callstack 0
 11128  00C442                     _wr1RegCompleteHandler:
 11129                           	callstack 19
 11130  00C442                     
 11131                           ;mcc_generated_files/examples/i2c_master_example.c: 156: static i2c_operations_t wr1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 157: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 158:     I2C_SetBuffer(ptr,1);
 11132  00C442  C00A  F001         	movff	wr1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11133  00C446  C00B  F002         	movff	wr1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11134  00C44A  0E00               	movlw	0
 11135  00C44C  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11136  00C44E  0E01               	movlw	1
 11137  00C450  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11138  00C452  EC7D  F061         	call	_I2C_SetBuffer	;wreg free
 11139  00C456                     
 11140                           ;mcc_generated_files/examples/i2c_master_example.c: 159:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11141  00C456  0E00               	movlw	0
 11142  00C458  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11143  00C45A  0E00               	movlw	0
 11144  00C45C  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11145  00C45E  0E00               	movlw	0
 11146  00C460  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11147  00C462  0E00               	movlw	0
 11148  00C464  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11149  00C466  EC06  F061         	call	_I2C_SetDataCompleteCallback	;wreg free
 11150  00C46A                     
 11151                           ;mcc_generated_files/examples/i2c_master_example.c: 160:     return I2C_CONTINUE;
 11152  00C46A  0E04               	movlw	4
 11153  00C46C  0012               	return		;funcret
 11154  00C46E                     __end_of_wr1RegCompleteHandler:
 11155                           	callstack 0
 11156                           
 11157 ;; *************** function _rd2RegCompleteHandler *****************
 11158 ;; Defined at:
 11159 ;;		line 149 in file "mcc_generated_files/examples/i2c_master_example.c"
 11160 ;; Parameters:    Size  Location     Type
 11161 ;;  ptr             2    9[COMRAM] PTR void 
 11162 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11163 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11164 ;; Auto vars:     Size  Location     Type
 11165 ;;		None
 11166 ;; Return value:  Size  Location     Type
 11167 ;;                  1    wreg      enum E358
 11168 ;; Registers used:
 11169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11170 ;; Tracked objects:
 11171 ;;		On entry : 0/0
 11172 ;;		On exit  : 0/0
 11173 ;;		Unchanged: 0/0
 11174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11175 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11176 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11177 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11178 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11179 ;;Total ram usage:        2 bytes
 11180 ;; Hardware stack levels used:    1
 11181 ;; Hardware stack levels required when called:    2
 11182 ;; This function calls:
 11183 ;;		_I2C_SetBuffer
 11184 ;;		_I2C_SetDataCompleteCallback
 11185 ;; This function is called by:
 11186 ;;		_I2C_Read2ByteRegister
 11187 ;;		_I2C_DO_TX
 11188 ;;		_I2C_DO_RX
 11189 ;;		_I2C_DO_TX_EMPTY
 11190 ;;		_I2C_DO_ADDRESS_NACK
 11191 ;;		_I2C_DO_RX_EMPTY
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text76
 11196  00C416                     __ptext76:
 11197                           	callstack 0
 11198  00C416                     _rd2RegCompleteHandler:
 11199                           	callstack 19
 11200  00C416                     
 11201                           ;mcc_generated_files/examples/i2c_master_example.c: 149: static i2c_operations_t rd2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 150: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 151:     I2C_SetBuffer(ptr,2);
 11202  00C416  C00A  F001         	movff	rd2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11203  00C41A  C00B  F002         	movff	rd2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11204  00C41E  0E00               	movlw	0
 11205  00C420  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11206  00C422  0E02               	movlw	2
 11207  00C424  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11208  00C426  EC7D  F061         	call	_I2C_SetBuffer	;wreg free
 11209  00C42A                     
 11210                           ;mcc_generated_files/examples/i2c_master_example.c: 152:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11211  00C42A  0E00               	movlw	0
 11212  00C42C  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11213  00C42E  0E00               	movlw	0
 11214  00C430  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11215  00C432  0E00               	movlw	0
 11216  00C434  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11217  00C436  0E00               	movlw	0
 11218  00C438  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11219  00C43A  EC06  F061         	call	_I2C_SetDataCompleteCallback	;wreg free
 11220  00C43E                     
 11221                           ;mcc_generated_files/examples/i2c_master_example.c: 153:     return I2C_RESTART_READ;
 11222  00C43E  0E02               	movlw	2
 11223  00C440  0012               	return		;funcret
 11224  00C442                     __end_of_rd2RegCompleteHandler:
 11225                           	callstack 0
 11226                           
 11227 ;; *************** function _rd1RegCompleteHandler *****************
 11228 ;; Defined at:
 11229 ;;		line 142 in file "mcc_generated_files/examples/i2c_master_example.c"
 11230 ;; Parameters:    Size  Location     Type
 11231 ;;  ptr             2    9[COMRAM] PTR void 
 11232 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11233 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11234 ;; Auto vars:     Size  Location     Type
 11235 ;;		None
 11236 ;; Return value:  Size  Location     Type
 11237 ;;                  1    wreg      enum E358
 11238 ;; Registers used:
 11239 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11240 ;; Tracked objects:
 11241 ;;		On entry : 0/0
 11242 ;;		On exit  : 0/0
 11243 ;;		Unchanged: 0/0
 11244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11245 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11246 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11248 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11249 ;;Total ram usage:        2 bytes
 11250 ;; Hardware stack levels used:    1
 11251 ;; Hardware stack levels required when called:    2
 11252 ;; This function calls:
 11253 ;;		_I2C_SetBuffer
 11254 ;;		_I2C_SetDataCompleteCallback
 11255 ;; This function is called by:
 11256 ;;		_I2C_Read1ByteRegister
 11257 ;;		_I2C_DO_TX
 11258 ;;		_I2C_DO_RX
 11259 ;;		_I2C_DO_TX_EMPTY
 11260 ;;		_I2C_DO_ADDRESS_NACK
 11261 ;;		_I2C_DO_RX_EMPTY
 11262 ;; This function uses a non-reentrant model
 11263 ;;
 11264                           
 11265                           	psect	text77
 11266  00C3EA                     __ptext77:
 11267                           	callstack 0
 11268  00C3EA                     _rd1RegCompleteHandler:
 11269                           	callstack 19
 11270  00C3EA                     
 11271                           ;mcc_generated_files/examples/i2c_master_example.c: 142: static i2c_operations_t rd1RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 143: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 144:     I2C_SetBuffer(ptr,1);
 11272  00C3EA  C00A  F001         	movff	rd1RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11273  00C3EE  C00B  F002         	movff	rd1RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11274  00C3F2  0E00               	movlw	0
 11275  00C3F4  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11276  00C3F6  0E01               	movlw	1
 11277  00C3F8  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11278  00C3FA  EC7D  F061         	call	_I2C_SetBuffer	;wreg free
 11279  00C3FE                     
 11280                           ;mcc_generated_files/examples/i2c_master_example.c: 145:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11281  00C3FE  0E00               	movlw	0
 11282  00C400  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11283  00C402  0E00               	movlw	0
 11284  00C404  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11285  00C406  0E00               	movlw	0
 11286  00C408  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11287  00C40A  0E00               	movlw	0
 11288  00C40C  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11289  00C40E  EC06  F061         	call	_I2C_SetDataCompleteCallback	;wreg free
 11290  00C412                     
 11291                           ;mcc_generated_files/examples/i2c_master_example.c: 146:     return I2C_RESTART_READ;
 11292  00C412  0E02               	movlw	2
 11293  00C414  0012               	return		;funcret
 11294  00C416                     __end_of_rd1RegCompleteHandler:
 11295                           	callstack 0
 11296                           
 11297 ;; *************** function _wr2RegCompleteHandler *****************
 11298 ;; Defined at:
 11299 ;;		line 163 in file "mcc_generated_files/examples/i2c_master_example.c"
 11300 ;; Parameters:    Size  Location     Type
 11301 ;;  ptr             2    9[COMRAM] PTR void 
 11302 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11303 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11304 ;; Auto vars:     Size  Location     Type
 11305 ;;		None
 11306 ;; Return value:  Size  Location     Type
 11307 ;;                  1    wreg      enum E358
 11308 ;; Registers used:
 11309 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11310 ;; Tracked objects:
 11311 ;;		On entry : 0/0
 11312 ;;		On exit  : 0/0
 11313 ;;		Unchanged: 0/0
 11314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11315 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11316 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11317 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11318 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11319 ;;Total ram usage:        2 bytes
 11320 ;; Hardware stack levels used:    1
 11321 ;; Hardware stack levels required when called:    2
 11322 ;; This function calls:
 11323 ;;		_I2C_SetBuffer
 11324 ;;		_I2C_SetDataCompleteCallback
 11325 ;; This function is called by:
 11326 ;;		_I2C_Write2ByteRegister
 11327 ;;		_I2C_DO_TX
 11328 ;;		_I2C_DO_RX
 11329 ;;		_I2C_DO_TX_EMPTY
 11330 ;;		_I2C_DO_ADDRESS_NACK
 11331 ;;		_I2C_DO_RX_EMPTY
 11332 ;; This function uses a non-reentrant model
 11333 ;;
 11334                           
 11335                           	psect	text78
 11336  00C3BE                     __ptext78:
 11337                           	callstack 0
 11338  00C3BE                     _wr2RegCompleteHandler:
 11339                           	callstack 19
 11340  00C3BE                     
 11341                           ;mcc_generated_files/examples/i2c_master_example.c: 163: static i2c_operations_t wr2RegC
      +                          ompleteHandler(void *ptr);mcc_generated_files/examples/i2c_master_example.c: 164: {;mcc_
      +                          generated_files/examples/i2c_master_example.c: 165:     I2C_SetBuffer(ptr,2);
 11342  00C3BE  C00A  F001         	movff	wr2RegCompleteHandler@ptr,I2C_SetBuffer@buffer
 11343  00C3C2  C00B  F002         	movff	wr2RegCompleteHandler@ptr+1,I2C_SetBuffer@buffer+1
 11344  00C3C6  0E00               	movlw	0
 11345  00C3C8  6E04               	movwf	(I2C_SetBuffer@bufferSize+1)^0,c
 11346  00C3CA  0E02               	movlw	2
 11347  00C3CC  6E03               	movwf	I2C_SetBuffer@bufferSize^0,c
 11348  00C3CE  EC7D  F061         	call	_I2C_SetBuffer	;wreg free
 11349  00C3D2                     
 11350                           ;mcc_generated_files/examples/i2c_master_example.c: 166:     I2C_SetDataCompleteCallback
      +                          (((void*)0),((void*)0));
 11351  00C3D2  0E00               	movlw	0
 11352  00C3D4  6E06               	movwf	I2C_SetDataCompleteCallback@cb^0,c
 11353  00C3D6  0E00               	movlw	0
 11354  00C3D8  6E07               	movwf	(I2C_SetDataCompleteCallback@cb+1)^0,c
 11355  00C3DA  0E00               	movlw	0
 11356  00C3DC  6E08               	movwf	I2C_SetDataCompleteCallback@ptr^0,c
 11357  00C3DE  0E00               	movlw	0
 11358  00C3E0  6E09               	movwf	(I2C_SetDataCompleteCallback@ptr+1)^0,c
 11359  00C3E2  EC06  F061         	call	_I2C_SetDataCompleteCallback	;wreg free
 11360  00C3E6                     
 11361                           ;mcc_generated_files/examples/i2c_master_example.c: 167:     return I2C_CONTINUE;
 11362  00C3E6  0E04               	movlw	4
 11363  00C3E8  0012               	return		;funcret
 11364  00C3EA                     __end_of_wr2RegCompleteHandler:
 11365                           	callstack 0
 11366                           
 11367 ;; *************** function _I2C_SetDataCompleteCallback *****************
 11368 ;; Defined at:
 11369 ;;		line 273 in file "mcc_generated_files/i2c_master.c"
 11370 ;; Parameters:    Size  Location     Type
 11371 ;;  cb              2    5[COMRAM] PTR FTN(PTR void ,)enum 
 11372 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11373 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11374 ;;  ptr             2    7[COMRAM] PTR void 
 11375 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11376 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11377 ;; Auto vars:     Size  Location     Type
 11378 ;;		None
 11379 ;; Return value:  Size  Location     Type
 11380 ;;                  1    wreg      void 
 11381 ;; Registers used:
 11382 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11383 ;; Tracked objects:
 11384 ;;		On entry : 0/0
 11385 ;;		On exit  : 0/0
 11386 ;;		Unchanged: 0/0
 11387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11388 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11389 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11390 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11391 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11392 ;;Total ram usage:        4 bytes
 11393 ;; Hardware stack levels used:    1
 11394 ;; Hardware stack levels required when called:    1
 11395 ;; This function calls:
 11396 ;;		_I2C_SetCallback
 11397 ;; This function is called by:
 11398 ;;		_rd1RegCompleteHandler
 11399 ;;		_rd2RegCompleteHandler
 11400 ;;		_wr1RegCompleteHandler
 11401 ;;		_wr2RegCompleteHandler
 11402 ;;		_rdBlkRegCompleteHandler
 11403 ;;		_I2C_Read1ByteRegister
 11404 ;;		_I2C_Read2ByteRegister
 11405 ;;		_I2C_Write1ByteRegister
 11406 ;;		_I2C_Write2ByteRegister
 11407 ;;		_I2C_ReadDataBlock
 11408 ;; This function uses a non-reentrant model
 11409 ;;
 11410                           
 11411                           	psect	text79
 11412  00C20C                     __ptext79:
 11413                           	callstack 0
 11414  00C20C                     _I2C_SetDataCompleteCallback:
 11415                           	callstack 19
 11416  00C20C                     
 11417                           ;mcc_generated_files/i2c_master.c: 273: void I2C_SetDataCompleteCallback(i2c_callback_t 
      +                          cb, void *ptr);mcc_generated_files/i2c_master.c: 274: {;mcc_generated_files/i2c_master.c
      +                          : 275:     I2C_SetCallback(I2C_DATA_COMPLETE, cb, ptr);
 11418  00C20C  C006  F001         	movff	I2C_SetDataCompleteCallback@cb,I2C_SetCallback@cb
 11419  00C210  C007  F002         	movff	I2C_SetDataCompleteCallback@cb+1,I2C_SetCallback@cb+1
 11420  00C214  C008  F003         	movff	I2C_SetDataCompleteCallback@ptr,I2C_SetCallback@ptr
 11421  00C218  C009  F004         	movff	I2C_SetDataCompleteCallback@ptr+1,I2C_SetCallback@ptr+1
 11422  00C21C  0E00               	movlw	0
 11423  00C21E  EC70  F065         	call	_I2C_SetCallback
 11424  00C222  0012               	return		;funcret
 11425  00C224                     __end_of_I2C_SetDataCompleteCallback:
 11426                           	callstack 0
 11427                           
 11428 ;; *************** function _I2C_SetCallback *****************
 11429 ;; Defined at:
 11430 ;;		line 298 in file "mcc_generated_files/i2c_master.c"
 11431 ;; Parameters:    Size  Location     Type
 11432 ;;  idx             1    wreg     enum E12593
 11433 ;;  cb              2    0[COMRAM] PTR FTN(PTR void ,)enum 
 11434 ;;		 -> Absolute function(1), rdBlkRegCompleteHandler(1), wr2RegCompleteHandler(1), wr1RegCompleteHandler(1), 
 11435 ;;		 -> rd2RegCompleteHandler(1), rd1RegCompleteHandler(1), 
 11436 ;;  ptr             2    2[COMRAM] PTR void 
 11437 ;;		 -> I2C_ReadDataBlock@bufferBlock(4), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@data(1), I2C_Read2ByteR
      +egister@returnValue(2), 
 11438 ;;		 -> NULL(0), I2C_Read1ByteRegister@returnValue(1), 
 11439 ;; Auto vars:     Size  Location     Type
 11440 ;;  idx             1    4[COMRAM] enum E12593
 11441 ;; Return value:  Size  Location     Type
 11442 ;;                  1    wreg      void 
 11443 ;; Registers used:
 11444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11445 ;; Tracked objects:
 11446 ;;		On entry : 0/0
 11447 ;;		On exit  : 0/0
 11448 ;;		Unchanged: 0/0
 11449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11450 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11451 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11453 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11454 ;;Total ram usage:        5 bytes
 11455 ;; Hardware stack levels used:    1
 11456 ;; This function calls:
 11457 ;;		Nothing
 11458 ;; This function is called by:
 11459 ;;		_I2C_SetDataCompleteCallback
 11460 ;;		_I2C_SetAddressNackCallback
 11461 ;;		_I2C_SetWriteCollisionCallback
 11462 ;;		_I2C_SetDataNackCallback
 11463 ;;		_I2C_SetTimeoutCallback
 11464 ;; This function uses a non-reentrant model
 11465 ;;
 11466                           
 11467                           	psect	text80
 11468  00CAE0                     __ptext80:
 11469                           	callstack 0
 11470  00CAE0                     _I2C_SetCallback:
 11471                           	callstack 25
 11472                           
 11473                           ;incstack = 0
 11474                           ;I2C_SetCallback@idx stored from wreg
 11475  00CAE0  6E05               	movwf	I2C_SetCallback@idx^0,c
 11476  00CAE2                     
 11477                           ;mcc_generated_files/i2c_master.c: 298: static void I2C_SetCallback(i2c_callbackIndex_t 
      +                          idx, i2c_callback_t cb, void *ptr);mcc_generated_files/i2c_master.c: 299: {;mcc_generate
      +                          d_files/i2c_master.c: 300:     if(cb)
 11478  00CAE2  5001               	movf	I2C_SetCallback@cb^0,w,c
 11479  00CAE4  1002               	iorwf	(I2C_SetCallback@cb+1)^0,w,c
 11480  00CAE6  B4D8               	btfsc	status,2,c
 11481  00CAE8  EF78  F065         	goto	u3041
 11482  00CAEC  EF7A  F065         	goto	u3040
 11483  00CAF0                     u3041:
 11484  00CAF0  EF94  F065         	goto	l4228
 11485  00CAF4                     u3040:
 11486  00CAF4                     
 11487                           ;mcc_generated_files/i2c_master.c: 301:     {;mcc_generated_files/i2c_master.c: 302:    
      +                               I2C_Status.callbackTable[idx] = cb;
 11488  00CAF4  5005               	movf	I2C_SetCallback@idx^0,w,c
 11489  00CAF6  0D02               	mullw	2
 11490  00CAF8  0E50               	movlw	low _I2C_Status
 11491  00CAFA  24F3               	addwf	243,w,c
 11492  00CAFC  6ED9               	movwf	fsr2l,c
 11493  00CAFE  0E01               	movlw	high _I2C_Status
 11494  00CB00  20F4               	addwfc	prodh,w,c
 11495  00CB02  6EDA               	movwf	fsr2h,c
 11496  00CB04  C001  FFDE         	movff	I2C_SetCallback@cb,postinc2
 11497  00CB08  C002  FFDD         	movff	I2C_SetCallback@cb+1,postdec2
 11498                           
 11499                           ;mcc_generated_files/i2c_master.c: 303:         I2C_Status.callbackPayload[idx] = ptr;
 11500  00CB0C  5005               	movf	I2C_SetCallback@idx^0,w,c
 11501  00CB0E  0D02               	mullw	2
 11502  00CB10  0E5C               	movlw	low (_I2C_Status+12)
 11503  00CB12  24F3               	addwf	243,w,c
 11504  00CB14  6ED9               	movwf	fsr2l,c
 11505  00CB16  0E01               	movlw	high (_I2C_Status+12)
 11506  00CB18  20F4               	addwfc	prodh,w,c
 11507  00CB1A  6EDA               	movwf	fsr2h,c
 11508  00CB1C  C003  FFDE         	movff	I2C_SetCallback@ptr,postinc2
 11509  00CB20  C004  FFDD         	movff	I2C_SetCallback@ptr+1,postdec2
 11510                           
 11511                           ;mcc_generated_files/i2c_master.c: 304:     }
 11512  00CB24  EFAC  F065         	goto	l302
 11513  00CB28                     l4228:
 11514                           
 11515                           ;mcc_generated_files/i2c_master.c: 306:     {;mcc_generated_files/i2c_master.c: 307:    
      +                               I2C_Status.callbackTable[idx] = I2C_CallbackReturnStop;
 11516  00CB28  5005               	movf	I2C_SetCallback@idx^0,w,c
 11517  00CB2A  0D02               	mullw	2
 11518  00CB2C  0E50               	movlw	low _I2C_Status
 11519  00CB2E  24F3               	addwf	243,w,c
 11520  00CB30  6ED9               	movwf	fsr2l,c
 11521  00CB32  0E01               	movlw	high _I2C_Status
 11522  00CB34  20F4               	addwfc	prodh,w,c
 11523  00CB36  6EDA               	movwf	fsr2h,c
 11524  00CB38  0EEA               	movlw	low _I2C_CallbackReturnStop
 11525  00CB3A  6EDE               	movwf	postinc2,c
 11526  00CB3C  0EC0               	movlw	high _I2C_CallbackReturnStop
 11527  00CB3E  6EDD               	movwf	postdec2,c
 11528                           
 11529                           ;mcc_generated_files/i2c_master.c: 308:         I2C_Status.callbackPayload[idx] = ((void
      +                          *)0);
 11530  00CB40  5005               	movf	I2C_SetCallback@idx^0,w,c
 11531  00CB42  0D02               	mullw	2
 11532  00CB44  0E5C               	movlw	low (_I2C_Status+12)
 11533  00CB46  24F3               	addwf	243,w,c
 11534  00CB48  6ED9               	movwf	fsr2l,c
 11535  00CB4A  0E01               	movlw	high (_I2C_Status+12)
 11536  00CB4C  20F4               	addwfc	prodh,w,c
 11537  00CB4E  6EDA               	movwf	fsr2h,c
 11538  00CB50  0E00               	movlw	0
 11539  00CB52  6EDE               	movwf	postinc2,c
 11540  00CB54  0E00               	movlw	0
 11541  00CB56  6EDD               	movwf	postdec2,c
 11542  00CB58                     l302:
 11543  00CB58  0012               	return		;funcret
 11544  00CB5A                     __end_of_I2C_SetCallback:
 11545                           	callstack 0
 11546                           
 11547 ;; *************** function _I2C_SetBuffer *****************
 11548 ;; Defined at:
 11549 ;;		line 263 in file "mcc_generated_files/i2c_master.c"
 11550 ;; Parameters:    Size  Location     Type
 11551 ;;  buffer          2    0[COMRAM] PTR void 
 11552 ;;		 -> Oled_Data@data_I2C(2), Oled_Command@data_I2C(2), I2C_ReadDataBlock@reg(1), I2C_ReadDataBlock@bufferBlock(4), 
 11553 ;;		 -> I2C_Write2ByteRegister@reg(1), I2C_Write2ByteRegister@data(2), I2C_Write1ByteRegister@reg(1), I2C_Write1ByteRegi
      +ster@data(1), 
 11554 ;;		 -> I2C_Read2ByteRegister@reg(1), I2C_Read2ByteRegister@returnValue(2), NULL(0), I2C_Read1ByteRegister@reg(1), 
 11555 ;;		 -> I2C_Read1ByteRegister@returnValue(1), 
 11556 ;;  bufferSize      2    2[COMRAM] unsigned int 
 11557 ;; Auto vars:     Size  Location     Type
 11558 ;;		None
 11559 ;; Return value:  Size  Location     Type
 11560 ;;                  1    wreg      void 
 11561 ;; Registers used:
 11562 ;;		wreg, status,2, status,0
 11563 ;; Tracked objects:
 11564 ;;		On entry : 0/0
 11565 ;;		On exit  : 0/0
 11566 ;;		Unchanged: 0/0
 11567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11568 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11571 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11572 ;;Total ram usage:        4 bytes
 11573 ;; Hardware stack levels used:    1
 11574 ;; This function calls:
 11575 ;;		Nothing
 11576 ;; This function is called by:
 11577 ;;		_I2C_WriteNBytes
 11578 ;;		_rd1RegCompleteHandler
 11579 ;;		_rd2RegCompleteHandler
 11580 ;;		_wr1RegCompleteHandler
 11581 ;;		_wr2RegCompleteHandler
 11582 ;;		_rdBlkRegCompleteHandler
 11583 ;;		_I2C_Read1ByteRegister
 11584 ;;		_I2C_Read2ByteRegister
 11585 ;;		_I2C_Write1ByteRegister
 11586 ;;		_I2C_Write2ByteRegister
 11587 ;;		_I2C_ReadNBytes
 11588 ;;		_I2C_ReadDataBlock
 11589 ;; This function uses a non-reentrant model
 11590 ;;
 11591                           
 11592                           	psect	text81
 11593  00C2FA                     __ptext81:
 11594                           	callstack 0
 11595  00C2FA                     _I2C_SetBuffer:
 11596                           	callstack 26
 11597  00C2FA                     
 11598                           ;mcc_generated_files/i2c_master.c: 263: void I2C_SetBuffer(void *buffer, size_t bufferSi
      +                          ze);mcc_generated_files/i2c_master.c: 264: {;mcc_generated_files/i2c_master.c: 265:     
      +                          if(I2C_Status.bufferFree)
 11599  00C2FA  0101               	movlb	1	; () banked
 11600  00C2FC  A773               	btfss	(_I2C_Status+35)& (0+255),3,b
 11601  00C2FE  EF83  F061         	goto	u3051
 11602  00C302  EF85  F061         	goto	u3050
 11603  00C306                     u3051:
 11604  00C306  EF8E  F061         	goto	l282
 11605  00C30A                     u3050:
 11606  00C30A                     
 11607                           ; BSR set to: 1
 11608                           ;mcc_generated_files/i2c_master.c: 266:     {;mcc_generated_files/i2c_master.c: 267:    
      +                               I2C_Status.data_ptr = buffer;
 11609  00C30A  C001  F16D         	movff	I2C_SetBuffer@buffer,_I2C_Status+29
 11610  00C30E  C002  F16E         	movff	I2C_SetBuffer@buffer+1,_I2C_Status+30
 11611  00C312                     
 11612                           ; BSR set to: 1
 11613                           ;mcc_generated_files/i2c_master.c: 268:         I2C_Status.data_length = bufferSize;
 11614  00C312  C003  F16F         	movff	I2C_SetBuffer@bufferSize,_I2C_Status+31
 11615  00C316  C004  F170         	movff	I2C_SetBuffer@bufferSize+1,_I2C_Status+32
 11616  00C31A                     
 11617                           ; BSR set to: 1
 11618                           ;mcc_generated_files/i2c_master.c: 269:         I2C_Status.bufferFree = 0;
 11619  00C31A  9773               	bcf	(_I2C_Status+35)& (0+255),3,b
 11620  00C31C                     l282:
 11621                           
 11622                           ; BSR set to: 1
 11623  00C31C  0012               	return		;funcret
 11624  00C31E                     __end_of_I2C_SetBuffer:
 11625                           	callstack 0
 11626                           
 11627 ;; *************** function _I2C_MasterStop *****************
 11628 ;; Defined at:
 11629 ;;		line 593 in file "mcc_generated_files/i2c_master.c"
 11630 ;; Parameters:    Size  Location     Type
 11631 ;;		None
 11632 ;; Auto vars:     Size  Location     Type
 11633 ;;		None
 11634 ;; Return value:  Size  Location     Type
 11635 ;;                  1    wreg      void 
 11636 ;; Registers used:
 11637 ;;		None
 11638 ;; Tracked objects:
 11639 ;;		On entry : 0/0
 11640 ;;		On exit  : 0/0
 11641 ;;		Unchanged: 0/0
 11642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11643 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11644 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11646 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11647 ;;Total ram usage:        0 bytes
 11648 ;; Hardware stack levels used:    1
 11649 ;; This function calls:
 11650 ;;		Nothing
 11651 ;; This function is called by:
 11652 ;;		_I2C_DO_SEND_STOP
 11653 ;; This function uses a non-reentrant model
 11654 ;;
 11655                           
 11656                           	psect	text82
 11657  00C0E6                     __ptext82:
 11658                           	callstack 0
 11659  00C0E6                     _I2C_MasterStop:
 11660                           	callstack 20
 11661  00C0E6                     
 11662                           ;mcc_generated_files/i2c_master.c: 595:     SSPCON2bits.PEN = 1;
 11663  00C0E6  84C5               	bsf	197,2,c	;volatile
 11664  00C0E8  0012               	return		;funcret
 11665  00C0EA                     __end_of_I2C_MasterStop:
 11666                           	callstack 0
 11667                           
 11668 ;; *************** function _I2C_MasterEnableRestart *****************
 11669 ;; Defined at:
 11670 ;;		line 573 in file "mcc_generated_files/i2c_master.c"
 11671 ;; Parameters:    Size  Location     Type
 11672 ;;		None
 11673 ;; Auto vars:     Size  Location     Type
 11674 ;;		None
 11675 ;; Return value:  Size  Location     Type
 11676 ;;                  1    wreg      void 
 11677 ;; Registers used:
 11678 ;;		None
 11679 ;; Tracked objects:
 11680 ;;		On entry : 0/0
 11681 ;;		On exit  : 0/0
 11682 ;;		Unchanged: 0/0
 11683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11684 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11685 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11686 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11687 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11688 ;;Total ram usage:        0 bytes
 11689 ;; Hardware stack levels used:    1
 11690 ;; This function calls:
 11691 ;;		Nothing
 11692 ;; This function is called by:
 11693 ;;		_I2C_DO_SEND_RESTART_READ
 11694 ;;		_I2C_DO_SEND_RESTART_WRITE
 11695 ;;		_I2C_DO_SEND_RESTART
 11696 ;;		_I2C_DO_RX_EMPTY
 11697 ;; This function uses a non-reentrant model
 11698 ;;
 11699                           
 11700                           	psect	text83
 11701  00C0E2                     __ptext83:
 11702                           	callstack 0
 11703  00C0E2                     _I2C_MasterEnableRestart:
 11704                           	callstack 20
 11705  00C0E2                     
 11706                           ;mcc_generated_files/i2c_master.c: 575:     SSPCON2bits.RSEN = 1;
 11707  00C0E2  82C5               	bsf	197,1,c	;volatile
 11708  00C0E4  0012               	return		;funcret
 11709  00C0E6                     __end_of_I2C_MasterEnableRestart:
 11710                           	callstack 0
 11711                           
 11712 ;; *************** function _I2C_MasterStart *****************
 11713 ;; Defined at:
 11714 ;;		line 588 in file "mcc_generated_files/i2c_master.c"
 11715 ;; Parameters:    Size  Location     Type
 11716 ;;		None
 11717 ;; Auto vars:     Size  Location     Type
 11718 ;;		None
 11719 ;; Return value:  Size  Location     Type
 11720 ;;                  1    wreg      void 
 11721 ;; Registers used:
 11722 ;;		None
 11723 ;; Tracked objects:
 11724 ;;		On entry : 0/0
 11725 ;;		On exit  : 0/0
 11726 ;;		Unchanged: 0/0
 11727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11732 ;;Total ram usage:        0 bytes
 11733 ;; Hardware stack levels used:    1
 11734 ;; This function calls:
 11735 ;;		Nothing
 11736 ;; This function is called by:
 11737 ;;		_I2C_MasterOperation
 11738 ;; This function uses a non-reentrant model
 11739 ;;
 11740                           
 11741                           	psect	text84
 11742  00C0DE                     __ptext84:
 11743                           	callstack 0
 11744  00C0DE                     _I2C_MasterStart:
 11745                           	callstack 24
 11746  00C0DE                     
 11747                           ;mcc_generated_files/i2c_master.c: 590:     SSPCON2bits.SEN = 1;
 11748  00C0DE  80C5               	bsf	197,0,c	;volatile
 11749  00C0E0  0012               	return		;funcret
 11750  00C0E2                     __end_of_I2C_MasterStart:
 11751                           	callstack 0
 11752                           
 11753 ;; *************** function _I2C_Close *****************
 11754 ;; Defined at:
 11755 ;;		line 209 in file "mcc_generated_files/i2c_master.c"
 11756 ;; Parameters:    Size  Location     Type
 11757 ;;		None
 11758 ;; Auto vars:     Size  Location     Type
 11759 ;;  returnValue     1    0[COMRAM] enum E353
 11760 ;; Return value:  Size  Location     Type
 11761 ;;                  1    wreg      enum E353
 11762 ;; Registers used:
 11763 ;;		wreg, status,2, cstack
 11764 ;; Tracked objects:
 11765 ;;		On entry : 0/0
 11766 ;;		On exit  : 0/0
 11767 ;;		Unchanged: 0/0
 11768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11769 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11770 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11771 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11772 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11773 ;;Total ram usage:        1 bytes
 11774 ;; Hardware stack levels used:    1
 11775 ;; Hardware stack levels required when called:    1
 11776 ;; This function calls:
 11777 ;;		_I2C_MasterClearIrq
 11778 ;;		_I2C_MasterClose
 11779 ;;		_I2C_MasterDisableIrq
 11780 ;; This function is called by:
 11781 ;;		_I2C_WriteNBytes
 11782 ;;		_I2C_Read1ByteRegister
 11783 ;;		_I2C_Read2ByteRegister
 11784 ;;		_I2C_Write1ByteRegister
 11785 ;;		_I2C_Write2ByteRegister
 11786 ;;		_I2C_ReadNBytes
 11787 ;;		_I2C_ReadDataBlock
 11788 ;; This function uses a non-reentrant model
 11789 ;;
 11790                           
 11791                           	psect	text85
 11792  00C392                     __ptext85:
 11793                           	callstack 0
 11794  00C392                     _I2C_Close:
 11795                           	callstack 25
 11796  00C392                     
 11797                           ;mcc_generated_files/i2c_master.c: 211:     i2c_error_t returnValue = I2C_BUSY;
 11798  00C392  0E01               	movlw	1
 11799  00C394  6E01               	movwf	I2C_Close@returnValue^0,c
 11800  00C396                     
 11801                           ;mcc_generated_files/i2c_master.c: 212:     if(!I2C_Status.busy)
 11802  00C396  0101               	movlb	1	; () banked
 11803  00C398  B373               	btfsc	(_I2C_Status+35)& (0+255),1,b
 11804  00C39A  EFD1  F061         	goto	u3701
 11805  00C39E  EFD3  F061         	goto	u3700
 11806  00C3A2                     u3701:
 11807  00C3A2  EFDD  F061         	goto	l4866
 11808  00C3A6                     u3700:
 11809  00C3A6                     
 11810                           ; BSR set to: 1
 11811                           ;mcc_generated_files/i2c_master.c: 213:     {;mcc_generated_files/i2c_master.c: 214:    
      +                               I2C_Status.inUse = 0;
 11812  00C3A6  9573               	bcf	(_I2C_Status+35)& (0+255),2,b
 11813                           
 11814                           ;mcc_generated_files/i2c_master.c: 215:         I2C_Status.address = 0xff;
 11815  00C3A8  696C               	setf	(_I2C_Status+28)& (0+255),b
 11816  00C3AA                     
 11817                           ; BSR set to: 1
 11818                           ;mcc_generated_files/i2c_master.c: 216:         I2C_MasterClearIrq();
 11819  00C3AA  EC69  F060         	call	_I2C_MasterClearIrq	;wreg free
 11820                           
 11821                           ;mcc_generated_files/i2c_master.c: 217:         I2C_MasterDisableIrq();
 11822  00C3AE  EC6D  F060         	call	_I2C_MasterDisableIrq	;wreg free
 11823                           
 11824                           ;mcc_generated_files/i2c_master.c: 218:         I2C_MasterClose();
 11825  00C3B2  EC6B  F060         	call	_I2C_MasterClose	;wreg free
 11826  00C3B6                     
 11827                           ;mcc_generated_files/i2c_master.c: 219:         returnValue = I2C_Status.error;
 11828  00C3B6  C172  F001         	movff	_I2C_Status+34,I2C_Close@returnValue
 11829  00C3BA                     l4866:
 11830                           
 11831                           ;mcc_generated_files/i2c_master.c: 221:     return returnValue;
 11832  00C3BA  5001               	movf	I2C_Close@returnValue^0,w,c
 11833  00C3BC  0012               	return		;funcret
 11834  00C3BE                     __end_of_I2C_Close:
 11835                           	callstack 0
 11836                           
 11837 ;; *************** function _I2C_MasterDisableIrq *****************
 11838 ;; Defined at:
 11839 ;;		line 635 in file "mcc_generated_files/i2c_master.c"
 11840 ;; Parameters:    Size  Location     Type
 11841 ;;		None
 11842 ;; Auto vars:     Size  Location     Type
 11843 ;;		None
 11844 ;; Return value:  Size  Location     Type
 11845 ;;                  1    wreg      void 
 11846 ;; Registers used:
 11847 ;;		None
 11848 ;; Tracked objects:
 11849 ;;		On entry : 0/0
 11850 ;;		On exit  : 0/0
 11851 ;;		Unchanged: 0/0
 11852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11853 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11855 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11856 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11857 ;;Total ram usage:        0 bytes
 11858 ;; Hardware stack levels used:    1
 11859 ;; This function calls:
 11860 ;;		Nothing
 11861 ;; This function is called by:
 11862 ;;		_I2C_Close
 11863 ;;		_I2C_SetTimeOut
 11864 ;; This function uses a non-reentrant model
 11865 ;;
 11866                           
 11867                           	psect	text86
 11868  00C0DA                     __ptext86:
 11869                           	callstack 0
 11870  00C0DA                     _I2C_MasterDisableIrq:
 11871                           	callstack 25
 11872  00C0DA                     
 11873                           ;mcc_generated_files/i2c_master.c: 637:     PIE1bits.SSPIE = 0;
 11874  00C0DA  969D               	bcf	157,3,c	;volatile
 11875  00C0DC  0012               	return		;funcret
 11876  00C0DE                     __end_of_I2C_MasterDisableIrq:
 11877                           	callstack 0
 11878                           
 11879 ;; *************** function _I2C_MasterClose *****************
 11880 ;; Defined at:
 11881 ;;		line 557 in file "mcc_generated_files/i2c_master.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;		None
 11884 ;; Auto vars:     Size  Location     Type
 11885 ;;		None
 11886 ;; Return value:  Size  Location     Type
 11887 ;;                  1    wreg      void 
 11888 ;; Registers used:
 11889 ;;		None
 11890 ;; Tracked objects:
 11891 ;;		On entry : 0/0
 11892 ;;		On exit  : 0/0
 11893 ;;		Unchanged: 0/0
 11894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11895 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11896 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11898 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11899 ;;Total ram usage:        0 bytes
 11900 ;; Hardware stack levels used:    1
 11901 ;; This function calls:
 11902 ;;		Nothing
 11903 ;; This function is called by:
 11904 ;;		_I2C_Close
 11905 ;; This function uses a non-reentrant model
 11906 ;;
 11907                           
 11908                           	psect	text87
 11909  00C0D6                     __ptext87:
 11910                           	callstack 0
 11911  00C0D6                     _I2C_MasterClose:
 11912                           	callstack 25
 11913  00C0D6                     
 11914                           ;mcc_generated_files/i2c_master.c: 560:     SSPCON1bits.SSPEN = 0;
 11915  00C0D6  9AC6               	bcf	198,5,c	;volatile
 11916  00C0D8  0012               	return		;funcret
 11917  00C0DA                     __end_of_I2C_MasterClose:
 11918                           	callstack 0
 11919                           
 11920 ;; *************** function _I2C_MasterClearIrq *****************
 11921 ;; Defined at:
 11922 ;;		line 640 in file "mcc_generated_files/i2c_master.c"
 11923 ;; Parameters:    Size  Location     Type
 11924 ;;		None
 11925 ;; Auto vars:     Size  Location     Type
 11926 ;;		None
 11927 ;; Return value:  Size  Location     Type
 11928 ;;                  1    wreg      void 
 11929 ;; Registers used:
 11930 ;;		None
 11931 ;; Tracked objects:
 11932 ;;		On entry : 0/0
 11933 ;;		On exit  : 0/0
 11934 ;;		Unchanged: 0/0
 11935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11940 ;;Total ram usage:        0 bytes
 11941 ;; Hardware stack levels used:    1
 11942 ;; This function calls:
 11943 ;;		Nothing
 11944 ;; This function is called by:
 11945 ;;		_I2C_Open
 11946 ;;		_I2C_Close
 11947 ;;		_I2C_MasterFsm
 11948 ;; This function uses a non-reentrant model
 11949 ;;
 11950                           
 11951                           	psect	text88
 11952  00C0D2                     __ptext88:
 11953                           	callstack 0
 11954  00C0D2                     _I2C_MasterClearIrq:
 11955                           	callstack 25
 11956  00C0D2                     
 11957                           ;mcc_generated_files/i2c_master.c: 642:     PIR1bits.SSPIF = 0;
 11958  00C0D2  969E               	bcf	158,3,c	;volatile
 11959  00C0D4  0012               	return		;funcret
 11960  00C0D6                     __end_of_I2C_MasterClearIrq:
 11961                           	callstack 0
 11962                           
 11963 ;; *************** function _I2C_Master_Init *****************
 11964 ;; Defined at:
 11965 ;;		line 118 in file "INA260.c"
 11966 ;; Parameters:    Size  Location     Type
 11967 ;;  c               4   13[COMRAM] const unsigned long 
 11968 ;; Auto vars:     Size  Location     Type
 11969 ;;		None
 11970 ;; Return value:  Size  Location     Type
 11971 ;;                  1    wreg      void 
 11972 ;; Registers used:
 11973 ;;		wreg, status,2, status,0, cstack
 11974 ;; Tracked objects:
 11975 ;;		On entry : 0/0
 11976 ;;		On exit  : 0/0
 11977 ;;		Unchanged: 0/0
 11978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 11979 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11980 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11981 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11982 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 11983 ;;Total ram usage:        8 bytes
 11984 ;; Hardware stack levels used:    1
 11985 ;; Hardware stack levels required when called:    1
 11986 ;; This function calls:
 11987 ;;		___lldiv
 11988 ;; This function is called by:
 11989 ;;		_main
 11990 ;; This function uses a non-reentrant model
 11991 ;;
 11992                           
 11993                           	psect	text89
 11994  00C7BA                     __ptext89:
 11995                           	callstack 0
 11996  00C7BA                     _I2C_Master_Init:
 11997                           	callstack 29
 11998  00C7BA                     
 11999                           ;INA260.c: 118: void I2C_Master_Init(const unsigned long c);INA260.c: 119: {;INA260.c: 1
      +                          20:   SSPCON1 = 0b00101000;
 12000  00C7BA  0E28               	movlw	40
 12001  00C7BC  6EC6               	movwf	198,c	;volatile
 12002                           
 12003                           ;INA260.c: 121:   SSPCON2 = 0;
 12004  00C7BE  0E00               	movlw	0
 12005  00C7C0  6EC5               	movwf	197,c	;volatile
 12006  00C7C2                     
 12007                           ;INA260.c: 122:   SSPADD = (8000000/(4*c))-1;
 12008  00C7C2  0E00               	movlw	0
 12009  00C7C4  6E01               	movwf	___lldiv@dividend^0,c
 12010  00C7C6  0E12               	movlw	18
 12011  00C7C8  6E02               	movwf	(___lldiv@dividend+1)^0,c
 12012  00C7CA  0E7A               	movlw	122
 12013  00C7CC  6E03               	movwf	(___lldiv@dividend+2)^0,c
 12014  00C7CE  0E00               	movlw	0
 12015  00C7D0  6E04               	movwf	(___lldiv@dividend+3)^0,c
 12016  00C7D2  C00E  F012         	movff	I2C_Master_Init@c,??_I2C_Master_Init
 12017  00C7D6  C00F  F013         	movff	I2C_Master_Init@c+1,??_I2C_Master_Init+1
 12018  00C7DA  C010  F014         	movff	I2C_Master_Init@c+2,??_I2C_Master_Init+2
 12019  00C7DE  C011  F015         	movff	I2C_Master_Init@c+3,??_I2C_Master_Init+3
 12020  00C7E2  0E02               	movlw	2
 12021  00C7E4                     u5745:
 12022  00C7E4  90D8               	bcf	status,0,c
 12023  00C7E6  3612               	rlcf	??_I2C_Master_Init^0,f,c
 12024  00C7E8  3613               	rlcf	(??_I2C_Master_Init+1)^0,f,c
 12025  00C7EA  3614               	rlcf	(??_I2C_Master_Init+2)^0,f,c
 12026  00C7EC  3615               	rlcf	(??_I2C_Master_Init+3)^0,f,c
 12027  00C7EE  2EE8               	decfsz	wreg,f,c
 12028  00C7F0  EFF2  F063         	goto	u5745
 12029  00C7F4  C012  F005         	movff	??_I2C_Master_Init,___lldiv@divisor
 12030  00C7F8  C013  F006         	movff	??_I2C_Master_Init+1,___lldiv@divisor+1
 12031  00C7FC  C014  F007         	movff	??_I2C_Master_Init+2,___lldiv@divisor+2
 12032  00C800  C015  F008         	movff	??_I2C_Master_Init+3,___lldiv@divisor+3
 12033  00C804  EC81  F066         	call	___lldiv	;wreg free
 12034  00C808  0401               	decf	?___lldiv^0,w,c
 12035  00C80A  6EC8               	movwf	200,c	;volatile
 12036  00C80C                     
 12037                           ;INA260.c: 123:   SSPSTAT = 0;
 12038  00C80C  0E00               	movlw	0
 12039  00C80E  6EC7               	movwf	199,c	;volatile
 12040  00C810                     
 12041                           ;INA260.c: 124:   TRISC3 = 1;
 12042  00C810  8694               	bsf	3988,3,c	;volatile
 12043  00C812                     
 12044                           ;INA260.c: 125:   TRISC4 = 1;
 12045  00C812  8894               	bsf	3988,4,c	;volatile
 12046  00C814  0012               	return		;funcret
 12047  00C816                     __end_of_I2C_Master_Init:
 12048                           	callstack 0
 12049                           
 12050 ;; *************** function ___lldiv *****************
 12051 ;; Defined at:
 12052 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
 12053 ;; Parameters:    Size  Location     Type
 12054 ;;  dividend        4    0[COMRAM] unsigned long 
 12055 ;;  divisor         4    4[COMRAM] unsigned long 
 12056 ;; Auto vars:     Size  Location     Type
 12057 ;;  quotient        4    8[COMRAM] unsigned long 
 12058 ;;  counter         1   12[COMRAM] unsigned char 
 12059 ;; Return value:  Size  Location     Type
 12060 ;;                  4    0[COMRAM] unsigned long 
 12061 ;; Registers used:
 12062 ;;		wreg, status,2, status,0
 12063 ;; Tracked objects:
 12064 ;;		On entry : 0/0
 12065 ;;		On exit  : 0/0
 12066 ;;		Unchanged: 0/0
 12067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12068 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12069 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12071 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12072 ;;Total ram usage:       13 bytes
 12073 ;; Hardware stack levels used:    1
 12074 ;; This function calls:
 12075 ;;		Nothing
 12076 ;; This function is called by:
 12077 ;;		_I2C_Master_Init
 12078 ;; This function uses a non-reentrant model
 12079 ;;
 12080                           
 12081                           	psect	text90
 12082  00CD02                     __ptext90:
 12083                           	callstack 0
 12084  00CD02                     ___lldiv:
 12085                           	callstack 29
 12086  00CD02  0E00               	movlw	0
 12087  00CD04  6E09               	movwf	___lldiv@quotient^0,c
 12088  00CD06  0E00               	movlw	0
 12089  00CD08  6E0A               	movwf	(___lldiv@quotient+1)^0,c
 12090  00CD0A  0E00               	movlw	0
 12091  00CD0C  6E0B               	movwf	(___lldiv@quotient+2)^0,c
 12092  00CD0E  0E00               	movlw	0
 12093  00CD10  6E0C               	movwf	(___lldiv@quotient+3)^0,c
 12094  00CD12  5005               	movf	___lldiv@divisor^0,w,c
 12095  00CD14  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
 12096  00CD16  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
 12097  00CD18  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
 12098  00CD1A  B4D8               	btfsc	status,2,c
 12099  00CD1C  EF92  F066         	goto	u5561
 12100  00CD20  EF94  F066         	goto	u5560
 12101  00CD24                     u5561:
 12102  00CD24  EFCA  F066         	goto	l843
 12103  00CD28                     u5560:
 12104  00CD28  0E01               	movlw	1
 12105  00CD2A  6E0D               	movwf	___lldiv@counter^0,c
 12106  00CD2C  EF9E  F066         	goto	l5960
 12107  00CD30                     l5958:
 12108  00CD30  90D8               	bcf	status,0,c
 12109  00CD32  3605               	rlcf	___lldiv@divisor^0,f,c
 12110  00CD34  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
 12111  00CD36  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
 12112  00CD38  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
 12113  00CD3A  2A0D               	incf	___lldiv@counter^0,f,c
 12114  00CD3C                     l5960:
 12115  00CD3C  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
 12116  00CD3E  EFA3  F066         	goto	u5571
 12117  00CD42  EFA5  F066         	goto	u5570
 12118  00CD46                     u5571:
 12119  00CD46  EF98  F066         	goto	l5958
 12120  00CD4A                     u5570:
 12121  00CD4A                     l5962:
 12122  00CD4A  90D8               	bcf	status,0,c
 12123  00CD4C  3609               	rlcf	___lldiv@quotient^0,f,c
 12124  00CD4E  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
 12125  00CD50  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
 12126  00CD52  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
 12127  00CD54  5005               	movf	___lldiv@divisor^0,w,c
 12128  00CD56  5C01               	subwf	___lldiv@dividend^0,w,c
 12129  00CD58  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12130  00CD5A  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
 12131  00CD5C  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12132  00CD5E  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
 12133  00CD60  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12134  00CD62  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
 12135  00CD64  A0D8               	btfss	status,0,c
 12136  00CD66  EFB7  F066         	goto	u5581
 12137  00CD6A  EFB9  F066         	goto	u5580
 12138  00CD6E                     u5581:
 12139  00CD6E  EFC2  F066         	goto	l5970
 12140  00CD72                     u5580:
 12141  00CD72  5005               	movf	___lldiv@divisor^0,w,c
 12142  00CD74  5E01               	subwf	___lldiv@dividend^0,f,c
 12143  00CD76  5006               	movf	(___lldiv@divisor+1)^0,w,c
 12144  00CD78  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
 12145  00CD7A  5007               	movf	(___lldiv@divisor+2)^0,w,c
 12146  00CD7C  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
 12147  00CD7E  5008               	movf	(___lldiv@divisor+3)^0,w,c
 12148  00CD80  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
 12149  00CD82  8009               	bsf	___lldiv@quotient^0,0,c
 12150  00CD84                     l5970:
 12151  00CD84  90D8               	bcf	status,0,c
 12152  00CD86  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
 12153  00CD88  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
 12154  00CD8A  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
 12155  00CD8C  3205               	rrcf	___lldiv@divisor^0,f,c
 12156  00CD8E  2E0D               	decfsz	___lldiv@counter^0,f,c
 12157  00CD90  EFA5  F066         	goto	l5962
 12158  00CD94                     l843:
 12159  00CD94  C009  F001         	movff	___lldiv@quotient,?___lldiv
 12160  00CD98  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 12161  00CD9C  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 12162  00CDA0  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 12163  00CDA4  0012               	return		;funcret
 12164  00CDA6                     __end_of___lldiv:
 12165                           	callstack 0
 12166                           
 12167 ;; *************** function _I2C_Initialize *****************
 12168 ;; Defined at:
 12169 ;;		line 167 in file "mcc_generated_files/i2c_master.c"
 12170 ;; Parameters:    Size  Location     Type
 12171 ;;		None
 12172 ;; Auto vars:     Size  Location     Type
 12173 ;;		None
 12174 ;; Return value:  Size  Location     Type
 12175 ;;                  1    wreg      void 
 12176 ;; Registers used:
 12177 ;;		wreg, status,2
 12178 ;; Tracked objects:
 12179 ;;		On entry : 0/0
 12180 ;;		On exit  : 0/0
 12181 ;;		Unchanged: 0/0
 12182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12187 ;;Total ram usage:        0 bytes
 12188 ;; Hardware stack levels used:    1
 12189 ;; This function calls:
 12190 ;;		Nothing
 12191 ;; This function is called by:
 12192 ;;		_main
 12193 ;; This function uses a non-reentrant model
 12194 ;;
 12195                           
 12196                           	psect	text91
 12197  00C1E4                     __ptext91:
 12198                           	callstack 0
 12199  00C1E4                     _I2C_Initialize:
 12200                           	callstack 30
 12201  00C1E4                     
 12202                           ;mcc_generated_files/i2c_master.c: 169:     SSPSTAT = 0x00;
 12203  00C1E4  0E00               	movlw	0
 12204  00C1E6  6EC7               	movwf	199,c	;volatile
 12205                           
 12206                           ;mcc_generated_files/i2c_master.c: 170:     SSPCON1 = 0x08;
 12207  00C1E8  0E08               	movlw	8
 12208  00C1EA  6EC6               	movwf	198,c	;volatile
 12209                           
 12210                           ;mcc_generated_files/i2c_master.c: 171:     SSPCON2 = 0x00;
 12211  00C1EC  0E00               	movlw	0
 12212  00C1EE  6EC5               	movwf	197,c	;volatile
 12213                           
 12214                           ;mcc_generated_files/i2c_master.c: 172:     SSPADD = 0x13;
 12215  00C1F0  0E13               	movlw	19
 12216  00C1F2  6EC8               	movwf	200,c	;volatile
 12217  00C1F4                     
 12218                           ;mcc_generated_files/i2c_master.c: 173:     SSPCON1bits.SSPEN = 0;
 12219  00C1F4  9AC6               	bcf	198,5,c	;volatile
 12220  00C1F6  0012               	return		;funcret
 12221  00C1F8                     __end_of_I2C_Initialize:
 12222                           	callstack 0
 12223                           
 12224 ;; *************** function _Current_ReadRegister *****************
 12225 ;; Defined at:
 12226 ;;		line 46 in file "INA260.c"
 12227 ;; Parameters:    Size  Location     Type
 12228 ;;		None
 12229 ;; Auto vars:     Size  Location     Type
 12230 ;;  temp_d          2   51[COMRAM] unsigned int 
 12231 ;;  temp_c          1   53[COMRAM] unsigned char 
 12232 ;; Return value:  Size  Location     Type
 12233 ;;                  4   45[COMRAM] float 
 12234 ;; Registers used:
 12235 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12236 ;; Tracked objects:
 12237 ;;		On entry : 0/0
 12238 ;;		On exit  : 0/0
 12239 ;;		Unchanged: 0/0
 12240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12242 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12243 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12244 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12245 ;;Total ram usage:        9 bytes
 12246 ;; Hardware stack levels used:    1
 12247 ;; Hardware stack levels required when called:    2
 12248 ;; This function calls:
 12249 ;;		_I2C_Master_Read
 12250 ;;		_I2C_Master_RepeatedStart
 12251 ;;		_I2C_Master_Start
 12252 ;;		_I2C_Master_Stop
 12253 ;;		_I2C_Master_Write
 12254 ;;		___fldiv
 12255 ;;		___flmul
 12256 ;;		___xxtofl
 12257 ;; This function is called by:
 12258 ;;		_main
 12259 ;; This function uses a non-reentrant model
 12260 ;;
 12261                           
 12262                           	psect	text92
 12263  00D7AA                     __ptext92:
 12264                           	callstack 0
 12265  00D7AA                     _Current_ReadRegister:
 12266                           	callstack 28
 12267  00D7AA                     
 12268                           ;INA260.c: 47:     I2C_Master_Start();
 12269  00D7AA  EC89  F060         	call	_I2C_Master_Start	;wreg free
 12270                           
 12271                           ;INA260.c: 48:     I2C_Master_Write(0x80);
 12272  00D7AE  0E00               	movlw	0
 12273  00D7B0  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12274  00D7B2  0E80               	movlw	128
 12275  00D7B4  6E02               	movwf	I2C_Master_Write@d^0,c
 12276  00D7B6  ECB5  F060         	call	_I2C_Master_Write	;wreg free
 12277                           
 12278                           ;INA260.c: 49:     I2C_Master_Write(0x01);
 12279  00D7BA  0E00               	movlw	0
 12280  00D7BC  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12281  00D7BE  0E01               	movlw	1
 12282  00D7C0  6E02               	movwf	I2C_Master_Write@d^0,c
 12283  00D7C2  ECB5  F060         	call	_I2C_Master_Write	;wreg free
 12284                           
 12285                           ;INA260.c: 50:     I2C_Master_RepeatedStart();
 12286  00D7C6  EC85  F060         	call	_I2C_Master_RepeatedStart	;wreg free
 12287                           
 12288                           ;INA260.c: 51:     I2C_Master_Write(0x81);
 12289  00D7CA  0E00               	movlw	0
 12290  00D7CC  6E03               	movwf	(I2C_Master_Write@d+1)^0,c
 12291  00D7CE  0E81               	movlw	129
 12292  00D7D0  6E02               	movwf	I2C_Master_Write@d^0,c
 12293  00D7D2  ECB5  F060         	call	_I2C_Master_Write	;wreg free
 12294                           
 12295                           ;INA260.c: 52:     char temp_c = I2C_Master_Read(1);
 12296  00D7D6  0E00               	movlw	0
 12297  00D7D8  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
 12298  00D7DA  0E01               	movlw	1
 12299  00D7DC  6E02               	movwf	I2C_Master_Read@a^0,c
 12300  00D7DE  EC4D  F062         	call	_I2C_Master_Read	;wreg free
 12301  00D7E2  5002               	movf	?_I2C_Master_Read^0,w,c
 12302  00D7E4  6E36               	movwf	Current_ReadRegister@temp_c^0,c
 12303                           
 12304                           ;INA260.c: 53:     unsigned int temp_d = temp_c<<8 | I2C_Master_Read(0);
 12305  00D7E6  0E00               	movlw	0
 12306  00D7E8  6E03               	movwf	(I2C_Master_Read@a+1)^0,c
 12307  00D7EA  0E00               	movlw	0
 12308  00D7EC  6E02               	movwf	I2C_Master_Read@a^0,c
 12309  00D7EE  EC4D  F062         	call	_I2C_Master_Read	;wreg free
 12310  00D7F2  5036               	movf	Current_ReadRegister@temp_c^0,w,c
 12311  00D7F4  6E33               	movwf	(??_Current_ReadRegister+1)^0,c
 12312  00D7F6  6A32               	clrf	??_Current_ReadRegister^0,c
 12313  00D7F8  5002               	movf	?_I2C_Master_Read^0,w,c
 12314  00D7FA  1032               	iorwf	??_Current_ReadRegister^0,w,c
 12315  00D7FC  6E34               	movwf	Current_ReadRegister@temp_d^0,c
 12316  00D7FE  5003               	movf	(?_I2C_Master_Read+1)^0,w,c
 12317  00D800  1033               	iorwf	(??_Current_ReadRegister+1)^0,w,c
 12318  00D802  6E35               	movwf	(Current_ReadRegister@temp_d+1)^0,c
 12319  00D804                     
 12320                           ;INA260.c: 54:     current = temp_d *1.25;
 12321  00D804  C034  F007         	movff	Current_ReadRegister@temp_d,___xxtofl@val
 12322  00D808  C035  F008         	movff	Current_ReadRegister@temp_d+1,___xxtofl@val+1
 12323  00D80C  6A09               	clrf	(___xxtofl@val+2)^0,c
 12324  00D80E  6A0A               	clrf	(___xxtofl@val+3)^0,c
 12325  00D810  0E00               	movlw	0
 12326  00D812  ECBA  F06D         	call	___xxtofl
 12327  00D816  C007  F015         	movff	?___xxtofl,___flmul@b
 12328  00D81A  C008  F016         	movff	?___xxtofl+1,___flmul@b+1
 12329  00D81E  C009  F017         	movff	?___xxtofl+2,___flmul@b+2
 12330  00D822  C00A  F018         	movff	?___xxtofl+3,___flmul@b+3
 12331  00D826  0E00               	movlw	0
 12332  00D828  6E19               	movwf	___flmul@a^0,c
 12333  00D82A  0E00               	movlw	0
 12334  00D82C  6E1A               	movwf	(___flmul@a+1)^0,c
 12335  00D82E  0EA0               	movlw	160
 12336  00D830  6E1B               	movwf	(___flmul@a+2)^0,c
 12337  00D832  0E3F               	movlw	63
 12338  00D834  6E1C               	movwf	(___flmul@a+3)^0,c
 12339  00D836  EC57  F072         	call	___flmul	;wreg free
 12340  00D83A  C015  F0BC         	movff	?___flmul,_current
 12341  00D83E  C016  F0BD         	movff	?___flmul+1,_current+1
 12342  00D842  C017  F0BE         	movff	?___flmul+2,_current+2
 12343  00D846  C018  F0BF         	movff	?___flmul+3,_current+3
 12344  00D84A                     
 12345                           ;INA260.c: 55:     I2C_Master_Stop();
 12346  00D84A  EC8D  F060         	call	_I2C_Master_Stop	;wreg free
 12347  00D84E                     
 12348                           ;INA260.c: 56:     current = current/1000;
 12349  00D84E  C0BC  F001         	movff	_current,___fldiv@b
 12350  00D852  C0BD  F002         	movff	_current+1,___fldiv@b+1
 12351  00D856  C0BE  F003         	movff	_current+2,___fldiv@b+2
 12352  00D85A  C0BF  F004         	movff	_current+3,___fldiv@b+3
 12353  00D85E  0E00               	movlw	0
 12354  00D860  6E05               	movwf	___fldiv@a^0,c
 12355  00D862  0E00               	movlw	0
 12356  00D864  6E06               	movwf	(___fldiv@a+1)^0,c
 12357  00D866  0E7A               	movlw	122
 12358  00D868  6E07               	movwf	(___fldiv@a+2)^0,c
 12359  00D86A  0E44               	movlw	68
 12360  00D86C  6E08               	movwf	(___fldiv@a+3)^0,c
 12361  00D86E  EC8A  F070         	call	___fldiv	;wreg free
 12362  00D872  C001  F0BC         	movff	?___fldiv,_current
 12363  00D876  C002  F0BD         	movff	?___fldiv+1,_current+1
 12364  00D87A  C003  F0BE         	movff	?___fldiv+2,_current+2
 12365  00D87E  C004  F0BF         	movff	?___fldiv+3,_current+3
 12366  00D882                     
 12367                           ;INA260.c: 57:     _delay((unsigned long)((300)*(8000000/4000.0)));
 12368  00D882  0E04               	movlw	4
 12369  00D884  6E33               	movwf	(??_Current_ReadRegister+1)^0,c
 12370  00D886  0E0C               	movlw	12
 12371  00D888  6E32               	movwf	??_Current_ReadRegister^0,c
 12372  00D88A  0E34               	movlw	52
 12373  00D88C                     u6017:
 12374  00D88C  2EE8               	decfsz	wreg,f,c
 12375  00D88E  D7FE               	bra	u6017
 12376  00D890  2E32               	decfsz	??_Current_ReadRegister^0,f,c
 12377  00D892  D7FC               	bra	u6017
 12378  00D894  2E33               	decfsz	(??_Current_ReadRegister+1)^0,f,c
 12379  00D896  D7FA               	bra	u6017
 12380  00D898                     
 12381                           ;INA260.c: 58:     _delay((unsigned long)((600)*(8000000/4000.0)));
 12382  00D898  0E07               	movlw	7
 12383  00D89A  6E33               	movwf	(??_Current_ReadRegister+1)^0,c
 12384  00D89C  0E17               	movlw	23
 12385  00D89E  6E32               	movwf	??_Current_ReadRegister^0,c
 12386  00D8A0  0E6A               	movlw	106
 12387  00D8A2                     u6027:
 12388  00D8A2  2EE8               	decfsz	wreg,f,c
 12389  00D8A4  D7FE               	bra	u6027
 12390  00D8A6  2E32               	decfsz	??_Current_ReadRegister^0,f,c
 12391  00D8A8  D7FC               	bra	u6027
 12392  00D8AA  2E33               	decfsz	(??_Current_ReadRegister+1)^0,f,c
 12393  00D8AC  D7FA               	bra	u6027
 12394  00D8AE  D000               	nop2	
 12395  00D8B0                     
 12396                           ;INA260.c: 59:     return current;
 12397  00D8B0  C0BC  F02E         	movff	_current,?_Current_ReadRegister
 12398  00D8B4  C0BD  F02F         	movff	_current+1,?_Current_ReadRegister+1
 12399  00D8B8  C0BE  F030         	movff	_current+2,?_Current_ReadRegister+2
 12400  00D8BC  C0BF  F031         	movff	_current+3,?_Current_ReadRegister+3
 12401  00D8C0  0012               	return		;funcret
 12402  00D8C2                     __end_of_Current_ReadRegister:
 12403                           	callstack 0
 12404                           
 12405 ;; *************** function ___xxtofl *****************
 12406 ;; Defined at:
 12407 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 12408 ;; Parameters:    Size  Location     Type
 12409 ;;  sign            1    wreg     unsigned char 
 12410 ;;  val             4    6[COMRAM] long 
 12411 ;; Auto vars:     Size  Location     Type
 12412 ;;  sign            1   14[COMRAM] unsigned char 
 12413 ;;  arg             4   16[COMRAM] unsigned long 
 12414 ;;  exp             1   15[COMRAM] unsigned char 
 12415 ;; Return value:  Size  Location     Type
 12416 ;;                  4    6[COMRAM] unsigned char 
 12417 ;; Registers used:
 12418 ;;		wreg, status,2, status,0
 12419 ;; Tracked objects:
 12420 ;;		On entry : 0/0
 12421 ;;		On exit  : 0/0
 12422 ;;		Unchanged: 0/0
 12423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12424 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12425 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12426 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12427 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12428 ;;Total ram usage:       14 bytes
 12429 ;; Hardware stack levels used:    1
 12430 ;; This function calls:
 12431 ;;		Nothing
 12432 ;; This function is called by:
 12433 ;;		_Voltage_ReadRegister
 12434 ;;		_Current_ReadRegister
 12435 ;;		_Power_ReadRegister
 12436 ;; This function uses a non-reentrant model
 12437 ;;
 12438                           
 12439                           	psect	text93
 12440  00DB74                     __ptext93:
 12441                           	callstack 0
 12442  00DB74                     ___xxtofl:
 12443                           	callstack 29
 12444                           
 12445                           ;incstack = 0
 12446                           ;___xxtofl@sign stored from wreg
 12447  00DB74  6E0F               	movwf	___xxtofl@sign^0,c
 12448  00DB76  500F               	movf	___xxtofl@sign^0,w,c
 12449  00DB78  B4D8               	btfsc	status,2,c
 12450  00DB7A  EFC1  F06D         	goto	u5591
 12451  00DB7E  EFC3  F06D         	goto	u5590
 12452  00DB82                     u5591:
 12453  00DB82  EFE5  F06D         	goto	l1471
 12454  00DB86                     u5590:
 12455  00DB86  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12456  00DB88  EFCA  F06D         	goto	u5600
 12457  00DB8C  EFC8  F06D         	goto	u5601
 12458  00DB90                     u5601:
 12459  00DB90  EFE5  F06D         	goto	l1471
 12460  00DB94                     u5600:
 12461  00DB94  C007  F00B         	movff	___xxtofl@val,??___xxtofl
 12462  00DB98  C008  F00C         	movff	___xxtofl@val+1,??___xxtofl+1
 12463  00DB9C  C009  F00D         	movff	___xxtofl@val+2,??___xxtofl+2
 12464  00DBA0  C00A  F00E         	movff	___xxtofl@val+3,??___xxtofl+3
 12465  00DBA4  1E0B               	comf	??___xxtofl^0,f,c
 12466  00DBA6  1E0C               	comf	(??___xxtofl+1)^0,f,c
 12467  00DBA8  1E0D               	comf	(??___xxtofl+2)^0,f,c
 12468  00DBAA  1E0E               	comf	(??___xxtofl+3)^0,f,c
 12469  00DBAC  2A0B               	incf	??___xxtofl^0,f,c
 12470  00DBAE  0E00               	movlw	0
 12471  00DBB0  220C               	addwfc	(??___xxtofl+1)^0,f,c
 12472  00DBB2  220D               	addwfc	(??___xxtofl+2)^0,f,c
 12473  00DBB4  220E               	addwfc	(??___xxtofl+3)^0,f,c
 12474  00DBB6  C00B  F011         	movff	??___xxtofl,___xxtofl@arg
 12475  00DBBA  C00C  F012         	movff	??___xxtofl+1,___xxtofl@arg+1
 12476  00DBBE  C00D  F013         	movff	??___xxtofl+2,___xxtofl@arg+2
 12477  00DBC2  C00E  F014         	movff	??___xxtofl+3,___xxtofl@arg+3
 12478  00DBC6  EFED  F06D         	goto	l5980
 12479  00DBCA                     l1471:
 12480  00DBCA  C007  F011         	movff	___xxtofl@val,___xxtofl@arg
 12481  00DBCE  C008  F012         	movff	___xxtofl@val+1,___xxtofl@arg+1
 12482  00DBD2  C009  F013         	movff	___xxtofl@val+2,___xxtofl@arg+2
 12483  00DBD6  C00A  F014         	movff	___xxtofl@val+3,___xxtofl@arg+3
 12484  00DBDA                     l5980:
 12485  00DBDA  5007               	movf	___xxtofl@val^0,w,c
 12486  00DBDC  1008               	iorwf	(___xxtofl@val+1)^0,w,c
 12487  00DBDE  1009               	iorwf	(___xxtofl@val+2)^0,w,c
 12488  00DBE0  100A               	iorwf	(___xxtofl@val+3)^0,w,c
 12489  00DBE2  A4D8               	btfss	status,2,c
 12490  00DBE4  EFF6  F06D         	goto	u5611
 12491  00DBE8  EFF8  F06D         	goto	u5610
 12492  00DBEC                     u5611:
 12493  00DBEC  EF02  F06E         	goto	l5986
 12494  00DBF0                     u5610:
 12495  00DBF0  0E00               	movlw	0
 12496  00DBF2  6E07               	movwf	?___xxtofl^0,c
 12497  00DBF4  0E00               	movlw	0
 12498  00DBF6  6E08               	movwf	(?___xxtofl+1)^0,c
 12499  00DBF8  0E00               	movlw	0
 12500  00DBFA  6E09               	movwf	(?___xxtofl+2)^0,c
 12501  00DBFC  0E00               	movlw	0
 12502  00DBFE  6E0A               	movwf	(?___xxtofl+3)^0,c
 12503  00DC00  EF93  F06E         	goto	l1474
 12504  00DC04                     l5986:
 12505  00DC04  0E96               	movlw	150
 12506  00DC06  6E10               	movwf	___xxtofl@exp^0,c
 12507  00DC08  EF0C  F06E         	goto	l5990
 12508  00DC0C                     l5988:
 12509  00DC0C  2A10               	incf	___xxtofl@exp^0,f,c
 12510  00DC0E  90D8               	bcf	status,0,c
 12511  00DC10  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12512  00DC12  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12513  00DC14  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12514  00DC16  3211               	rrcf	___xxtofl@arg^0,f,c
 12515  00DC18                     l5990:
 12516  00DC18  0E00               	movlw	0
 12517  00DC1A  1411               	andwf	___xxtofl@arg^0,w,c
 12518  00DC1C  6E0B               	movwf	??___xxtofl^0,c
 12519  00DC1E  0E00               	movlw	0
 12520  00DC20  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12521  00DC22  6E0C               	movwf	(??___xxtofl+1)^0,c
 12522  00DC24  0E00               	movlw	0
 12523  00DC26  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12524  00DC28  6E0D               	movwf	(??___xxtofl+2)^0,c
 12525  00DC2A  0EFE               	movlw	254
 12526  00DC2C  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12527  00DC2E  6E0E               	movwf	(??___xxtofl+3)^0,c
 12528  00DC30  500B               	movf	??___xxtofl^0,w,c
 12529  00DC32  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12530  00DC34  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12531  00DC36  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12532  00DC38  A4D8               	btfss	status,2,c
 12533  00DC3A  EF21  F06E         	goto	u5621
 12534  00DC3E  EF23  F06E         	goto	u5620
 12535  00DC42                     u5621:
 12536  00DC42  EF06  F06E         	goto	l5988
 12537  00DC46                     u5620:
 12538  00DC46  EF31  F06E         	goto	l1478
 12539  00DC4A                     l5992:
 12540  00DC4A  2A10               	incf	___xxtofl@exp^0,f,c
 12541  00DC4C  0E01               	movlw	1
 12542  00DC4E  2611               	addwf	___xxtofl@arg^0,f,c
 12543  00DC50  0E00               	movlw	0
 12544  00DC52  2212               	addwfc	(___xxtofl@arg+1)^0,f,c
 12545  00DC54  2213               	addwfc	(___xxtofl@arg+2)^0,f,c
 12546  00DC56  2214               	addwfc	(___xxtofl@arg+3)^0,f,c
 12547  00DC58  90D8               	bcf	status,0,c
 12548  00DC5A  3214               	rrcf	(___xxtofl@arg+3)^0,f,c
 12549  00DC5C  3213               	rrcf	(___xxtofl@arg+2)^0,f,c
 12550  00DC5E  3212               	rrcf	(___xxtofl@arg+1)^0,f,c
 12551  00DC60  3211               	rrcf	___xxtofl@arg^0,f,c
 12552  00DC62                     l1478:
 12553  00DC62  0E00               	movlw	0
 12554  00DC64  1411               	andwf	___xxtofl@arg^0,w,c
 12555  00DC66  6E0B               	movwf	??___xxtofl^0,c
 12556  00DC68  0E00               	movlw	0
 12557  00DC6A  1412               	andwf	(___xxtofl@arg+1)^0,w,c
 12558  00DC6C  6E0C               	movwf	(??___xxtofl+1)^0,c
 12559  00DC6E  0E00               	movlw	0
 12560  00DC70  1413               	andwf	(___xxtofl@arg+2)^0,w,c
 12561  00DC72  6E0D               	movwf	(??___xxtofl+2)^0,c
 12562  00DC74  0EFF               	movlw	255
 12563  00DC76  1414               	andwf	(___xxtofl@arg+3)^0,w,c
 12564  00DC78  6E0E               	movwf	(??___xxtofl+3)^0,c
 12565  00DC7A  500B               	movf	??___xxtofl^0,w,c
 12566  00DC7C  100C               	iorwf	(??___xxtofl+1)^0,w,c
 12567  00DC7E  100D               	iorwf	(??___xxtofl+2)^0,w,c
 12568  00DC80  100E               	iorwf	(??___xxtofl+3)^0,w,c
 12569  00DC82  A4D8               	btfss	status,2,c
 12570  00DC84  EF46  F06E         	goto	u5631
 12571  00DC88  EF48  F06E         	goto	u5630
 12572  00DC8C                     u5631:
 12573  00DC8C  EF25  F06E         	goto	l5992
 12574  00DC90                     u5630:
 12575  00DC90  EF50  F06E         	goto	l6000
 12576  00DC94                     l5998:
 12577  00DC94  0610               	decf	___xxtofl@exp^0,f,c
 12578  00DC96  90D8               	bcf	status,0,c
 12579  00DC98  3611               	rlcf	___xxtofl@arg^0,f,c
 12580  00DC9A  3612               	rlcf	(___xxtofl@arg+1)^0,f,c
 12581  00DC9C  3613               	rlcf	(___xxtofl@arg+2)^0,f,c
 12582  00DC9E  3614               	rlcf	(___xxtofl@arg+3)^0,f,c
 12583  00DCA0                     l6000:
 12584  00DCA0  BE13               	btfsc	(___xxtofl@arg+2)^0,7,c
 12585  00DCA2  EF55  F06E         	goto	u5641
 12586  00DCA6  EF57  F06E         	goto	u5640
 12587  00DCAA                     u5641:
 12588  00DCAA  EF5F  F06E         	goto	l1485
 12589  00DCAE                     u5640:
 12590  00DCAE  0E02               	movlw	2
 12591  00DCB0  6010               	cpfslt	___xxtofl@exp^0,c
 12592  00DCB2  EF5D  F06E         	goto	u5651
 12593  00DCB6  EF5F  F06E         	goto	u5650
 12594  00DCBA                     u5651:
 12595  00DCBA  EF4A  F06E         	goto	l5998
 12596  00DCBE                     u5650:
 12597  00DCBE                     l1485:
 12598  00DCBE  B010               	btfsc	___xxtofl@exp^0,0,c
 12599  00DCC0  EF64  F06E         	goto	u5661
 12600  00DCC4  EF66  F06E         	goto	u5660
 12601  00DCC8                     u5661:
 12602  00DCC8  EF67  F06E         	goto	l6006
 12603  00DCCC                     u5660:
 12604  00DCCC  9E13               	bcf	(___xxtofl@arg+2)^0,7,c
 12605  00DCCE                     l6006:
 12606  00DCCE  90D8               	bcf	status,0,c
 12607  00DCD0  3210               	rrcf	___xxtofl@exp^0,f,c
 12608  00DCD2  C010  F00B         	movff	___xxtofl@exp,??___xxtofl
 12609  00DCD6  6A0C               	clrf	(??___xxtofl+1)^0,c
 12610  00DCD8  6A0D               	clrf	(??___xxtofl+2)^0,c
 12611  00DCDA  6A0E               	clrf	(??___xxtofl+3)^0,c
 12612  00DCDC  C00B  F00E         	movff	??___xxtofl,??___xxtofl+3
 12613  00DCE0  6A0D               	clrf	(??___xxtofl+2)^0,c
 12614  00DCE2  6A0C               	clrf	(??___xxtofl+1)^0,c
 12615  00DCE4  6A0B               	clrf	??___xxtofl^0,c
 12616  00DCE6  500B               	movf	??___xxtofl^0,w,c
 12617  00DCE8  1211               	iorwf	___xxtofl@arg^0,f,c
 12618  00DCEA  500C               	movf	(??___xxtofl+1)^0,w,c
 12619  00DCEC  1212               	iorwf	(___xxtofl@arg+1)^0,f,c
 12620  00DCEE  500D               	movf	(??___xxtofl+2)^0,w,c
 12621  00DCF0  1213               	iorwf	(___xxtofl@arg+2)^0,f,c
 12622  00DCF2  500E               	movf	(??___xxtofl+3)^0,w,c
 12623  00DCF4  1214               	iorwf	(___xxtofl@arg+3)^0,f,c
 12624  00DCF6  500F               	movf	___xxtofl@sign^0,w,c
 12625  00DCF8  B4D8               	btfsc	status,2,c
 12626  00DCFA  EF81  F06E         	goto	u5671
 12627  00DCFE  EF83  F06E         	goto	u5670
 12628  00DD02                     u5671:
 12629  00DD02  EF8B  F06E         	goto	l6016
 12630  00DD06                     u5670:
 12631  00DD06  BE0A               	btfsc	(___xxtofl@val+3)^0,7,c
 12632  00DD08  EF8A  F06E         	goto	u5680
 12633  00DD0C  EF88  F06E         	goto	u5681
 12634  00DD10                     u5681:
 12635  00DD10  EF8B  F06E         	goto	l6016
 12636  00DD14                     u5680:
 12637  00DD14  8E14               	bsf	(___xxtofl@arg+3)^0,7,c
 12638  00DD16                     l6016:
 12639  00DD16  C011  F007         	movff	___xxtofl@arg,?___xxtofl
 12640  00DD1A  C012  F008         	movff	___xxtofl@arg+1,?___xxtofl+1
 12641  00DD1E  C013  F009         	movff	___xxtofl@arg+2,?___xxtofl+2
 12642  00DD22  C014  F00A         	movff	___xxtofl@arg+3,?___xxtofl+3
 12643  00DD26                     l1474:
 12644  00DD26  0012               	return		;funcret
 12645  00DD28                     __end_of___xxtofl:
 12646                           	callstack 0
 12647                           
 12648 ;; *************** function ___flmul *****************
 12649 ;; Defined at:
 12650 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 12651 ;; Parameters:    Size  Location     Type
 12652 ;;  b               4   20[COMRAM] unsigned char 
 12653 ;;  a               4   24[COMRAM] unsigned char 
 12654 ;; Auto vars:     Size  Location     Type
 12655 ;;  prod            4   39[COMRAM] struct .
 12656 ;;  grs             4   33[COMRAM] unsigned long 
 12657 ;;  temp            2   43[COMRAM] struct .
 12658 ;;  bexp            1   38[COMRAM] unsigned char 
 12659 ;;  aexp            1   37[COMRAM] unsigned char 
 12660 ;;  sign            1   32[COMRAM] unsigned char 
 12661 ;; Return value:  Size  Location     Type
 12662 ;;                  4   20[COMRAM] unsigned char 
 12663 ;; Registers used:
 12664 ;;		wreg, status,2, status,0, prodl, prodh
 12665 ;; Tracked objects:
 12666 ;;		On entry : 0/0
 12667 ;;		On exit  : 0/0
 12668 ;;		Unchanged: 0/0
 12669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 12670 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12671 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12672 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12673 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 12674 ;;Total ram usage:       25 bytes
 12675 ;; Hardware stack levels used:    1
 12676 ;; This function calls:
 12677 ;;		Nothing
 12678 ;; This function is called by:
 12679 ;;		_Voltage_ReadRegister
 12680 ;;		_Current_ReadRegister
 12681 ;;		_efgtoa
 12682 ;; This function uses a non-reentrant model
 12683 ;;
 12684                           
 12685                           	psect	text94
 12686  00E4AE                     __ptext94:
 12687                           	callstack 0
 12688  00E4AE                     ___flmul:
 12689                           	callstack 26
 12690  00E4AE  5018               	movf	(___flmul@b+3)^0,w,c
 12691  00E4B0  0B80               	andlw	128
 12692  00E4B2  6E21               	movwf	___flmul@sign^0,c
 12693  00E4B4  5018               	movf	(___flmul@b+3)^0,w,c
 12694  00E4B6  2418               	addwf	(___flmul@b+3)^0,w,c
 12695  00E4B8  6E27               	movwf	___flmul@bexp^0,c
 12696  00E4BA  AE17               	btfss	(___flmul@b+2)^0,7,c
 12697  00E4BC  EF62  F072         	goto	u3941
 12698  00E4C0  EF64  F072         	goto	u3940
 12699  00E4C4                     u3941:
 12700  00E4C4  EF65  F072         	goto	l5020
 12701  00E4C8                     u3940:
 12702  00E4C8  8027               	bsf	___flmul@bexp^0,0,c
 12703  00E4CA                     l5020:
 12704  00E4CA  5027               	movf	___flmul@bexp^0,w,c
 12705  00E4CC  B4D8               	btfsc	status,2,c
 12706  00E4CE  EF6B  F072         	goto	u3951
 12707  00E4D2  EF6D  F072         	goto	u3950
 12708  00E4D6                     u3951:
 12709  00E4D6  EF80  F072         	goto	l5028
 12710  00E4DA                     u3950:
 12711  00E4DA  2827               	incf	___flmul@bexp^0,w,c
 12712  00E4DC  A4D8               	btfss	status,2,c
 12713  00E4DE  EF73  F072         	goto	u3961
 12714  00E4E2  EF75  F072         	goto	u3960
 12715  00E4E6                     u3961:
 12716  00E4E6  EF7D  F072         	goto	l5026
 12717  00E4EA                     u3960:
 12718  00E4EA  0E00               	movlw	0
 12719  00E4EC  6E15               	movwf	___flmul@b^0,c
 12720  00E4EE  0E00               	movlw	0
 12721  00E4F0  6E16               	movwf	(___flmul@b+1)^0,c
 12722  00E4F2  0E00               	movlw	0
 12723  00E4F4  6E17               	movwf	(___flmul@b+2)^0,c
 12724  00E4F6  0E00               	movlw	0
 12725  00E4F8  6E18               	movwf	(___flmul@b+3)^0,c
 12726  00E4FA                     l5026:
 12727  00E4FA  8E17               	bsf	(___flmul@b+2)^0,7,c
 12728  00E4FC  EF88  F072         	goto	l5030
 12729  00E500                     l5028:
 12730  00E500  0E00               	movlw	0
 12731  00E502  6E15               	movwf	___flmul@b^0,c
 12732  00E504  0E00               	movlw	0
 12733  00E506  6E16               	movwf	(___flmul@b+1)^0,c
 12734  00E508  0E00               	movlw	0
 12735  00E50A  6E17               	movwf	(___flmul@b+2)^0,c
 12736  00E50C  0E00               	movlw	0
 12737  00E50E  6E18               	movwf	(___flmul@b+3)^0,c
 12738  00E510                     l5030:
 12739  00E510  501C               	movf	(___flmul@a+3)^0,w,c
 12740  00E512  0B80               	andlw	128
 12741  00E514  1A21               	xorwf	___flmul@sign^0,f,c
 12742  00E516  501C               	movf	(___flmul@a+3)^0,w,c
 12743  00E518  241C               	addwf	(___flmul@a+3)^0,w,c
 12744  00E51A  6E26               	movwf	___flmul@aexp^0,c
 12745  00E51C  AE1B               	btfss	(___flmul@a+2)^0,7,c
 12746  00E51E  EF93  F072         	goto	u3971
 12747  00E522  EF95  F072         	goto	u3970
 12748  00E526                     u3971:
 12749  00E526  EF96  F072         	goto	l5038
 12750  00E52A                     u3970:
 12751  00E52A  8026               	bsf	___flmul@aexp^0,0,c
 12752  00E52C                     l5038:
 12753  00E52C  5026               	movf	___flmul@aexp^0,w,c
 12754  00E52E  B4D8               	btfsc	status,2,c
 12755  00E530  EF9C  F072         	goto	u3981
 12756  00E534  EF9E  F072         	goto	u3980
 12757  00E538                     u3981:
 12758  00E538  EFB1  F072         	goto	l5046
 12759  00E53C                     u3980:
 12760  00E53C  2826               	incf	___flmul@aexp^0,w,c
 12761  00E53E  A4D8               	btfss	status,2,c
 12762  00E540  EFA4  F072         	goto	u3991
 12763  00E544  EFA6  F072         	goto	u3990
 12764  00E548                     u3991:
 12765  00E548  EFAE  F072         	goto	l5044
 12766  00E54C                     u3990:
 12767  00E54C  0E00               	movlw	0
 12768  00E54E  6E19               	movwf	___flmul@a^0,c
 12769  00E550  0E00               	movlw	0
 12770  00E552  6E1A               	movwf	(___flmul@a+1)^0,c
 12771  00E554  0E00               	movlw	0
 12772  00E556  6E1B               	movwf	(___flmul@a+2)^0,c
 12773  00E558  0E00               	movlw	0
 12774  00E55A  6E1C               	movwf	(___flmul@a+3)^0,c
 12775  00E55C                     l5044:
 12776  00E55C  8E1B               	bsf	(___flmul@a+2)^0,7,c
 12777  00E55E  EFB9  F072         	goto	l1430
 12778  00E562                     l5046:
 12779  00E562  0E00               	movlw	0
 12780  00E564  6E19               	movwf	___flmul@a^0,c
 12781  00E566  0E00               	movlw	0
 12782  00E568  6E1A               	movwf	(___flmul@a+1)^0,c
 12783  00E56A  0E00               	movlw	0
 12784  00E56C  6E1B               	movwf	(___flmul@a+2)^0,c
 12785  00E56E  0E00               	movlw	0
 12786  00E570  6E1C               	movwf	(___flmul@a+3)^0,c
 12787  00E572                     l1430:
 12788  00E572  5026               	movf	___flmul@aexp^0,w,c
 12789  00E574  B4D8               	btfsc	status,2,c
 12790  00E576  EFBF  F072         	goto	u4001
 12791  00E57A  EFC1  F072         	goto	u4000
 12792  00E57E                     u4001:
 12793  00E57E  EFC9  F072         	goto	l5050
 12794  00E582                     u4000:
 12795  00E582  5027               	movf	___flmul@bexp^0,w,c
 12796  00E584  A4D8               	btfss	status,2,c
 12797  00E586  EFC7  F072         	goto	u4011
 12798  00E58A  EFC9  F072         	goto	u4010
 12799  00E58E                     u4011:
 12800  00E58E  EFD3  F072         	goto	l5054
 12801  00E592                     u4010:
 12802  00E592                     l5050:
 12803  00E592  0E00               	movlw	0
 12804  00E594  6E15               	movwf	?___flmul^0,c
 12805  00E596  0E00               	movlw	0
 12806  00E598  6E16               	movwf	(?___flmul+1)^0,c
 12807  00E59A  0E00               	movlw	0
 12808  00E59C  6E17               	movwf	(?___flmul+2)^0,c
 12809  00E59E  0E00               	movlw	0
 12810  00E5A0  6E18               	movwf	(?___flmul+3)^0,c
 12811  00E5A2  EF6B  F074         	goto	l1434
 12812  00E5A6                     l5054:
 12813  00E5A6  501B               	movf	(___flmul@a+2)^0,w,c
 12814  00E5A8  0215               	mulwf	___flmul@b^0,c
 12815  00E5AA  CFF3 F02C          	movff	prodl,___flmul@temp
 12816  00E5AE  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12817  00E5B2  502C               	movf	___flmul@temp^0,w,c
 12818  00E5B4  6E22               	movwf	___flmul@grs^0,c
 12819  00E5B6  6A23               	clrf	(___flmul@grs+1)^0,c
 12820  00E5B8  6A24               	clrf	(___flmul@grs+2)^0,c
 12821  00E5BA  6A25               	clrf	(___flmul@grs+3)^0,c
 12822  00E5BC  502D               	movf	(___flmul@temp+1)^0,w,c
 12823  00E5BE  6E28               	movwf	___flmul@prod^0,c
 12824  00E5C0  6A29               	clrf	(___flmul@prod+1)^0,c
 12825  00E5C2  6A2A               	clrf	(___flmul@prod+2)^0,c
 12826  00E5C4  6A2B               	clrf	(___flmul@prod+3)^0,c
 12827  00E5C6  501A               	movf	(___flmul@a+1)^0,w,c
 12828  00E5C8  0216               	mulwf	(___flmul@b+1)^0,c
 12829  00E5CA  CFF3 F02C          	movff	prodl,___flmul@temp
 12830  00E5CE  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12831  00E5D2  502C               	movf	___flmul@temp^0,w,c
 12832  00E5D4  2622               	addwf	___flmul@grs^0,f,c
 12833  00E5D6  0E00               	movlw	0
 12834  00E5D8  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12835  00E5DA  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12836  00E5DC  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12837  00E5DE  502D               	movf	(___flmul@temp+1)^0,w,c
 12838  00E5E0  2628               	addwf	___flmul@prod^0,f,c
 12839  00E5E2  0E00               	movlw	0
 12840  00E5E4  2229               	addwfc	(___flmul@prod+1)^0,f,c
 12841  00E5E6  222A               	addwfc	(___flmul@prod+2)^0,f,c
 12842  00E5E8  222B               	addwfc	(___flmul@prod+3)^0,f,c
 12843  00E5EA  5019               	movf	___flmul@a^0,w,c
 12844  00E5EC  0217               	mulwf	(___flmul@b+2)^0,c
 12845  00E5EE  CFF3 F02C          	movff	prodl,___flmul@temp
 12846  00E5F2  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12847  00E5F6  502C               	movf	___flmul@temp^0,w,c
 12848  00E5F8  2622               	addwf	___flmul@grs^0,f,c
 12849  00E5FA  0E00               	movlw	0
 12850  00E5FC  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12851  00E5FE  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12852  00E600  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12853  00E602  502D               	movf	(___flmul@temp+1)^0,w,c
 12854  00E604  2628               	addwf	___flmul@prod^0,f,c
 12855  00E606  0E00               	movlw	0
 12856  00E608  2229               	addwfc	(___flmul@prod+1)^0,f,c
 12857  00E60A  222A               	addwfc	(___flmul@prod+2)^0,f,c
 12858  00E60C  222B               	addwfc	(___flmul@prod+3)^0,f,c
 12859  00E60E  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12860  00E612  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12861  00E616  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12862  00E61A  6A22               	clrf	___flmul@grs^0,c
 12863  00E61C  5019               	movf	___flmul@a^0,w,c
 12864  00E61E  0216               	mulwf	(___flmul@b+1)^0,c
 12865  00E620  CFF3 F02C          	movff	prodl,___flmul@temp
 12866  00E624  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12867  00E628  502C               	movf	___flmul@temp^0,w,c
 12868  00E62A  2622               	addwf	___flmul@grs^0,f,c
 12869  00E62C  502D               	movf	(___flmul@temp+1)^0,w,c
 12870  00E62E  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12871  00E630  0E00               	movlw	0
 12872  00E632  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12873  00E634  0E00               	movlw	0
 12874  00E636  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12875  00E638  501A               	movf	(___flmul@a+1)^0,w,c
 12876  00E63A  0215               	mulwf	___flmul@b^0,c
 12877  00E63C  CFF3 F02C          	movff	prodl,___flmul@temp
 12878  00E640  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12879  00E644  502C               	movf	___flmul@temp^0,w,c
 12880  00E646  2622               	addwf	___flmul@grs^0,f,c
 12881  00E648  502D               	movf	(___flmul@temp+1)^0,w,c
 12882  00E64A  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12883  00E64C  0E00               	movlw	0
 12884  00E64E  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12885  00E650  0E00               	movlw	0
 12886  00E652  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12887  00E654  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12888  00E658  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12889  00E65C  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12890  00E660  6A22               	clrf	___flmul@grs^0,c
 12891  00E662  5019               	movf	___flmul@a^0,w,c
 12892  00E664  0215               	mulwf	___flmul@b^0,c
 12893  00E666  CFF3 F02C          	movff	prodl,___flmul@temp
 12894  00E66A  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12895  00E66E  502C               	movf	___flmul@temp^0,w,c
 12896  00E670  2622               	addwf	___flmul@grs^0,f,c
 12897  00E672  502D               	movf	(___flmul@temp+1)^0,w,c
 12898  00E674  2223               	addwfc	(___flmul@grs+1)^0,f,c
 12899  00E676  0E00               	movlw	0
 12900  00E678  2224               	addwfc	(___flmul@grs+2)^0,f,c
 12901  00E67A  0E00               	movlw	0
 12902  00E67C  2225               	addwfc	(___flmul@grs+3)^0,f,c
 12903  00E67E  501B               	movf	(___flmul@a+2)^0,w,c
 12904  00E680  0216               	mulwf	(___flmul@b+1)^0,c
 12905  00E682  CFF3 F02C          	movff	prodl,___flmul@temp
 12906  00E686  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12907  00E68A  502C               	movf	___flmul@temp^0,w,c
 12908  00E68C  2628               	addwf	___flmul@prod^0,f,c
 12909  00E68E  502D               	movf	(___flmul@temp+1)^0,w,c
 12910  00E690  2229               	addwfc	(___flmul@prod+1)^0,f,c
 12911  00E692  0E00               	movlw	0
 12912  00E694  222A               	addwfc	(___flmul@prod+2)^0,f,c
 12913  00E696  0E00               	movlw	0
 12914  00E698  222B               	addwfc	(___flmul@prod+3)^0,f,c
 12915  00E69A  501A               	movf	(___flmul@a+1)^0,w,c
 12916  00E69C  0217               	mulwf	(___flmul@b+2)^0,c
 12917  00E69E  CFF3 F02C          	movff	prodl,___flmul@temp
 12918  00E6A2  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12919  00E6A6  502C               	movf	___flmul@temp^0,w,c
 12920  00E6A8  2628               	addwf	___flmul@prod^0,f,c
 12921  00E6AA  502D               	movf	(___flmul@temp+1)^0,w,c
 12922  00E6AC  2229               	addwfc	(___flmul@prod+1)^0,f,c
 12923  00E6AE  0E00               	movlw	0
 12924  00E6B0  222A               	addwfc	(___flmul@prod+2)^0,f,c
 12925  00E6B2  0E00               	movlw	0
 12926  00E6B4  222B               	addwfc	(___flmul@prod+3)^0,f,c
 12927  00E6B6  501B               	movf	(___flmul@a+2)^0,w,c
 12928  00E6B8  0217               	mulwf	(___flmul@b+2)^0,c
 12929  00E6BA  CFF3 F02C          	movff	prodl,___flmul@temp
 12930  00E6BE  CFF4 F02D          	movff	prodh,___flmul@temp+1
 12931  00E6C2  502C               	movf	___flmul@temp^0,w,c
 12932  00E6C4  6E1D               	movwf	??___flmul^0,c
 12933  00E6C6  502D               	movf	(___flmul@temp+1)^0,w,c
 12934  00E6C8  6E1E               	movwf	(??___flmul+1)^0,c
 12935  00E6CA  6A1F               	clrf	(??___flmul+2)^0,c
 12936  00E6CC  6A20               	clrf	(??___flmul+3)^0,c
 12937  00E6CE  C01F  F020         	movff	??___flmul+2,??___flmul+3
 12938  00E6D2  C01E  F01F         	movff	??___flmul+1,??___flmul+2
 12939  00E6D6  C01D  F01E         	movff	??___flmul,??___flmul+1
 12940  00E6DA  6A1D               	clrf	??___flmul^0,c
 12941  00E6DC  501D               	movf	??___flmul^0,w,c
 12942  00E6DE  2628               	addwf	___flmul@prod^0,f,c
 12943  00E6E0  501E               	movf	(??___flmul+1)^0,w,c
 12944  00E6E2  2229               	addwfc	(___flmul@prod+1)^0,f,c
 12945  00E6E4  501F               	movf	(??___flmul+2)^0,w,c
 12946  00E6E6  222A               	addwfc	(___flmul@prod+2)^0,f,c
 12947  00E6E8  5020               	movf	(??___flmul+3)^0,w,c
 12948  00E6EA  222B               	addwfc	(___flmul@prod+3)^0,f,c
 12949  00E6EC  C022  F01D         	movff	___flmul@grs,??___flmul
 12950  00E6F0  C023  F01E         	movff	___flmul@grs+1,??___flmul+1
 12951  00E6F4  C024  F01F         	movff	___flmul@grs+2,??___flmul+2
 12952  00E6F8  C025  F020         	movff	___flmul@grs+3,??___flmul+3
 12953  00E6FC  0E19               	movlw	25
 12954  00E6FE  EF86  F073         	goto	u4020
 12955  00E702                     u4025:
 12956  00E702  90D8               	bcf	status,0,c
 12957  00E704  3220               	rrcf	(??___flmul+3)^0,f,c
 12958  00E706  321F               	rrcf	(??___flmul+2)^0,f,c
 12959  00E708  321E               	rrcf	(??___flmul+1)^0,f,c
 12960  00E70A  321D               	rrcf	??___flmul^0,f,c
 12961  00E70C                     u4020:
 12962  00E70C  2EE8               	decfsz	wreg,f,c
 12963  00E70E  EF81  F073         	goto	u4025
 12964  00E712  501D               	movf	??___flmul^0,w,c
 12965  00E714  2628               	addwf	___flmul@prod^0,f,c
 12966  00E716  501E               	movf	(??___flmul+1)^0,w,c
 12967  00E718  2229               	addwfc	(___flmul@prod+1)^0,f,c
 12968  00E71A  501F               	movf	(??___flmul+2)^0,w,c
 12969  00E71C  222A               	addwfc	(___flmul@prod+2)^0,f,c
 12970  00E71E  5020               	movf	(??___flmul+3)^0,w,c
 12971  00E720  222B               	addwfc	(___flmul@prod+3)^0,f,c
 12972  00E722  C024  F025         	movff	___flmul@grs+2,___flmul@grs+3
 12973  00E726  C023  F024         	movff	___flmul@grs+1,___flmul@grs+2
 12974  00E72A  C022  F023         	movff	___flmul@grs,___flmul@grs+1
 12975  00E72E  6A22               	clrf	___flmul@grs^0,c
 12976  00E730  5026               	movf	___flmul@aexp^0,w,c
 12977  00E732  C027  F01D         	movff	___flmul@bexp,??___flmul
 12978  00E736  6A1E               	clrf	(??___flmul+1)^0,c
 12979  00E738  261D               	addwf	??___flmul^0,f,c
 12980  00E73A  0E00               	movlw	0
 12981  00E73C  221E               	addwfc	(??___flmul+1)^0,f,c
 12982  00E73E  0E82               	movlw	130
 12983  00E740  241D               	addwf	??___flmul^0,w,c
 12984  00E742  6E2C               	movwf	___flmul@temp^0,c
 12985  00E744  0EFF               	movlw	255
 12986  00E746  201E               	addwfc	(??___flmul+1)^0,w,c
 12987  00E748  6E2D               	movwf	(___flmul@temp+1)^0,c
 12988  00E74A  EFBC  F073         	goto	l5102
 12989  00E74E                     l5096:
 12990  00E74E  90D8               	bcf	status,0,c
 12991  00E750  3628               	rlcf	___flmul@prod^0,f,c
 12992  00E752  3629               	rlcf	(___flmul@prod+1)^0,f,c
 12993  00E754  362A               	rlcf	(___flmul@prod+2)^0,f,c
 12994  00E756  362B               	rlcf	(___flmul@prod+3)^0,f,c
 12995  00E758  AE25               	btfss	(___flmul@grs+3)^0,7,c
 12996  00E75A  EFB1  F073         	goto	u4031
 12997  00E75E  EFB3  F073         	goto	u4030
 12998  00E762                     u4031:
 12999  00E762  EFB4  F073         	goto	l1437
 13000  00E766                     u4030:
 13001  00E766  8028               	bsf	___flmul@prod^0,0,c
 13002  00E768                     l1437:
 13003  00E768  90D8               	bcf	status,0,c
 13004  00E76A  3622               	rlcf	___flmul@grs^0,f,c
 13005  00E76C  3623               	rlcf	(___flmul@grs+1)^0,f,c
 13006  00E76E  3624               	rlcf	(___flmul@grs+2)^0,f,c
 13007  00E770  3625               	rlcf	(___flmul@grs+3)^0,f,c
 13008  00E772  062C               	decf	___flmul@temp^0,f,c
 13009  00E774  A0D8               	btfss	status,0,c
 13010  00E776  062D               	decf	(___flmul@temp+1)^0,f,c
 13011  00E778                     l5102:
 13012  00E778  AE2A               	btfss	(___flmul@prod+2)^0,7,c
 13013  00E77A  EFC1  F073         	goto	u4041
 13014  00E77E  EFC3  F073         	goto	u4040
 13015  00E782                     u4041:
 13016  00E782  EFA7  F073         	goto	l5096
 13017  00E786                     u4040:
 13018  00E786  0E00               	movlw	0
 13019  00E788  6E26               	movwf	___flmul@aexp^0,c
 13020  00E78A  AE25               	btfss	(___flmul@grs+3)^0,7,c
 13021  00E78C  EFCA  F073         	goto	u4051
 13022  00E790  EFCC  F073         	goto	u4050
 13023  00E794                     u4051:
 13024  00E794  EFF0  F073         	goto	l1439
 13025  00E798                     u4050:
 13026  00E798  0EFF               	movlw	255
 13027  00E79A  1422               	andwf	___flmul@grs^0,w,c
 13028  00E79C  6E1D               	movwf	??___flmul^0,c
 13029  00E79E  0EFF               	movlw	255
 13030  00E7A0  1423               	andwf	(___flmul@grs+1)^0,w,c
 13031  00E7A2  6E1E               	movwf	(??___flmul+1)^0,c
 13032  00E7A4  0EFF               	movlw	255
 13033  00E7A6  1424               	andwf	(___flmul@grs+2)^0,w,c
 13034  00E7A8  6E1F               	movwf	(??___flmul+2)^0,c
 13035  00E7AA  0E7F               	movlw	127
 13036  00E7AC  1425               	andwf	(___flmul@grs+3)^0,w,c
 13037  00E7AE  6E20               	movwf	(??___flmul+3)^0,c
 13038  00E7B0  501D               	movf	??___flmul^0,w,c
 13039  00E7B2  101E               	iorwf	(??___flmul+1)^0,w,c
 13040  00E7B4  101F               	iorwf	(??___flmul+2)^0,w,c
 13041  00E7B6  1020               	iorwf	(??___flmul+3)^0,w,c
 13042  00E7B8  B4D8               	btfsc	status,2,c
 13043  00E7BA  EFE1  F073         	goto	u4061
 13044  00E7BE  EFE3  F073         	goto	u4060
 13045  00E7C2                     u4061:
 13046  00E7C2  EFE7  F073         	goto	l1440
 13047  00E7C6                     u4060:
 13048  00E7C6                     l5110:
 13049  00E7C6  0E01               	movlw	1
 13050  00E7C8  6E26               	movwf	___flmul@aexp^0,c
 13051  00E7CA  EFF0  F073         	goto	l1439
 13052  00E7CE                     l1440:
 13053  00E7CE  A028               	btfss	___flmul@prod^0,0,c
 13054  00E7D0  EFEC  F073         	goto	u4071
 13055  00E7D4  EFEE  F073         	goto	u4070
 13056  00E7D8                     u4071:
 13057  00E7D8  EFF0  F073         	goto	l1439
 13058  00E7DC                     u4070:
 13059  00E7DC  EFE3  F073         	goto	l5110
 13060  00E7E0                     l1439:
 13061  00E7E0  5026               	movf	___flmul@aexp^0,w,c
 13062  00E7E2  B4D8               	btfsc	status,2,c
 13063  00E7E4  EFF6  F073         	goto	u4081
 13064  00E7E8  EFF8  F073         	goto	u4080
 13065  00E7EC                     u4081:
 13066  00E7EC  EF1C  F074         	goto	l5122
 13067  00E7F0                     u4080:
 13068  00E7F0  0E01               	movlw	1
 13069  00E7F2  2628               	addwf	___flmul@prod^0,f,c
 13070  00E7F4  0E00               	movlw	0
 13071  00E7F6  2229               	addwfc	(___flmul@prod+1)^0,f,c
 13072  00E7F8  222A               	addwfc	(___flmul@prod+2)^0,f,c
 13073  00E7FA  222B               	addwfc	(___flmul@prod+3)^0,f,c
 13074  00E7FC  A02B               	btfss	(___flmul@prod+3)^0,0,c
 13075  00E7FE  EF03  F074         	goto	u4091
 13076  00E802  EF05  F074         	goto	u4090
 13077  00E806                     u4091:
 13078  00E806  EF1C  F074         	goto	l5122
 13079  00E80A                     u4090:
 13080  00E80A  C028  F01D         	movff	___flmul@prod,??___flmul
 13081  00E80E  C029  F01E         	movff	___flmul@prod+1,??___flmul+1
 13082  00E812  C02A  F01F         	movff	___flmul@prod+2,??___flmul+2
 13083  00E816  C02B  F020         	movff	___flmul@prod+3,??___flmul+3
 13084  00E81A  3420               	rlcf	(??___flmul+3)^0,w,c
 13085  00E81C  3220               	rrcf	(??___flmul+3)^0,f,c
 13086  00E81E  321F               	rrcf	(??___flmul+2)^0,f,c
 13087  00E820  321E               	rrcf	(??___flmul+1)^0,f,c
 13088  00E822  321D               	rrcf	??___flmul^0,f,c
 13089  00E824  C01D  F028         	movff	??___flmul,___flmul@prod
 13090  00E828  C01E  F029         	movff	??___flmul+1,___flmul@prod+1
 13091  00E82C  C01F  F02A         	movff	??___flmul+2,___flmul@prod+2
 13092  00E830  C020  F02B         	movff	??___flmul+3,___flmul@prod+3
 13093  00E834  4A2C               	infsnz	___flmul@temp^0,f,c
 13094  00E836  2A2D               	incf	(___flmul@temp+1)^0,f,c
 13095  00E838                     l5122:
 13096  00E838  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
 13097  00E83A  EF27  F074         	goto	u4101
 13098  00E83E  502D               	movf	(___flmul@temp+1)^0,w,c
 13099  00E840  E108               	bnz	u4100
 13100  00E842  282C               	incf	___flmul@temp^0,w,c
 13101  00E844  A0D8               	btfss	status,0,c
 13102  00E846  EF27  F074         	goto	u4101
 13103  00E84A  EF29  F074         	goto	u4100
 13104  00E84E                     u4101:
 13105  00E84E  EF33  F074         	goto	l5126
 13106  00E852                     u4100:
 13107  00E852  0E00               	movlw	0
 13108  00E854  6E28               	movwf	___flmul@prod^0,c
 13109  00E856  0E00               	movlw	0
 13110  00E858  6E29               	movwf	(___flmul@prod+1)^0,c
 13111  00E85A  0E80               	movlw	128
 13112  00E85C  6E2A               	movwf	(___flmul@prod+2)^0,c
 13113  00E85E  0E7F               	movlw	127
 13114  00E860  6E2B               	movwf	(___flmul@prod+3)^0,c
 13115  00E862  EF61  F074         	goto	l5138
 13116  00E866                     l5126:
 13117  00E866  BE2D               	btfsc	(___flmul@temp+1)^0,7,c
 13118  00E868  EF40  F074         	goto	u4110
 13119  00E86C  502D               	movf	(___flmul@temp+1)^0,w,c
 13120  00E86E  E106               	bnz	u4111
 13121  00E870  042C               	decf	___flmul@temp^0,w,c
 13122  00E872  B0D8               	btfsc	status,0,c
 13123  00E874  EF3E  F074         	goto	u4111
 13124  00E878  EF40  F074         	goto	u4110
 13125  00E87C                     u4111:
 13126  00E87C  EF4C  F074         	goto	l1447
 13127  00E880                     u4110:
 13128  00E880  0E00               	movlw	0
 13129  00E882  6E28               	movwf	___flmul@prod^0,c
 13130  00E884  0E00               	movlw	0
 13131  00E886  6E29               	movwf	(___flmul@prod+1)^0,c
 13132  00E888  0E00               	movlw	0
 13133  00E88A  6E2A               	movwf	(___flmul@prod+2)^0,c
 13134  00E88C  0E00               	movlw	0
 13135  00E88E  6E2B               	movwf	(___flmul@prod+3)^0,c
 13136  00E890  0E00               	movlw	0
 13137  00E892  6E21               	movwf	___flmul@sign^0,c
 13138  00E894  EF61  F074         	goto	l5138
 13139  00E898                     l1447:
 13140  00E898  C02C  F027         	movff	___flmul@temp,___flmul@bexp
 13141  00E89C  0EFF               	movlw	255
 13142  00E89E  1628               	andwf	___flmul@prod^0,f,c
 13143  00E8A0  0EFF               	movlw	255
 13144  00E8A2  1629               	andwf	(___flmul@prod+1)^0,f,c
 13145  00E8A4  0E7F               	movlw	127
 13146  00E8A6  162A               	andwf	(___flmul@prod+2)^0,f,c
 13147  00E8A8  0E00               	movlw	0
 13148  00E8AA  162B               	andwf	(___flmul@prod+3)^0,f,c
 13149  00E8AC  A027               	btfss	___flmul@bexp^0,0,c
 13150  00E8AE  EF5B  F074         	goto	u4121
 13151  00E8B2  EF5D  F074         	goto	u4120
 13152  00E8B6                     u4121:
 13153  00E8B6  EF5E  F074         	goto	l5136
 13154  00E8BA                     u4120:
 13155  00E8BA  8E2A               	bsf	(___flmul@prod+2)^0,7,c
 13156  00E8BC                     l5136:
 13157  00E8BC  90D8               	bcf	status,0,c
 13158  00E8BE  3027               	rrcf	___flmul@bexp^0,w,c
 13159  00E8C0  6E2B               	movwf	(___flmul@prod+3)^0,c
 13160  00E8C2                     l5138:
 13161  00E8C2  5021               	movf	___flmul@sign^0,w,c
 13162  00E8C4  122B               	iorwf	(___flmul@prod+3)^0,f,c
 13163  00E8C6  C028  F015         	movff	___flmul@prod,?___flmul
 13164  00E8CA  C029  F016         	movff	___flmul@prod+1,?___flmul+1
 13165  00E8CE  C02A  F017         	movff	___flmul@prod+2,?___flmul+2
 13166  00E8D2  C02B  F018         	movff	___flmul@prod+3,?___flmul+3
 13167  00E8D6                     l1434:
 13168  00E8D6  0012               	return		;funcret
 13169  00E8D8                     __end_of___flmul:
 13170                           	callstack 0
 13171                           
 13172 ;; *************** function ___fldiv *****************
 13173 ;; Defined at:
 13174 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 13175 ;; Parameters:    Size  Location     Type
 13176 ;;  b               4    0[COMRAM] unsigned char 
 13177 ;;  a               4    4[COMRAM] unsigned char 
 13178 ;; Auto vars:     Size  Location     Type
 13179 ;;  grs             4   19[COMRAM] unsigned long 
 13180 ;;  rem             4   12[COMRAM] unsigned long 
 13181 ;;  new_exp         2   17[COMRAM] short 
 13182 ;;  aexp            1   24[COMRAM] unsigned char 
 13183 ;;  bexp            1   23[COMRAM] unsigned char 
 13184 ;;  sign            1   16[COMRAM] unsigned char 
 13185 ;; Return value:  Size  Location     Type
 13186 ;;                  4    0[COMRAM] unsigned char 
 13187 ;; Registers used:
 13188 ;;		wreg, status,2, status,0
 13189 ;; Tracked objects:
 13190 ;;		On entry : 0/0
 13191 ;;		On exit  : 0/0
 13192 ;;		Unchanged: 0/0
 13193 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13194 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13195 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13196 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13197 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13198 ;;Total ram usage:       25 bytes
 13199 ;; Hardware stack levels used:    1
 13200 ;; This function calls:
 13201 ;;		Nothing
 13202 ;; This function is called by:
 13203 ;;		_Voltage_ReadRegister
 13204 ;;		_Current_ReadRegister
 13205 ;;		_Power_ReadRegister
 13206 ;;		_efgtoa
 13207 ;; This function uses a non-reentrant model
 13208 ;;
 13209                           
 13210                           	psect	text95
 13211  00E114                     __ptext95:
 13212                           	callstack 0
 13213  00E114                     ___fldiv:
 13214                           	callstack 26
 13215  00E114  5004               	movf	(___fldiv@b+3)^0,w,c
 13216  00E116  0B80               	andlw	128
 13217  00E118  6E11               	movwf	___fldiv@sign^0,c
 13218  00E11A  5004               	movf	(___fldiv@b+3)^0,w,c
 13219  00E11C  2404               	addwf	(___fldiv@b+3)^0,w,c
 13220  00E11E  6E18               	movwf	___fldiv@bexp^0,c
 13221  00E120  AE03               	btfss	(___fldiv@b+2)^0,7,c
 13222  00E122  EF95  F070         	goto	u3711
 13223  00E126  EF97  F070         	goto	u3710
 13224  00E12A                     u3711:
 13225  00E12A  EF98  F070         	goto	l4882
 13226  00E12E                     u3710:
 13227  00E12E  8018               	bsf	___fldiv@bexp^0,0,c
 13228  00E130                     l4882:
 13229  00E130  5018               	movf	___fldiv@bexp^0,w,c
 13230  00E132  B4D8               	btfsc	status,2,c
 13231  00E134  EF9E  F070         	goto	u3721
 13232  00E138  EFA0  F070         	goto	u3720
 13233  00E13C                     u3721:
 13234  00E13C  EFB5  F070         	goto	l4892
 13235  00E140                     u3720:
 13236  00E140  2818               	incf	___fldiv@bexp^0,w,c
 13237  00E142  A4D8               	btfss	status,2,c
 13238  00E144  EFA6  F070         	goto	u3731
 13239  00E148  EFA8  F070         	goto	u3730
 13240  00E14C                     u3731:
 13241  00E14C  EFB0  F070         	goto	l4888
 13242  00E150                     u3730:
 13243  00E150  0E00               	movlw	0
 13244  00E152  6E01               	movwf	___fldiv@b^0,c
 13245  00E154  0E00               	movlw	0
 13246  00E156  6E02               	movwf	(___fldiv@b+1)^0,c
 13247  00E158  0E00               	movlw	0
 13248  00E15A  6E03               	movwf	(___fldiv@b+2)^0,c
 13249  00E15C  0E00               	movlw	0
 13250  00E15E  6E04               	movwf	(___fldiv@b+3)^0,c
 13251  00E160                     l4888:
 13252  00E160  8E03               	bsf	(___fldiv@b+2)^0,7,c
 13253  00E162  0E00               	movlw	0
 13254  00E164  6E04               	movwf	(___fldiv@b+3)^0,c
 13255  00E166  EFBD  F070         	goto	l4894
 13256  00E16A                     l4892:
 13257  00E16A  0E00               	movlw	0
 13258  00E16C  6E01               	movwf	___fldiv@b^0,c
 13259  00E16E  0E00               	movlw	0
 13260  00E170  6E02               	movwf	(___fldiv@b+1)^0,c
 13261  00E172  0E00               	movlw	0
 13262  00E174  6E03               	movwf	(___fldiv@b+2)^0,c
 13263  00E176  0E00               	movlw	0
 13264  00E178  6E04               	movwf	(___fldiv@b+3)^0,c
 13265  00E17A                     l4894:
 13266  00E17A  5008               	movf	(___fldiv@a+3)^0,w,c
 13267  00E17C  0B80               	andlw	128
 13268  00E17E  1A11               	xorwf	___fldiv@sign^0,f,c
 13269  00E180  5008               	movf	(___fldiv@a+3)^0,w,c
 13270  00E182  2408               	addwf	(___fldiv@a+3)^0,w,c
 13271  00E184  6E19               	movwf	___fldiv@aexp^0,c
 13272  00E186  AE07               	btfss	(___fldiv@a+2)^0,7,c
 13273  00E188  EFC8  F070         	goto	u3741
 13274  00E18C  EFCA  F070         	goto	u3740
 13275  00E190                     u3741:
 13276  00E190  EFCB  F070         	goto	l4902
 13277  00E194                     u3740:
 13278  00E194  8019               	bsf	___fldiv@aexp^0,0,c
 13279  00E196                     l4902:
 13280  00E196  5019               	movf	___fldiv@aexp^0,w,c
 13281  00E198  B4D8               	btfsc	status,2,c
 13282  00E19A  EFD1  F070         	goto	u3751
 13283  00E19E  EFD3  F070         	goto	u3750
 13284  00E1A2                     u3751:
 13285  00E1A2  EFE8  F070         	goto	l4912
 13286  00E1A6                     u3750:
 13287  00E1A6  2819               	incf	___fldiv@aexp^0,w,c
 13288  00E1A8  A4D8               	btfss	status,2,c
 13289  00E1AA  EFD9  F070         	goto	u3761
 13290  00E1AE  EFDB  F070         	goto	u3760
 13291  00E1B2                     u3761:
 13292  00E1B2  EFE3  F070         	goto	l4908
 13293  00E1B6                     u3760:
 13294  00E1B6  0E00               	movlw	0
 13295  00E1B8  6E05               	movwf	___fldiv@a^0,c
 13296  00E1BA  0E00               	movlw	0
 13297  00E1BC  6E06               	movwf	(___fldiv@a+1)^0,c
 13298  00E1BE  0E00               	movlw	0
 13299  00E1C0  6E07               	movwf	(___fldiv@a+2)^0,c
 13300  00E1C2  0E00               	movlw	0
 13301  00E1C4  6E08               	movwf	(___fldiv@a+3)^0,c
 13302  00E1C6                     l4908:
 13303  00E1C6  8E07               	bsf	(___fldiv@a+2)^0,7,c
 13304  00E1C8  0E00               	movlw	0
 13305  00E1CA  6E08               	movwf	(___fldiv@a+3)^0,c
 13306  00E1CC  EFF0  F070         	goto	l4914
 13307  00E1D0                     l4912:
 13308  00E1D0  0E00               	movlw	0
 13309  00E1D2  6E05               	movwf	___fldiv@a^0,c
 13310  00E1D4  0E00               	movlw	0
 13311  00E1D6  6E06               	movwf	(___fldiv@a+1)^0,c
 13312  00E1D8  0E00               	movlw	0
 13313  00E1DA  6E07               	movwf	(___fldiv@a+2)^0,c
 13314  00E1DC  0E00               	movlw	0
 13315  00E1DE  6E08               	movwf	(___fldiv@a+3)^0,c
 13316  00E1E0                     l4914:
 13317  00E1E0  5005               	movf	___fldiv@a^0,w,c
 13318  00E1E2  1006               	iorwf	(___fldiv@a+1)^0,w,c
 13319  00E1E4  1007               	iorwf	(___fldiv@a+2)^0,w,c
 13320  00E1E6  1008               	iorwf	(___fldiv@a+3)^0,w,c
 13321  00E1E8  A4D8               	btfss	status,2,c
 13322  00E1EA  EFF9  F070         	goto	u3771
 13323  00E1EE  EFFB  F070         	goto	u3770
 13324  00E1F2                     u3771:
 13325  00E1F2  EF13  F071         	goto	l4926
 13326  00E1F6                     u3770:
 13327  00E1F6  0E00               	movlw	0
 13328  00E1F8  6E01               	movwf	___fldiv@b^0,c
 13329  00E1FA  0E00               	movlw	0
 13330  00E1FC  6E02               	movwf	(___fldiv@b+1)^0,c
 13331  00E1FE  0E00               	movlw	0
 13332  00E200  6E03               	movwf	(___fldiv@b+2)^0,c
 13333  00E202  0E00               	movlw	0
 13334  00E204  6E04               	movwf	(___fldiv@b+3)^0,c
 13335  00E206  0E80               	movlw	128
 13336  00E208  1203               	iorwf	(___fldiv@b+2)^0,f,c
 13337  00E20A  0E7F               	movlw	127
 13338  00E20C  1204               	iorwf	(___fldiv@b+3)^0,f,c
 13339  00E20E                     l4920:
 13340  00E20E  5011               	movf	___fldiv@sign^0,w,c
 13341  00E210  1204               	iorwf	(___fldiv@b+3)^0,f,c
 13342  00E212  C001  F001         	movff	___fldiv@b,?___fldiv
 13343  00E216  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
 13344  00E21A  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
 13345  00E21E  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
 13346  00E222  EF56  F072         	goto	l1398
 13347  00E226                     l4926:
 13348  00E226  5018               	movf	___fldiv@bexp^0,w,c
 13349  00E228  A4D8               	btfss	status,2,c
 13350  00E22A  EF19  F071         	goto	u3781
 13351  00E22E  EF1B  F071         	goto	u3780
 13352  00E232                     u3781:
 13353  00E232  EF25  F071         	goto	l4934
 13354  00E236                     u3780:
 13355  00E236  0E00               	movlw	0
 13356  00E238  6E01               	movwf	?___fldiv^0,c
 13357  00E23A  0E00               	movlw	0
 13358  00E23C  6E02               	movwf	(?___fldiv+1)^0,c
 13359  00E23E  0E00               	movlw	0
 13360  00E240  6E03               	movwf	(?___fldiv+2)^0,c
 13361  00E242  0E00               	movlw	0
 13362  00E244  6E04               	movwf	(?___fldiv+3)^0,c
 13363  00E246  EF56  F072         	goto	l1398
 13364  00E24A                     l4934:
 13365  00E24A  5019               	movf	___fldiv@aexp^0,w,c
 13366  00E24C  C018  F009         	movff	___fldiv@bexp,??___fldiv
 13367  00E250  6A0A               	clrf	(??___fldiv+1)^0,c
 13368  00E252  5E09               	subwf	??___fldiv^0,f,c
 13369  00E254  0E00               	movlw	0
 13370  00E256  5A0A               	subwfb	(??___fldiv+1)^0,f,c
 13371  00E258  0E7F               	movlw	127
 13372  00E25A  2409               	addwf	??___fldiv^0,w,c
 13373  00E25C  6E12               	movwf	___fldiv@new_exp^0,c
 13374  00E25E  0E00               	movlw	0
 13375  00E260  200A               	addwfc	(??___fldiv+1)^0,w,c
 13376  00E262  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13377  00E264  C001  F00D         	movff	___fldiv@b,___fldiv@rem
 13378  00E268  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
 13379  00E26C  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
 13380  00E270  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
 13381  00E274  0E00               	movlw	0
 13382  00E276  6E01               	movwf	___fldiv@b^0,c
 13383  00E278  0E00               	movlw	0
 13384  00E27A  6E02               	movwf	(___fldiv@b+1)^0,c
 13385  00E27C  0E00               	movlw	0
 13386  00E27E  6E03               	movwf	(___fldiv@b+2)^0,c
 13387  00E280  0E00               	movlw	0
 13388  00E282  6E04               	movwf	(___fldiv@b+3)^0,c
 13389  00E284  0E00               	movlw	0
 13390  00E286  6E14               	movwf	___fldiv@grs^0,c
 13391  00E288  0E00               	movlw	0
 13392  00E28A  6E15               	movwf	(___fldiv@grs+1)^0,c
 13393  00E28C  0E00               	movlw	0
 13394  00E28E  6E16               	movwf	(___fldiv@grs+2)^0,c
 13395  00E290  0E00               	movlw	0
 13396  00E292  6E17               	movwf	(___fldiv@grs+3)^0,c
 13397  00E294  0E00               	movlw	0
 13398  00E296  6E19               	movwf	___fldiv@aexp^0,c
 13399  00E298  EF86  F071         	goto	l1400
 13400  00E29C                     l4944:
 13401  00E29C  5019               	movf	___fldiv@aexp^0,w,c
 13402  00E29E  B4D8               	btfsc	status,2,c
 13403  00E2A0  EF54  F071         	goto	u3791
 13404  00E2A4  EF56  F071         	goto	u3790
 13405  00E2A8                     u3791:
 13406  00E2A8  EF6D  F071         	goto	l4952
 13407  00E2AC                     u3790:
 13408  00E2AC  90D8               	bcf	status,0,c
 13409  00E2AE  360D               	rlcf	___fldiv@rem^0,f,c
 13410  00E2B0  360E               	rlcf	(___fldiv@rem+1)^0,f,c
 13411  00E2B2  360F               	rlcf	(___fldiv@rem+2)^0,f,c
 13412  00E2B4  3610               	rlcf	(___fldiv@rem+3)^0,f,c
 13413  00E2B6  90D8               	bcf	status,0,c
 13414  00E2B8  3601               	rlcf	___fldiv@b^0,f,c
 13415  00E2BA  3602               	rlcf	(___fldiv@b+1)^0,f,c
 13416  00E2BC  3603               	rlcf	(___fldiv@b+2)^0,f,c
 13417  00E2BE  3604               	rlcf	(___fldiv@b+3)^0,f,c
 13418  00E2C0  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13419  00E2C2  EF65  F071         	goto	u3801
 13420  00E2C6  EF67  F071         	goto	u3800
 13421  00E2CA                     u3801:
 13422  00E2CA  EF68  F071         	goto	l1403
 13423  00E2CE                     u3800:
 13424  00E2CE  8001               	bsf	___fldiv@b^0,0,c
 13425  00E2D0                     l1403:
 13426  00E2D0  90D8               	bcf	status,0,c
 13427  00E2D2  3614               	rlcf	___fldiv@grs^0,f,c
 13428  00E2D4  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 13429  00E2D6  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 13430  00E2D8  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 13431  00E2DA                     l4952:
 13432  00E2DA  5005               	movf	___fldiv@a^0,w,c
 13433  00E2DC  5C0D               	subwf	___fldiv@rem^0,w,c
 13434  00E2DE  5006               	movf	(___fldiv@a+1)^0,w,c
 13435  00E2E0  580E               	subwfb	(___fldiv@rem+1)^0,w,c
 13436  00E2E2  5007               	movf	(___fldiv@a+2)^0,w,c
 13437  00E2E4  580F               	subwfb	(___fldiv@rem+2)^0,w,c
 13438  00E2E6  5008               	movf	(___fldiv@a+3)^0,w,c
 13439  00E2E8  5810               	subwfb	(___fldiv@rem+3)^0,w,c
 13440  00E2EA  A0D8               	btfss	status,0,c
 13441  00E2EC  EF7A  F071         	goto	u3811
 13442  00E2F0  EF7C  F071         	goto	u3810
 13443  00E2F4                     u3811:
 13444  00E2F4  EF85  F071         	goto	l4958
 13445  00E2F8                     u3810:
 13446  00E2F8  8C17               	bsf	(___fldiv@grs+3)^0,6,c
 13447  00E2FA  5005               	movf	___fldiv@a^0,w,c
 13448  00E2FC  5E0D               	subwf	___fldiv@rem^0,f,c
 13449  00E2FE  5006               	movf	(___fldiv@a+1)^0,w,c
 13450  00E300  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
 13451  00E302  5007               	movf	(___fldiv@a+2)^0,w,c
 13452  00E304  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
 13453  00E306  5008               	movf	(___fldiv@a+3)^0,w,c
 13454  00E308  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
 13455  00E30A                     l4958:
 13456  00E30A  2A19               	incf	___fldiv@aexp^0,f,c
 13457  00E30C                     l1400:
 13458  00E30C  0E19               	movlw	25
 13459  00E30E  6419               	cpfsgt	___fldiv@aexp^0,c
 13460  00E310  EF8C  F071         	goto	u3821
 13461  00E314  EF8E  F071         	goto	u3820
 13462  00E318                     u3821:
 13463  00E318  EF4E  F071         	goto	l4944
 13464  00E31C                     u3820:
 13465  00E31C  500D               	movf	___fldiv@rem^0,w,c
 13466  00E31E  100E               	iorwf	(___fldiv@rem+1)^0,w,c
 13467  00E320  100F               	iorwf	(___fldiv@rem+2)^0,w,c
 13468  00E322  1010               	iorwf	(___fldiv@rem+3)^0,w,c
 13469  00E324  B4D8               	btfsc	status,2,c
 13470  00E326  EF97  F071         	goto	u3831
 13471  00E32A  EF99  F071         	goto	u3830
 13472  00E32E                     u3831:
 13473  00E32E  EFB1  F071         	goto	l4970
 13474  00E332                     u3830:
 13475  00E332  8014               	bsf	___fldiv@grs^0,0,c
 13476  00E334  EFB1  F071         	goto	l4970
 13477  00E338                     l4964:
 13478  00E338  90D8               	bcf	status,0,c
 13479  00E33A  3601               	rlcf	___fldiv@b^0,f,c
 13480  00E33C  3602               	rlcf	(___fldiv@b+1)^0,f,c
 13481  00E33E  3603               	rlcf	(___fldiv@b+2)^0,f,c
 13482  00E340  3604               	rlcf	(___fldiv@b+3)^0,f,c
 13483  00E342  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13484  00E344  EFA6  F071         	goto	u3841
 13485  00E348  EFA8  F071         	goto	u3840
 13486  00E34C                     u3841:
 13487  00E34C  EFA9  F071         	goto	l1409
 13488  00E350                     u3840:
 13489  00E350  8001               	bsf	___fldiv@b^0,0,c
 13490  00E352                     l1409:
 13491  00E352  90D8               	bcf	status,0,c
 13492  00E354  3614               	rlcf	___fldiv@grs^0,f,c
 13493  00E356  3615               	rlcf	(___fldiv@grs+1)^0,f,c
 13494  00E358  3616               	rlcf	(___fldiv@grs+2)^0,f,c
 13495  00E35A  3617               	rlcf	(___fldiv@grs+3)^0,f,c
 13496  00E35C  0612               	decf	___fldiv@new_exp^0,f,c
 13497  00E35E  A0D8               	btfss	status,0,c
 13498  00E360  0613               	decf	(___fldiv@new_exp+1)^0,f,c
 13499  00E362                     l4970:
 13500  00E362  AE03               	btfss	(___fldiv@b+2)^0,7,c
 13501  00E364  EFB6  F071         	goto	u3851
 13502  00E368  EFB8  F071         	goto	u3850
 13503  00E36C                     u3851:
 13504  00E36C  EF9C  F071         	goto	l4964
 13505  00E370                     u3850:
 13506  00E370  0E00               	movlw	0
 13507  00E372  6E19               	movwf	___fldiv@aexp^0,c
 13508  00E374  AE17               	btfss	(___fldiv@grs+3)^0,7,c
 13509  00E376  EFBF  F071         	goto	u3861
 13510  00E37A  EFC1  F071         	goto	u3860
 13511  00E37E                     u3861:
 13512  00E37E  EFE5  F071         	goto	l1411
 13513  00E382                     u3860:
 13514  00E382  0EFF               	movlw	255
 13515  00E384  1414               	andwf	___fldiv@grs^0,w,c
 13516  00E386  6E09               	movwf	??___fldiv^0,c
 13517  00E388  0EFF               	movlw	255
 13518  00E38A  1415               	andwf	(___fldiv@grs+1)^0,w,c
 13519  00E38C  6E0A               	movwf	(??___fldiv+1)^0,c
 13520  00E38E  0EFF               	movlw	255
 13521  00E390  1416               	andwf	(___fldiv@grs+2)^0,w,c
 13522  00E392  6E0B               	movwf	(??___fldiv+2)^0,c
 13523  00E394  0E7F               	movlw	127
 13524  00E396  1417               	andwf	(___fldiv@grs+3)^0,w,c
 13525  00E398  6E0C               	movwf	(??___fldiv+3)^0,c
 13526  00E39A  5009               	movf	??___fldiv^0,w,c
 13527  00E39C  100A               	iorwf	(??___fldiv+1)^0,w,c
 13528  00E39E  100B               	iorwf	(??___fldiv+2)^0,w,c
 13529  00E3A0  100C               	iorwf	(??___fldiv+3)^0,w,c
 13530  00E3A2  B4D8               	btfsc	status,2,c
 13531  00E3A4  EFD6  F071         	goto	u3871
 13532  00E3A8  EFD8  F071         	goto	u3870
 13533  00E3AC                     u3871:
 13534  00E3AC  EFDC  F071         	goto	l1412
 13535  00E3B0                     u3870:
 13536  00E3B0                     l4978:
 13537  00E3B0  0E01               	movlw	1
 13538  00E3B2  6E19               	movwf	___fldiv@aexp^0,c
 13539  00E3B4  EFE5  F071         	goto	l1411
 13540  00E3B8                     l1412:
 13541  00E3B8  A001               	btfss	___fldiv@b^0,0,c
 13542  00E3BA  EFE1  F071         	goto	u3881
 13543  00E3BE  EFE3  F071         	goto	u3880
 13544  00E3C2                     u3881:
 13545  00E3C2  EFE5  F071         	goto	l1411
 13546  00E3C6                     u3880:
 13547  00E3C6  EFD8  F071         	goto	l4978
 13548  00E3CA                     l1411:
 13549  00E3CA  5019               	movf	___fldiv@aexp^0,w,c
 13550  00E3CC  B4D8               	btfsc	status,2,c
 13551  00E3CE  EFEB  F071         	goto	u3891
 13552  00E3D2  EFED  F071         	goto	u3890
 13553  00E3D6                     u3891:
 13554  00E3D6  EF11  F072         	goto	l4990
 13555  00E3DA                     u3890:
 13556  00E3DA  0E01               	movlw	1
 13557  00E3DC  2601               	addwf	___fldiv@b^0,f,c
 13558  00E3DE  0E00               	movlw	0
 13559  00E3E0  2202               	addwfc	(___fldiv@b+1)^0,f,c
 13560  00E3E2  2203               	addwfc	(___fldiv@b+2)^0,f,c
 13561  00E3E4  2204               	addwfc	(___fldiv@b+3)^0,f,c
 13562  00E3E6  A004               	btfss	(___fldiv@b+3)^0,0,c
 13563  00E3E8  EFF8  F071         	goto	u3901
 13564  00E3EC  EFFA  F071         	goto	u3900
 13565  00E3F0                     u3901:
 13566  00E3F0  EF11  F072         	goto	l4990
 13567  00E3F4                     u3900:
 13568  00E3F4  C001  F009         	movff	___fldiv@b,??___fldiv
 13569  00E3F8  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
 13570  00E3FC  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
 13571  00E400  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
 13572  00E404  340C               	rlcf	(??___fldiv+3)^0,w,c
 13573  00E406  320C               	rrcf	(??___fldiv+3)^0,f,c
 13574  00E408  320B               	rrcf	(??___fldiv+2)^0,f,c
 13575  00E40A  320A               	rrcf	(??___fldiv+1)^0,f,c
 13576  00E40C  3209               	rrcf	??___fldiv^0,f,c
 13577  00E40E  C009  F001         	movff	??___fldiv,___fldiv@b
 13578  00E412  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
 13579  00E416  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
 13580  00E41A  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
 13581  00E41E  4A12               	infsnz	___fldiv@new_exp^0,f,c
 13582  00E420  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
 13583  00E422                     l4990:
 13584  00E422  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13585  00E424  EF1C  F072         	goto	u3911
 13586  00E428  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 13587  00E42A  E108               	bnz	u3910
 13588  00E42C  2812               	incf	___fldiv@new_exp^0,w,c
 13589  00E42E  A0D8               	btfss	status,0,c
 13590  00E430  EF1C  F072         	goto	u3911
 13591  00E434  EF1E  F072         	goto	u3910
 13592  00E438                     u3911:
 13593  00E438  EF29  F072         	goto	l4994
 13594  00E43C                     u3910:
 13595  00E43C  0E00               	movlw	0
 13596  00E43E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13597  00E440  6812               	setf	___fldiv@new_exp^0,c
 13598  00E442  0E00               	movlw	0
 13599  00E444  6E01               	movwf	___fldiv@b^0,c
 13600  00E446  0E00               	movlw	0
 13601  00E448  6E02               	movwf	(___fldiv@b+1)^0,c
 13602  00E44A  0E00               	movlw	0
 13603  00E44C  6E03               	movwf	(___fldiv@b+2)^0,c
 13604  00E44E  0E00               	movlw	0
 13605  00E450  6E04               	movwf	(___fldiv@b+3)^0,c
 13606  00E452                     l4994:
 13607  00E452  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
 13608  00E454  EF36  F072         	goto	u3920
 13609  00E458  5013               	movf	(___fldiv@new_exp+1)^0,w,c
 13610  00E45A  E106               	bnz	u3921
 13611  00E45C  0412               	decf	___fldiv@new_exp^0,w,c
 13612  00E45E  B0D8               	btfsc	status,0,c
 13613  00E460  EF34  F072         	goto	u3921
 13614  00E464  EF36  F072         	goto	u3920
 13615  00E468                     u3921:
 13616  00E468  EF44  F072         	goto	l4998
 13617  00E46C                     u3920:
 13618  00E46C  0E00               	movlw	0
 13619  00E46E  6E13               	movwf	(___fldiv@new_exp+1)^0,c
 13620  00E470  0E00               	movlw	0
 13621  00E472  6E12               	movwf	___fldiv@new_exp^0,c
 13622  00E474  0E00               	movlw	0
 13623  00E476  6E01               	movwf	___fldiv@b^0,c
 13624  00E478  0E00               	movlw	0
 13625  00E47A  6E02               	movwf	(___fldiv@b+1)^0,c
 13626  00E47C  0E00               	movlw	0
 13627  00E47E  6E03               	movwf	(___fldiv@b+2)^0,c
 13628  00E480  0E00               	movlw	0
 13629  00E482  6E04               	movwf	(___fldiv@b+3)^0,c
 13630  00E484  0E00               	movlw	0
 13631  00E486  6E11               	movwf	___fldiv@sign^0,c
 13632  00E488                     l4998:
 13633  00E488  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
 13634  00E48C  A018               	btfss	___fldiv@bexp^0,0,c
 13635  00E48E  EF4B  F072         	goto	u3931
 13636  00E492  EF4D  F072         	goto	u3930
 13637  00E496                     u3931:
 13638  00E496  EF50  F072         	goto	l5004
 13639  00E49A                     u3930:
 13640  00E49A  8E03               	bsf	(___fldiv@b+2)^0,7,c
 13641  00E49C  EF51  F072         	goto	l5006
 13642  00E4A0                     l5004:
 13643  00E4A0  9E03               	bcf	(___fldiv@b+2)^0,7,c
 13644  00E4A2                     l5006:
 13645  00E4A2  90D8               	bcf	status,0,c
 13646  00E4A4  3018               	rrcf	___fldiv@bexp^0,w,c
 13647  00E4A6  6E04               	movwf	(___fldiv@b+3)^0,c
 13648  00E4A8  EF07  F071         	goto	l4920
 13649  00E4AC                     l1398:
 13650  00E4AC  0012               	return		;funcret
 13651  00E4AE                     __end_of___fldiv:
 13652                           	callstack 0
 13653                           
 13654 ;; *************** function _I2C_Master_Write *****************
 13655 ;; Defined at:
 13656 ;;		line 100 in file "INA260.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;  d               2    1[COMRAM] unsigned int 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;		None
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  1    wreg      void 
 13663 ;; Registers used:
 13664 ;;		wreg, status,2, status,0, cstack
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13670 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13671 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13673 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13674 ;;Total ram usage:        2 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:    1
 13677 ;; This function calls:
 13678 ;;		_I2C_Master_Wait
 13679 ;; This function is called by:
 13680 ;;		_Voltage_ReadRegister
 13681 ;;		_Current_ReadRegister
 13682 ;;		_Power_ReadRegister
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text96
 13687  00C16A                     __ptext96:
 13688                           	callstack 0
 13689  00C16A                     _I2C_Master_Write:
 13690                           	callstack 28
 13691  00C16A                     
 13692                           ;INA260.c: 100: void I2C_Master_Write(unsigned d);INA260.c: 101: {;INA260.c: 102:   I2C_
      +                          Master_Wait();
 13693  00C16A  EC8F  F061         	call	_I2C_Master_Wait	;wreg free
 13694  00C16E                     
 13695                           ;INA260.c: 103:   SSPBUF = d;
 13696  00C16E  C002  FFC9         	movff	I2C_Master_Write@d,4041	;volatile
 13697  00C172  0012               	return		;funcret
 13698  00C174                     __end_of_I2C_Master_Write:
 13699                           	callstack 0
 13700                           
 13701 ;; *************** function _I2C_Master_Stop *****************
 13702 ;; Defined at:
 13703 ;;		line 94 in file "INA260.c"
 13704 ;; Parameters:    Size  Location     Type
 13705 ;;		None
 13706 ;; Auto vars:     Size  Location     Type
 13707 ;;		None
 13708 ;; Return value:  Size  Location     Type
 13709 ;;                  1    wreg      void 
 13710 ;; Registers used:
 13711 ;;		wreg, status,2, status,0, cstack
 13712 ;; Tracked objects:
 13713 ;;		On entry : 0/0
 13714 ;;		On exit  : 0/0
 13715 ;;		Unchanged: 0/0
 13716 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13717 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13718 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13719 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13720 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13721 ;;Total ram usage:        0 bytes
 13722 ;; Hardware stack levels used:    1
 13723 ;; Hardware stack levels required when called:    1
 13724 ;; This function calls:
 13725 ;;		_I2C_Master_Wait
 13726 ;; This function is called by:
 13727 ;;		_Voltage_ReadRegister
 13728 ;;		_Current_ReadRegister
 13729 ;;		_Power_ReadRegister
 13730 ;; This function uses a non-reentrant model
 13731 ;;
 13732                           
 13733                           	psect	text97
 13734  00C11A                     __ptext97:
 13735                           	callstack 0
 13736  00C11A                     _I2C_Master_Stop:
 13737                           	callstack 28
 13738  00C11A                     
 13739                           ;INA260.c: 96:   I2C_Master_Wait();
 13740  00C11A  EC8F  F061         	call	_I2C_Master_Wait	;wreg free
 13741  00C11E                     
 13742                           ;INA260.c: 97:   PEN = 1;
 13743  00C11E  84C5               	bsf	4037,2,c	;volatile
 13744  00C120  0012               	return		;funcret
 13745  00C122                     __end_of_I2C_Master_Stop:
 13746                           	callstack 0
 13747                           
 13748 ;; *************** function _I2C_Master_Start *****************
 13749 ;; Defined at:
 13750 ;;		line 82 in file "INA260.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;		None
 13753 ;; Auto vars:     Size  Location     Type
 13754 ;;		None
 13755 ;; Return value:  Size  Location     Type
 13756 ;;                  1    wreg      void 
 13757 ;; Registers used:
 13758 ;;		wreg, status,2, status,0, cstack
 13759 ;; Tracked objects:
 13760 ;;		On entry : 0/0
 13761 ;;		On exit  : 0/0
 13762 ;;		Unchanged: 0/0
 13763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13764 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13765 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13767 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13768 ;;Total ram usage:        0 bytes
 13769 ;; Hardware stack levels used:    1
 13770 ;; Hardware stack levels required when called:    1
 13771 ;; This function calls:
 13772 ;;		_I2C_Master_Wait
 13773 ;; This function is called by:
 13774 ;;		_Voltage_ReadRegister
 13775 ;;		_Current_ReadRegister
 13776 ;;		_Power_ReadRegister
 13777 ;; This function uses a non-reentrant model
 13778 ;;
 13779                           
 13780                           	psect	text98
 13781  00C112                     __ptext98:
 13782                           	callstack 0
 13783  00C112                     _I2C_Master_Start:
 13784                           	callstack 28
 13785  00C112                     
 13786                           ;INA260.c: 84:   I2C_Master_Wait();
 13787  00C112  EC8F  F061         	call	_I2C_Master_Wait	;wreg free
 13788  00C116                     
 13789                           ;INA260.c: 85:   SEN = 1;
 13790  00C116  80C5               	bsf	4037,0,c	;volatile
 13791  00C118  0012               	return		;funcret
 13792  00C11A                     __end_of_I2C_Master_Start:
 13793                           	callstack 0
 13794                           
 13795 ;; *************** function _I2C_Master_RepeatedStart *****************
 13796 ;; Defined at:
 13797 ;;		line 88 in file "INA260.c"
 13798 ;; Parameters:    Size  Location     Type
 13799 ;;		None
 13800 ;; Auto vars:     Size  Location     Type
 13801 ;;		None
 13802 ;; Return value:  Size  Location     Type
 13803 ;;                  1    wreg      void 
 13804 ;; Registers used:
 13805 ;;		wreg, status,2, status,0, cstack
 13806 ;; Tracked objects:
 13807 ;;		On entry : 0/0
 13808 ;;		On exit  : 0/0
 13809 ;;		Unchanged: 0/0
 13810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13811 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13812 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13813 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13814 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13815 ;;Total ram usage:        0 bytes
 13816 ;; Hardware stack levels used:    1
 13817 ;; Hardware stack levels required when called:    1
 13818 ;; This function calls:
 13819 ;;		_I2C_Master_Wait
 13820 ;; This function is called by:
 13821 ;;		_Voltage_ReadRegister
 13822 ;;		_Current_ReadRegister
 13823 ;;		_Power_ReadRegister
 13824 ;; This function uses a non-reentrant model
 13825 ;;
 13826                           
 13827                           	psect	text99
 13828  00C10A                     __ptext99:
 13829                           	callstack 0
 13830  00C10A                     _I2C_Master_RepeatedStart:
 13831                           	callstack 28
 13832  00C10A                     
 13833                           ;INA260.c: 90:   I2C_Master_Wait();
 13834  00C10A  EC8F  F061         	call	_I2C_Master_Wait	;wreg free
 13835  00C10E                     
 13836                           ;INA260.c: 91:   RSEN = 1;
 13837  00C10E  82C5               	bsf	4037,1,c	;volatile
 13838  00C110  0012               	return		;funcret
 13839  00C112                     __end_of_I2C_Master_RepeatedStart:
 13840                           	callstack 0
 13841                           
 13842 ;; *************** function _I2C_Master_Read *****************
 13843 ;; Defined at:
 13844 ;;		line 106 in file "INA260.c"
 13845 ;; Parameters:    Size  Location     Type
 13846 ;;  a               2    1[COMRAM] unsigned short 
 13847 ;; Auto vars:     Size  Location     Type
 13848 ;;  temp            2    3[COMRAM] unsigned short 
 13849 ;; Return value:  Size  Location     Type
 13850 ;;                  2    1[COMRAM] unsigned short 
 13851 ;; Registers used:
 13852 ;;		wreg, status,2, status,0, cstack
 13853 ;; Tracked objects:
 13854 ;;		On entry : 0/0
 13855 ;;		On exit  : 0/0
 13856 ;;		Unchanged: 0/0
 13857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13858 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13861 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13862 ;;Total ram usage:        4 bytes
 13863 ;; Hardware stack levels used:    1
 13864 ;; Hardware stack levels required when called:    1
 13865 ;; This function calls:
 13866 ;;		_I2C_Master_Wait
 13867 ;; This function is called by:
 13868 ;;		_Voltage_ReadRegister
 13869 ;;		_Current_ReadRegister
 13870 ;;		_Power_ReadRegister
 13871 ;; This function uses a non-reentrant model
 13872 ;;
 13873                           
 13874                           	psect	text100
 13875  00C49A                     __ptext100:
 13876                           	callstack 0
 13877  00C49A                     _I2C_Master_Read:
 13878                           	callstack 28
 13879  00C49A                     
 13880                           ;INA260.c: 106: unsigned short I2C_Master_Read(unsigned short a);INA260.c: 107: {;INA260
      +                          .c: 108:   unsigned short temp;;INA260.c: 109:   I2C_Master_Wait();
 13881  00C49A  EC8F  F061         	call	_I2C_Master_Wait	;wreg free
 13882  00C49E                     
 13883                           ;INA260.c: 110:   RCEN = 1;
 13884  00C49E  86C5               	bsf	4037,3,c	;volatile
 13885                           
 13886                           ;INA260.c: 111:   I2C_Master_Wait();
 13887  00C4A0  EC8F  F061         	call	_I2C_Master_Wait	;wreg free
 13888  00C4A4                     
 13889                           ;INA260.c: 112:   temp = SSPBUF;
 13890  00C4A4  CFC9 F004          	movff	4041,I2C_Master_Read@temp	;volatile
 13891  00C4A8  6A05               	clrf	(I2C_Master_Read@temp+1)^0,c
 13892                           
 13893                           ;INA260.c: 113:   I2C_Master_Wait();
 13894  00C4AA  EC8F  F061         	call	_I2C_Master_Wait	;wreg free
 13895  00C4AE                     
 13896                           ;INA260.c: 114:   ACKDT = (a)?0:1;
 13897  00C4AE  5002               	movf	I2C_Master_Read@a^0,w,c
 13898  00C4B0  1003               	iorwf	(I2C_Master_Read@a+1)^0,w,c
 13899  00C4B2  B4D8               	btfsc	status,2,c
 13900  00C4B4  EF5E  F062         	goto	u5541
 13901  00C4B8  EF61  F062         	goto	u5540
 13902  00C4BC                     u5541:
 13903  00C4BC  8AC5               	bsf	4037,5,c	;volatile
 13904  00C4BE  EF62  F062         	goto	u5555
 13905  00C4C2                     u5540:
 13906  00C4C2  9AC5               	bcf	4037,5,c	;volatile
 13907  00C4C4                     u5555:
 13908  00C4C4                     
 13909                           ;INA260.c: 115:   ACKEN = 1;
 13910  00C4C4  88C5               	bsf	4037,4,c	;volatile
 13911  00C4C6                     
 13912                           ;INA260.c: 116:   return temp;
 13913  00C4C6  C004  F002         	movff	I2C_Master_Read@temp,?_I2C_Master_Read
 13914  00C4CA  C005  F003         	movff	I2C_Master_Read@temp+1,?_I2C_Master_Read+1
 13915  00C4CE  0012               	return		;funcret
 13916  00C4D0                     __end_of_I2C_Master_Read:
 13917                           	callstack 0
 13918                           
 13919 ;; *************** function _I2C_Master_Wait *****************
 13920 ;; Defined at:
 13921 ;;		line 77 in file "INA260.c"
 13922 ;; Parameters:    Size  Location     Type
 13923 ;;		None
 13924 ;; Auto vars:     Size  Location     Type
 13925 ;;		None
 13926 ;; Return value:  Size  Location     Type
 13927 ;;                  1    wreg      void 
 13928 ;; Registers used:
 13929 ;;		wreg, status,2, status,0
 13930 ;; Tracked objects:
 13931 ;;		On entry : 0/0
 13932 ;;		On exit  : 0/0
 13933 ;;		Unchanged: 0/0
 13934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
 13935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13936 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13937 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13938 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
 13939 ;;Total ram usage:        1 bytes
 13940 ;; Hardware stack levels used:    1
 13941 ;; This function calls:
 13942 ;;		Nothing
 13943 ;; This function is called by:
 13944 ;;		_I2C_Master_Start
 13945 ;;		_I2C_Master_RepeatedStart
 13946 ;;		_I2C_Master_Stop
 13947 ;;		_I2C_Master_Write
 13948 ;;		_I2C_Master_Read
 13949 ;; This function uses a non-reentrant model
 13950 ;;
 13951                           
 13952                           	psect	text101
 13953  00C31E                     __ptext101:
 13954                           	callstack 0
 13955  00C31E                     _I2C_Master_Wait:
 13956                           	callstack 28
 13957  00C31E                     l792:
 13958  00C31E  B4C7               	btfsc	199,2,c	;volatile
 13959  00C320  EF94  F061         	goto	u5371
 13960  00C324  EF96  F061         	goto	u5370
 13961  00C328                     u5371:
 13962  00C328  EF8F  F061         	goto	l792
 13963  00C32C                     u5370:
 13964  00C32C  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
 13965  00C330  0E1F               	movlw	31
 13966  00C332  1601               	andwf	??_I2C_Master_Wait^0,f,c
 13967  00C334  A4D8               	btfss	status,2,c
 13968  00C336  EF9F  F061         	goto	u5381
 13969  00C33A  EFA1  F061         	goto	u5380
 13970  00C33E                     u5381:
 13971  00C33E  EF8F  F061         	goto	l792
 13972  00C342                     u5380:
 13973  00C342  0012               	return		;funcret
 13974  00C344                     __end_of_I2C_Master_Wait:
 13975                           	callstack 0
 13976                           
 13977                           	psect	text102
 13978  000000                     __ptext102:
 13979                           	callstack 0
 13980  000000                     
 13981                           	psect	rparam
 13982  0000                     
 13983                           	psect	idloc
 13984                           
 13985                           ;Config register IDLOC0 @ 0x200000
 13986                           ;	unspecified, using default values
 13987  200000                     	org	2097152
 13988  200000  FF                 	db	255
 13989                           
 13990                           ;Config register IDLOC1 @ 0x200001
 13991                           ;	unspecified, using default values
 13992  200001                     	org	2097153
 13993  200001  FF                 	db	255
 13994                           
 13995                           ;Config register IDLOC2 @ 0x200002
 13996                           ;	unspecified, using default values
 13997  200002                     	org	2097154
 13998  200002  FF                 	db	255
 13999                           
 14000                           ;Config register IDLOC3 @ 0x200003
 14001                           ;	unspecified, using default values
 14002  200003                     	org	2097155
 14003  200003  FF                 	db	255
 14004                           
 14005                           ;Config register IDLOC4 @ 0x200004
 14006                           ;	unspecified, using default values
 14007  200004                     	org	2097156
 14008  200004  FF                 	db	255
 14009                           
 14010                           ;Config register IDLOC5 @ 0x200005
 14011                           ;	unspecified, using default values
 14012  200005                     	org	2097157
 14013  200005  FF                 	db	255
 14014                           
 14015                           ;Config register IDLOC6 @ 0x200006
 14016                           ;	unspecified, using default values
 14017  200006                     	org	2097158
 14018  200006  FF                 	db	255
 14019                           
 14020                           ;Config register IDLOC7 @ 0x200007
 14021                           ;	unspecified, using default values
 14022  200007                     	org	2097159
 14023  200007  FF                 	db	255
 14024                           
 14025                           	psect	config
 14026                           
 14027                           ;Config register CONFIG1L @ 0x300000
 14028                           ;	VREG Sleep Enable bit
 14029                           ;	RETEN = OFF, Ultra low-power regulator is Disabled (Controlled by REGSLP bit)
 14030                           ;	LF-INTOSC Low-power Enable bit
 14031                           ;	INTOSCSEL = HIGH, LF-INTOSC in High-power mode during Sleep
 14032                           ;	SOSC Power Selection and mode Configuration bits
 14033                           ;	SOSCSEL = DIG, Digital (SCLKI) mode
 14034                           ;	Extended Instruction Set
 14035                           ;	XINST = OFF, Disabled
 14036  300000                     	org	3145728
 14037  300000  15                 	db	21
 14038                           
 14039                           ;Config register CONFIG1H @ 0x300001
 14040                           ;	Oscillator
 14041                           ;	FOSC = INTIO2, Internal RC oscillator
 14042                           ;	PLL x4 Enable bit
 14043                           ;	PLLCFG = OFF, Disabled
 14044                           ;	Fail-Safe Clock Monitor
 14045                           ;	FCMEN = OFF, Disabled
 14046                           ;	Internal External Oscillator Switch Over Mode
 14047                           ;	IESO = OFF, Disabled
 14048  300001                     	org	3145729
 14049  300001  08                 	db	8
 14050                           
 14051                           ;Config register CONFIG2L @ 0x300002
 14052                           ;	Power Up Timer
 14053                           ;	PWRTEN = OFF, Disabled
 14054                           ;	Brown Out Detect
 14055                           ;	BOREN = SBORDIS, Enabled in hardware, SBOREN disabled
 14056                           ;	Brown-out Reset Voltage bits
 14057                           ;	BORV = 3, 1.8V
 14058                           ;	BORMV Power level
 14059                           ;	BORPWR = ZPBORMV, ZPBORMV instead of BORMV is selected
 14060  300002                     	org	3145730
 14061  300002  7F                 	db	127
 14062                           
 14063                           ;Config register CONFIG2H @ 0x300003
 14064                           ;	Watchdog Timer
 14065                           ;	WDTEN = OFF, WDT disabled in hardware; SWDTEN bit disabled
 14066                           ;	Watchdog Postscaler
 14067                           ;	WDTPS = 1048576, 1:1048576
 14068  300003                     	org	3145731
 14069  300003  7C                 	db	124
 14070                           
 14071                           ; Padding undefined space
 14072  300004                     	org	3145732
 14073  300004  FF                 	db	255
 14074                           
 14075                           ;Config register CONFIG3H @ 0x300005
 14076                           ;	ECAN Mux bit
 14077                           ;	CANMX = PORTB, ECAN TX and RX pins are located on RB2 and RB3, respectively
 14078                           ;	MSSP address masking
 14079                           ;	MSSPMSK = MSK7, 7 Bit address masking mode
 14080                           ;	Master Clear Enable
 14081                           ;	MCLRE = ON, MCLR Enabled, RE3 Disabled
 14082  300005                     	org	3145733
 14083  300005  89                 	db	137
 14084                           
 14085                           ;Config register CONFIG4L @ 0x300006
 14086                           ;	Stack Overflow Reset
 14087                           ;	STVREN = ON, Enabled
 14088                           ;	Boot Block Size
 14089                           ;	BBSIZ = BB2K, 2K word Boot Block size
 14090  300006                     	org	3145734
 14091  300006  91                 	db	145
 14092                           
 14093                           ; Padding undefined space
 14094  300007                     	org	3145735
 14095  300007  FF                 	db	255
 14096                           
 14097                           ;Config register CONFIG5L @ 0x300008
 14098                           ;	Code Protect 00800-03FFF
 14099                           ;	CP0 = OFF, Disabled
 14100                           ;	Code Protect 04000-07FFF
 14101                           ;	CP1 = OFF, Disabled
 14102                           ;	Code Protect 08000-0BFFF
 14103                           ;	CP2 = OFF, Disabled
 14104                           ;	Code Protect 0C000-0FFFF
 14105                           ;	CP3 = OFF, Disabled
 14106  300008                     	org	3145736
 14107  300008  0F                 	db	15
 14108                           
 14109                           ;Config register CONFIG5H @ 0x300009
 14110                           ;	Code Protect Boot
 14111                           ;	CPB = OFF, Disabled
 14112                           ;	Data EE Read Protect
 14113                           ;	CPD = OFF, Disabled
 14114  300009                     	org	3145737
 14115  300009  C0                 	db	192
 14116                           
 14117                           ;Config register CONFIG6L @ 0x30000A
 14118                           ;	Table Write Protect 00800-03FFF
 14119                           ;	WRT0 = OFF, Disabled
 14120                           ;	Table Write Protect 04000-07FFF
 14121                           ;	WRT1 = OFF, Disabled
 14122                           ;	Table Write Protect 08000-0BFFF
 14123                           ;	WRT2 = OFF, Disabled
 14124                           ;	Table Write Protect 0C000-0FFFF
 14125                           ;	WRT3 = OFF, Disabled
 14126  30000A                     	org	3145738
 14127  30000A  0F                 	db	15
 14128                           
 14129                           ;Config register CONFIG6H @ 0x30000B
 14130                           ;	Config. Write Protect
 14131                           ;	WRTC = OFF, Disabled
 14132                           ;	Table Write Protect Boot
 14133                           ;	WRTB = OFF, Disabled
 14134                           ;	Data EE Write Protect
 14135                           ;	WRTD = OFF, Disabled
 14136  30000B                     	org	3145739
 14137  30000B  E0                 	db	224
 14138                           
 14139                           ;Config register CONFIG7L @ 0x30000C
 14140                           ;	Table Read Protect 00800-03FFF
 14141                           ;	EBTR0 = OFF, Disabled
 14142                           ;	Table Read Protect 04000-07FFF
 14143                           ;	EBTR1 = OFF, Disabled
 14144                           ;	Table Read Protect 08000-0BFFF
 14145                           ;	EBTR2 = OFF, Disabled
 14146                           ;	Table Read Protect 0C000-0FFFF
 14147                           ;	EBTR3 = OFF, Disabled
 14148  30000C                     	org	3145740
 14149  30000C  0F                 	db	15
 14150                           
 14151                           ;Config register CONFIG7H @ 0x30000D
 14152                           ;	Table Read Protect Boot
 14153                           ;	EBTRB = OFF, Disabled
 14154  30000D                     	org	3145741
 14155  30000D  40                 	db	64
 14156                           tosu	equ	0xFFF
 14157                           tosh	equ	0xFFE
 14158                           tosl	equ	0xFFD
 14159                           stkptr	equ	0xFFC
 14160                           pclatu	equ	0xFFB
 14161                           pclath	equ	0xFFA
 14162                           pcl	equ	0xFF9
 14163                           tblptru	equ	0xFF8
 14164                           tblptrh	equ	0xFF7
 14165                           tblptrl	equ	0xFF6
 14166                           tablat	equ	0xFF5
 14167                           prodh	equ	0xFF4
 14168                           prodl	equ	0xFF3
 14169                           indf0	equ	0xFEF
 14170                           postinc0	equ	0xFEE
 14171                           postdec0	equ	0xFED
 14172                           preinc0	equ	0xFEC
 14173                           plusw0	equ	0xFEB
 14174                           fsr0h	equ	0xFEA
 14175                           fsr0l	equ	0xFE9
 14176                           wreg	equ	0xFE8
 14177                           indf1	equ	0xFE7
 14178                           postinc1	equ	0xFE6
 14179                           postdec1	equ	0xFE5
 14180                           preinc1	equ	0xFE4
 14181                           plusw1	equ	0xFE3
 14182                           fsr1h	equ	0xFE2
 14183                           fsr1l	equ	0xFE1
 14184                           bsr	equ	0xFE0
 14185                           indf2	equ	0xFDF
 14186                           postinc2	equ	0xFDE
 14187                           postdec2	equ	0xFDD
 14188                           preinc2	equ	0xFDC
 14189                           plusw2	equ	0xFDB
 14190                           fsr2h	equ	0xFDA
 14191                           fsr2l	equ	0xFD9
 14192                           status	equ	0xFD8

Data Sizes:
    Strings     62
    Constant    512
    Data        0
    BSS         261
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     80     145
    BANK1           256      0     196
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14           65      0       0

Pointer List with Targets:

    I2C_Read1ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Read2ByteRegister@returnValue.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write1ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_Write2ByteRegister@data.data	PTR unsigned char  size(2) Largest target is 0

    I2C_DO_TX$2616$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2622$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2628$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX_EMPTY$2634$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2633	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX_EMPTY$2628	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_RX$2627	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_RX$2622	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_DO_TX$2621	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_DO_TX$2616	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_MasterFsm$2615	const PTR FTN()enum E12575 size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    I2C_CallbackReturnStop@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_CallbackReturnReset@funPtr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    Absolute function$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    cb$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$0$0	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_19(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(COMRAM[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_14(CODE[4]), STR_13(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_5(CODE[5]), STR_4(CODE[5]), STR_3(CODE[5]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2029_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 6
		 -> power_str(BANK0[6]), current_str(BANK0[6]), voltage_str(BANK0[6]), 

    Oled_WriteString@characters	PTR unsigned char  size(2) Largest target is 11
		 -> STR_8(CODE[11]), STR_7(CODE[11]), STR_6(CODE[9]), power_str(BANK0[6]), 
		 -> current_str(BANK0[6]), voltage_str(BANK0[6]), STR_2(CODE[4]), STR_1(CODE[3]), 

    EUSART1_ErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultErrorHandler(), Absolute function(), 

    EUSART1_OverrunErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultOverrunErrorHandler(), Absolute function(), 

    EUSART1_FramingErrorHandler	PTR FTN()void  size(2) Largest target is 1
		 -> EUSART1_DefaultFramingErrorHandler(), Absolute function(), 

    I2C_SetCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetAddressNackCallback@ptr	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    I2C_SetAddressNackCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), 

    I2C_SetDataCompleteCallback@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_SetDataCompleteCallback@cb	PTR FTN(PTR void ,)enum E358 size(2) Largest target is 1
		 -> Absolute function(), rdBlkRegCompleteHandler(), wr2RegCompleteHandler(), wr1RegCompleteHandler(), 
		 -> rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_SetBuffer@buffer	PTR void  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.data_ptr	PTR unsigned char  size(2) Largest target is 5
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), I2C_ReadDataBlock@reg(COMRAM[1]), I2C_ReadDataBlock@bufferBlock(COMRAM[4]), 
		 -> I2C_Write2ByteRegister@reg(COMRAM[1]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@reg(COMRAM[1]), I2C_Write1ByteRegister@data(COMRAM[1]), 
		 -> I2C_Read2ByteRegister@reg(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), NULL(NULL[0]), I2C_Read1ByteRegister@reg(COMRAM[1]), 
		 -> I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    I2C_Status.callbackPayload	PTR void [6] size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S379$callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    I2C_Status.callbackTable	PTR FTN(PTR void ,)enum E358[6] size(2) Largest target is 1
		 -> I2C_CallbackReturnReset(), I2C_CallbackReturnStop(), Absolute function(), rdBlkRegCompleteHandler(), 
		 -> wr2RegCompleteHandler(), wr1RegCompleteHandler(), rd2RegCompleteHandler(), rd1RegCompleteHandler(), 

    i2c_fsmStateTable	const PTR FTN()enum E12575[16] size(2) Largest target is 1
		 -> I2C_DO_ADDRESS_NACK(), I2C_DO_RESET(), I2C_DO_RX_NACK_RESTART(), I2C_DO_RX_NACK_STOP(), 
		 -> I2C_DO_RX_ACK(), I2C_DO_SEND_STOP(), I2C_DO_SEND_RESTART(), I2C_DO_SEND_RESTART_WRITE(), 
		 -> I2C_DO_SEND_RESTART_READ(), I2C_DO_TX_EMPTY(), I2C_DO_RCEN(), I2C_DO_RX(), 
		 -> I2C_DO_TX(), I2C_DO_SEND_ADR_WRITE(), I2C_DO_SEND_ADR_READ(), I2C_DO_IDLE(), 

    rdBlkRegCompleteHandler@ptr.data	PTR unsigned char  size(2) Largest target is 0

    rdBlkRegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    wr1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd2RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    rd1RegCompleteHandler@ptr	PTR void  size(2) Largest target is 5
		 -> I2C_ReadDataBlock@bufferBlock(COMRAM[4]), I2C_Write2ByteRegister@data(COMRAM[2]), I2C_Write1ByteRegister@data(COMRAM[1]), I2C_Read2ByteRegister@returnValue(COMRAM[2]), 
		 -> NULL(NULL[0]), I2C_Read1ByteRegister@returnValue(COMRAM[1]), 

    S96$data	PTR unsigned char  size(2) Largest target is 0

    bufferBlock.data	PTR unsigned char  size(2) Largest target is 0

    I2C_WriteNBytes@data	PTR unsigned char  size(2) Largest target is 2
		 -> Oled_Data@data_I2C(COMRAM[2]), Oled_Command@data_I2C(COMRAM[2]), 


Critical Paths under _main in COMRAM

    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->___flge
    _tolower->_isupper
    _pad->_fputs
    _fputs->_fputc
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _atoi->_isspace
    _Voltage_ReadRegister->___flmul
    _Power_ReadRegister->___fldiv
    _Oled_WriteString->_Oled_WriteCharacter
    _Oled_WriteCharacter->_Oled_Data
    _Oled_SelectPage->_Oled_Command
    _Oled_Init->_Oled_Command
    _Oled_Command->_I2C_WriteNBytes
    _Oled_Clear->_Oled_Data
    _Oled_Data->_I2C_WriteNBytes
    _I2C_SetAddressNackCallback->_I2C_SetCallback
    _I2C_MasterWrite->_I2C_MasterOperation
    _I2C_Poller->_I2C_MasterFsm
    _I2C_MasterFsm->_I2C_DO_ADDRESS_NACK
    _I2C_MasterFsm->_I2C_DO_RX
    _I2C_MasterFsm->_I2C_DO_TX
    _I2C_MasterFsm->_I2C_DO_TX_EMPTY
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnReset
    _I2C_DO_TX_EMPTY->_I2C_CallbackReturnStop
    _I2C_DO_TX_EMPTY->_rd1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rd2RegCompleteHandler
    _I2C_DO_TX_EMPTY->_rdBlkRegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr1RegCompleteHandler
    _I2C_DO_TX_EMPTY->_wr2RegCompleteHandler
    _I2C_DO_TX->_I2C_CallbackReturnReset
    _I2C_DO_TX->_I2C_CallbackReturnStop
    _I2C_DO_TX->_rd1RegCompleteHandler
    _I2C_DO_TX->_rd2RegCompleteHandler
    _I2C_DO_TX->_rdBlkRegCompleteHandler
    _I2C_DO_TX->_wr1RegCompleteHandler
    _I2C_DO_TX->_wr2RegCompleteHandler
    _I2C_DO_SEND_ADR_WRITE->_I2C_MasterSendTxData
    _I2C_DO_RX->_I2C_CallbackReturnReset
    _I2C_DO_RX->_I2C_CallbackReturnStop
    _I2C_DO_RX->_rd1RegCompleteHandler
    _I2C_DO_RX->_rd2RegCompleteHandler
    _I2C_DO_RX->_rdBlkRegCompleteHandler
    _I2C_DO_RX->_wr1RegCompleteHandler
    _I2C_DO_RX->_wr2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnReset
    _I2C_DO_ADDRESS_NACK->_I2C_CallbackReturnStop
    _I2C_DO_ADDRESS_NACK->_rd1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rd2RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_rdBlkRegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr1RegCompleteHandler
    _I2C_DO_ADDRESS_NACK->_wr2RegCompleteHandler
    _wr2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _wr1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rdBlkRegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd2RegCompleteHandler->_I2C_SetDataCompleteCallback
    _rd1RegCompleteHandler->_I2C_SetDataCompleteCallback
    _I2C_SetDataCompleteCallback->_I2C_SetCallback
    _I2C_Master_Init->___lldiv
    _Current_ReadRegister->___flmul
    ___xxtofl->___wmul
    ___flmul->___xxtofl
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait
    _I2C_Master_RepeatedStart->_I2C_Master_Wait
    _I2C_Master_Read->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_sprintf
    _sprintf->_vfprintf
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  423760
                                             93 COMRAM     2     2      0
               _Current_ReadRegister
                     _I2C_Initialize
                    _I2C_Master_Init
                         _Oled_Clear
                          _Oled_Init
                    _Oled_SelectPage
                   _Oled_WriteString
                 _Power_ReadRegister
                  _SYSTEM_Initialize
               _Voltage_ReadRegister
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             18    10      8   30585
                                             62 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (2) _vfprintf                                             8     2      6   29924
                                             91 COMRAM     2     2      0
                                             56 BANK0      6     0      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (3) _vfpfcnvrt                                           48    42      6   29552
                                             69 COMRAM    22    16      6
                               _atoi
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (4) _efgtoa                                              68    61      7   22301
                                             57 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (4) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (5) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) _pad                                                 11     5      6    3165
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (6) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (6) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (4) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (5) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (5) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4     381
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (5) ___flsub                                              8     0      8    2889
                                             45 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fladd                                             16     8      8    2414
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (5) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flge                                              12     4      8     638
                                             45 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _atoi                                                15    13      2    3104
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (5) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              6     4      2     237
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (1) _Voltage_ReadRegister                                 9     5      4    6922
                                             45 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Power_ReadRegister                                   9     5      4    6529
                                             25 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                             ___wmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4    2263
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Oled_WriteString                                     2     0      2   93613
                                             32 COMRAM     2     0      2
                _Oled_WriteCharacter
 ---------------------------------------------------------------------------------
 (2) _Oled_WriteCharacter                                  7     7      0   92960
                                             25 COMRAM     7     7      0
                          _Oled_Data
 ---------------------------------------------------------------------------------
 (1) _Oled_SelectPage                                      2     2      0   92915
                                             25 COMRAM     2     2      0
                       _Oled_Command
 ---------------------------------------------------------------------------------
 (1) _Oled_Init                                            0     0      0   92870
                       _Oled_Command
 ---------------------------------------------------------------------------------
 (2) _Oled_Command                                         3     3      0   92870
                                             22 COMRAM     3     3      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (1) _Oled_Clear                                           2     2      0   92916
                                             25 COMRAM     2     2      0
                          _Oled_Data
 ---------------------------------------------------------------------------------
 (3) _Oled_Data                                            3     3      0   92870
                                             22 COMRAM     3     3      0
                    _I2C_WriteNBytes
 ---------------------------------------------------------------------------------
 (4) _I2C_WriteNBytes                                      5     1      4   92798
                                             17 COMRAM     5     1      4
                          _I2C_Close
                    _I2C_MasterWrite
                           _I2C_Open
         _I2C_SetAddressNackCallback
                      _I2C_SetBuffer
 ---------------------------------------------------------------------------------
 (5) _I2C_SetAddressNackCallback                           4     0      4    1870
                                              5 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (5) _I2C_Open                                             2     2      0      46
                                              0 COMRAM     2     2      0
                 _I2C_MasterClearIrq
                     _I2C_MasterOpen
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOpen                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_MasterWrite                                      0     0      0   88620
                _I2C_MasterOperation
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterOperation                                  2     2      0   88620
                                             15 COMRAM     2     2      0
                    _I2C_MasterStart
                         _I2C_Poller
 ---------------------------------------------------------------------------------
 (7) _I2C_Poller                                           0     0      0   88574
                      _I2C_MasterFsm
             _I2C_MasterWaitForEvent
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterWaitForEvent                               0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _I2C_MasterFsm                                        2     2      0   88574
                                             13 COMRAM     2     2      0
                _I2C_DO_ADDRESS_NACK *
                        _I2C_DO_IDLE *
                        _I2C_DO_RCEN *
                       _I2C_DO_RESET *
                          _I2C_DO_RX *
                      _I2C_DO_RX_ACK *
             _I2C_DO_RX_NACK_RESTART *
                _I2C_DO_RX_NACK_STOP *
               _I2C_DO_SEND_ADR_READ *
              _I2C_DO_SEND_ADR_WRITE *
                _I2C_DO_SEND_RESTART *
           _I2C_DO_SEND_RESTART_READ *
          _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_DO_SEND_STOP *
                          _I2C_DO_TX *
                    _I2C_DO_TX_EMPTY *
                 _I2C_MasterClearIrq
                   _I2C_MasterIsNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX_EMPTY                                      2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
                   _I2C_MasterSetIrq
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSetIrq                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_TX                                            2     2      0   22149
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
           _I2C_DO_SEND_RESTART_READ
          _I2C_DO_SEND_RESTART_WRITE
                   _I2C_DO_SEND_STOP
                   _I2C_MasterIsNack
               _I2C_MasterSendTxData
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (9) _I2C_MasterIsNack                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_WRITE                           0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART_READ                            0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_WRITE                                0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_SEND_ADR_READ                                 0     0      0      22
               _I2C_MasterSendTxData
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendTxData                                1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_ACK                                        0     0      0       0
                  _I2C_MasterSendAck
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX                                            2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
             _I2C_DO_RX_NACK_RESTART
                _I2C_DO_RX_NACK_STOP
                _I2C_MasterGetRxData
                  _I2C_MasterSendAck
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendAck                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterGetRxData                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_STOP                                  0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RX_NACK_RESTART                               0     0      0       0
                 _I2C_MasterSendNack
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterSendNack                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RESET                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_RCEN                                          0     0      0       0
                  _I2C_MasterStartRx
 ---------------------------------------------------------------------------------
 (10) _I2C_MasterStartRx                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_IDLE                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _I2C_DO_ADDRESS_NACK                                  2     2      0   22127
                                             11 COMRAM     2     2      0
                   Absolute function *
            _I2C_CallbackReturnReset *
             _I2C_CallbackReturnStop *
                _I2C_DO_SEND_RESTART
                   _I2C_DO_SEND_STOP
              _rd1RegCompleteHandler *
              _rd2RegCompleteHandler *
            _rdBlkRegCompleteHandler *
              _wr1RegCompleteHandler *
              _wr2RegCompleteHandler *
 ---------------------------------------------------------------------------------
 (10) _wr2RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _wr1RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rdBlkRegCompleteHandler                             2     0      2    4390
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd2RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (10) _rd1RegCompleteHandler                               2     0      2    4368
                                              9 COMRAM     2     0      2
                      _I2C_SetBuffer
        _I2C_SetDataCompleteCallback
 ---------------------------------------------------------------------------------
 (11) _I2C_SetDataCompleteCallback                         4     0      4    2478
                                              5 COMRAM     4     0      4
                    _I2C_SetCallback
 ---------------------------------------------------------------------------------
 (6) _I2C_SetCallback                                      5     1      4     914
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (5) _I2C_SetBuffer                                        4     0      4    1868
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_STOP                                    0     0      0       0
                     _I2C_MasterStop
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterStop                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_DO_SEND_RESTART                                 0     0      0       0
            _I2C_MasterEnableRestart
 ---------------------------------------------------------------------------------
 (11) _I2C_MasterEnableRestart                             0     0      0       0
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnStop                              2     0      2       0
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) _I2C_CallbackReturnReset                             2     0      2     265
                                              9 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (10) Absolute function(Fake)                              2     0      2       0
 ---------------------------------------------------------------------------------
 (7) _I2C_MasterStart                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _I2C_Close                                            1     1      0      24
                                              0 COMRAM     1     1      0
                 _I2C_MasterClearIrq
                    _I2C_MasterClose
               _I2C_MasterDisableIrq
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterDisableIrq                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClose                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _I2C_MasterClearIrq                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     488
                                             13 COMRAM     8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _I2C_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Current_ReadRegister                                 9     5      4    6922
                                             45 COMRAM     9     5      4
                    _I2C_Master_Read
           _I2C_Master_RepeatedStart
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            ___fldiv
                            ___flmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              6 COMRAM    14    10      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    2656
                                             20 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    2463
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     706
                                              1 COMRAM     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_RepeatedStart                             0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      4     2      2     501
                                              1 COMRAM     4     2      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Current_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
       ___wmul (ARG)
   _I2C_Initialize
   _I2C_Master_Init
     ___lldiv
   _Oled_Clear
     _Oled_Data
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
   _Oled_Init
     _Oled_Command
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
   _Oled_SelectPage
     _Oled_Command
       _I2C_WriteNBytes
         _I2C_Close
           _I2C_MasterClearIrq
           _I2C_MasterClose
           _I2C_MasterDisableIrq
         _I2C_MasterWrite
           _I2C_MasterOperation
             _I2C_MasterStart
             _I2C_Poller
               _I2C_MasterFsm
                 _I2C_DO_ADDRESS_NACK *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_IDLE *
                 _I2C_DO_RCEN *
                   _I2C_MasterStartRx
                 _I2C_DO_RESET *
                 _I2C_DO_RX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_MasterGetRxData *
                   _I2C_MasterSendAck *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_RX_ACK *
                   _I2C_MasterSendAck
                 _I2C_DO_RX_NACK_RESTART *
                   _I2C_MasterSendNack
                 _I2C_DO_RX_NACK_STOP *
                   _I2C_MasterSendNack
                 _I2C_DO_SEND_ADR_READ *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_ADR_WRITE *
                   _I2C_MasterSendTxData
                 _I2C_DO_SEND_RESTART *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_READ *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_RESTART_WRITE *
                   _I2C_MasterEnableRestart
                 _I2C_DO_SEND_STOP *
                   _I2C_MasterStop
                 _I2C_DO_TX *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterIsNack *
                   _I2C_MasterSendTxData *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_DO_TX_EMPTY *
                   Absolute function(Fake) *
                   _I2C_CallbackReturnReset *
                   _I2C_CallbackReturnStop *
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_MasterSetIrq *
                   _rd1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rd2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _rdBlkRegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr1RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                   _wr2RegCompleteHandler *
                     _I2C_SetBuffer
                     _I2C_SetDataCompleteCallback
                       _I2C_SetCallback
                 _I2C_MasterClearIrq *
                 _I2C_MasterIsNack *
               _I2C_MasterWaitForEvent
         _I2C_Open
           _I2C_MasterClearIrq
           _I2C_MasterOpen
         _I2C_SetAddressNackCallback
           _I2C_SetCallback
         _I2C_SetBuffer
   _Oled_WriteString
     _Oled_WriteCharacter
       _Oled_Data
         _I2C_WriteNBytes
           _I2C_Close
             _I2C_MasterClearIrq
             _I2C_MasterClose
             _I2C_MasterDisableIrq
           _I2C_MasterWrite
             _I2C_MasterOperation
               _I2C_MasterStart
               _I2C_Poller
                 _I2C_MasterFsm
                   _I2C_DO_ADDRESS_NACK *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_STOP *
                       _I2C_MasterStop
                     _rd1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_DO_IDLE *
                   _I2C_DO_RCEN *
                     _I2C_MasterStartRx
                   _I2C_DO_RESET *
                   _I2C_DO_RX *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_RX_NACK_RESTART *
                       _I2C_MasterSendNack
                     _I2C_DO_RX_NACK_STOP *
                       _I2C_MasterSendNack
                     _I2C_MasterGetRxData *
                     _I2C_MasterSendAck *
                     _rd1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_DO_RX_ACK *
                     _I2C_MasterSendAck
                   _I2C_DO_RX_NACK_RESTART *
                     _I2C_MasterSendNack
                   _I2C_DO_RX_NACK_STOP *
                     _I2C_MasterSendNack
                   _I2C_DO_SEND_ADR_READ *
                     _I2C_MasterSendTxData
                   _I2C_DO_SEND_ADR_WRITE *
                     _I2C_MasterSendTxData
                   _I2C_DO_SEND_RESTART *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_READ *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_RESTART_WRITE *
                     _I2C_MasterEnableRestart
                   _I2C_DO_SEND_STOP *
                     _I2C_MasterStop
                   _I2C_DO_TX *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART_READ *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_RESTART_WRITE *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_STOP *
                       _I2C_MasterStop
                     _I2C_MasterIsNack *
                     _I2C_MasterSendTxData *
                     _rd1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_DO_TX_EMPTY *
                     Absolute function(Fake) *
                     _I2C_CallbackReturnReset *
                     _I2C_CallbackReturnStop *
                     _I2C_DO_SEND_RESTART *
                       _I2C_MasterEnableRestart
                     _I2C_DO_SEND_STOP *
                       _I2C_MasterStop
                     _I2C_MasterSetIrq *
                     _rd1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rd2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _rdBlkRegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr1RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                     _wr2RegCompleteHandler *
                       _I2C_SetBuffer
                       _I2C_SetDataCompleteCallback
                         _I2C_SetCallback
                   _I2C_MasterClearIrq *
                   _I2C_MasterIsNack *
                 _I2C_MasterWaitForEvent
           _I2C_Open
             _I2C_MasterClearIrq
             _I2C_MasterOpen
           _I2C_SetAddressNackCallback
             _I2C_SetCallback
           _I2C_SetBuffer
   _Power_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___wmul
     ___xxtofl
       ___wmul (ARG)
   _SYSTEM_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
   _Voltage_ReadRegister
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_RepeatedStart
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
     ___fldiv
     ___flmul
       ___xxtofl (ARG)
         ___wmul (ARG)
     ___xxtofl
       ___wmul (ARG)
   _sprintf
     _vfprintf
       _vfpfcnvrt
         _atoi
           ___wmul
           _isdigit
           _isspace
         _efgtoa
           ___awdiv
           ___awmod
           ___fladd
           ___fldiv
           ___fleq
           ___flge
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___wmul (ARG)
           ___flneg
           ___flsub
             ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___wmul (ARG)
           ___fltol
           ___fpclassifyf
           _floorf
             ___fldiv (ARG)
           _isupper
           _pad
             _fputc
               _putch
             _fputs
               _fputc
                 _putch
             _strlen
           _strcpy
           _tolower
             _isupper
         _fputc
           _putch
         _isdigit
         _isupper
         _strncmp
         _tolower
           _isupper

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             E40      0       0      35        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      C4       8       76.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     50      91       5       90.6%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BITBANK14           41      0       0      33        0.0%
BANK14              41      0       0      34        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1B4       6        0.0%
DATA                 0      0     1B4       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Aug 10 18:23:59 2021

             __end_of_Oled_SelectPage C258                ??_I2C_DO_SEND_ADR_READ 0001  
         __size_of_I2C_MasterSendNack 0006                    __size_of_I2C_Close 002C  
                        ___fldiv@aexp 0019                          ___fldiv@bexp 0018  
          Current_ReadRegister@temp_c 0036            Current_ReadRegister@temp_d 0034  
                        ___fldiv@sign 0011               ??_I2C_DO_SEND_ADR_WRITE 0002  
                         _SSPSTATbits 000FC7                                    l90 C414  
                                  l93 C440                                    l69 C7B8  
                                  l96 C46C                                    l99 C3E8  
                        ___awdiv@sign 0006                                    _oi 0100  
                 ___wmul@multiplicand 0003                   __size_of_I2C_Poller 001E  
               ??_I2C_DO_SEND_RESTART 0001          __size_of_I2C_MasterOperation 0044  
                                 l102 C5EC                                   l120 C1E2  
                                 l117 C17C                                   l302 CB58  
                                 l312 CA6E         __size_of_I2C_MasterSendTxData 0008  
                                 l321 C1C0                                   l145 C390  
                                 l411 C0EC                                   l315 C188  
                                 l403 C9FE                                   l324 D030  
                                 l340 CDDC                                   l308 C274  
                                 l341 CE4A                                   l414 C0F0  
                                 l430 C0F8                                   l318 C1B0  
                                 l255 C1F6                                   l263 C3BC  
                                 l327 D068                                   l352 C194  
                                 l424 C2B4                                   l433 C128  
                                 l282 C31C                                   l442 C0F4  
                                 l427 C0D8                                   l451 C20A  
                                 l275 C168                                   l259 CC62  
                                 l291 C23A                                   l436 C0E4  
                                 l445 C0E0                                   l285 C222  
                                 l269 C630                                   l701 C2F8  
                                 l454 C108                                   l358 CBD4  
                                 l382 C140                                   l391 C158  
                                 l472 C0DC                                   l448 C0E8  
                                 l376 C130                                   l704 C2D6  
                                 l801 C110                                   l457 C102  
                                 l385 C148                                   l481 C1C2  
                                 l713 C934                                   l810 C4CE  
                                 l394 C160                                   l475 C0D4  
                                 l379 C138                                   l707 CD00  
                                 l804 C120                                   l388 C150  
                                 l813 C814                                   l397 C1A0  
                                 l485 C1D0                                   l478 C0FC  
                                 l726 C498                                   l734 C256  
                                 l718 CADE                                   l807 C172  
                                 l816 C368                                   l850 CDA4  
                                 l843 CD94                                   l783 D9D8  
                                 l792 C31E                                   l786 D8C0  
                                 l795 C342                                   l789 D7A8  
                                 l798 C118                                   _PEN 007E2A  
                                 _SEN 007E28                                   _pad D12E  
              fp__I2C_DO_RX_NACK_STOP 0000                _I2C_MasterWaitForEvent C1C2  
                        ___awmod@sign 0006                                   prod 000FF3  
                                 tosl 000FFD                                   wreg 000FE8  
                          _TXSTA1bits 000FAC                          ___flmul@aexp 0026  
                        ___flmul@bexp 0027           __end_of_Oled_WriteCharacter CAE0  
        ??_I2C_SetAddressNackCallback 000A                          ___flmul@sign 0021  
                        ___flmul@temp 002C                          ___flmul@prod 0028  
            ??_I2C_CallbackReturnStop 000C                          _I2C_DO_RESET C196  
                        ___fltol@exp1 000A                                  l1113 D6A0  
                                l1060 CFA4               ??_rd2RegCompleteHandler 000C  
                                l1047 D12C                                  l1400 E30C  
                                l1081 D554                                  l1090 C574  
                                l1411 E3CA                                  l1403 E2D0  
                                l1075 CEF4                                  l1412 E3B8  
                                l1430 E572                                  l1086 D59A  
                                l1440 E7CE                                  l1344 EF3E  
                                l1409 E352                                  l1361 F058  
                                l1353 F20E                                  l1345 EF2C  
                                l1434 E8D6                                  l1370 F128  
                                l1346 EEF2                                  l1602 F994  
                                l1371 F116                                  l1540 D1F2  
                                l1437 E768                                  l1701 DB6A  
                                l1710 E112                                  l1447 E898  
                                l1439 E7E0                                  l1471 DBCA  
                                l1535 D174                                  l5000 E48C  
                                l1720 C53C                                  l1704 DB72  
                                l1713 E056                                  l5002 E49A  
                                l1474 DD26                                  l1386 C6BA  
                                l1538 D1B6                                  l5004 E4A0  
                                l5100 E766                                  l5020 E4CA  
                                l4300 C136                                  l1485 DCBE  
                                l1661 C990                                  l5006 E4A2  
                                l1398 E4AC                                  l5110 E7C6  
                                l5102 E778                                  l5030 E510  
                                l5022 E4DA                                  l5014 E4AE  
                                l1478 DC62                                  l4230 C20C  
                                l4310 C0F6                                  l1734 C5AC  
                                l1558 FDBE                                  l1662 C998  
                                l1494 C75E                                  l1655 EC94  
                                l5120 E834                                  l5104 E786  
                                l5040 E53C                                  l5032 E516  
                                l5024 E4EA                                  l5016 E4BA  
                                l6000 DCA0                                  l4240 C0E2  
                                l4232 C2FA                                  l4224 CAE2  
                                l4304 C142                                  l1728 C70C  
                                l5200 CF10                                  l1672 D496  
                                l1760 C0D0                                  l1576 F5FC  
                                l1648 ED4E                                  l5130 E89C  
                                l5114 E7F0                                  l5122 E838  
                                l5106 E78A                                  l5050 E592  
                                l5042 E54C                                  l5034 E51C  
                                l5026 E4FA                                  l5018 E4C8  
                                l6010 DCF6                                  l6002 DCAE  
                                l4242 C0E6                                  l4234 C30A  
                                l4226 CAF4                                  l4250 C412  
                                l4314 C104                                  l4410 CDBA  
                                l4330 C13A                                  l4306 C146  
                                l4322 C152                                  l5210 CF44  
                                l5202 CF14                                  l5140 E8C6  
                                l5132 E8AC                                  l5124 E852  
                                l5116 E7FC                                  l5108 E798  
                                l5060 E5D2                                  l5044 E55C  
                                l5036 E52A                                  l5028 E500  
                                l6012 DD06                                  l6004 DCCC  
                                l6100 D898                                  l4236 C312  
                                l4228 CB28                                  l4244 C0FE  
                                l4420 CDE2                                  l4412 CDD2  
                                l4332 C13E                                  l4324 C156  
                                l4316 C15A                                  l4500 C9B6  
                                l5220 CF7E                                  l5212 CF4C  
                                l5204 CF22                                  l5300 D636  
                                l1772 C504                                  l6020 C936  
                                l1749 D2BC                                  l1757 C674  
                                l5134 E8BA                                  l5126 E866  
                                l5118 E80A                                  l5070 E61C  
                                l5062 E5DE                                  l5054 E5A6  
                                l5046 E562                                  l5038 E52C  
                                l6014 DD14                                  l6006 DCCE  
                                l6102 D8B0                                  l6030 C1E4  
                                l4238 C31A                                  l4270 C3BE  
                                l4246 C3EA                                  l4254 C416  
                                l4262 C442                                  l4342 C0EE  
                                l4350 C182                                  l4430 CDF2  
                                l4414 CDD6                                  l4406 CDA6  
                                l4318 C15E                                  l4510 CA00  
                                l6110 D732                                  l5150 D06A  
                                l5214 CF5A                                  l5222 CF84  
                                l5206 CF2A                                  l5230 CE4C  
                                l5310 D660                                  l5302 D640  
                                l1766 C872                                  l6022 C93E  
                                l1791 C8D2                                  l5136 E8BC  
                                l5128 E880                                  l5080 E66E  
                                l5072 E628                                  l5064 E5F6  
                                l5056 E5B2                                  l5048 E582  
                                l6016 DD16                                  l6008 DCD2  
                                l6032 C1F4                                  l4520 C0DE  
                                l4272 C3D2                                  l4248 C3FE  
                                l4256 C42A                                  l4264 C456  
                                l4280 C5D6                                  l4328 C0F2  
                                l4336 C0FA                                  l4352 C186  
                                l4360 C1AE                                  l4424 CDEA  
                                l4408 CDB4                                  l4440 C18E  
                                l4512 CA04                                  l6112 D736  
                                l5160 D096                                  l5152 D06E  
                                l5224 CF94                                  l5216 CF70  
                                l5208 CF3C                                  l5240 CEEC  
                                l5232 CE7A                                  l4600 EDCE  
                                l5144 C676                                  l5312 D670  
                                l5400 E0F2                                  l5320 D12E  
                                l1776 D398                                  l6024 C94C  
                                l5138 E8C2                                  l5090 E6EC  
                                l5082 E67E                                  l5074 E638  
                                l5066 E602                                  l5058 E5BC  
                                l4346 C0D2                                  l4274 C3E6  
                                l4258 C43E                                  l4266 C46A  
                                l4282 C5EA                                  l4338 C0EA  
                                l4290 C124                                  l4442 C192  
                                l4514 CA14                                  l4522 C258  
                                l6042 C476                                  l6034 CC64  
                                l6050 C244                                  l6114 D76A  
                                l6106 D6A2                                  l5410 C6BC  
                                l5170 D0C4                                  l5162 D09E  
                                l5154 D07C                                  l5226 CF9C  
                                l5218 CF78                                  l5242 CEF2  
                                l5234 CE8A                                  l5250 D4D6  
                                l4610 EDF6                                  l4602 EDD0  
                                l5146 C686                                  l5314 D680  
                                l5402 E102                                  l4530 D1F4  
                                l5330 D180                                  l5322 D13E  
                                l1786 C8CA                                  l6026 C972  
                                l6130 C74C                                  l6122 C70E  
                                l5092 E722                                  l5084 E69A  
                                l5076 E644                                  l5068 E60E  
                                l4452 CB6A                                  l4348 C17E  
                                l4356 C1A2                                  l4364 C1B2  
                                l4380 CFC6                                  l4372 CFA6  
                                l4292 C12A                                  l4516 CA28  
                                l4524 C25C                                  l6044 C47C  
                                l6036 C46E                                  l6052 C24A  
                                l6060 C8FE                                  l6116 D780  
                                l6108 D6FC                                  l6028 C174  
                                l5412 C6C0                                  l5180 D0FE  
                                l5172 D0CC                                  l5164 D0A2  
                                l5156 D084                                  l5236 CEB8  
                                l5260 D542                                  l5252 D504  
                                l4700 EFC6                                  l4620 EE30  
                                l4612 EE06                                  l4604 EDD6  
                                l5316 D690                                  l5308 D654  
                                l4540 D276                                  l4532 D206  
                                l5332 D194                                  l5324 D152  
                                l5500 F444                                  l6124 C720  
                                l6300 DD38                                  l5094 E730  
                                l5086 E6A6                                  l5078 E654  
                                l6070 C810                                  l4278 C5AE  
                                l4286 C1F8                                  l4454 CB6E  
                                l4446 CB5A                                  l4358 C1A6  
                                l4366 C1B6                                  l4390 CFD6  
                                l4438 C18A                                  l4294 C12E  
                                l4518 CA2E                                  l4526 C260  
                                l5430 C7A0                                  l5422 C762  
                                l6046 C480                                  l6054 C250  
                                l6062 C902                                  l6118 D798  
                                l5406 C506                                  l5414 C6D4  
                                l5190 D124                                  l5182 D100  
                                l5174 D0DA                                  l5166 D0AA  
                                l5158 D088                                  l5238 CEC8  
                                l5262 D592                                  l5254 D514  
                                l5246 D498                                  l5270 C554  
                                l4710 F038                                  l4702 EFCC  
                                l4630 EE5C                                  l4622 EE42  
                                l4614 EE16                                  l4606 EDE4  
                                l5350 D42C                                  l5342 D39A  
                                l4534 D218                                  l5334 D198  
                                l5326 D160                                  l5510 F4CE  
                                l5502 F45E                                  l6126 C728  
                                l6310 DD60                                  l6302 DD3E  
                                ?_pad 0011                                  l5096 E74E  
                                l5088 E6C2                                  l6072 C812  
                                l6064 C7BA                                  l4552 C0DA  
                                l4448 CB62                                  l4464 CB7C  
                                l4368 C1BE                                  l4392 D034  
                                l4384 CFCE                                  l4376 CFBE  
                                l4472 C14A                                  l4480 C19A  
                                l4528 C264                                  l4560 C604  
                                l4544 C294                                  l5432 C7A4  
                                l5424 C762                                  l6048 C23E  
                                l6056 C8D4                                  l6080 D966  
                                l5416 C702                                  l5184 D106  
                                l5176 D0E0                                  l5168 D0BC  
                                l5264 D598                                  l5256 D522  
                                l5248 D4C6                                  l5272 C564  
                                l4720 F092                                  l4704 EFF2  
                                l4712 F048                                  l4640 EE70  
                                l4632 EE60                                  l4624 EE50  
                                l4616 EE18                                  l4608 EDE6  
                                l5360 D48E                                  l5344 D3BA  
                                l4536 D222                                  l5336 D1C6  
                                l5328 D16C                                  l5600 F96C  
                                l5520 F5A6                                  l5512 F528  
                                l5440 F238                                  l6128 C730  
                                l6320 DDC8                                  l6312 DD78  
                                l6304 DD4A                                  l5098 E758  
                                l6090 D7AA                                  l6066 C7C2  
                                l4554 C0D6                                  l4458 CB74  
                                l4394 D046                                  l4298 C132  
                                l4474 C14E                                  l4482 C19E  
                                l4490 C9A6                                  l4570 C626  
                                l4562 C606                                  l4546 C2A2  
                                l4810 CBF2                                  l4802 CBD8  
                                l5426 C778                                  l6058 C8D8  
                                l6082 D99A                                  l6074 D8C2  
                                l5418 C706                                  l5178 D0F6  
                                l5186 D10C                                  l5194 CEF6  
                                l5258 D534                                  l4730 F0C2  
                                l4722 F09C                                  l4714 F06E  
                                l4706 F026                                  l4650 EE84  
                                l4642 EE74                                  l4634 EE64  
                                l4626 EE54                                  l4618 EE20  
                                l5290 D606                                  l5282 D5C6  
                                l5346 D3F8                                  l5354 D438  
                                l4538 D240                                  l5338 D1DA  
                                l5610 FA24                                  l5602 F980  
                                l5530 F5F0                                  l5522 F5AA  
                                l5514 F55C                                  l5506 F494  
                                l5450 F288                                  l5442 F240  
                                l5434 F210                                  l6330 DE56  
                                l6322 DDEE                                  l6314 DD8C  
                                l6306 DD4E                                  l4900 E194  
                                l6092 D804                                  l6068 C80C  
                                l4396 D060                                  l4572 C62A  
                                l4564 C60A                                  l4556 C5F0  
                                l4548 C2B2                                  l4820 CC04  
                                l4812 CBF4                                  l4804 CBDC  
                                l5428 C78C                                  l6084 D9B0  
                                l6076 D91C                                  l5188 D11C  
                                l5196 CEFA                                  l5268 C53E  
                                l4740 F0EA                                  l4732 F0C6  
                                l4724 F0AA                                  l4716 F07E  
                                l4708 F028                                  l4660 EEBE  
                                l4652 EE88                                  l4644 EE78  
                                l4636 EE68                                  l4628 EE58  
                                l4580 ED5C                                  l5292 D614  
                                l5284 D5F0                                  l5276 D59C  
                                l5356 D44A                                  l5348 D420  
                                l5380 DF22                                  l5364 C816  
                                l5372 C8AA                                  l5700 FCEC  
                                l5620 FA70                                  l5612 FA36  
                                l5604 F98C                                  l5540 F62C  
                                l5524 F5BC                                  l5532 F608  
                                l5516 F564                                  l5508 F4C8  
                                l5460 F2C0                                  l5452 F296  
                                l5444 F264                                  l5436 F21A  
                                l6340 DE92                                  l6332 DE5C  
                                l6324 DE14                                  l6316 DDA0  
                                l6308 DD54                                  l4910 E1C8  
                                l4902 E196                                  l6094 D84A  
                                l4398 D066                                  l6510 D00A  
                                l4478 C196                                  l4494 C9AE  
                                l4486 C99A                                  l4566 C61A  
                                l4574 C62E                                  l4558 C5F4  
                                l4830 CC2C                                  l4822 CC0C  
                                l4814 CBF6                                  l4806 CBEC  
                                l6086 D9C8                                  l6078 D962  
                                l5198 CF08                                  l4750 F144  
                                l4742 F0F8                                  l4734 F0D6  
                                l4726 F0AC                                  l4670 EF10  
                                l4662 EEDA                                  l4654 EE8C  
                                l4646 EE7C                                  l4638 EE6C  
                                l4590 ED9C                                  l4582 ED6A  
                                l5286 D5F2                                  l5278 D5B2  
                                l5390 E00A                                  l5382 DF78  
                                l5366 C826                                  l5374 C8BC  
                                l5710 FD28                                  l5702 FCFE  
                                l5630 FAA4                                  l5622 FA7E  
                                l5614 FA48                                  l5606 F9B0  
                                l5550 F692                                  l5542 F648  
                                l5526 F5CE                                  l5518 F596  
                                l5470 F326                                  l5462 F2C4  
                                l5454 F2A8                                  l5446 F26E  
                                l5438 F22A                                  l6350 DED4  
                                l6342 DE9E                                  l6334 DE68  
                                l6326 DE3A                                  l6318 DDB4  
                                l5800 C31E                                  l4920 E20E  
                                l4904 E1A6                                  l4912 E1D0  
                                l6096 D84E                                  l6512 CBAE  
                                l4488 C99E                                  l4568 C622  
                                l4840 CC54                                  l4832 CC34  
                                l4824 CC14                                  l4816 CBFA  
                                l4808 CBF0                                  l6504 DA9C  
                                l4760 F1AE                                  l4752 F152  
                                l4744 F10E                                  l4728 F0BA  
                                l4736 F0D8                                  l4680 EF5C  
                                l4672 EF1E                                  l4664 EEEA  
                                l4648 EE80                                  l4656 EE90  
                                l4592 ED9E                                  l4584 ED6C  
                                l5288 D602                                  l5392 E046  
                                l5384 DF8C                                  l5368 C874  
                                l5720 FD80                                  l5712 FD2E  
                                l5704 FD0A                                  l5640 FAD6  
                                l5632 FAB4                                  l5624 FA8E  
                                l5616 FA56                                  l5608 FA14  
                                l5560 F6DA                                  l5552 F6A4  
                                l5544 F67E                                  l5528 F5D6  
                                l5472 F338                                  l5456 F2B4  
                                l5464 F2CA                                  l5448 F276  
                                l6352 DEE0                                  l6344 DEAA  
                                l6336 DE74                                  l6328 DE52  
                                l5802 C32C                                  l4930 E236  
                                l4922 E212                                  l4914 E1E0  
                                l4906 E1B6                                  l6098 D882  
                                l6506 C9E8                                  l4842 CC58  
                                l4834 CC3C                                  l4826 CC1C  
                                l4818 CC02                                  l4850 C224  
                                l4770 F1E8                                  l4762 F1CE  
                                l4754 F18C                                  l4690 EF9C  
                                l4738 F0E6                                  l4674 EF20  
                                l4666 EF00                                  l4658 EE94  
                                l4586 ED7C                                  l4594 EDA6  
                                l4578 ED50                                  l5298 D62C  
                                l5386 DF9A                                  l5394 E07A  
                                l5378 DF02                                  l5722 FD88  
                                l5706 FD12                                  l5650 FB7E  
                                l5642 FAE8                                  l5634 FAB8  
                                l5626 FA92                                  l5618 FA5E  
                                l5570 F722                                  l5562 F6E8  
                                l5554 F6B6                                  l5546 F686  
                                l5538 F61A                                  l5490 F40C  
                                l5474 F354                                  l5466 F2F0  
                                l5482 F39E                                  l5458 F2BC  
                                l5810 E91E                                  l6354 DEF6  
                                l6346 DEC2                                  l6338 DE8C  
                                l4940 E284                                  l4916 E1F6  
                                l4908 E1C6                                  l4860 C3A6  
                                l6508 CE24                                  l4852 C162  
                                l4844 CC5C                                  l4836 CC44  
                                l4828 CC24                                  l5900 C1D2  
                                l5740 DA14                                  l5732 D9DA  
                                l4772 F1EE                                  l4764 F1D2  
                                l4748 F138                                  l4756 F18E  
                                l4692 EFA8                                  l4684 EF70  
                                l4676 EF2A                                  l4668 EF0C  
                                l4596 EDB6                                  l4588 ED8C  
                                l5396 E0B6                                  l4780 C632  
                                l5724 FD98                                  l5716 FD62  
                                l5708 FD22                                  l5660 FBD6  
                                l5652 FB86                                  l5644 FAEC  
                                l5636 FABE                                  l5628 FA98  
                                l5580 F836                                  l5572 F732  
                                l5564 F700                                  l5556 F6C4  
                                l5548 F68A                                  l5492 F428  
                                l5484 F3C4                                  l5476 F36C  
                                l5820 E984                                  l5812 E922  
                                l5804 E8D8                                  l6348 DEC8  
                                l4950 E2CE                                  l4942 E294  
                                l4934 E24A                                  l4918 E206  
                                l4926 E226                                  l4862 C3AA  
                                l4838 CC4C                                  l4846 CC60  
                                l5902 C2DA                                  l4870 C344  
                                l5750 DA6C                                  l5742 DA4C  
                                l5734 D9EE                                  l4774 F1FC  
                                l4766 F1E0                                  l4758 F19E  
                                l4694 EFAC                                  l4686 EF80  
                                l4678 EF4C                                  l4598 EDBC  
                                l5398 E0CA                                  l4782 C63E  
                                l4790 C4DC                                  l5726 FD9E  
                                l5718 FD74                                  l5670 FC1A  
                                l5662 FBE4                                  l5638 FAC4  
                                l5646 FAF2                                  l5654 FB8A  
                                l5590 F8D6                                  l5574 F746  
                                l5582 F83C                                  l5566 F712  
                                l5558 F6C8                                  l5478 F376  
                                l5830 EA34                                  l5822 E9BE  
                                l5814 E948                                  l5806 E8FE  
                                l6294 DD28                                  l4960 E31C  
                                l4952 E2DA                                  l4944 E29C  
                                l4936 E264                                  l4928 E236  
                                l4880 E12E                                  l4864 C3B6  
                                l4856 C392                                  l5904 C2DE  
                                l5920 CAD8                                  l4872 C360  
                                l5760 DAEA                                  l5752 DA74  
                                l5744 DA50                                  l5736 D9F2  
                                l4776 F1FE                                  l4768 F1E6  
                                l4696 EFBA                                  l4688 EF8E  
                                l4784 C650                                  l4792 C4E0  
                                l5680 FC50                                  l5672 FC22  
                                l5664 FBF4                                  l5656 FBA8  
                                l5648 FB4A                                  l5592 F908  
                                l5584 F85A                                  l5576 F7AA  
                                l5568 F71A                                  l5488 F3FA  
                                l5840 EABA                                  l5824 E9DE  
                                l5816 E950                                  l5832 EA46  
                                l5808 E90C                                  l6296 DD30  
                                l5930 C10A                                  l5922 C112  
                                l4962 E332                                  l4970 E362  
                                l4954 E2F8                                  l4946 E2AC  
                                l4938 E274                                  l4890 E162  
                                l4882 E130                                  l4866 C3BA  
                                l4858 C396                                  l5906 C2E2  
                                l5914 CA7A                                  l5754 DA7C  
                                l5738 D9F6                                  l4698 EFBC  
                                l4786 C654                                  l4794 C4F8  
                                l5690 FCAC                                  l5682 FC58  
                                l5674 FC32                                  l5666 FBF8  
                                l5658 FBC4                                  l5594 F918  
                                l5586 F88E                                  l5578 F802  
                                l5850 EB54                                  l5842 EAEC  
                                l5834 EA68                                  l5826 E9EC  
                                l5818 E95E                                  l6298 DD34  
                                l5940 C4AE                                  l5932 C10E  
                                l5924 C116                                  l4972 E370  
                                l4964 E338                                  l4956 E2FA  
                                l4948 E2C0                                  l4884 E140  
                                l4892 E16A                                  l4876 E114  
                                l5916 CAB8                                  l5908 CA72  
                                l5764 DB2A                                  l5756 DAB2  
                                l5748 DA56                                  l4788 C4D0  
                                l5692 FCB4                                  l5684 FC64  
                                l5676 FC3A                                  l5668 FC08  
                                l5596 F928                                  l5588 F8C0  
                                l5780 D2F4                                  l5860 EC1E  
                                l5844 EAFE                                  l5836 EA78  
                                l5942 C4C4                                  l5934 C49A  
                                l5950 C11E                                  l5926 C16A  
                                l4982 E3DA                                  l4990 E422  
                                l4974 E374                                  l4966 E342  
                                l4958 E30A                                  l4894 E17A  
                                l4886 E150                                  l4878 E120  
                                l5918 CABC                                  l5766 DB3C  
                                l4798 C576                                  l5686 FC6A  
                                l5694 FCBA                                  l5678 FC48  
                                l5598 F95C                                  l5790 D374  
                                l5782 D302                                  l5774 D2BE  
                                l5862 EC30                                  l5870 ECA8  
                                l5846 EB16                                  l5854 EB80  
                                l5838 EAAA                                  l5944 C4C6  
                                l5936 C49E                                  l5928 C16E  
                                l4992 E43C                                  l4984 E3E6  
                                l4976 E382                                  l4968 E350  
                                l4896 E180                                  l4888 E160  
                                l5960 CD3C                                  l5952 CD02  
                                l5768 DB4E                                  l5696 FCCC  
                                l5688 FC90                                  l5784 D31A  
                                l5776 D2E8                                  l5872 ECCE  
                                l5880 ECFC                                  l5864 EC64  
                                l5856 EBAE                                  l5848 EB24  
                                l5938 C4A4                                  l4994 E452  
                                l4986 E3F4                                  l4978 E3B0  
                                l4898 E186                                  l5970 CD84  
                                l5962 CD4A                                  l5954 CD12  
                                l5794 C2B8                                  l5698 FCE6  
                                l5786 D338                                  l5882 ED0A  
                                l5874 ECDC                                  l5948 C11A  
                                l4996 E46C                                  l4988 E41E  
                                l5980 DBDA                                  l5972 CD8E  
                                l5964 CD54                                  l5956 CD28  
                                l5796 C2BC                                  l5788 D34A  
                                l5876 ECF0                                  l4998 E488  
                                l5990 DC18                                  l5982 DBF0  
                                l5974 DB76                                  l5966 CD72  
                                l5958 CD30                                  l5798 C2C0  
                                l5894 C36A                                  l5886 ED16  
                                l5992 DC4A                                  l5976 DB86  
                                l5968 CD82                                  l5896 C37A  
                                l5888 ED3C                                  l5994 DC4C  
                                l5986 DC04                                  l5978 DB94  
                                l5898 C38E                                  l5996 DC58  
                                l5988 DC0C                                  l5998 DC94  
                                STR_1 FFFC                                  STR_2 FFF5  
                                STR_3 FFE0                                  STR_4 FFE0  
                                STR_5 FFE0                                  STR_6 FFD7  
                                STR_7 FFCC                                  STR_8 FFC1  
                                STR_9 FFE5                                  u3100 CDD2  
                                u3101 CDCE                                  _LATA 000F89  
                                _LATB 000F8A                                  _LATC 000F8B  
                                u4000 E582                                  u3040 CAF4  
                                u3200 D218                                  u4001 E57E  
                                u3041 CAF0                                  u3201 D214  
                                u4010 E592                                  u3050 C30A  
                                u3210 D240                                  u4011 E58E  
                                u3051 C306                                  u3211 D23C  
                                u4100 E852                                  u4020 E70C  
                                u3060 C208                                  u3140 C1D0  
                                u3300 EDE4                                  u3220 D276  
                                u4101 E84E                                  u3061 C202  
                                u3141 C1CC                                  u3301 EDE0  
                                u3221 D272                                  u4110 E880  
                                u4030 E766                                  u3070 CFBA  
                                u3118 CE00                                  u3150 CA14  
                                u3230 C2A2                                  u3310 EDF6  
                                u4111 E87C                                  u4031 E762  
                                u3071 CFB6                                  u3119 CE12  
                                u3151 CA10                                  u3231 C29E  
                                u3311 EDF2                                  u4120 E8BA  
                                u4040 E786                                  u3128 CB8A  
                                u3160 CA28                                  u3240 C604  
                                u4200 CF22                                  u3400 EF3E  
                                u3320 EE06                                  u5000 F712  
                                u4121 E8B6                                  u4041 E782  
                                u4025 E702                                  u3129 CB9C  
                                u3161 CA24                                  u3241 C600  
                                u4201 CF1E                                  u3401 EF3A  
                                u3321 EE02                                  u5001 F70E  
                                u4050 E798                                  u3066 C20A  
                                u3090 D060                                  u3138 C9C4  
                                u3250 C61A                                  u4130 D07C  
                                u4210 CF3C                                  u3410 EF4C  
                                u3330 EE42                                  u5010 F85A  
                                u4051 E794                                  u3091 D05C  
                                u3139 C9D6                                  u3251 C616  
                                u4131 D078                                  u4211 CF38  
                                u3411 EF48                                  u3331 EE3E  
                                u5011 F856                                  u4060 E7C6  
                                u3180 C274                                  u4140 D096  
                                u4220 CF5A                                  u4300 D522  
                                u3500 F0AA                                  u3420 EF5C  
                                u3340 EE50                                  u3260 ED6A  
                                u5100 FA70                                  u5020 F8C0  
                                u4061 E7C2                                  u3181 C270  
                                u4141 D092                                  u4221 CF56  
                                u4301 D51E                                  u3501 F0A6  
                                u3421 EF58                                  u3341 EE4C  
                                u3261 ED66                                  u5101 FA6C  
                                u5021 F8BC                                  u4070 E7DC  
                                u4150 D0BC                                  u4230 CF70  
                                u4310 D542                                  u3510 F0BA  
                                u3430 EF8E                                  u3350 EEBE  
                                u3270 ED7C                                  u3190 D206  
                                u5110 FA7E                                  u5030 F908  
                                u4071 E7D8                                  u4151 D0B8  
                                u4231 CF6C                                  u4311 D53E  
                                u3511 F0B6                                  u3431 EF8A  
                                u3351 EEBA                                  u3271 ED78  
                                u3191 D202                                  u5111 FA7A  
                                u5031 F904                                  u4080 E7F0  
                                u3088 CFE4                                  u4160 D0DA  
                                u4240 CF94                                  u4320 D592  
                                u3600 F19E                                  u3520 F0D6  
                                u3440 EF9C                                  u3360 EED6  
                                u3280 ED8C                                  u4400 D680  
                                u5200 FCE6                                  u5120 FAD6  
                                u5040 F918                                  u4081 E7EC  
                                u3089 CFF8                                  u4161 D0D6  
                                u4241 CF90                                  u4321 D58E  
                                u3601 F19A                                  u3521 F0D2  
                                u3441 EF98                                  u3361 EED0  
                                u3281 ED88                                  u4401 D67C  
                                u5201 FCE2                                  u5121 FAD2  
                                u5041 F914                                  u4090 E80A  
                                u3178 CA58                                  u4170 D0F6  
                                u4250 CE7A                                  u4330 C554  
                                u3610 F1AE                                  u3530 F0E6  
                                u3450 EFBA                                  u3370 EED8  
                                u3290 EDCE                                  u4410 D13E  
                                u5210 FCFE                                  u5130 FBA8  
                                u5050 F980                                  u4091 E806  
                                u3179 CA6A                                  u4171 D0F2  
                                u4251 CE76                                  u4331 C550  
                                u3611 F1AA                                  u3531 F0E2  
                                u3451 EFB6                                  u3291 EDCA  
                                u4411 D13A                                  u5211 FCFA  
                                u5131 FBA4                                  u5051 F97C  
                                u3700 C3A6                                  u5300 DB3C  
                                u4180 D11C                                  u4260 CEB8  
                                u3620 F1CE                                  u3540 F0F8  
                                u3460 EFF2                                  u3380 EF00  
                                u4340 D5B2                                  u4500 D484  
                                u4420 D160                                  u5220 FD5C  
                                u5140 FBC4                                  u5060 FA24  
                                u3701 C3A2                                  u5301 DB38  
                                u4181 D118                                  u4261 CEB4  
                                u3621 F1CA                                  u3541 F0F4  
                                u3461 EFEE                                  u3381 EEFC  
                                u4341 D5AE                                  u4501 D47E  
                                u4421 D15C                                  u5221 FD56  
                                u5141 FBC0                                  u5061 FA20  
                                u3710 E12E                                  u5310 DB4E  
                                u4190 CF08                                  u4270 CEEC  
                                u3630 F1E0                                  u3550 F10E  
                                u3470 F038                                  u3390 EF1E  
                                u4350 D5E6                                  u4510 D486  
                                u4430 D1B6                                  u5230 FD5E  
                                u5150 FBD6                                  u5070 FA36  
                                u3711 E12A                                  u6007 D78A  
                                u5311 DB4A                                  u4191 CF04  
                                u4271 CEE8                                  u3631 F1DC  
                                u3551 F10A                                  u3471 F034  
                                u3391 EF1A                                  u4431 D1B2  
                                u5151 FBD2                                  u5071 FA32  
                                u3800 E2CE                                  u3720 E140  
                                u4280 D4C6                                  u3640 F1FC  
                                u3560 F124                                  u3480 F06E  
                                u4360 D614                                  u4440 D1C6  
                                u4520 C860                                  u5240 FD74  
                                u5160 FBE4                                  u5080 FA48  
                                u5320 D2E8                                  u5400 E948  
                                u3801 E2CA                                  u3721 E13C  
                                u6017 D88C                                  u4281 D4C2  
                                u3641 F1F8                                  u3561 F120  
                                u3481 F06A                                  u4361 D610  
                                u4441 D1C2                                  u5241 FD70  
                                u5161 FBE0                                  u5081 FA44  
                                u5321 D2E4                                  u5401 E944  
                                u3810 E2F8                                  u3730 E150  
                                u5250 DA14                                  u4290 D504  
                                u3570 F138                                  u3490 F07E  
                                u4370 D628                                  u4450 D3DA  
                                u4610 E006                                  u3650 C674  
                                u4530 C872                                  u5170 FC1A  
                                u5090 FA56                                  u5330 D31A  
                                u5410 E984                                  u3811 E2F4  
                                u3731 E14C                                  u6027 D8A2  
                                u5251 DA10                                  u4291 D500  
                                u3571 F134                                  u3491 F07A  
                                u4371 D624                                  u4355 D5DC  
                                u4611 E002                                  u3651 C670  
                                u4531 C86E                                  u5171 FC16  
                                u5091 FA52                                  u5331 D316  
                                u5411 E980                                  u3900 E3F4  
                                u3820 E31C                                  u3740 E194  
                                u4700 C702                                  u5260 DA4C  
                                u3580 F152                                  u4380 D650  
                                u4460 D3F8                                  u4620 E02A  
                                u3660 C4F8                                  u4540 C8A4  
                                u5180 FC48                                  u5340 D338  
                                u5500 EC1A                                  u5420 EA2E  
                                u3901 E3F0                                  u3821 E318  
                                u3741 E190                                  u4701 C6FE  
                                u5261 DA48                                  u3581 F14E  
                                u4381 D64C                                  u4461 D3F4  
                                u4605 DFAE                                  u3661 C4F4  
                                u4541 C89E                                  u5181 FC44  
                                u5341 D334                                  u5421 EA28  
                                u3910 E43C                                  u3830 E332  
                                u3750 E1A6                                  u4710 C778  
                                u5270 DA68                                  u3590 F18C  
                                u4390 D670                                  u4470 D420  
                                u4630 E046                                  u4606 DFB8  
                                u3670 C5A6                                  u4550 C8A6  
                                u5190 FCCC                                  u5350 D34A  
                                u5510 EC30                                  u5430 EA30  
                                u3911 E438                                  u3831 E32E  
                                u3751 E1A2                                  u4711 C774  
                                u5271 DA64                                  u3591 F188  
                                u4391 D66C                                  u4471 D41C  
                                u4455 D3D0                                  u4631 E042  
                                u4607 DFC8                                  u4527 C856  
                                u3671 C5A0                                  u5191 FCC8  
                                u5351 D346                                  u5511 EC2C  
                                u3920 E46C                                  u3840 E350  
                                u3760 E1B6                                  u5600 DB94  
                                u4720 C7B8                                  u5280 DB24  
                                u4480 D44A                                  u4640 E09A  
                                u3680 C5A8                                  u4560 C8BC  
                                u4800 F338                                  u5360 D374  
                                u5520 ECCE                                  u5440 EA46  
                                u3921 E468                                  u3841 E34C  
                                u3761 E1B2                                  u5601 DB90  
                                u4721 C7B4                                  u5281 DB1E  
                                u4481 D446                                  u4625 E020  
                                u4561 C8B8                                  u4801 F334  
                                u5361 D370                                  u5521 ECCA  
                                u5441 EA42                                  u5370 C32C  
                                u3930 E49A                                  u3850 E370  
                                u3770 E1F6                                  u5610 DBF0  
                                u3690 CBEC                                  u5530 CAD8  
                                u5290 DB26                                  u4650 E0B6  
                                u4570 DF4A                                  u4810 F3C4  
                                u4730 F238                                  u5450 EA78  
                                u5371 C328                                  u3931 E496  
                                u3851 E36C                                  u3771 E1F2  
                                u5611 DBEC                                  u3691 CBE8  
                                u5531 CAD4                                  u4651 E0B2  
                                u4811 F3C0                                  u4731 F234  
                                u5451 EA74                                  u5380 C342  
                                u5540 C4C2                                  u3860 E382  
                                u3780 E236                                  u3940 E4C8  
                                u5620 DC46                                  u5700 C498  
                                u4660 E0F2                                  u4580 DF78  
                                u4900 F5F0                                  u4820 F3F2  
                                u4740 F288                                  u5460 EABA  
                                _RCEN 007E2B                                  u5381 C33E  
                                u5541 C4BC                                  u3861 E37E  
                                u3781 E232                                  u3941 E4C4  
                                u5621 DC42                                  u5701 C494  
                                u4661 E0EE                                  u4645 E090  
                                u4581 DF74                                  u4901 F5EC  
                                u4821 F3EC                                  u4741 F284  
                                u5461 EAB6                                  u3870 E3B0  
                                u3790 E2AC                                  u3950 E4DA  
                                u5630 DC90                                  u5710 C8FA  
                                u4670 C536                                  u4590 DF9A  
                                u4910 F616                                  u4830 F3F4  
                                u4750 F296                                  u5470 EAFE  
                                u5390 E8FE                                  u3871 E3AC  
                                u3791 E2A8                                  u3951 E4D6  
                                u5631 DC8C                                  u4671 C530  
                                u4495 D45C                                  u4591 DF96  
                                u4575 DF40                                  u4911 F612  
                                u4751 F292                                  u5471 EAFA  
                                u5391 E8FA                                  u3880 E3C6  
                                u3960 E4EA                                  u5640 DCAE  
                                u5560 CD28                                  u5720 C924  
                                u4680 C538                                  u4920 F62C  
                                u4840 F40C                                  u4760 F2A8  
                                u5480 EBAE                                  u3881 E3C2  
                                u3961 E4E6                                  u5641 DCAA  
                                u5561 CD24                                  u4921 F628  
                                u4841 F408                                  u4761 F2A4  
                                u5481 EBAA                                  u3890 E3DA  
                                u3970 E52A                                  u5650 DCBE  
                                u5570 CD4A                                  u5730 C934  
                                u4690 C6D4                                  u4930 F648  
                                u4850 F490                                  u4770 F2F0  
                                u5490 EC18                                  u5555 C4C4  
                                u3891 E3D6                                  u3971 E526  
                                u5651 DCBA                                  u5571 CD46  
                                u5731 C930                                  u4691 C6D0  
                                u4931 F644                                  u4851 F48C  
                                u4771 F2EC                                  u5491 EC12  
                                u3980 E53C                                  u5660 DCCC  
                                u5580 CD72                                  u4940 F67E  
                                u4860 F524                                  u4780 F31E  
                                u3981 E538                                  u5661 DCC8  
                                u5581 CD6E                                  u5717 C8F0  
                                u4941 F67A                                  u4861 F520  
                                u4781 F318                                  u3990 E54C  
                                u5670 DD06                                  u5590 DB86  
                                u4950 F6A4                                  u4870 F596  
                                u4790 F320                                  u3991 E548  
                                u5671 DD02                                  u5591 DB82  
                                u5727 C91A                                  u4951 F6A0  
                                u4871 F592                                  u5680 DD14  
                                u4960 F6B6                                  u4880 F5BC  
                                u5681 DD10                                  u5745 C7E4  
                                u4961 F6B2                                  u4881 F5B8  
                                u4970 F6C4                                  u4890 F5CE  
                                u5690 C990                                  u4971 F6C0  
                                u4891 F5CA                                  u5691 C98C  
                                u4980 F6DA                                  u4981 F6D6  
                                u4990 F6E8                                  u4991 F6E4  
                                u5927 DD6A                                  u5937 DE44  
                                u5947 DE7E                                  u5957 DEB4  
                                u5967 DEEA                                  u5977 D9A4  
                                u5987 D9BA                                  u5997 D774  
                Oled_WriteCharacter@i 001F                                  _RSEN 007E29  
                                _WPUB 000F5B               ??_wr2RegCompleteHandler 000C  
                                _dbuf 0174      __end_of_I2C_Master_RepeatedStart C112  
                                _atoi D9DA                                  _main DD28  
            ?_I2C_CallbackReturnReset 000A                                  _prec 00D4  
                                _nout 00D0                                  pad@i 0018  
                                pad@p 0015                                  fsr0h 000FEA  
                                fsr1h 000FE2                                  indf0 000FEF  
                                fsr2h 000FDA                                  fsr0l 000FE9  
                                indf2 000FDF                                  fsr1l 000FE1  
                                pad@w 001A                                  fsr2l 000FD9  
                    __end_of_I2C_Open CC64                         ___fpclassifyf D39A  
                                prodh 000FF4                                  prodl 000FF3  
                                start 0000                       ___fldiv@new_exp 0012  
        fp__I2C_DO_SEND_RESTART_WRITE 0000                          _tolower$2312 000D  
                         _voltage_str 00EB                          ___param_bank 000000  
    __size_of_rdBlkRegCompleteHandler 0040                                 ??_pad 0017  
                    ?_I2C_MasterClose 0001                    _Power_ReadRegister D6A2  
                     _I2C_WriteNBytes C760                      ?_I2C_Master_Init 000E  
                    ?_I2C_Master_Read 0002                      ?_I2C_Master_Wait 0001  
 __size_of_I2C_SetAddressNackCallback 0018                      ?_I2C_Master_Stop 0001  
      __size_of_OSCILLATOR_Initialize 0012                      ?_I2C_MasterStart 0001  
                       _I2C_DO_RX_ACK C14A                      ?_I2C_MasterWrite 0001  
       __end_of_OSCILLATOR_Initialize C1E4                         ___fltol@sign1 0009  
                               ?_atoi 0008                       __end_of___fladd F210  
                               ?_main 0001                                 _ACKEN 007E2C  
                               _ACKDT 007E2D                       __end_of___fldiv E4AE  
                     __end_of___awdiv D12E                       __end_of___flneg C576  
                               _EEADR 000F74                                 STR_10 FFED  
                               STR_13 FFE9                                 STR_14 FFF1  
                               STR_17 FFF9                                 STR_19 FFF9  
                     __end_of___awmod CFA6                       __end_of___flmul E8D8  
                     __end_of___flsub C6BC                       __end_of___fltol D6A2  
                               _ASCII FDE1                       __end_of___lldiv CDA6  
                     ___awdiv@divisor 0003                       ___awdiv@counter 0005  
        __size_of_I2C_DO_RX_NACK_STOP 0008                          vfpfcnvrt@fmt 0048  
                   ??_I2C_DO_TX_EMPTY 000C                                 _TRISA 000F92  
                               _TRISB 000F93                                 _TRISC 000F94  
                 ?_Power_ReadRegister 001A                                 _Power 00C4  
                   __end_of_I2C_DO_RX CE4C                     __end_of_I2C_DO_TX D06A  
                               _flags 00D6                                 _fputc D1F4  
                   __end_of_I2C_Close C3BE                                 _fputs C632  
                     __end_of_isdigit C53E                __size_of_I2C_MasterFsm 0070  
      I2C_MasterOperation@returnValue 0011                                 atoi@n 0015  
                               pad@fp 0011                                 atoi@s 0008  
                               _power 00B8                                 _width 00D2  
                               _putch C0D0               _I2C_MasterEnableRestart C0E2  
                     __end_of_isspace C70E                       __end_of_isupper C5AE  
                               pclath 000FFA                                 tablat 000FF5  
                    ?_I2C_SetCallback 0001          I2C_SetAddressNackCallback@cb 0006  
                               status 000FD8                       __end_of_sprintf C760  
                      ?___fpclassifyf 0001                       __end_of_tolower C8D4  
                   ?_I2C_DO_SEND_STOP 0001                __size_of_I2C_SetBuffer 0024  
                     __end_of_strncmp D39A    _EUSART1_DefaultFramingErrorHandler 000000  
                ??_Power_ReadRegister 001E                    ??_I2C_DO_SEND_STOP 0001  
                       ?_Oled_Command 0001              fp__rd1RegCompleteHandler 0000  
                     __initialization C276                          __end_of_atoi DB74  
                        __end_of_main DF02                      ?_Oled_SelectPage 0001  
            fp__wr1RegCompleteHandler 0000     __size_of_I2C_DO_SEND_RESTART_READ 0008  
           ?_I2C_DO_SEND_RESTART_READ 0001                        ?_I2C_DO_RX_ACK 0001  
                          _Oled_Clear C46E                                ??_atoi 000A  
                              ??_main 005E               Oled_SelectPage@page_num 001A  
                   ?_I2C_MasterIsNack 0001                         __activetblptr 000003  
            Power_ReadRegister@temp_e 0022              Power_ReadRegister@temp_f 0020  
                   ?_I2C_MasterSetIrq 0001                    ??_I2C_MasterIsNack 0001  
                         Oled_Clear@i 001A                     ?_I2C_Master_Start 0001  
                   ?_I2C_Master_Write 0002                    ??_I2C_MasterSetIrq 0001  
                  ??_I2C_Master_Start 0002                    ??_I2C_Master_Write 0004  
     __end_of_I2C_CallbackReturnReset C0F2                                ?_fputc 0001  
                              ?_fputs 000A                                _EEADRH 000F75  
                              _EEDATA 000F73                                _EECON2 000F7E  
                              _ANCON0 000F5D                                _ANCON1 000F5C  
     __size_of_I2C_CallbackReturnStop 0004                      ___awdiv@dividend 0001  
       I2C_SetDataCompleteCallback@cb 0006                                ?_putch 0001  
                        ??_I2C_Poller 0010                                _TABLAT 000FF5  
                              _RCREG1 000FAE                                _RCSTA1 000FAB  
                              _OSCCON 000FD3                                _SPBRG1 000FAF  
                              _SSPADD 000FC8                                _TRISC3 007CA3  
                              _TRISC4 007CA4                                _SSPBUF 000FC9  
                              _TXREG1 000FAD                      __end_of___xxtofl DD28  
                              _TXSTA1 000FAC                    __size_of_Oled_Data 0022  
                  __size_of_Oled_Init 009E                        ??_Oled_Command 0017  
                 _I2C_MasterGetRxData C0F6               __end_of_I2C_WriteNBytes C7BA  
            _I2C_Master_RepeatedStart C10A              __end_of_Oled_WriteString C936  
                   Oled_Data@data_I2C 0018                          vfprintf@cfmt 005C  
                              ___flge D498                                ___fleq CE4C  
                           ??___fladd 0009                                ___wmul C344  
                           ??___fldiv 0009                         _I2C_MasterFsm CA00  
                           ??___awdiv 0005                             ??___flneg 0005  
                           ??___awmod 0005                             ??___flmul 001D  
                           ??___flsub 0036                             ??___fltol 0005  
                           ??___lldiv 0009                                _efgtoa F210  
                              _floorf DF02                                clear_0 C27C  
                              clear_1 C288                     I2C_SetCallback@cb 0001  
                    ___awdiv@quotient 0007               fp__I2C_DO_SEND_ADR_READ 0000  
                     ___awmod@divisor 0003               __size_of_I2C_MasterOpen 0022  
             __size_of_I2C_MasterStop 0004                       ___awmod@counter 0005  
             __size_of_I2C_Initialize 0014                                pad@buf 0013  
                       _I2C_SetBuffer C2FA                    __end_of_I2C_Poller C276  
                              _strcpy C816                                _strlen C4D0  
        __end_of_I2C_MasterDisableIrq C0DE         __size_of_Current_ReadRegister 0118  
                              fputc@c 0001                                fputs@c 000E  
                 _I2C_DO_ADDRESS_NACK C99A                                fputs@i 000F  
                              fputs@s 000A                             ??_isdigit 0003  
                ?_I2C_MasterGetRxData 0001                             ?_I2C_Open 0001  
  __end_of_I2C_SetAddressNackCallback C23C            _I2C_SetAddressNackCallback C224  
                     ___fpclassifyf@e 0009                       ___fpclassifyf@u 000B  
                     ___fpclassifyf@x 0001                          __mediumconst FDC0  
                           ??_isspace 0003                                tblptrh 000FF7  
                           ??_isupper 0003                                tblptrl 000FF6  
                              tblptru 000FF8             ??_I2C_MasterEnableRestart 0001  
                              putch@c 0001                      __end_of_vfprintf C99A  
                           ??_sprintf 005E                             ??_tolower 0009  
                           ??_strncmp 0007                            ___flge@ff1 002E  
                          ___flge@ff2 0032                       ??___fpclassifyf 0005  
                        ___xxtofl@arg 0011                          ___xxtofl@exp 0010  
                   _SYSTEM_Initialize C174                          ___xxtofl@val 0007  
                          ___fleq@ff1 0001                            ___fleq@ff2 0005  
                          __accesstop 0060               __end_of__initialization C28E  
                          ___flneg@f1 0001                   _I2C_MasterOperation C5EE  
                  ?_SYSTEM_Initialize 0001                         __end_of_ASCII FFC1  
                       ___rparam_used 000001                  ?_I2C_DO_ADDRESS_NACK 0001  
                          ___fltol@f1 0001          __end_of_Voltage_ReadRegister D9DA  
             _rdBlkRegCompleteHandler C5AE            fp__rdBlkRegCompleteHandler 0000  
                      __pcstackCOMRAM 0001                        ?_I2C_MasterFsm 0001  
                     ??_I2C_DO_RX_ACK 0001                _I2C_CallbackReturnStop C0EA  
                 ??_SYSTEM_Initialize 0001                         __end_of_fputc D2BE  
                       __end_of_fputs C676                         __end_of_putch C0D2  
                      Oled_Data@value 0017                           ?_Oled_Clear 0001  
                      ?_I2C_SetBuffer 0001               ?_I2C_MasterWaitForEvent 0001  
      __size_of_I2C_DO_SEND_ADR_WRITE 0010    __size_of_I2C_DO_SEND_RESTART_WRITE 0008  
       __end_of_I2C_DO_SEND_ADR_WRITE C1C2            ?_I2C_DO_SEND_RESTART_WRITE 0001  
                ?_I2C_MasterOperation 0001                 ??_I2C_MasterGetRxData 0001  
                          ??_I2C_Open 0001                     __end_of_Oled_Data C2D8  
                   __end_of_Oled_Init CD02            __end_of_I2C_MasterClearIrq C0D6  
                             ??_fputc 0005             __end_of_SYSTEM_Initialize C17E  
                             ??_fputs 000E                               ??_putch 0001  
                   _I2C_MasterSendAck C104                            __pbssBANK0 00B0  
                          __pbssBANK1 0100                         ??_I2C_DO_IDLE 0001  
      __size_of_rd2RegCompleteHandler 002C                         ??_I2C_DO_RCEN 0001  
       __end_of_rd2RegCompleteHandler C442          __end_of_I2C_MasterSendTxData C12A  
                  ?_I2C_MasterSendAck 0001                     _I2C_MasterStartRx C0F2  
      __size_of_wr2RegCompleteHandler 002C                 ??_I2C_DO_ADDRESS_NACK 000C  
       __end_of_wr2RegCompleteHandler C3EA                   _I2C_DO_RX_NACK_STOP C152  
               _rd1RegCompleteHandler C3EA                    ?_I2C_MasterStartRx 0001  
          __end_of_I2C_MasterSendNack C104          Oled_WriteCharacter@character 001E  
                    ?_I2C_WriteNBytes 0012                I2C_WriteNBytes@address 0016  
               _wr1RegCompleteHandler C442                   ??_I2C_MasterSendAck 0001  
            rd1RegCompleteHandler@ptr 000A                               ?___flge 002E  
                             ?___fleq 0001           __end_of_I2C_DO_SEND_RESTART C142  
                     _I2C_DO_TX_EMPTY CB5A                   I2C_SetBuffer@buffer 0001  
                             ?___wmul 0001                               ?_efgtoa 003A  
      __end_of_I2C_MasterWaitForEvent C1D2                   ??_I2C_MasterStartRx 0001  
       __size_of_I2C_DO_SEND_ADR_READ 0010                               ?_floorf 001A  
    __size_of_I2C_CallbackReturnReset 0004                 ??_I2C_MasterOperation 0010  
      I2C_SetDataCompleteCallback@ptr 0008                               ?_strcpy 0001  
                             ?_strlen 0001              ??_I2C_DO_RX_NACK_RESTART 0001  
   __end_of_I2C_DO_SEND_RESTART_WRITE C13A                  ?_I2C_DO_RX_NACK_STOP 0001  
                           ?___xxtofl 0007                               _REFOCON 000F9A  
                __end_of_Oled_Command C2FA                               _OSCCON2 000FD2  
                  __size_of_vfpfcnvrt 0478                               _TBLPTRH 000FF7  
                             _TBLPTRL 000FF6                               _TBLPTRU 000FF8  
           __end_of_I2C_MasterSendAck C10A                               _OSCTUNE 000F9B  
                             _SPBRGH1 000F7D                               _SSPCON1 000FC6  
                             _SSPCON2 000FC5                               _SSPSTAT 000FC7  
           __end_of_I2C_MasterStartRx C0F6                  I2C_Close@returnValue 0001  
        ?_I2C_SetDataCompleteCallback 0006                             _I2C_DO_RX CDA6  
                           _I2C_DO_TX CFA6      __end_of_I2C_DO_SEND_RESTART_READ C132  
        __size_of_Oled_WriteCharacter 0070                             _I2C_Close C392  
                 __size_of_Oled_Clear 002C             ??_rdBlkRegCompleteHandler 000C  
                             _Current 00C8                  _I2C_MasterDisableIrq C0DA  
                     ??_I2C_MasterFsm 000E                               __Hparam 0000  
                             __Lparam 0000                   __end_of_I2C_DO_IDLE C18A  
                 __end_of_I2C_DO_RCEN C196                       __size_of___flge 0104  
                     __size_of___fleq 00AA                               ___fladd ED50  
                             ___fldiv E114                               ___awdiv D06A  
                             ___flneg C53E                               ___awmod CEF6  
                             ___flmul E4AE                               _Voltage 00CC  
                             ___flsub C676                               ___fltol D59C  
                             ___lldiv CD02                       ??_I2C_SetBuffer 0005  
                     __size_of___wmul 0026                             ?_vfprintf 0098  
             I2C_SetBuffer@bufferSize 0003                       __size_of_efgtoa 0BB0  
                      _I2C_MasterOpen C294                       __size_of_floorf 0212  
                             __pcinit C276                        _I2C_MasterStop C0E6  
                      _I2C_Initialize C1E4                               __ramtop 0F00  
           __size_of_I2C_DO_SEND_STOP 0008                               __ptext0 DD28  
                             __ptext1 C70E                               __ptext2 C936  
                             __ptext3 E8D8                               __ptext4 D2BE  
                             __ptext5 F210                               __ptext6 C874  
                             __ptext7 C576                               __ptext8 C816  
                             __ptext9 D12E                 ??_I2C_DO_RX_NACK_STOP 0001  
                     __size_of_strcpy 005E                       __size_of_strlen 0036  
               _OSCILLATOR_Initialize C1D2                               _current 00BC  
                        __size_of_pad 00C6                               _isdigit C506  
                          ??___xxtofl 000B                      ___awmod@dividend 0001  
                  I2C_SetCallback@idx 0005              __size_of_I2C_MasterClose 0004  
            ??_PIN_MANAGER_Initialize 0001         I2C_CallbackReturnReset@funPtr 000A  
                             _isspace C6BC                    I2C_SetCallback@ptr 0003  
            wr1RegCompleteHandler@ptr 000A                               _isupper C576  
            __size_of_I2C_Master_Init 005C              __size_of_I2C_Master_Read 0036  
                             efgtoa@c 0040                               efgtoa@d 0078  
                             efgtoa@e 0090                               efgtoa@f 003C  
                             efgtoa@g 008C                               efgtoa@h 0082  
                             efgtoa@i 008A                  _Voltage_ReadRegister D8C2  
                             efgtoa@l 0086                               efgtoa@m 0074  
                             efgtoa@n 0092                               efgtoa@p 007C  
                             efgtoa@t 0070                               efgtoa@u 0094  
                             efgtoa@w 007F              __size_of_I2C_Master_Wait 0026  
            fp__I2C_DO_SEND_ADR_WRITE 0000              __size_of_I2C_Master_Stop 0008  
            __size_of_I2C_MasterStart 0004              __size_of_I2C_MasterWrite 0008  
                             atoi@neg 000E            __size_of_SYSTEM_Initialize 000A  
                             _sprintf C70E                               _tolower C874  
                             _voltage 00C0                               _strncmp D2BE  
                end_of_initialization C28E                               floorf@e 0028  
                             floorf@m 0024                               floorf@u 002A  
                             floorf@x 001A            ??_I2C_Master_RepeatedStart 0002  
                          ?_I2C_DO_RX 0001                            ?_I2C_DO_TX 0001  
           __size_of_I2C_MasterIsNack 0014                               fputc@fp 0003  
                          ?_I2C_Close 0001           _EUSART1_OverrunErrorHandler 00DA  
                             fputs@fp 000C                ?_rd1RegCompleteHandler 000A  
             __end_of_I2C_DO_TX_EMPTY CBD6             __size_of_I2C_MasterSetIrq 0004  
               ?_I2C_MasterDisableIrq 0001                ?_wr1RegCompleteHandler 000A  
           __size_of_I2C_Master_Start 0008             __size_of_I2C_Master_Write 000A  
                     ___lldiv@divisor 0005           __size_of_Power_ReadRegister 0108  
                     ___lldiv@counter 000D              fp__rd2RegCompleteHandler 0000  
            __size_of_I2C_SetCallback 007A                     __end_of_vfpfcnvrt ED50  
                          efgtoa@mode 0081                            efgtoa@sign 007A  
                   ?_Oled_WriteString 0021                      I2C_Master_Init@c 000E  
                    I2C_Master_Read@a 0002                               postdec2 000FDD  
              __end_of_I2C_MasterOpen C2B6              fp__wr2RegCompleteHandler 0000  
                             postinc0 000FEE                               postinc1 000FE6  
                             postinc2 000FDE                __end_of_I2C_MasterStop C0EA  
              __end_of_I2C_Initialize C1F8                            ??_vfprintf 005C  
           fp__I2C_CallbackReturnStop 0000                    ??_Oled_WriteString 0023  
                             strcpy@d 0009                               strlen@a 0003  
                             strcpy@s 0007                               strlen@s 0001  
     __end_of_rdBlkRegCompleteHandler C5EE                  _I2C_MasterSendTxData C122  
                     fp__I2C_DO_RESET 0000              __size_of_Oled_SelectPage 001C  
     __size_of_I2C_DO_RX_NACK_RESTART 0008                           ___fladd@grs 0010  
               ?_Voltage_ReadRegister 002E                         ___xxtofl@sign 000F  
         ?_I2C_SetAddressNackCallback 0006            __size_of_I2C_MasterSendAck 0006  
                         ___fldiv@grs 0014                           ___fldiv@rem 000D  
                   __size_of_I2C_Open 008E            __size_of_I2C_MasterStartRx 0004  
                         ___flmul@grs 0022                           _I2C_DO_IDLE C17E  
          Oled_WriteString@characters 0021                           _I2C_DO_RCEN C18A  
        __end_of_Current_ReadRegister D8C2            rdBlkRegCompleteHandler@ptr 000A  
               Oled_SelectPage@Result 001B               ?_I2C_CallbackReturnStop 000A  
            _I2C_DO_SEND_RESTART_READ C12A           fp__I2C_DO_SEND_RESTART_READ 0000  
        I2C_CallbackReturnStop@funPtr 000A                       ?_I2C_MasterOpen 0001  
                     ?_I2C_MasterStop 0001                       ?_I2C_Initialize 0001  
             _I2C_CallbackReturnReset C0EE            fp__I2C_CallbackReturnReset 0000  
                      __end_of___flge D59C                        __end_of___fleq CEF6  
                         vfpfcnvrt@ap 004A                           vfpfcnvrt@ct 0058  
                         vfpfcnvrt@fp 0046                        __end_of___wmul C36A  
__size_of_I2C_SetDataCompleteCallback 0018                          ??_Oled_Clear 001A  
                      __end_of_efgtoa FDC0                 __size_of_Oled_Command 0022  
                      __end_of_floorf E114                 ?_I2C_MasterSendTxData 0001  
              ?_OSCILLATOR_Initialize 0001                            floorf@F524 00B0  
         ??_I2C_DO_SEND_RESTART_WRITE 0001                        __end_of_strcpy C874  
                      __end_of_strlen C506                   start_initialization C276  
     __size_of_PIN_MANAGER_Initialize 0028                           __end_of_pad D1F4  
                       ?_I2C_DO_RESET 0001                             _Oled_Data C2B6  
                           _Oled_Init CC64                           ??_I2C_DO_RX 000C  
                         ??_I2C_DO_TX 000C                     ??_I2C_MasterClose 0001  
                   ??_I2C_Master_Init 0012                     ??_I2C_Master_Read 0004  
                   ??_I2C_Master_Wait 0001                ??_I2C_MasterDisableIrq 0001  
                         ??_I2C_Close 0001                     ??_I2C_Master_Stop 0002  
                   ??_I2C_MasterStart 0001                 __end_of___fpclassifyf D498  
                   ??_I2C_MasterWrite 0012        __end_of_I2C_CallbackReturnStop C0EE  
              _I2C_DO_RX_NACK_RESTART C15A                      ?_I2C_DO_TX_EMPTY 0001  
                  __end_of_Oled_Clear C49A                    _I2C_MasterClearIrq C0D2  
                        _Oled_Command C2D8                           vfprintf@fmt 009A  
                            ??___flge 0036                              ??___fleq 0009  
                            ??___wmul 0005                   ?_I2C_MasterClearIrq 0001  
                            ??_efgtoa 0041           __end_of_I2C_MasterGetRxData C0FA  
                            ??_floorf 001E                 __end_of_I2C_DO_RX_ACK C152  
                    _I2C_DO_SEND_STOP C142                     ??_I2C_SetCallback 0005  
                 _Oled_WriteCharacter CA70                   I2C_Open@returnValue 0002  
                            ??_strcpy 0005                    _I2C_MasterSendNack C0FE  
                            ??_strlen 0003              ?_I2C_MasterEnableRestart 0001  
                           ___fladd@a 0005                             ___fladd@b 0001  
                   _i2c_fsmStateTable FDC1                fp__I2C_DO_SEND_RESTART 0000  
              ??_Voltage_ReadRegister 0032                             ___fldiv@a 0005  
                           ___fldiv@b 0001                 _I2C_DO_SEND_ADR_WRITE C1B2  
                           ___flmul@a 0019                             ___flmul@b 0015  
                           ___flsub@a 0032                             ___flsub@b 002E  
                       __pcstackBANK0 0060                        ??_I2C_DO_RESET 0001  
                 ?_I2C_MasterSendNack 0001                     __size_of___xxtofl 01B4  
        __end_of_I2C_DO_SEND_ADR_READ C1B2                  ??_I2C_MasterClearIrq 0001  
                          ?_Oled_Data 0001           __end_of_I2C_DO_ADDRESS_NACK CA00  
                   ??_Oled_SelectPage 001A                            ?_Oled_Init 0001  
                    _I2C_MasterIsNack C1F8                  ?_Oled_WriteCharacter 0001  
           _I2C_DO_SEND_RESTART_WRITE C132                      _I2C_MasterSetIrq C0FA  
                           _atoi$2220 0012                             _atoi$2218 0010  
                           _atoi$2219 0014                      _I2C_Master_Start C112  
               _rd2RegCompleteHandler C416                      _I2C_Master_Write C16A  
                         _efgtoa$2160 0068                           _efgtoa$2154 0064  
                         _efgtoa$2155 0066                           _efgtoa$2164 006A  
                         _efgtoa$2165 006C                           _efgtoa$2166 006E  
              _PIN_MANAGER_Initialize C36A                 _wr2RegCompleteHandler C3BE  
           ??_I2C_CallbackReturnReset 000C           __end_of_I2C_MasterOperation C632  
                ??_I2C_MasterSendNack 0001              rd2RegCompleteHandler@ptr 000A  
                       __pmediumconst FDC0                              ?___fladd 0001  
                            ?___fldiv 0001                              ?___awdiv 0001  
                           __ptext100 C49A                             __ptext101 C31E  
                           __ptext102 0000                              ?___flneg 0001  
                            ?___awmod 0001                              ?___flmul 0015  
                            ?___flsub 002E                              ?___fltol 0001  
                            ?___lldiv 0001                ??_I2C_MasterSendTxData 0001  
           __end_of_i2c_fsmStateTable FDE1              __size_of_I2C_WriteNBytes 005A  
                   __size_of_vfprintf 0064                          fp__I2C_DO_RX 0000  
                        fp__I2C_DO_TX 0000          __size_of_I2C_DO_SEND_RESTART 0008  
                _Current_ReadRegister D7AA                              _BAUDCON1 000FA7  
  _EUSART1_DefaultOverrunErrorHandler 000000                              ?_isdigit 0001  
             I2C_MasterOperation@read 0010                              _I2C_Open CBD6  
                _EUSART1_ErrorHandler 00D8                              ?_isspace 0001  
                            ?_isupper 0001                              ?_sprintf 009E  
                            ?_tolower 0007                        __size_of_fputc 00CA  
                      __size_of_fputs 0044               ??_rd1RegCompleteHandler 000C  
                            ?_strncmp 0001                        __size_of_putch 0002  
               ??_Oled_WriteCharacter 001A               ??_wr1RegCompleteHandler 000C  
          Voltage_ReadRegister@temp_a 0036            Voltage_ReadRegister@temp_b 0034  
                      ___wmul@product 0005                              _PIE1bits 000F9D  
                            _PIR1bits 000F9E                              _PIR2bits 000FA1  
                            _PIR4bits 000FB7                 __end_of_I2C_MasterFsm CA70  
         __end_of_I2C_DO_RX_NACK_STOP C15A       __end_of_I2C_MasterEnableRestart C0E6  
                      fp__I2C_DO_IDLE 0000                        fp__I2C_DO_RCEN 0000  
                           _vfpfcnvrt E8D8                 __end_of_I2C_SetBuffer C31E  
                           _power_str 00DF                     ___wmul@multiplier 0001  
               ?_Current_ReadRegister 002E                ?_I2C_DO_SEND_ADR_WRITE 0001  
            I2C_MasterSendTxData@data 0001             __size_of_Oled_WriteString 0062  
            wr2RegCompleteHandler@ptr 000A                          _isspace$2249 0007  
                          vfpfcnvrt@c 005B                            vfpfcnvrt@f 0054  
                 I2C_Master_Read@temp 0004                           ??_Oled_Data 0017  
                         _INTCON2bits 000FF1                           ??_Oled_Init 001A  
          ??_I2C_DO_SEND_RESTART_READ 0001              ?_rdBlkRegCompleteHandler 000A  
                          _I2C_Poller C258                            _I2C_Status 0150  
                        ?_I2C_DO_IDLE 0001                          ?_I2C_DO_RCEN 0001  
          __end_of_Power_ReadRegister D7AA                ?_rd2RegCompleteHandler 000A  
                          _EECON1bits 000F7F                   I2C_WriteNBytes@data 0012  
                    ??_I2C_MasterOpen 0001                ?_wr2RegCompleteHandler 000A  
                    ??_I2C_MasterStop 0001              ??_I2C_MasterWaitForEvent 0001  
                    ??_I2C_Initialize 0001             fp__I2C_DO_RX_NACK_RESTART 0000  
                            __Hrparam 0000                            vfprintf@ap 009C  
                            __Lrparam 0000                            vfprintf@fp 0098  
                __end_of_I2C_DO_RESET C1A2               ??_OSCILLATOR_Initialize 0001  
   __size_of_I2C_Master_RepeatedStart 0008                      __size_of___fladd 04C0  
                    __size_of___fldiv 039A                      __size_of___awdiv 00C4  
                _I2C_DO_SEND_ADR_READ C1A2                      __size_of___flneg 0038  
                    __size_of___awmod 00B0                      __size_of___flmul 042A  
           ?_I2C_Master_RepeatedStart 0001                      __size_of___flsub 0046  
                    __size_of___fltol 0106                      __size_of___lldiv 00A4  
                          ?_vfpfcnvrt 0046                    ___fpclassifyf@F463 00B4  
                     _I2C_MasterClose C0D6           _EUSART1_DefaultErrorHandler 000000  
       I2C_SetAddressNackCallback@ptr 0008                            sprintf@fmt 00A0  
                     I2C_Open@address 0001                       _I2C_Master_Init C7BA  
                     _I2C_Master_Read C49A                              ___xxtofl DB74  
                     _I2C_Master_Wait C31E                           _current_str 00E5  
                 fp__I2C_DO_SEND_STOP 0000                       _I2C_Master_Stop C11A  
                     _I2C_MasterStart C0DE                       _I2C_MasterWrite C162  
                    __size_of_isdigit 0038                     ??_I2C_WriteNBytes 0016  
                    __size_of_isspace 0052                              __ptext10 C4D0  
                            __ptext11 C632                              __ptext20 D498  
                            __ptext12 D1F4                              __ptext21 CE4C  
                            __ptext13 C0D0                              __ptext30 C1D2  
                            __ptext22 CEF6                              __ptext14 DF02  
                            __ptext31 D6A2                              __ptext23 D06A  
                            __ptext15 D39A                              __ptext40 C760  
                            __ptext32 C344                              __ptext24 D9DA  
                            __ptext16 D59C                              __ptext41 C224  
                            __ptext33 C8D4                              __ptext25 C6BC  
                            __ptext17 C676                              __ptext50 C196  
                            __ptext42 CBD6                              __ptext34 CA70  
                            __ptext26 C506                              __ptext18 ED50  
                            __ptext51 C15A                              __ptext43 C294  
                            __ptext35 C23C                              __ptext27 D8C2  
                            __ptext19 C53E                              __ptext60 CFA6  
                            __ptext52 C152                              __ptext44 C162  
                            __ptext36 CC64                              __ptext28 C174  
                            __ptext61 C1B2                              __ptext53 C14A  
                            __ptext45 C5EE                              __ptext37 C2D8  
                            __ptext29 C36A                              __ptext70 C0FE  
                            __ptext62 C1A2                              __ptext54 C142  
                            __ptext46 C258                              __ptext38 C46E  
                            __ptext71 C0F2                              __ptext63 C17E  
                            __ptext55 C13A                              __ptext47 C1C2  
                            __ptext39 C2B6                              __ptext80 CAE0  
                            __ptext72 C0EE                              __ptext64 CB5A  
                            __ptext56 C132                              __ptext48 CA00  
                            __ptext81 C2FA                              __ptext73 C0EA  
                            __ptext65 C0FA                              __ptext57 C12A  
                            __ptext49 C99A                              __ptext90 CD02  
                            __ptext82 C0E6                              __ptext74 C5AE  
                            __ptext66 C1F8                              __ptext58 C18A  
                            __ptext91 C1E4                              __ptext83 C0E2  
                            __ptext75 C442                              __ptext67 C122  
                            __ptext59 CDA6                              __ptext92 D7AA  
                            __ptext84 C0DE                              __ptext76 C416  
                            __ptext68 C104                              __ptext93 DB74  
                            __ptext85 C392                              __ptext77 C3EA  
                            __ptext69 C0F6                              __ptext94 E4AE  
                            __ptext86 C0DA                              __ptext78 C3BE  
                            __ptext95 E114                              __ptext87 C0D6  
                            __ptext79 C20C                              __ptext96 C16A  
                            __ptext88 C0D2                              __ptext97 C11A  
                            __ptext89 C7BA                              __ptext98 C112  
                            __ptext99 C10A                      __size_of_isupper 0038  
 __end_of_I2C_SetDataCompleteCallback C224           _I2C_SetDataCompleteCallback C20C  
             ?_I2C_DO_RX_NACK_RESTART 0001                      __size_of_sprintf 0052  
                    __size_of_tolower 0060                            strcpy@dest 0001  
                    __size_of_strncmp 00DC              __end_of_I2C_DO_SEND_STOP C14A  
                       __size_of_atoi 019A                         __size_of_main 01DA  
                Oled_Command@data_I2C 0018                       _I2C_SetCallback CAE0  
       ??_I2C_SetDataCompleteCallback 000A                              efgtoa@fp 003A  
                            efgtoa@ne 0076                              efgtoa@pp 0072  
                            efgtoa@ou 0060                 ?_I2C_DO_SEND_ADR_READ 0001  
                            _vfprintf C936                ??_Current_ReadRegister 0032  
         _EUSART1_FramingErrorHandler 00DC              __end_of_I2C_MasterIsNack C20C  
                     _Oled_SelectPage C23C              __end_of_I2C_MasterSetIrq C0FE  
            __end_of_I2C_Master_Start C11A                        _vfpfcnvrt$2180 0050  
                      _vfpfcnvrt$2184 0052              __end_of_I2C_Master_Write C174  
                          _INTCONbits 000FF2                    I2C_WriteNBytes@len 0014  
                            isdigit@c 0001        __end_of_I2C_DO_RX_NACK_RESTART C162  
                         ?_I2C_Poller 0001                             sprintf@ap 00A8  
    __size_of_I2C_MasterEnableRestart 0004                              isspace@c 0001  
                    ___lldiv@dividend 0001               ?_PIN_MANAGER_Initialize 0001  
                 _I2C_DO_SEND_RESTART C13A                             strcpy@src 0003  
                          _RCSTA1bits 000FAB         __size_of_I2C_MasterDisableIrq 0004  
                            isupper@c 0001                fp__I2C_DO_ADDRESS_NACK 0000  
                           strncmp@_l 0001                             strncmp@_r 0003  
     __size_of_I2C_MasterWaitForEvent 0010                   Oled_Command@command 0017  
                         efgtoa@nmode 007E               __end_of_I2C_MasterClose C0DA  
            __size_of_I2C_DO_TX_EMPTY 007C                    fp__I2C_DO_TX_EMPTY 0000  
             __end_of_I2C_Master_Init C816               __end_of_I2C_Master_Read C4D0  
             __end_of_I2C_Master_Wait C344               __end_of_I2C_Master_Stop C122  
                         ??_vfpfcnvrt 004C               __end_of_I2C_MasterStart C0E2  
             __end_of_I2C_MasterWrite C16A                    _eusart1RxLastError 00DE  
                ?_I2C_DO_SEND_RESTART 0001                              sprintf@f 00AA  
                            tolower@c 0007                              sprintf@s 009E  
              __size_of___fpclassifyf 00FE                      ___lldiv@quotient 0009  
                   I2C_Master_Write@d 0002          __size_of_I2C_MasterGetRxData 0004  
                            strncmp@l 0008                              strncmp@n 0005  
                            strncmp@r 000A                      _Oled_WriteString C8D4  
       __size_of_Voltage_ReadRegister 0118                           _SSPCON1bits 000FC6  
                         _SSPCON2bits 000FC5                         ___fladd@signs 000D  
         __size_of_I2C_MasterClearIrq 0004               __end_of_I2C_SetCallback CB5A  
      __end_of_PIN_MANAGER_Initialize C392        __size_of_rd1RegCompleteHandler 002C  
       __end_of_rd1RegCompleteHandler C416                __size_of_I2C_DO_RX_ACK 0008  
                    fp__I2C_DO_RX_ACK 0000                          ___fladd@aexp 000E  
                        ___fladd@bexp 000F        __size_of_wr1RegCompleteHandler 002C  
               __size_of_I2C_DO_RESET 000C         __end_of_wr1RegCompleteHandler C46E  
        __size_of_I2C_DO_ADDRESS_NACK 0066                  __size_of_I2C_DO_IDLE 000C  
                __size_of_I2C_DO_RCEN 000C                    __size_of_I2C_DO_RX 00A6  
                  __size_of_I2C_DO_TX 00C4  
